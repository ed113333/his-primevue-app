import { ref as z, readonly as ev, getCurrentInstance as Ts, onMounted as Dt, nextTick as sc, watch as Go, useId as tv, mergeProps as k, createElementBlock as y, openBlock as m, createElementVNode as v, renderSlot as L, resolveComponent as $, normalizeClass as Y, createBlock as O, createCommentVNode as M, resolveDirective as tt, withDirectives as We, Fragment as _, resolveDynamicComponent as q, withCtx as E, withModifiers as Qi, createTextVNode as ee, toDisplayString as re, renderList as fe, createVNode as P, defineComponent as Be, unref as He, shallowRef as hr, shallowReactive as nv, reactive as Kh, inject as Zn, computed as vt, h as Bo, provide as ql, normalizeStyle as dc, vShow as Hh, Teleport as ov, Transition as gl, normalizeProps as mr, createSlots as On, guardReactiveProps as rv, TransitionGroup as iv, toHandlers as ya, withKeys as ja, onBeforeUnmount as bl, watchEffect as av, markRaw as lv, customRef as sv, createStaticVNode as dv, createApp as cv } from "vue";
function Te(...t) {
  if (t) {
    let e = [];
    for (let n = 0; n < t.length; n++) {
      let o = t[n];
      if (!o) continue;
      let i = typeof o;
      if (i === "string" || i === "number") e.push(o);
      else if (i === "object") {
        let r = Array.isArray(o) ? [Te(...o)] : Object.entries(o).map(([a, l]) => l ? a : void 0);
        e = r.length ? e.concat(r.filter((a) => !!a)) : e;
      }
    }
    return e.join(" ").trim();
  }
}
function uv(t, e) {
  return t ? t.classList ? t.classList.contains(e) : new RegExp("(^| )" + e + "( |$)", "gi").test(t.className) : !1;
}
function xn(t, e) {
  if (t && e) {
    let n = (o) => {
      uv(t, o) || (t.classList ? t.classList.add(o) : t.className += " " + o);
    };
    [e].flat().filter(Boolean).forEach((o) => o.split(" ").forEach(n));
  }
}
function pv() {
  return window.innerWidth - document.documentElement.offsetWidth;
}
function fv(t) {
  typeof t == "string" ? xn(document.body, t || "p-overflow-hidden") : (t != null && t.variableName && document.body.style.setProperty(t.variableName, pv() + "px"), xn(document.body, (t == null ? void 0 : t.className) || "p-overflow-hidden"));
}
function hv(t) {
  if (t) {
    let e = document.createElement("a");
    if (e.download !== void 0) {
      let { name: n, src: o } = t;
      return e.setAttribute("href", o), e.setAttribute("download", n), e.style.display = "none", document.body.appendChild(e), e.click(), document.body.removeChild(e), !0;
    }
  }
  return !1;
}
function mv(t, e) {
  let n = new Blob([t], { type: "application/csv;charset=utf-8;" });
  window.navigator.msSaveOrOpenBlob ? navigator.msSaveOrOpenBlob(n, e + ".csv") : hv({ name: e + ".csv", src: URL.createObjectURL(n) }) || (t = "data:text/csv;charset=utf-8," + t, window.open(encodeURI(t)));
}
function an(t, e) {
  if (t && e) {
    let n = (o) => {
      t.classList ? t.classList.remove(o) : t.className = t.className.replace(new RegExp("(^|\\b)" + o.split(" ").join("|") + "(\\b|$)", "gi"), " ");
    };
    [e].flat().filter(Boolean).forEach((o) => o.split(" ").forEach(n));
  }
}
function gv(t) {
  typeof t == "string" ? an(document.body, t || "p-overflow-hidden") : (t != null && t.variableName && document.body.style.removeProperty(t.variableName), an(document.body, (t == null ? void 0 : t.className) || "p-overflow-hidden"));
}
function Rs(t) {
  for (let e of document == null ? void 0 : document.styleSheets) try {
    for (let n of e == null ? void 0 : e.cssRules) for (let o of n == null ? void 0 : n.style) if (t.test(o)) return { name: o, value: n.style.getPropertyValue(o).trim() };
  } catch {
  }
  return null;
}
function Wh(t) {
  let e = { width: 0, height: 0 };
  if (t) {
    let [n, o] = [t.style.visibility, t.style.display];
    t.style.visibility = "hidden", t.style.display = "block", e.width = t.offsetWidth, e.height = t.offsetHeight, t.style.display = o, t.style.visibility = n;
  }
  return e;
}
function cc() {
  let t = window, e = document, n = e.documentElement, o = e.getElementsByTagName("body")[0], i = t.innerWidth || n.clientWidth || o.clientWidth, r = t.innerHeight || n.clientHeight || o.clientHeight;
  return { width: i, height: r };
}
function Bs(t) {
  return t ? Math.abs(t.scrollLeft) : 0;
}
function bv() {
  let t = document.documentElement;
  return (window.pageXOffset || Bs(t)) - (t.clientLeft || 0);
}
function vv() {
  let t = document.documentElement;
  return (window.pageYOffset || t.scrollTop) - (t.clientTop || 0);
}
function Ja(t) {
  return t ? getComputedStyle(t).direction === "rtl" : !1;
}
function Uh(t, e, n = !0) {
  var o, i, r, a;
  if (t) {
    let l = t.offsetParent ? { width: t.offsetWidth, height: t.offsetHeight } : Wh(t), s = l.height, d = l.width, c = e.offsetHeight, u = e.offsetWidth, f = e.getBoundingClientRect(), p = vv(), h = bv(), g = cc(), b, C, x = "top";
    f.top + c + s > g.height ? (b = f.top + p - s, x = "bottom", b < 0 && (b = p)) : b = c + f.top + p, f.left + d > g.width ? C = Math.max(0, f.left + h + u - d) : C = f.left + h, Ja(t) ? t.style.insetInlineEnd = C + "px" : t.style.insetInlineStart = C + "px", t.style.top = b + "px", t.style.transformOrigin = x, n && (t.style.marginTop = x === "bottom" ? `calc(${(i = (o = Rs(/-anchor-gutter$/)) == null ? void 0 : o.value) != null ? i : "2px"} * -1)` : (a = (r = Rs(/-anchor-gutter$/)) == null ? void 0 : r.value) != null ? a : "");
  }
}
function Hr(t, e) {
  t && (typeof e == "string" ? t.style.cssText = e : Object.entries(e || {}).forEach(([n, o]) => t.style[n] = o));
}
function pt(t, e) {
  return t instanceof HTMLElement ? t.offsetWidth : 0;
}
function yv(t, e, n = !0, o = void 0) {
  var i;
  if (t) {
    let r = t.offsetParent ? { width: t.offsetWidth, height: t.offsetHeight } : Wh(t), a = e.offsetHeight, l = e.getBoundingClientRect(), s = cc(), d, c, u = o ?? "top";
    if (!o && l.top + a + r.height > s.height ? (d = -1 * r.height, u = "bottom", l.top + d < 0 && (d = -1 * l.top)) : d = a, r.width > s.width ? c = l.left * -1 : l.left + r.width > s.width ? c = (l.left + r.width - s.width) * -1 : c = 0, t.style.top = d + "px", t.style.insetInlineStart = c + "px", t.style.transformOrigin = u, n) {
      let f = (i = Rs(/-anchor-gutter$/)) == null ? void 0 : i.value;
      t.style.marginTop = u === "bottom" ? `calc(${f ?? "2px"} * -1)` : f ?? "";
    }
  }
}
function uc(t) {
  if (t) {
    let e = t.parentNode;
    return e && e instanceof ShadowRoot && e.host && (e = e.host), e;
  }
  return null;
}
function kv(t) {
  return !!(t !== null && typeof t < "u" && t.nodeName && uc(t));
}
function Eo(t) {
  return typeof Element < "u" ? t instanceof Element : t !== null && typeof t == "object" && t.nodeType === 1 && typeof t.nodeName == "string";
}
function Va() {
  if (window.getSelection) {
    let t = window.getSelection() || {};
    t.empty ? t.empty() : t.removeAllRanges && t.rangeCount > 0 && t.getRangeAt(0).getClientRects().length > 0 && t.removeAllRanges();
  }
}
function Ya(t, e = {}) {
  if (Eo(t)) {
    let n = (o, i) => {
      var r, a;
      let l = (r = t == null ? void 0 : t.$attrs) != null && r[o] ? [(a = t == null ? void 0 : t.$attrs) == null ? void 0 : a[o]] : [];
      return [i].flat().reduce((s, d) => {
        if (d != null) {
          let c = typeof d;
          if (c === "string" || c === "number") s.push(d);
          else if (c === "object") {
            let u = Array.isArray(d) ? n(o, d) : Object.entries(d).map(([f, p]) => o === "style" && (p || p === 0) ? `${f.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase()}:${p}` : p ? f : void 0);
            s = u.length ? s.concat(u.filter((f) => !!f)) : s;
          }
        }
        return s;
      }, l);
    };
    Object.entries(e).forEach(([o, i]) => {
      if (i != null) {
        let r = o.match(/^on(.+)/);
        r ? t.addEventListener(r[1].toLowerCase(), i) : o === "p-bind" || o === "pBind" ? Ya(t, i) : (i = o === "class" ? [...new Set(n("class", i))].join(" ").trim() : o === "style" ? n("style", i).join(";").trim() : i, (t.$attrs = t.$attrs || {}) && (t.$attrs[o] = i), t.setAttribute(o, i));
      }
    });
  }
}
function Gh(t, e = {}, ...n) {
  {
    let o = document.createElement(t);
    return Ya(o, e), o.append(...n), o;
  }
}
function Nn(t, e) {
  return Eo(t) ? Array.from(t.querySelectorAll(e)) : [];
}
function ft(t, e) {
  return Eo(t) ? t.matches(e) ? t : t.querySelector(e) : null;
}
function Fe(t, e) {
  t && document.activeElement !== t && t.focus(e);
}
function Le(t, e) {
  if (Eo(t)) {
    let n = t.getAttribute(e);
    return isNaN(n) ? n === "true" || n === "false" ? n === "true" : n : +n;
  }
}
function pc(t, e = "") {
  let n = Nn(t, `button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [href]:not([tabindex = "-1"]):not([style*="display:none"]):not([hidden])${e},
            input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`), o = [];
  for (let i of n) getComputedStyle(i).display != "none" && getComputedStyle(i).visibility != "hidden" && o.push(i);
  return o;
}
function fo(t, e) {
  let n = pc(t, e);
  return n.length > 0 ? n[0] : null;
}
function jn(t) {
  if (t) {
    let e = t.offsetHeight, n = getComputedStyle(t);
    return e -= parseFloat(n.paddingTop) + parseFloat(n.paddingBottom) + parseFloat(n.borderTopWidth) + parseFloat(n.borderBottomWidth), e;
  }
  return 0;
}
function wv(t) {
  if (t) {
    let [e, n] = [t.style.visibility, t.style.display];
    t.style.visibility = "hidden", t.style.display = "block";
    let o = t.offsetHeight;
    return t.style.display = n, t.style.visibility = e, o;
  }
  return 0;
}
function Cv(t) {
  if (t) {
    let [e, n] = [t.style.visibility, t.style.display];
    t.style.visibility = "hidden", t.style.display = "block";
    let o = t.offsetWidth;
    return t.style.display = n, t.style.visibility = e, o;
  }
  return 0;
}
function _a(t) {
  var e;
  if (t) {
    let n = (e = uc(t)) == null ? void 0 : e.childNodes, o = 0;
    if (n) for (let i = 0; i < n.length; i++) {
      if (n[i] === t) return o;
      n[i].nodeType === 1 && o++;
    }
  }
  return -1;
}
function qh(t, e) {
  let n = pc(t, e);
  return n.length > 0 ? n[n.length - 1] : null;
}
function vl(t, e) {
  let n = t.nextElementSibling;
  for (; n; ) {
    if (n.matches(e)) return n;
    n = n.nextElementSibling;
  }
  return null;
}
function ln(t) {
  if (t) {
    let e = t.getBoundingClientRect();
    return { top: e.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0), left: e.left + (window.pageXOffset || Bs(document.documentElement) || Bs(document.body) || 0) };
  }
  return { top: "auto", left: "auto" };
}
function er(t, e) {
  return t ? t.offsetHeight : 0;
}
function Jh(t, e = []) {
  let n = uc(t);
  return n === null ? e : Jh(n, e.concat([n]));
}
function yl(t, e) {
  let n = t.previousElementSibling;
  for (; n; ) {
    if (n.matches(e)) return n;
    n = n.previousElementSibling;
  }
  return null;
}
function xv(t) {
  let e = [];
  if (t) {
    let n = Jh(t), o = /(auto|scroll)/, i = (r) => {
      try {
        let a = window.getComputedStyle(r, null);
        return o.test(a.getPropertyValue("overflow")) || o.test(a.getPropertyValue("overflowX")) || o.test(a.getPropertyValue("overflowY"));
      } catch {
        return !1;
      }
    };
    for (let r of n) {
      let a = r.nodeType === 1 && r.dataset.scrollselectors;
      if (a) {
        let l = a.split(",");
        for (let s of l) {
          let d = ft(r, s);
          d && i(d) && e.push(d);
        }
      }
      r.nodeType !== 9 && i(r) && e.push(r);
    }
  }
  return e;
}
function fu() {
  if (window.getSelection) return window.getSelection().toString();
  if (document.getSelection) return document.getSelection().toString();
}
function sn(t) {
  if (t) {
    let e = t.offsetWidth, n = getComputedStyle(t);
    return e -= parseFloat(n.paddingLeft) + parseFloat(n.paddingRight) + parseFloat(n.borderLeftWidth) + parseFloat(n.borderRightWidth), e;
  }
  return 0;
}
function hu(t, e, n) {
  let o = t[e];
  typeof o == "function" && o.apply(t, []);
}
function Sv() {
  return /(android)/i.test(navigator.userAgent);
}
function Jl(t) {
  if (t) {
    let e = t.nodeName, n = t.parentElement && t.parentElement.nodeName;
    return e === "INPUT" || e === "TEXTAREA" || e === "BUTTON" || e === "A" || n === "INPUT" || n === "TEXTAREA" || n === "BUTTON" || n === "A" || !!t.closest(".p-button, .p-checkbox, .p-radiobutton");
  }
  return !1;
}
function Yh() {
  return !!(typeof window < "u" && window.document && window.document.createElement);
}
function mu(t, e = "") {
  return Eo(t) ? t.matches(`button:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [href][clientHeight][clientWidth]:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            input:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            select:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            textarea:not([tabindex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [tabIndex]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e},
            [contenteditable]:not([tabIndex = "-1"]):not([disabled]):not([style*="display:none"]):not([hidden])${e}`) : !1;
}
function Xa(t) {
  return !!(t && t.offsetParent != null);
}
function fc() {
  return "ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
}
function ea(t, e = "", n) {
  Eo(t) && n !== null && n !== void 0 && t.setAttribute(e, n);
}
function ta() {
  let t = /* @__PURE__ */ new Map();
  return { on(e, n) {
    let o = t.get(e);
    return o ? o.push(n) : o = [n], t.set(e, o), this;
  }, off(e, n) {
    let o = t.get(e);
    return o && o.splice(o.indexOf(n) >>> 0, 1), this;
  }, emit(e, n) {
    let o = t.get(e);
    o && o.forEach((i) => {
      i(n);
    });
  }, clear() {
    t.clear();
  } };
}
var Iv = Object.defineProperty, gu = Object.getOwnPropertySymbols, Ov = Object.prototype.hasOwnProperty, Pv = Object.prototype.propertyIsEnumerable, bu = (t, e, n) => e in t ? Iv(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, $v = (t, e) => {
  for (var n in e || (e = {})) Ov.call(e, n) && bu(t, n, e[n]);
  if (gu) for (var n of gu(e)) Pv.call(e, n) && bu(t, n, e[n]);
  return t;
};
function lt(t) {
  return t == null || t === "" || Array.isArray(t) && t.length === 0 || !(t instanceof Date) && typeof t == "object" && Object.keys(t).length === 0;
}
function Tv(t, e, n, o = 1) {
  let i = -1, r = lt(t), a = lt(e);
  return r && a ? i = 0 : r ? i = o : a ? i = -o : typeof t == "string" && typeof e == "string" ? i = n(t, e) : i = t < e ? -1 : t > e ? 1 : 0, i;
}
function Es(t, e, n = /* @__PURE__ */ new WeakSet()) {
  if (t === e) return !0;
  if (!t || !e || typeof t != "object" || typeof e != "object" || n.has(t) || n.has(e)) return !1;
  n.add(t).add(e);
  let o = Array.isArray(t), i = Array.isArray(e), r, a, l;
  if (o && i) {
    if (a = t.length, a != e.length) return !1;
    for (r = a; r-- !== 0; ) if (!Es(t[r], e[r], n)) return !1;
    return !0;
  }
  if (o != i) return !1;
  let s = t instanceof Date, d = e instanceof Date;
  if (s != d) return !1;
  if (s && d) return t.getTime() == e.getTime();
  let c = t instanceof RegExp, u = e instanceof RegExp;
  if (c != u) return !1;
  if (c && u) return t.toString() == e.toString();
  let f = Object.keys(t);
  if (a = f.length, a !== Object.keys(e).length) return !1;
  for (r = a; r-- !== 0; ) if (!Object.prototype.hasOwnProperty.call(e, f[r])) return !1;
  for (r = a; r-- !== 0; ) if (l = f[r], !Es(t[l], e[l], n)) return !1;
  return !0;
}
function Rv(t, e) {
  return Es(t, e);
}
function na(t) {
  return typeof t == "function" && "call" in t && "apply" in t;
}
function ae(t) {
  return !lt(t);
}
function be(t, e) {
  if (!t || !e) return null;
  try {
    let n = t[e];
    if (ae(n)) return n;
  } catch {
  }
  if (Object.keys(t).length) {
    if (na(e)) return e(t);
    if (e.indexOf(".") === -1) return t[e];
    {
      let n = e.split("."), o = t;
      for (let i = 0, r = n.length; i < r; ++i) {
        if (o == null) return null;
        o = o[n[i]];
      }
      return o;
    }
  }
  return null;
}
function Kt(t, e, n) {
  return n ? be(t, n) === be(e, n) : Rv(t, e);
}
function Bv(t, e) {
  if (t != null && e && e.length) {
    for (let n of e) if (Kt(t, n)) return !0;
  }
  return !1;
}
function pn(t, e = !0) {
  return t instanceof Object && t.constructor === Object && (e || Object.keys(t).length !== 0);
}
function Xh(t = {}, e = {}) {
  let n = $v({}, t);
  return Object.keys(e).forEach((o) => {
    let i = o;
    pn(e[i]) && i in t && pn(t[i]) ? n[i] = Xh(t[i], e[i]) : n[i] = e[i];
  }), n;
}
function Zh(...t) {
  return t.reduce((e, n, o) => o === 0 ? n : Xh(e, n), {});
}
function Yl(t, e) {
  let n = -1;
  if (e) {
    for (let o = 0; o < e.length; o++) if (e[o] === t) {
      n = o;
      break;
    }
  }
  return n;
}
function Za(t, e) {
  let n = -1;
  if (ae(t)) try {
    n = t.findLastIndex(e);
  } catch {
    n = t.lastIndexOf([...t].reverse().find(e));
  }
  return n;
}
function yt(t, ...e) {
  return na(t) ? t(...e) : t;
}
function St(t, e = !0) {
  return typeof t == "string" && (e || t !== "");
}
function dn(t) {
  return St(t) ? t.replace(/(-|_)/g, "").toLowerCase() : t;
}
function hc(t, e = "", n = {}) {
  let o = dn(e).split("."), i = o.shift();
  if (i) {
    if (pn(t)) {
      let r = Object.keys(t).find((a) => dn(a) === i) || "";
      return hc(yt(t[r], n), o.join("."), n);
    }
    return;
  }
  return yt(t, n);
}
function Qh(t, e = !0) {
  return Array.isArray(t) && (e || t.length !== 0);
}
function Ev(t) {
  return ae(t) && !isNaN(t);
}
function em(t = "") {
  return ae(t) && t.length === 1 && !!t.match(/\S| /);
}
function vu() {
  return new Intl.Collator(void 0, { numeric: !0 }).compare;
}
function vo(t, e) {
  if (e) {
    let n = e.test(t);
    return e.lastIndex = 0, n;
  }
  return !1;
}
function Mv(...t) {
  return Zh(...t);
}
function Mr(t) {
  return t && t.replace(/\/\*(?:(?!\*\/)[\s\S])*\*\/|[\r\n\t]+/g, "").replace(/ {2,}/g, " ").replace(/ ([{:}]) /g, "$1").replace(/([;,]) /g, "$1").replace(/ !/g, "!").replace(/: /g, ":").trim();
}
function Ft(t) {
  if (t && /[\xC0-\xFF\u0100-\u017E]/.test(t)) {
    let e = { A: /[\xC0-\xC5\u0100\u0102\u0104]/g, AE: /[\xC6]/g, C: /[\xC7\u0106\u0108\u010A\u010C]/g, D: /[\xD0\u010E\u0110]/g, E: /[\xC8-\xCB\u0112\u0114\u0116\u0118\u011A]/g, G: /[\u011C\u011E\u0120\u0122]/g, H: /[\u0124\u0126]/g, I: /[\xCC-\xCF\u0128\u012A\u012C\u012E\u0130]/g, IJ: /[\u0132]/g, J: /[\u0134]/g, K: /[\u0136]/g, L: /[\u0139\u013B\u013D\u013F\u0141]/g, N: /[\xD1\u0143\u0145\u0147\u014A]/g, O: /[\xD2-\xD6\xD8\u014C\u014E\u0150]/g, OE: /[\u0152]/g, R: /[\u0154\u0156\u0158]/g, S: /[\u015A\u015C\u015E\u0160]/g, T: /[\u0162\u0164\u0166]/g, U: /[\xD9-\xDC\u0168\u016A\u016C\u016E\u0170\u0172]/g, W: /[\u0174]/g, Y: /[\xDD\u0176\u0178]/g, Z: /[\u0179\u017B\u017D]/g, a: /[\xE0-\xE5\u0101\u0103\u0105]/g, ae: /[\xE6]/g, c: /[\xE7\u0107\u0109\u010B\u010D]/g, d: /[\u010F\u0111]/g, e: /[\xE8-\xEB\u0113\u0115\u0117\u0119\u011B]/g, g: /[\u011D\u011F\u0121\u0123]/g, i: /[\xEC-\xEF\u0129\u012B\u012D\u012F\u0131]/g, ij: /[\u0133]/g, j: /[\u0135]/g, k: /[\u0137,\u0138]/g, l: /[\u013A\u013C\u013E\u0140\u0142]/g, n: /[\xF1\u0144\u0146\u0148\u014B]/g, p: /[\xFE]/g, o: /[\xF2-\xF6\xF8\u014D\u014F\u0151]/g, oe: /[\u0153]/g, r: /[\u0155\u0157\u0159]/g, s: /[\u015B\u015D\u015F\u0161]/g, t: /[\u0163\u0165\u0167]/g, u: /[\xF9-\xFC\u0169\u016B\u016D\u016F\u0171\u0173]/g, w: /[\u0175]/g, y: /[\xFD\xFF\u0177]/g, z: /[\u017A\u017C\u017E]/g };
    for (let n in e) t = t.replace(e[n], n);
  }
  return t;
}
function yu(t, e, n) {
  t && e !== n && (n >= t.length && (n %= t.length, e %= t.length), t.splice(n, 0, t.splice(e, 1)[0]));
}
function ku(t, e, n = 1, o, i = 1) {
  let r = Tv(t, e, o, n), a = n;
  return (lt(t) || lt(e)) && (a = i === 1 ? n : i), a * r;
}
function Av(t) {
  return St(t, !1) ? t[0].toUpperCase() + t.slice(1) : t;
}
function tm(t) {
  return St(t) ? t.replace(/(_)/g, "-").replace(/[A-Z]/g, (e, n) => n === 0 ? e : "-" + e.toLowerCase()).toLowerCase() : t;
}
var ka = {};
function Dv(t = "pui_id_") {
  return Object.hasOwn(ka, t) || (ka[t] = 0), ka[t]++, `${t}${ka[t]}`;
}
function Lv() {
  let t = [], e = (a, l, s = 999) => {
    let d = i(a, l, s), c = d.value + (d.key === a ? 0 : s) + 1;
    return t.push({ key: a, value: c }), c;
  }, n = (a) => {
    t = t.filter((l) => l.value !== a);
  }, o = (a, l) => i(a).value, i = (a, l, s = 0) => [...t].reverse().find((d) => !0) || { key: a, value: s }, r = (a) => a && parseInt(a.style.zIndex, 10) || 0;
  return { get: r, set: (a, l, s) => {
    l && (l.style.zIndex = String(e(a, !0, s)));
  }, clear: (a) => {
    a && (n(r(a)), a.style.zIndex = "");
  }, getCurrent: (a) => o(a) };
}
var Xe = Lv(), zv = Object.defineProperty, Fv = Object.defineProperties, Nv = Object.getOwnPropertyDescriptors, Qa = Object.getOwnPropertySymbols, nm = Object.prototype.hasOwnProperty, om = Object.prototype.propertyIsEnumerable, wu = (t, e, n) => e in t ? zv(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, Xt = (t, e) => {
  for (var n in e || (e = {})) nm.call(e, n) && wu(t, n, e[n]);
  if (Qa) for (var n of Qa(e)) om.call(e, n) && wu(t, n, e[n]);
  return t;
}, Xl = (t, e) => Fv(t, Nv(e)), yn = (t, e) => {
  var n = {};
  for (var o in t) nm.call(t, o) && e.indexOf(o) < 0 && (n[o] = t[o]);
  if (t != null && Qa) for (var o of Qa(t)) e.indexOf(o) < 0 && om.call(t, o) && (n[o] = t[o]);
  return n;
};
function jv(...t) {
  return Zh(...t);
}
var Vv = ta(), rt = Vv, Wr = /{([^}]*)}/g, rm = /(\d+\s+[\+\-\*\/]\s+\d+)/g, im = /var\([^)]+\)/g;
function Cu(t) {
  return St(t) ? t.replace(/[A-Z]/g, (e, n) => n === 0 ? e : "." + e.toLowerCase()).toLowerCase() : t;
}
function _v(t) {
  return pn(t) && t.hasOwnProperty("$value") && t.hasOwnProperty("$type") ? t.$value : t;
}
function Kv(t) {
  return t.replaceAll(/ /g, "").replace(/[^\w]/g, "-");
}
function Ms(t = "", e = "") {
  return Kv(`${St(t, !1) && St(e, !1) ? `${t}-` : t}${e}`);
}
function am(t = "", e = "") {
  return `--${Ms(t, e)}`;
}
function Hv(t = "") {
  let e = (t.match(/{/g) || []).length, n = (t.match(/}/g) || []).length;
  return (e + n) % 2 !== 0;
}
function lm(t, e = "", n = "", o = [], i) {
  if (St(t)) {
    let r = t.trim();
    if (Hv(r)) return;
    if (vo(r, Wr)) {
      let a = r.replaceAll(Wr, (l) => {
        let s = l.replace(/{|}/g, "").split(".").filter((d) => !o.some((c) => vo(d, c)));
        return `var(${am(n, tm(s.join("-")))}${ae(i) ? `, ${i}` : ""})`;
      });
      return vo(a.replace(im, "0"), rm) ? `calc(${a})` : a;
    }
    return r;
  } else if (Ev(t)) return t;
}
function Wv(t, e, n) {
  St(e, !1) && t.push(`${e}:${n};`);
}
function _o(t, e) {
  return t ? `${t}{${e}}` : "";
}
function sm(t, e) {
  if (t.indexOf("dt(") === -1) return t;
  function n(a, l) {
    let s = [], d = 0, c = "", u = null, f = 0;
    for (; d <= a.length; ) {
      let p = a[d];
      if ((p === '"' || p === "'" || p === "`") && a[d - 1] !== "\\" && (u = u === p ? null : p), !u && (p === "(" && f++, p === ")" && f--, (p === "," || d === a.length) && f === 0)) {
        let h = c.trim();
        h.startsWith("dt(") ? s.push(sm(h, l)) : s.push(o(h)), c = "", d++;
        continue;
      }
      p !== void 0 && (c += p), d++;
    }
    return s;
  }
  function o(a) {
    let l = a[0];
    if ((l === '"' || l === "'" || l === "`") && a[a.length - 1] === l) return a.slice(1, -1);
    let s = Number(a);
    return isNaN(s) ? a : s;
  }
  let i = [], r = [];
  for (let a = 0; a < t.length; a++) if (t[a] === "d" && t.slice(a, a + 3) === "dt(") r.push(a), a += 2;
  else if (t[a] === ")" && r.length > 0) {
    let l = r.pop();
    r.length === 0 && i.push([l, a]);
  }
  if (!i.length) return t;
  for (let a = i.length - 1; a >= 0; a--) {
    let [l, s] = i[a], d = t.slice(l + 3, s), c = n(d, e), u = e(...c);
    t = t.slice(0, l) + u + t.slice(s + 1);
  }
  return t;
}
var dm = (t) => {
  var e;
  let n = $e.getTheme(), o = As(n, t, void 0, "variable"), i = (e = o == null ? void 0 : o.match(/--[\w-]+/g)) == null ? void 0 : e[0], r = As(n, t, void 0, "value");
  return { name: i, variable: o, value: r };
}, yo = (...t) => As($e.getTheme(), ...t), As = (t = {}, e, n, o) => {
  if (e) {
    let { variable: i, options: r } = $e.defaults || {}, { prefix: a, transform: l } = (t == null ? void 0 : t.options) || r || {}, s = vo(e, Wr) ? e : `{${e}}`;
    return o === "value" || lt(o) && l === "strict" ? $e.getTokenValue(e) : lm(s, void 0, a, [i.excludedKeyRegex], n);
  }
  return "";
};
function wa(t, ...e) {
  if (t instanceof Array) {
    let n = t.reduce((o, i, r) => {
      var a;
      return o + i + ((a = yt(e[r], { dt: yo })) != null ? a : "");
    }, "");
    return sm(n, yo);
  }
  return yt(t, { dt: yo });
}
function Uv(t, e = {}) {
  let n = $e.defaults.variable, { prefix: o = n.prefix, selector: i = n.selector, excludedKeyRegex: r = n.excludedKeyRegex } = e, a = [], l = [], s = [{ node: t, path: o }];
  for (; s.length; ) {
    let { node: c, path: u } = s.pop();
    for (let f in c) {
      let p = c[f], h = _v(p), g = vo(f, r) ? Ms(u) : Ms(u, tm(f));
      if (pn(h)) s.push({ node: h, path: g });
      else {
        let b = am(g), C = lm(h, g, o, [r]);
        Wv(l, b, C);
        let x = g;
        o && x.startsWith(o + "-") && (x = x.slice(o.length + 1)), a.push(x.replace(/-/g, "."));
      }
    }
  }
  let d = l.join("");
  return { value: l, tokens: a, declarations: d, css: _o(i, d) };
}
var Yt = { regex: { rules: { class: { pattern: /^\.([a-zA-Z][\w-]*)$/, resolve(t) {
  return { type: "class", selector: t, matched: this.pattern.test(t.trim()) };
} }, attr: { pattern: /^\[(.*)\]$/, resolve(t) {
  return { type: "attr", selector: `:root${t}`, matched: this.pattern.test(t.trim()) };
} }, media: { pattern: /^@media (.*)$/, resolve(t) {
  return { type: "media", selector: t, matched: this.pattern.test(t.trim()) };
} }, system: { pattern: /^system$/, resolve(t) {
  return { type: "system", selector: "@media (prefers-color-scheme: dark)", matched: this.pattern.test(t.trim()) };
} }, custom: { resolve(t) {
  return { type: "custom", selector: t, matched: !0 };
} } }, resolve(t) {
  let e = Object.keys(this.rules).filter((n) => n !== "custom").map((n) => this.rules[n]);
  return [t].flat().map((n) => {
    var o;
    return (o = e.map((i) => i.resolve(n)).find((i) => i.matched)) != null ? o : this.rules.custom.resolve(n);
  });
} }, _toVariables(t, e) {
  return Uv(t, { prefix: e == null ? void 0 : e.prefix });
}, getCommon({ name: t = "", theme: e = {}, params: n, set: o, defaults: i }) {
  var r, a, l, s, d, c, u;
  let { preset: f, options: p } = e, h, g, b, C, x, R, w;
  if (ae(f) && p.transform !== "strict") {
    let { primitive: T, semantic: S, extend: I } = f, B = S || {}, { colorScheme: H } = B, K = yn(B, ["colorScheme"]), j = I || {}, { colorScheme: F } = j, U = yn(j, ["colorScheme"]), le = H || {}, { dark: ie } = le, ue = yn(le, ["dark"]), de = F || {}, { dark: Ce } = de, Re = yn(de, ["dark"]), Ee = ae(T) ? this._toVariables({ primitive: T }, p) : {}, _e = ae(K) ? this._toVariables({ semantic: K }, p) : {}, Ne = ae(ue) ? this._toVariables({ light: ue }, p) : {}, ct = ae(ie) ? this._toVariables({ dark: ie }, p) : {}, Ke = ae(U) ? this._toVariables({ semantic: U }, p) : {}, nt = ae(Re) ? this._toVariables({ light: Re }, p) : {}, Ge = ae(Ce) ? this._toVariables({ dark: Ce }, p) : {}, [D, G] = [(r = Ee.declarations) != null ? r : "", Ee.tokens], [W, Z] = [(a = _e.declarations) != null ? a : "", _e.tokens || []], [we, Me] = [(l = Ne.declarations) != null ? l : "", Ne.tokens || []], [me, pe] = [(s = ct.declarations) != null ? s : "", ct.tokens || []], [De, Tt] = [(d = Ke.declarations) != null ? d : "", Ke.tokens || []], [je, Lo] = [(c = nt.declarations) != null ? c : "", nt.tokens || []], [zo, Jt] = [(u = Ge.declarations) != null ? u : "", Ge.tokens || []];
    h = this.transformCSS(t, D, "light", "variable", p, o, i), g = G;
    let tn = this.transformCSS(t, `${W}${we}`, "light", "variable", p, o, i), io = this.transformCSS(t, `${me}`, "dark", "variable", p, o, i);
    b = `${tn}${io}`, C = [.../* @__PURE__ */ new Set([...Z, ...Me, ...pe])];
    let vn = this.transformCSS(t, `${De}${je}color-scheme:light`, "light", "variable", p, o, i), ao = this.transformCSS(t, `${zo}color-scheme:dark`, "dark", "variable", p, o, i);
    x = `${vn}${ao}`, R = [.../* @__PURE__ */ new Set([...Tt, ...Lo, ...Jt])], w = yt(f.css, { dt: yo });
  }
  return { primitive: { css: h, tokens: g }, semantic: { css: b, tokens: C }, global: { css: x, tokens: R }, style: w };
}, getPreset({ name: t = "", preset: e = {}, options: n, params: o, set: i, defaults: r, selector: a }) {
  var l, s, d;
  let c, u, f;
  if (ae(e) && n.transform !== "strict") {
    let p = t.replace("-directive", ""), h = e, { colorScheme: g, extend: b, css: C } = h, x = yn(h, ["colorScheme", "extend", "css"]), R = b || {}, { colorScheme: w } = R, T = yn(R, ["colorScheme"]), S = g || {}, { dark: I } = S, B = yn(S, ["dark"]), H = w || {}, { dark: K } = H, j = yn(H, ["dark"]), F = ae(x) ? this._toVariables({ [p]: Xt(Xt({}, x), T) }, n) : {}, U = ae(B) ? this._toVariables({ [p]: Xt(Xt({}, B), j) }, n) : {}, le = ae(I) ? this._toVariables({ [p]: Xt(Xt({}, I), K) }, n) : {}, [ie, ue] = [(l = F.declarations) != null ? l : "", F.tokens || []], [de, Ce] = [(s = U.declarations) != null ? s : "", U.tokens || []], [Re, Ee] = [(d = le.declarations) != null ? d : "", le.tokens || []], _e = this.transformCSS(p, `${ie}${de}`, "light", "variable", n, i, r, a), Ne = this.transformCSS(p, Re, "dark", "variable", n, i, r, a);
    c = `${_e}${Ne}`, u = [.../* @__PURE__ */ new Set([...ue, ...Ce, ...Ee])], f = yt(C, { dt: yo });
  }
  return { css: c, tokens: u, style: f };
}, getPresetC({ name: t = "", theme: e = {}, params: n, set: o, defaults: i }) {
  var r;
  let { preset: a, options: l } = e, s = (r = a == null ? void 0 : a.components) == null ? void 0 : r[t];
  return this.getPreset({ name: t, preset: s, options: l, params: n, set: o, defaults: i });
}, getPresetD({ name: t = "", theme: e = {}, params: n, set: o, defaults: i }) {
  var r, a;
  let l = t.replace("-directive", ""), { preset: s, options: d } = e, c = ((r = s == null ? void 0 : s.components) == null ? void 0 : r[l]) || ((a = s == null ? void 0 : s.directives) == null ? void 0 : a[l]);
  return this.getPreset({ name: l, preset: c, options: d, params: n, set: o, defaults: i });
}, applyDarkColorScheme(t) {
  return !(t.darkModeSelector === "none" || t.darkModeSelector === !1);
}, getColorSchemeOption(t, e) {
  var n;
  return this.applyDarkColorScheme(t) ? this.regex.resolve(t.darkModeSelector === !0 ? e.options.darkModeSelector : (n = t.darkModeSelector) != null ? n : e.options.darkModeSelector) : [];
}, getLayerOrder(t, e = {}, n, o) {
  let { cssLayer: i } = e;
  return i ? `@layer ${yt(i.order || i.name || "primeui", n)}` : "";
}, getCommonStyleSheet({ name: t = "", theme: e = {}, params: n, props: o = {}, set: i, defaults: r }) {
  let a = this.getCommon({ name: t, theme: e, params: n, set: i, defaults: r }), l = Object.entries(o).reduce((s, [d, c]) => s.push(`${d}="${c}"`) && s, []).join(" ");
  return Object.entries(a || {}).reduce((s, [d, c]) => {
    if (pn(c) && Object.hasOwn(c, "css")) {
      let u = Mr(c.css), f = `${d}-variables`;
      s.push(`<style type="text/css" data-primevue-style-id="${f}" ${l}>${u}</style>`);
    }
    return s;
  }, []).join("");
}, getStyleSheet({ name: t = "", theme: e = {}, params: n, props: o = {}, set: i, defaults: r }) {
  var a;
  let l = { name: t, theme: e, params: n, set: i, defaults: r }, s = (a = t.includes("-directive") ? this.getPresetD(l) : this.getPresetC(l)) == null ? void 0 : a.css, d = Object.entries(o).reduce((c, [u, f]) => c.push(`${u}="${f}"`) && c, []).join(" ");
  return s ? `<style type="text/css" data-primevue-style-id="${t}-variables" ${d}>${Mr(s)}</style>` : "";
}, createTokens(t = {}, e, n = "", o = "", i = {}) {
  let r = function(l, s = {}, d = []) {
    if (d.includes(this.path)) return console.warn(`Circular reference detected at ${this.path}`), { colorScheme: l, path: this.path, paths: s, value: void 0 };
    d.push(this.path), s.name = this.path, s.binding || (s.binding = {});
    let c = this.value;
    if (typeof this.value == "string" && Wr.test(this.value)) {
      let u = this.value.trim().replace(Wr, (f) => {
        var p;
        let h = f.slice(1, -1), g = this.tokens[h];
        if (!g) return console.warn(`Token not found for path: ${h}`), "__UNRESOLVED__";
        let b = g.computed(l, s, d);
        return Array.isArray(b) && b.length === 2 ? `light-dark(${b[0].value},${b[1].value})` : (p = b == null ? void 0 : b.value) != null ? p : "__UNRESOLVED__";
      });
      c = rm.test(u.replace(im, "0")) ? `calc(${u})` : u;
    }
    return lt(s.binding) && delete s.binding, d.pop(), { colorScheme: l, path: this.path, paths: s, value: c.includes("__UNRESOLVED__") ? void 0 : c };
  }, a = (l, s, d) => {
    Object.entries(l).forEach(([c, u]) => {
      let f = vo(c, e.variable.excludedKeyRegex) ? s : s ? `${s}.${Cu(c)}` : Cu(c), p = d ? `${d}.${c}` : c;
      pn(u) ? a(u, f, p) : (i[f] || (i[f] = { paths: [], computed: (h, g = {}, b = []) => {
        if (i[f].paths.length === 1) return i[f].paths[0].computed(i[f].paths[0].scheme, g.binding, b);
        if (h && h !== "none") for (let C = 0; C < i[f].paths.length; C++) {
          let x = i[f].paths[C];
          if (x.scheme === h) return x.computed(h, g.binding, b);
        }
        return i[f].paths.map((C) => C.computed(C.scheme, g[C.scheme], b));
      } }), i[f].paths.push({ path: p, value: u, scheme: p.includes("colorScheme.light") ? "light" : p.includes("colorScheme.dark") ? "dark" : "none", computed: r, tokens: i }));
    });
  };
  return a(t, n, o), i;
}, getTokenValue(t, e, n) {
  var o;
  let i = ((l) => l.split(".").filter((s) => !vo(s.toLowerCase(), n.variable.excludedKeyRegex)).join("."))(e), r = e.includes("colorScheme.light") ? "light" : e.includes("colorScheme.dark") ? "dark" : void 0, a = [(o = t[i]) == null ? void 0 : o.computed(r)].flat().filter((l) => l);
  return a.length === 1 ? a[0].value : a.reduce((l = {}, s) => {
    let d = s, { colorScheme: c } = d, u = yn(d, ["colorScheme"]);
    return l[c] = u, l;
  }, void 0);
}, getSelectorRule(t, e, n, o) {
  return n === "class" || n === "attr" ? _o(ae(e) ? `${t}${e},${t} ${e}` : t, o) : _o(t, _o(e ?? ":root", o));
}, transformCSS(t, e, n, o, i = {}, r, a, l) {
  if (ae(e)) {
    let { cssLayer: s } = i;
    if (o !== "style") {
      let d = this.getColorSchemeOption(i, a);
      e = n === "dark" ? d.reduce((c, { type: u, selector: f }) => (ae(f) && (c += f.includes("[CSS]") ? f.replace("[CSS]", e) : this.getSelectorRule(f, l, u, e)), c), "") : _o(l ?? ":root", e);
    }
    if (s) {
      let d = { name: "primeui" };
      pn(s) && (d.name = yt(s.name, { name: t, type: o })), ae(d.name) && (e = _o(`@layer ${d.name}`, e), r == null || r.layerNames(d.name));
    }
    return e;
  }
  return "";
} }, $e = { defaults: { variable: { prefix: "p", selector: ":root", excludedKeyRegex: /^(primitive|semantic|components|directives|variables|colorscheme|light|dark|common|root|states|extend|css)$/gi }, options: { prefix: "p", darkModeSelector: "system", cssLayer: !1 } }, _theme: void 0, _layerNames: /* @__PURE__ */ new Set(), _loadedStyleNames: /* @__PURE__ */ new Set(), _loadingStyles: /* @__PURE__ */ new Set(), _tokens: {}, update(t = {}) {
  let { theme: e } = t;
  e && (this._theme = Xl(Xt({}, e), { options: Xt(Xt({}, this.defaults.options), e.options) }), this._tokens = Yt.createTokens(this.preset, this.defaults), this.clearLoadedStyleNames());
}, get theme() {
  return this._theme;
}, get preset() {
  var t;
  return ((t = this.theme) == null ? void 0 : t.preset) || {};
}, get options() {
  var t;
  return ((t = this.theme) == null ? void 0 : t.options) || {};
}, get tokens() {
  return this._tokens;
}, getTheme() {
  return this.theme;
}, setTheme(t) {
  this.update({ theme: t }), rt.emit("theme:change", t);
}, getPreset() {
  return this.preset;
}, setPreset(t) {
  this._theme = Xl(Xt({}, this.theme), { preset: t }), this._tokens = Yt.createTokens(t, this.defaults), this.clearLoadedStyleNames(), rt.emit("preset:change", t), rt.emit("theme:change", this.theme);
}, getOptions() {
  return this.options;
}, setOptions(t) {
  this._theme = Xl(Xt({}, this.theme), { options: t }), this.clearLoadedStyleNames(), rt.emit("options:change", t), rt.emit("theme:change", this.theme);
}, getLayerNames() {
  return [...this._layerNames];
}, setLayerNames(t) {
  this._layerNames.add(t);
}, getLoadedStyleNames() {
  return this._loadedStyleNames;
}, isStyleNameLoaded(t) {
  return this._loadedStyleNames.has(t);
}, setLoadedStyleName(t) {
  this._loadedStyleNames.add(t);
}, deleteLoadedStyleName(t) {
  this._loadedStyleNames.delete(t);
}, clearLoadedStyleNames() {
  this._loadedStyleNames.clear();
}, getTokenValue(t) {
  return Yt.getTokenValue(this.tokens, t, this.defaults);
}, getCommon(t = "", e) {
  return Yt.getCommon({ name: t, theme: this.theme, params: e, defaults: this.defaults, set: { layerNames: this.setLayerNames.bind(this) } });
}, getComponent(t = "", e) {
  let n = { name: t, theme: this.theme, params: e, defaults: this.defaults, set: { layerNames: this.setLayerNames.bind(this) } };
  return Yt.getPresetC(n);
}, getDirective(t = "", e) {
  let n = { name: t, theme: this.theme, params: e, defaults: this.defaults, set: { layerNames: this.setLayerNames.bind(this) } };
  return Yt.getPresetD(n);
}, getCustomPreset(t = "", e, n, o) {
  let i = { name: t, preset: e, options: this.options, selector: n, params: o, defaults: this.defaults, set: { layerNames: this.setLayerNames.bind(this) } };
  return Yt.getPreset(i);
}, getLayerOrderCSS(t = "") {
  return Yt.getLayerOrder(t, this.options, { names: this.getLayerNames() }, this.defaults);
}, transformCSS(t = "", e, n = "style", o) {
  return Yt.transformCSS(t, e, o, n, this.options, { layerNames: this.setLayerNames.bind(this) }, this.defaults);
}, getCommonStyleSheet(t = "", e, n = {}) {
  return Yt.getCommonStyleSheet({ name: t, theme: this.theme, params: e, props: n, defaults: this.defaults, set: { layerNames: this.setLayerNames.bind(this) } });
}, getStyleSheet(t, e, n = {}) {
  return Yt.getStyleSheet({ name: t, theme: this.theme, params: e, props: n, defaults: this.defaults, set: { layerNames: this.setLayerNames.bind(this) } });
}, onStyleMounted(t) {
  this._loadingStyles.add(t);
}, onStyleUpdated(t) {
  this._loadingStyles.add(t);
}, onStyleLoaded(t, { name: e }) {
  this._loadingStyles.size && (this._loadingStyles.delete(e), rt.emit(`theme:${e}:load`, t), !this._loadingStyles.size && rt.emit("theme:load"));
} }, Vn = {
  _loadedStyleNames: /* @__PURE__ */ new Set(),
  getLoadedStyleNames: function() {
    return this._loadedStyleNames;
  },
  isStyleNameLoaded: function(e) {
    return this._loadedStyleNames.has(e);
  },
  setLoadedStyleName: function(e) {
    this._loadedStyleNames.add(e);
  },
  deleteLoadedStyleName: function(e) {
    this._loadedStyleNames.delete(e);
  },
  clearLoadedStyleNames: function() {
    this._loadedStyleNames.clear();
  }
}, Gv = `
    *,
    ::before,
    ::after {
        box-sizing: border-box;
    }

    /* Non vue overlay animations */
    .p-connected-overlay {
        opacity: 0;
        transform: scaleY(0.8);
        transition:
            transform 0.12s cubic-bezier(0, 0, 0.2, 1),
            opacity 0.12s cubic-bezier(0, 0, 0.2, 1);
    }

    .p-connected-overlay-visible {
        opacity: 1;
        transform: scaleY(1);
    }

    .p-connected-overlay-hidden {
        opacity: 0;
        transform: scaleY(1);
        transition: opacity 0.1s linear;
    }

    /* Vue based overlay animations */
    .p-connected-overlay-enter-from {
        opacity: 0;
        transform: scaleY(0.8);
    }

    .p-connected-overlay-leave-to {
        opacity: 0;
    }

    .p-connected-overlay-enter-active {
        transition:
            transform 0.12s cubic-bezier(0, 0, 0.2, 1),
            opacity 0.12s cubic-bezier(0, 0, 0.2, 1);
    }

    .p-connected-overlay-leave-active {
        transition: opacity 0.1s linear;
    }

    /* Toggleable Content */
    .p-toggleable-content-enter-from,
    .p-toggleable-content-leave-to {
        max-height: 0;
    }

    .p-toggleable-content-enter-to,
    .p-toggleable-content-leave-from {
        max-height: 1000px;
    }

    .p-toggleable-content-leave-active {
        overflow: hidden;
        transition: max-height 0.45s cubic-bezier(0, 1, 0, 1);
    }

    .p-toggleable-content-enter-active {
        overflow: hidden;
        transition: max-height 1s ease-in-out;
    }

    .p-disabled,
    .p-disabled * {
        cursor: default;
        pointer-events: none;
        user-select: none;
    }

    .p-disabled,
    .p-component:disabled {
        opacity: dt('disabled.opacity');
    }

    .pi {
        font-size: dt('icon.size');
    }

    .p-icon {
        width: dt('icon.size');
        height: dt('icon.size');
    }

    .p-overlay-mask {
        background: dt('mask.background');
        color: dt('mask.color');
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }

    .p-overlay-mask-enter {
        animation: p-overlay-mask-enter-animation dt('mask.transition.duration') forwards;
    }

    .p-overlay-mask-leave {
        animation: p-overlay-mask-leave-animation dt('mask.transition.duration') forwards;
    }

    @keyframes p-overlay-mask-enter-animation {
        from {
            background: transparent;
        }
        to {
            background: dt('mask.background');
        }
    }
    @keyframes p-overlay-mask-leave-animation {
        from {
            background: dt('mask.background');
        }
        to {
            background: transparent;
        }
    }
`;
function Ur(t) {
  "@babel/helpers - typeof";
  return Ur = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ur(t);
}
function xu(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Su(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? xu(Object(n), !0).forEach(function(o) {
      qv(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : xu(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function qv(t, e, n) {
  return (e = Jv(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function Jv(t) {
  var e = Yv(t, "string");
  return Ur(e) == "symbol" ? e : e + "";
}
function Yv(t, e) {
  if (Ur(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ur(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function Xv(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  Ts() && Ts().components ? Dt(t) : e ? t() : sc(t);
}
var Zv = 0;
function Qv(t) {
  var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n = z(!1), o = z(t), i = z(null), r = Yh() ? window.document : void 0, a = e.document, l = a === void 0 ? r : a, s = e.immediate, d = s === void 0 ? !0 : s, c = e.manual, u = c === void 0 ? !1 : c, f = e.name, p = f === void 0 ? "style_".concat(++Zv) : f, h = e.id, g = h === void 0 ? void 0 : h, b = e.media, C = b === void 0 ? void 0 : b, x = e.nonce, R = x === void 0 ? void 0 : x, w = e.first, T = w === void 0 ? !1 : w, S = e.onMounted, I = S === void 0 ? void 0 : S, B = e.onUpdated, H = B === void 0 ? void 0 : B, K = e.onLoad, j = K === void 0 ? void 0 : K, F = e.props, U = F === void 0 ? {} : F, le = function() {
  }, ie = function(Ce) {
    var Re = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (l) {
      var Ee = Su(Su({}, U), Re), _e = Ee.name || p, Ne = Ee.id || g, ct = Ee.nonce || R;
      i.value = l.querySelector('style[data-primevue-style-id="'.concat(_e, '"]')) || l.getElementById(Ne) || l.createElement("style"), i.value.isConnected || (o.value = Ce || t, Ya(i.value, {
        type: "text/css",
        id: Ne,
        media: C,
        nonce: ct
      }), T ? l.head.prepend(i.value) : l.head.appendChild(i.value), ea(i.value, "data-primevue-style-id", _e), Ya(i.value, Ee), i.value.onload = function(Ke) {
        return j == null ? void 0 : j(Ke, {
          name: _e
        });
      }, I == null || I(_e)), !n.value && (le = Go(o, function(Ke) {
        i.value.textContent = Ke, H == null || H(_e);
      }, {
        immediate: !0
      }), n.value = !0);
    }
  }, ue = function() {
    !l || !n.value || (le(), kv(i.value) && l.head.removeChild(i.value), n.value = !1, i.value = null);
  };
  return d && !u && Xv(ie), {
    id: g,
    name: p,
    el: i,
    css: o,
    unload: ue,
    load: ie,
    isLoaded: ev(n)
  };
}
function Gr(t) {
  "@babel/helpers - typeof";
  return Gr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Gr(t);
}
var Iu, Ou, Pu, $u;
function Tu(t, e) {
  return oy(t) || ny(t, e) || ty(t, e) || ey();
}
function ey() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function ty(t, e) {
  if (t) {
    if (typeof t == "string") return Ru(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ru(t, e) : void 0;
  }
}
function Ru(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function ny(t, e) {
  var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (n != null) {
    var o, i, r, a, l = [], s = !0, d = !1;
    try {
      if (r = (n = n.call(t)).next, e !== 0) for (; !(s = (o = r.call(n)).done) && (l.push(o.value), l.length !== e); s = !0) ;
    } catch (c) {
      d = !0, i = c;
    } finally {
      try {
        if (!s && n.return != null && (a = n.return(), Object(a) !== a)) return;
      } finally {
        if (d) throw i;
      }
    }
    return l;
  }
}
function oy(t) {
  if (Array.isArray(t)) return t;
}
function Bu(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Zl(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Bu(Object(n), !0).forEach(function(o) {
      ry(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Bu(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function ry(t, e, n) {
  return (e = iy(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function iy(t) {
  var e = ay(t, "string");
  return Gr(e) == "symbol" ? e : e + "";
}
function ay(t, e) {
  if (Gr(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Gr(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function Ca(t, e) {
  return e || (e = t.slice(0)), Object.freeze(Object.defineProperties(t, { raw: { value: Object.freeze(e) } }));
}
var ly = function(e) {
  var n = e.dt;
  return `
.p-hidden-accessible {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    opacity: 0;
    overflow: hidden;
    padding: 0;
    pointer-events: none;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}

.p-overflow-hidden {
    overflow: hidden;
    padding-right: `.concat(n("scrollbar.width"), `;
}
`);
}, sy = {}, dy = {}, te = {
  name: "base",
  css: ly,
  style: Gv,
  classes: sy,
  inlineStyles: dy,
  load: function(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : function(r) {
      return r;
    }, i = o(wa(Iu || (Iu = Ca(["", ""])), e));
    return ae(i) ? Qv(Mr(i), Zl({
      name: this.name
    }, n)) : {};
  },
  loadCSS: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return this.load(this.css, e);
  },
  loadStyle: function() {
    var e = this, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    return this.load(this.style, n, function() {
      var i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      return $e.transformCSS(n.name || e.name, "".concat(i).concat(wa(Ou || (Ou = Ca(["", ""])), o)));
    });
  },
  getCommonTheme: function(e) {
    return $e.getCommon(this.name, e);
  },
  getComponentTheme: function(e) {
    return $e.getComponent(this.name, e);
  },
  getDirectiveTheme: function(e) {
    return $e.getDirective(this.name, e);
  },
  getPresetTheme: function(e, n, o) {
    return $e.getCustomPreset(this.name, e, n, o);
  },
  getLayerOrderThemeCSS: function() {
    return $e.getLayerOrderCSS(this.name);
  },
  getStyleSheet: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (this.css) {
      var o = yt(this.css, {
        dt: yo
      }) || "", i = Mr(wa(Pu || (Pu = Ca(["", "", ""])), o, e)), r = Object.entries(n).reduce(function(a, l) {
        var s = Tu(l, 2), d = s[0], c = s[1];
        return a.push("".concat(d, '="').concat(c, '"')) && a;
      }, []).join(" ");
      return ae(i) ? '<style type="text/css" data-primevue-style-id="'.concat(this.name, '" ').concat(r, ">").concat(i, "</style>") : "";
    }
    return "";
  },
  getCommonThemeStyleSheet: function(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    return $e.getCommonStyleSheet(this.name, e, n);
  },
  getThemeStyleSheet: function(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o = [$e.getStyleSheet(this.name, e, n)];
    if (this.style) {
      var i = this.name === "base" ? "global-style" : "".concat(this.name, "-style"), r = wa($u || ($u = Ca(["", ""])), yt(this.style, {
        dt: yo
      })), a = Mr($e.transformCSS(i, r)), l = Object.entries(n).reduce(function(s, d) {
        var c = Tu(d, 2), u = c[0], f = c[1];
        return s.push("".concat(u, '="').concat(f, '"')) && s;
      }, []).join(" ");
      ae(a) && o.push('<style type="text/css" data-primevue-style-id="'.concat(i, '" ').concat(l, ">").concat(a, "</style>"));
    }
    return o.join("");
  },
  extend: function(e) {
    return Zl(Zl({}, this), {}, {
      css: void 0,
      style: void 0
    }, e);
  }
};
function cy() {
  var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "pc", e = tv();
  return "".concat(t).concat(e.replace("v-", "").replaceAll("-", "_"));
}
var Eu = te.extend({
  name: "common"
});
function qr(t) {
  "@babel/helpers - typeof";
  return qr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, qr(t);
}
function uy(t) {
  return pm(t) || py(t) || um(t) || cm();
}
function py(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function wr(t, e) {
  return pm(t) || fy(t, e) || um(t, e) || cm();
}
function cm() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function um(t, e) {
  if (t) {
    if (typeof t == "string") return Mu(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Mu(t, e) : void 0;
  }
}
function Mu(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function fy(t, e) {
  var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (n != null) {
    var o, i, r, a, l = [], s = !0, d = !1;
    try {
      if (r = (n = n.call(t)).next, e === 0) {
        if (Object(n) !== n) return;
        s = !1;
      } else for (; !(s = (o = r.call(n)).done) && (l.push(o.value), l.length !== e); s = !0) ;
    } catch (c) {
      d = !0, i = c;
    } finally {
      try {
        if (!s && n.return != null && (a = n.return(), Object(a) !== a)) return;
      } finally {
        if (d) throw i;
      }
    }
    return l;
  }
}
function pm(t) {
  if (Array.isArray(t)) return t;
}
function Au(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function ke(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Au(Object(n), !0).forEach(function(o) {
      $r(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Au(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function $r(t, e, n) {
  return (e = hy(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function hy(t) {
  var e = my(t, "string");
  return qr(e) == "symbol" ? e : e + "";
}
function my(t, e) {
  if (qr(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (qr(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var ne = {
  name: "BaseComponent",
  props: {
    pt: {
      type: Object,
      default: void 0
    },
    ptOptions: {
      type: Object,
      default: void 0
    },
    unstyled: {
      type: Boolean,
      default: void 0
    },
    dt: {
      type: Object,
      default: void 0
    }
  },
  inject: {
    $parentInstance: {
      default: void 0
    }
  },
  watch: {
    isUnstyled: {
      immediate: !0,
      handler: function(e) {
        rt.off("theme:change", this._loadCoreStyles), e || (this._loadCoreStyles(), this._themeChangeListener(this._loadCoreStyles));
      }
    },
    dt: {
      immediate: !0,
      handler: function(e, n) {
        var o = this;
        rt.off("theme:change", this._themeScopedListener), e ? (this._loadScopedThemeStyles(e), this._themeScopedListener = function() {
          return o._loadScopedThemeStyles(e);
        }, this._themeChangeListener(this._themeScopedListener)) : this._unloadScopedThemeStyles();
      }
    }
  },
  scopedStyleEl: void 0,
  rootEl: void 0,
  uid: void 0,
  $attrSelector: void 0,
  beforeCreate: function() {
    var e, n, o, i, r, a, l, s, d, c, u, f = (e = this.pt) === null || e === void 0 ? void 0 : e._usept, p = f ? (n = this.pt) === null || n === void 0 || (n = n.originalValue) === null || n === void 0 ? void 0 : n[this.$.type.name] : void 0, h = f ? (o = this.pt) === null || o === void 0 || (o = o.value) === null || o === void 0 ? void 0 : o[this.$.type.name] : this.pt;
    (i = h || p) === null || i === void 0 || (i = i.hooks) === null || i === void 0 || (r = i.onBeforeCreate) === null || r === void 0 || r.call(i);
    var g = (a = this.$primevueConfig) === null || a === void 0 || (a = a.pt) === null || a === void 0 ? void 0 : a._usept, b = g ? (l = this.$primevue) === null || l === void 0 || (l = l.config) === null || l === void 0 || (l = l.pt) === null || l === void 0 ? void 0 : l.originalValue : void 0, C = g ? (s = this.$primevue) === null || s === void 0 || (s = s.config) === null || s === void 0 || (s = s.pt) === null || s === void 0 ? void 0 : s.value : (d = this.$primevue) === null || d === void 0 || (d = d.config) === null || d === void 0 ? void 0 : d.pt;
    (c = C || b) === null || c === void 0 || (c = c[this.$.type.name]) === null || c === void 0 || (c = c.hooks) === null || c === void 0 || (u = c.onBeforeCreate) === null || u === void 0 || u.call(c), this.$attrSelector = cy(), this.uid = this.$attrs.id || this.$attrSelector.replace("pc", "pv_id_");
  },
  created: function() {
    this._hook("onCreated");
  },
  beforeMount: function() {
    var e;
    this.rootEl = ft(Eo(this.$el) ? this.$el : (e = this.$el) === null || e === void 0 ? void 0 : e.parentElement, "[".concat(this.$attrSelector, "]")), this.rootEl && (this.rootEl.$pc = ke({
      name: this.$.type.name,
      attrSelector: this.$attrSelector
    }, this.$params)), this._loadStyles(), this._hook("onBeforeMount");
  },
  mounted: function() {
    this._hook("onMounted");
  },
  beforeUpdate: function() {
    this._hook("onBeforeUpdate");
  },
  updated: function() {
    this._hook("onUpdated");
  },
  beforeUnmount: function() {
    this._hook("onBeforeUnmount");
  },
  unmounted: function() {
    this._removeThemeListeners(), this._unloadScopedThemeStyles(), this._hook("onUnmounted");
  },
  methods: {
    _hook: function(e) {
      if (!this.$options.hostName) {
        var n = this._usePT(this._getPT(this.pt, this.$.type.name), this._getOptionValue, "hooks.".concat(e)), o = this._useDefaultPT(this._getOptionValue, "hooks.".concat(e));
        n == null || n(), o == null || o();
      }
    },
    _mergeProps: function(e) {
      for (var n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
        o[i - 1] = arguments[i];
      return na(e) ? e.apply(void 0, o) : k.apply(void 0, o);
    },
    _load: function() {
      Vn.isStyleNameLoaded("base") || (te.loadCSS(this.$styleOptions), this._loadGlobalStyles(), Vn.setLoadedStyleName("base")), this._loadThemeStyles();
    },
    _loadStyles: function() {
      this._load(), this._themeChangeListener(this._load);
    },
    _loadCoreStyles: function() {
      var e, n;
      !Vn.isStyleNameLoaded((e = this.$style) === null || e === void 0 ? void 0 : e.name) && (n = this.$style) !== null && n !== void 0 && n.name && (Eu.loadCSS(this.$styleOptions), this.$options.style && this.$style.loadCSS(this.$styleOptions), Vn.setLoadedStyleName(this.$style.name));
    },
    _loadGlobalStyles: function() {
      var e = this._useGlobalPT(this._getOptionValue, "global.css", this.$params);
      ae(e) && te.load(e, ke({
        name: "global"
      }, this.$styleOptions));
    },
    _loadThemeStyles: function() {
      var e, n;
      if (!(this.isUnstyled || this.$theme === "none")) {
        if (!$e.isStyleNameLoaded("common")) {
          var o, i, r = ((o = this.$style) === null || o === void 0 || (i = o.getCommonTheme) === null || i === void 0 ? void 0 : i.call(o)) || {}, a = r.primitive, l = r.semantic, s = r.global, d = r.style;
          te.load(a == null ? void 0 : a.css, ke({
            name: "primitive-variables"
          }, this.$styleOptions)), te.load(l == null ? void 0 : l.css, ke({
            name: "semantic-variables"
          }, this.$styleOptions)), te.load(s == null ? void 0 : s.css, ke({
            name: "global-variables"
          }, this.$styleOptions)), te.loadStyle(ke({
            name: "global-style"
          }, this.$styleOptions), d), $e.setLoadedStyleName("common");
        }
        if (!$e.isStyleNameLoaded((e = this.$style) === null || e === void 0 ? void 0 : e.name) && (n = this.$style) !== null && n !== void 0 && n.name) {
          var c, u, f, p, h = ((c = this.$style) === null || c === void 0 || (u = c.getComponentTheme) === null || u === void 0 ? void 0 : u.call(c)) || {}, g = h.css, b = h.style;
          (f = this.$style) === null || f === void 0 || f.load(g, ke({
            name: "".concat(this.$style.name, "-variables")
          }, this.$styleOptions)), (p = this.$style) === null || p === void 0 || p.loadStyle(ke({
            name: "".concat(this.$style.name, "-style")
          }, this.$styleOptions), b), $e.setLoadedStyleName(this.$style.name);
        }
        if (!$e.isStyleNameLoaded("layer-order")) {
          var C, x, R = (C = this.$style) === null || C === void 0 || (x = C.getLayerOrderThemeCSS) === null || x === void 0 ? void 0 : x.call(C);
          te.load(R, ke({
            name: "layer-order",
            first: !0
          }, this.$styleOptions)), $e.setLoadedStyleName("layer-order");
        }
      }
    },
    _loadScopedThemeStyles: function(e) {
      var n, o, i, r = ((n = this.$style) === null || n === void 0 || (o = n.getPresetTheme) === null || o === void 0 ? void 0 : o.call(n, e, "[".concat(this.$attrSelector, "]"))) || {}, a = r.css, l = (i = this.$style) === null || i === void 0 ? void 0 : i.load(a, ke({
        name: "".concat(this.$attrSelector, "-").concat(this.$style.name)
      }, this.$styleOptions));
      this.scopedStyleEl = l.el;
    },
    _unloadScopedThemeStyles: function() {
      var e;
      (e = this.scopedStyleEl) === null || e === void 0 || (e = e.value) === null || e === void 0 || e.remove();
    },
    _themeChangeListener: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function() {
      };
      Vn.clearLoadedStyleNames(), rt.on("theme:change", e);
    },
    _removeThemeListeners: function() {
      rt.off("theme:change", this._loadCoreStyles), rt.off("theme:change", this._load), rt.off("theme:change", this._themeScopedListener);
    },
    _getHostInstance: function(e) {
      return e ? this.$options.hostName ? e.$.type.name === this.$options.hostName ? e : this._getHostInstance(e.$parentInstance) : e.$parentInstance : void 0;
    },
    _getPropValue: function(e) {
      var n;
      return this[e] || ((n = this._getHostInstance(this)) === null || n === void 0 ? void 0 : n[e]);
    },
    _getOptionValue: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      return hc(e, n, o);
    },
    _getPTValue: function() {
      var e, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !0, a = /./g.test(o) && !!i[o.split(".")[0]], l = this._getPropValue("ptOptions") || ((e = this.$primevueConfig) === null || e === void 0 ? void 0 : e.ptOptions) || {}, s = l.mergeSections, d = s === void 0 ? !0 : s, c = l.mergeProps, u = c === void 0 ? !1 : c, f = r ? a ? this._useGlobalPT(this._getPTClassValue, o, i) : this._useDefaultPT(this._getPTClassValue, o, i) : void 0, p = a ? void 0 : this._getPTSelf(n, this._getPTClassValue, o, ke(ke({}, i), {}, {
        global: f || {}
      })), h = this._getPTDatasets(o);
      return d || !d && p ? u ? this._mergeProps(u, f, p, h) : ke(ke(ke({}, f), p), h) : ke(ke({}, p), h);
    },
    _getPTSelf: function() {
      for (var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length, o = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
        o[i - 1] = arguments[i];
      return k(
        this._usePT.apply(this, [this._getPT(e, this.$name)].concat(o)),
        // Exp; <component :pt="{}"
        this._usePT.apply(this, [this.$_attrsPT].concat(o))
        // Exp; <component :pt:[passthrough_key]:[attribute]="{value}" or <component :pt:[passthrough_key]="() =>{value}"
      );
    },
    _getPTDatasets: function() {
      var e, n, o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", i = "data-pc-", r = o === "root" && ae((e = this.pt) === null || e === void 0 ? void 0 : e["data-pc-section"]);
      return o !== "transition" && ke(ke({}, o === "root" && ke(ke($r({}, "".concat(i, "name"), dn(r ? (n = this.pt) === null || n === void 0 ? void 0 : n["data-pc-section"] : this.$.type.name)), r && $r({}, "".concat(i, "extend"), dn(this.$.type.name))), {}, $r({}, "".concat(this.$attrSelector), ""))), {}, $r({}, "".concat(i, "section"), dn(o)));
    },
    _getPTClassValue: function() {
      var e = this._getOptionValue.apply(this, arguments);
      return St(e) || Qh(e) ? {
        class: e
      } : e;
    },
    _getPT: function(e) {
      var n = this, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", i = arguments.length > 2 ? arguments[2] : void 0, r = function(l) {
        var s, d = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, c = i ? i(l) : l, u = dn(o), f = dn(n.$name);
        return (s = d ? u !== f ? c == null ? void 0 : c[u] : void 0 : c == null ? void 0 : c[u]) !== null && s !== void 0 ? s : c;
      };
      return e != null && e.hasOwnProperty("_usept") ? {
        _usept: e._usept,
        originalValue: r(e.originalValue),
        value: r(e.value)
      } : r(e, !0);
    },
    _usePT: function(e, n, o, i) {
      var r = function(g) {
        return n(g, o, i);
      };
      if (e != null && e.hasOwnProperty("_usept")) {
        var a, l = e._usept || ((a = this.$primevueConfig) === null || a === void 0 ? void 0 : a.ptOptions) || {}, s = l.mergeSections, d = s === void 0 ? !0 : s, c = l.mergeProps, u = c === void 0 ? !1 : c, f = r(e.originalValue), p = r(e.value);
        return f === void 0 && p === void 0 ? void 0 : St(p) ? p : St(f) ? f : d || !d && p ? u ? this._mergeProps(u, f, p) : ke(ke({}, f), p) : p;
      }
      return r(e);
    },
    _useGlobalPT: function(e, n, o) {
      return this._usePT(this.globalPT, e, n, o);
    },
    _useDefaultPT: function(e, n, o) {
      return this._usePT(this.defaultPT, e, n, o);
    },
    ptm: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return this._getPTValue(this.pt, e, ke(ke({}, this.$params), n));
    },
    ptmi: function() {
      var e, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, i = k(this.$_attrsWithoutPT, this.ptm(n, o));
      return i != null && i.hasOwnProperty("id") && ((e = i.id) !== null && e !== void 0 || (i.id = this.$id)), i;
    },
    ptmo: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      return this._getPTValue(e, n, ke({
        instance: this
      }, o), !1);
    },
    cx: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      return this.isUnstyled ? void 0 : this._getOptionValue(this.$style.classes, e, ke(ke({}, this.$params), n));
    },
    sx: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      if (n) {
        var i = this._getOptionValue(this.$style.inlineStyles, e, ke(ke({}, this.$params), o)), r = this._getOptionValue(Eu.inlineStyles, e, ke(ke({}, this.$params), o));
        return [r, i];
      }
    }
  },
  computed: {
    globalPT: function() {
      var e, n = this;
      return this._getPT((e = this.$primevueConfig) === null || e === void 0 ? void 0 : e.pt, void 0, function(o) {
        return yt(o, {
          instance: n
        });
      });
    },
    defaultPT: function() {
      var e, n = this;
      return this._getPT((e = this.$primevueConfig) === null || e === void 0 ? void 0 : e.pt, void 0, function(o) {
        return n._getOptionValue(o, n.$name, ke({}, n.$params)) || yt(o, ke({}, n.$params));
      });
    },
    isUnstyled: function() {
      var e;
      return this.unstyled !== void 0 ? this.unstyled : (e = this.$primevueConfig) === null || e === void 0 ? void 0 : e.unstyled;
    },
    $id: function() {
      return this.$attrs.id || this.uid;
    },
    $inProps: function() {
      var e, n = Object.keys(((e = this.$.vnode) === null || e === void 0 ? void 0 : e.props) || {});
      return Object.fromEntries(Object.entries(this.$props).filter(function(o) {
        var i = wr(o, 1), r = i[0];
        return n == null ? void 0 : n.includes(r);
      }));
    },
    $theme: function() {
      var e;
      return (e = this.$primevueConfig) === null || e === void 0 ? void 0 : e.theme;
    },
    $style: function() {
      return ke(ke({
        classes: void 0,
        inlineStyles: void 0,
        load: function() {
        },
        loadCSS: function() {
        },
        loadStyle: function() {
        }
      }, (this._getHostInstance(this) || {}).$style), this.$options.style);
    },
    $styleOptions: function() {
      var e;
      return {
        nonce: (e = this.$primevueConfig) === null || e === void 0 || (e = e.csp) === null || e === void 0 ? void 0 : e.nonce
      };
    },
    $primevueConfig: function() {
      var e;
      return (e = this.$primevue) === null || e === void 0 ? void 0 : e.config;
    },
    $name: function() {
      return this.$options.hostName || this.$.type.name;
    },
    $params: function() {
      var e = this._getHostInstance(this) || this.$parent;
      return {
        instance: this,
        props: this.$props,
        state: this.$data,
        attrs: this.$attrs,
        parent: {
          instance: e,
          props: e == null ? void 0 : e.$props,
          state: e == null ? void 0 : e.$data,
          attrs: e == null ? void 0 : e.$attrs
        }
      };
    },
    $_attrsPT: function() {
      return Object.entries(this.$attrs || {}).filter(function(e) {
        var n = wr(e, 1), o = n[0];
        return o == null ? void 0 : o.startsWith("pt:");
      }).reduce(function(e, n) {
        var o = wr(n, 2), i = o[0], r = o[1], a = i.split(":"), l = uy(a), s = l.slice(1);
        return s == null || s.reduce(function(d, c, u, f) {
          return !d[c] && (d[c] = u === f.length - 1 ? r : {}), d[c];
        }, e), e;
      }, {});
    },
    $_attrsWithoutPT: function() {
      return Object.entries(this.$attrs || {}).filter(function(e) {
        var n = wr(e, 1), o = n[0];
        return !(o != null && o.startsWith("pt:"));
      }).reduce(function(e, n) {
        var o = wr(n, 2), i = o[0], r = o[1];
        return e[i] = r, e;
      }, {});
    }
  }
}, gy = `
.p-icon {
    display: inline-block;
    vertical-align: baseline;
}

.p-icon-spin {
    -webkit-animation: p-icon-spin 2s infinite linear;
    animation: p-icon-spin 2s infinite linear;
}

@-webkit-keyframes p-icon-spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}

@keyframes p-icon-spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}
`, by = te.extend({
  name: "baseicon",
  css: gy
});
function Jr(t) {
  "@babel/helpers - typeof";
  return Jr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Jr(t);
}
function Du(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Lu(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Du(Object(n), !0).forEach(function(o) {
      vy(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Du(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function vy(t, e, n) {
  return (e = yy(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function yy(t) {
  var e = ky(t, "string");
  return Jr(e) == "symbol" ? e : e + "";
}
function ky(t, e) {
  if (Jr(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Jr(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Ie = {
  name: "BaseIcon",
  extends: ne,
  props: {
    label: {
      type: String,
      default: void 0
    },
    spin: {
      type: Boolean,
      default: !1
    }
  },
  style: by,
  provide: function() {
    return {
      $pcIcon: this,
      $parentInstance: this
    };
  },
  methods: {
    pti: function() {
      var e = lt(this.label);
      return Lu(Lu({}, !this.isUnstyled && {
        class: ["p-icon", {
          "p-icon-spin": this.spin
        }]
      }), {}, {
        role: e ? void 0 : "img",
        "aria-label": e ? void 0 : this.label,
        "aria-hidden": e
      });
    }
  }
}, mc = {
  name: "SearchIcon",
  extends: Ie
};
function wy(t) {
  return Iy(t) || Sy(t) || xy(t) || Cy();
}
function Cy() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function xy(t, e) {
  if (t) {
    if (typeof t == "string") return Ds(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ds(t, e) : void 0;
  }
}
function Sy(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function Iy(t) {
  if (Array.isArray(t)) return Ds(t);
}
function Ds(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function Oy(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), wy(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M2.67602 11.0265C3.6661 11.688 4.83011 12.0411 6.02086 12.0411C6.81149 12.0411 7.59438 11.8854 8.32483 11.5828C8.87005 11.357 9.37808 11.0526 9.83317 10.6803L12.9769 13.8241C13.0323 13.8801 13.0983 13.9245 13.171 13.9548C13.2438 13.985 13.3219 14.0003 13.4007 14C13.4795 14.0003 13.5575 13.985 13.6303 13.9548C13.7031 13.9245 13.7691 13.8801 13.8244 13.8241C13.9367 13.7116 13.9998 13.5592 13.9998 13.4003C13.9998 13.2414 13.9367 13.089 13.8244 12.9765L10.6807 9.8328C11.053 9.37773 11.3573 8.86972 11.5831 8.32452C11.8857 7.59408 12.0414 6.81119 12.0414 6.02056C12.0414 4.8298 11.6883 3.66579 11.0268 2.67572C10.3652 1.68564 9.42494 0.913972 8.32483 0.45829C7.22472 0.00260857 6.01418 -0.116618 4.84631 0.115686C3.67844 0.34799 2.60568 0.921393 1.76369 1.76338C0.921698 2.60537 0.348296 3.67813 0.115991 4.84601C-0.116313 6.01388 0.00291375 7.22441 0.458595 8.32452C0.914277 9.42464 1.68595 10.3649 2.67602 11.0265ZM3.35565 2.0158C4.14456 1.48867 5.07206 1.20731 6.02086 1.20731C7.29317 1.20731 8.51338 1.71274 9.41304 2.6124C10.3127 3.51206 10.8181 4.73226 10.8181 6.00457C10.8181 6.95337 10.5368 7.88088 10.0096 8.66978C9.48251 9.45868 8.73328 10.0736 7.85669 10.4367C6.98011 10.7997 6.01554 10.8947 5.08496 10.7096C4.15439 10.5245 3.2996 10.0676 2.62869 9.39674C1.95778 8.72583 1.50089 7.87104 1.31579 6.94046C1.13068 6.00989 1.22568 5.04532 1.58878 4.16874C1.95187 3.29215 2.56675 2.54292 3.35565 2.0158Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
mc.render = Oy;
var Mo = {
  name: "SpinnerIcon",
  extends: Ie
};
function Py(t) {
  return By(t) || Ry(t) || Ty(t) || $y();
}
function $y() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Ty(t, e) {
  if (t) {
    if (typeof t == "string") return Ls(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ls(t, e) : void 0;
  }
}
function Ry(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function By(t) {
  if (Array.isArray(t)) return Ls(t);
}
function Ls(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function Ey(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), Py(e[0] || (e[0] = [v("path", {
    d: "M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Mo.render = Ey;
var My = `
    .p-iconfield {
        position: relative;
        display: block;
    }

    .p-inputicon {
        position: absolute;
        top: 50%;
        margin-top: calc(-1 * (dt('icon.size') / 2));
        color: dt('iconfield.icon.color');
        line-height: 1;
        z-index: 1;
    }

    .p-iconfield .p-inputicon:first-child {
        inset-inline-start: dt('form.field.padding.x');
    }

    .p-iconfield .p-inputicon:last-child {
        inset-inline-end: dt('form.field.padding.x');
    }

    .p-iconfield .p-inputtext:not(:first-child),
    .p-iconfield .p-inputwrapper:not(:first-child) .p-inputtext {
        padding-inline-start: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }

    .p-iconfield .p-inputtext:not(:last-child) {
        padding-inline-end: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }

    .p-iconfield:has(.p-inputfield-sm) .p-inputicon {
        font-size: dt('form.field.sm.font.size');
        width: dt('form.field.sm.font.size');
        height: dt('form.field.sm.font.size');
        margin-top: calc(-1 * (dt('form.field.sm.font.size') / 2));
    }

    .p-iconfield:has(.p-inputfield-lg) .p-inputicon {
        font-size: dt('form.field.lg.font.size');
        width: dt('form.field.lg.font.size');
        height: dt('form.field.lg.font.size');
        margin-top: calc(-1 * (dt('form.field.lg.font.size') / 2));
    }
`, Ay = {
  root: "p-iconfield"
}, Dy = te.extend({
  name: "iconfield",
  style: My,
  classes: Ay
}), Ly = {
  name: "BaseIconField",
  extends: ne,
  style: Dy,
  provide: function() {
    return {
      $pcIconField: this,
      $parentInstance: this
    };
  }
}, kl = {
  name: "IconField",
  extends: Ly,
  inheritAttrs: !1
};
function zy(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root")
  }, t.ptmi("root")), [L(t.$slots, "default")], 16);
}
kl.render = zy;
var Fy = {
  root: "p-inputicon"
}, Ny = te.extend({
  name: "inputicon",
  classes: Fy
}), jy = {
  name: "BaseInputIcon",
  extends: ne,
  style: Ny,
  props: {
    class: null
  },
  provide: function() {
    return {
      $pcInputIcon: this,
      $parentInstance: this
    };
  }
}, wl = {
  name: "InputIcon",
  extends: jy,
  inheritAttrs: !1,
  computed: {
    containerClass: function() {
      return [this.cx("root"), this.class];
    }
  }
};
function Vy(t, e, n, o, i, r) {
  return m(), y("span", k({
    class: r.containerClass
  }, t.ptmi("root"), {
    "aria-hidden": "true"
  }), [L(t.$slots, "default")], 16);
}
wl.render = Vy;
var gc = {
  name: "BaseEditableHolder",
  extends: ne,
  emits: ["update:modelValue", "value-change"],
  props: {
    modelValue: {
      type: null,
      default: void 0
    },
    defaultValue: {
      type: null,
      default: void 0
    },
    name: {
      type: String,
      default: void 0
    },
    invalid: {
      type: Boolean,
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    formControl: {
      type: Object,
      default: void 0
    }
  },
  inject: {
    $parentInstance: {
      default: void 0
    },
    $pcForm: {
      default: void 0
    },
    $pcFormField: {
      default: void 0
    }
  },
  data: function() {
    return {
      d_value: this.defaultValue !== void 0 ? this.defaultValue : this.modelValue
    };
  },
  watch: {
    modelValue: function(e) {
      this.d_value = e;
    },
    defaultValue: function(e) {
      this.d_value = e;
    },
    $formName: {
      immediate: !0,
      handler: function(e) {
        var n, o;
        this.formField = ((n = this.$pcForm) === null || n === void 0 || (o = n.register) === null || o === void 0 ? void 0 : o.call(n, e, this.$formControl)) || {};
      }
    },
    $formControl: {
      immediate: !0,
      handler: function(e) {
        var n, o;
        this.formField = ((n = this.$pcForm) === null || n === void 0 || (o = n.register) === null || o === void 0 ? void 0 : o.call(n, this.$formName, e)) || {};
      }
    },
    $formDefaultValue: {
      immediate: !0,
      handler: function(e) {
        this.d_value !== e && (this.d_value = e);
      }
    },
    $formValue: {
      immediate: !1,
      handler: function(e) {
        var n;
        (n = this.$pcForm) !== null && n !== void 0 && n.getFieldState(this.$formName) && e !== this.d_value && (this.d_value = e);
      }
    }
  },
  formField: {},
  methods: {
    writeValue: function(e, n) {
      var o, i;
      this.controlled && (this.d_value = e, this.$emit("update:modelValue", e)), this.$emit("value-change", e), (o = (i = this.formField).onChange) === null || o === void 0 || o.call(i, {
        originalEvent: n,
        value: e
      });
    },
    // @todo move to @primeuix/utils
    findNonEmpty: function() {
      for (var e = arguments.length, n = new Array(e), o = 0; o < e; o++)
        n[o] = arguments[o];
      return n.find(ae);
    }
  },
  computed: {
    $filled: function() {
      return ae(this.d_value);
    },
    $invalid: function() {
      var e, n;
      return !this.$formNovalidate && this.findNonEmpty(this.invalid, (e = this.$pcFormField) === null || e === void 0 || (e = e.$field) === null || e === void 0 ? void 0 : e.invalid, (n = this.$pcForm) === null || n === void 0 || (n = n.getFieldState(this.$formName)) === null || n === void 0 ? void 0 : n.invalid);
    },
    $formName: function() {
      var e;
      return this.$formNovalidate ? void 0 : this.name || ((e = this.$formControl) === null || e === void 0 ? void 0 : e.name);
    },
    $formControl: function() {
      var e;
      return this.formControl || ((e = this.$pcFormField) === null || e === void 0 ? void 0 : e.formControl);
    },
    $formNovalidate: function() {
      var e;
      return (e = this.$formControl) === null || e === void 0 ? void 0 : e.novalidate;
    },
    $formDefaultValue: function() {
      var e, n;
      return this.findNonEmpty(this.d_value, (e = this.$pcFormField) === null || e === void 0 ? void 0 : e.initialValue, (n = this.$pcForm) === null || n === void 0 || (n = n.initialValues) === null || n === void 0 ? void 0 : n[this.$formName]);
    },
    $formValue: function() {
      var e, n;
      return this.findNonEmpty((e = this.$pcFormField) === null || e === void 0 || (e = e.$field) === null || e === void 0 ? void 0 : e.value, (n = this.$pcForm) === null || n === void 0 || (n = n.getFieldState(this.$formName)) === null || n === void 0 ? void 0 : n.value);
    },
    controlled: function() {
      return this.$inProps.hasOwnProperty("modelValue") || !this.$inProps.hasOwnProperty("modelValue") && !this.$inProps.hasOwnProperty("defaultValue");
    },
    // @deprecated use $filled instead
    filled: function() {
      return this.$filled;
    }
  }
}, gr = {
  name: "BaseInput",
  extends: gc,
  props: {
    size: {
      type: String,
      default: null
    },
    fluid: {
      type: Boolean,
      default: null
    },
    variant: {
      type: String,
      default: null
    }
  },
  inject: {
    $parentInstance: {
      default: void 0
    },
    $pcFluid: {
      default: void 0
    }
  },
  computed: {
    $variant: function() {
      var e;
      return (e = this.variant) !== null && e !== void 0 ? e : this.$primevue.config.inputStyle || this.$primevue.config.inputVariant;
    },
    $fluid: function() {
      var e;
      return (e = this.fluid) !== null && e !== void 0 ? e : !!this.$pcFluid;
    },
    // @deprecated use $fluid instead
    hasFluid: function() {
      return this.$fluid;
    }
  }
}, _y = `
    .p-inputtext {
        font-family: inherit;
        font-feature-settings: inherit;
        font-size: 1rem;
        color: dt('inputtext.color');
        background: dt('inputtext.background');
        padding-block: dt('inputtext.padding.y');
        padding-inline: dt('inputtext.padding.x');
        border: 1px solid dt('inputtext.border.color');
        transition:
            background dt('inputtext.transition.duration'),
            color dt('inputtext.transition.duration'),
            border-color dt('inputtext.transition.duration'),
            outline-color dt('inputtext.transition.duration'),
            box-shadow dt('inputtext.transition.duration');
        appearance: none;
        border-radius: dt('inputtext.border.radius');
        outline-color: transparent;
        box-shadow: dt('inputtext.shadow');
    }

    .p-inputtext:enabled:hover {
        border-color: dt('inputtext.hover.border.color');
    }

    .p-inputtext:enabled:focus {
        border-color: dt('inputtext.focus.border.color');
        box-shadow: dt('inputtext.focus.ring.shadow');
        outline: dt('inputtext.focus.ring.width') dt('inputtext.focus.ring.style') dt('inputtext.focus.ring.color');
        outline-offset: dt('inputtext.focus.ring.offset');
    }

    .p-inputtext.p-invalid {
        border-color: dt('inputtext.invalid.border.color');
    }

    .p-inputtext.p-variant-filled {
        background: dt('inputtext.filled.background');
    }

    .p-inputtext.p-variant-filled:enabled:hover {
        background: dt('inputtext.filled.hover.background');
    }

    .p-inputtext.p-variant-filled:enabled:focus {
        background: dt('inputtext.filled.focus.background');
    }

    .p-inputtext:disabled {
        opacity: 1;
        background: dt('inputtext.disabled.background');
        color: dt('inputtext.disabled.color');
    }

    .p-inputtext::placeholder {
        color: dt('inputtext.placeholder.color');
    }

    .p-inputtext.p-invalid::placeholder {
        color: dt('inputtext.invalid.placeholder.color');
    }

    .p-inputtext-sm {
        font-size: dt('inputtext.sm.font.size');
        padding-block: dt('inputtext.sm.padding.y');
        padding-inline: dt('inputtext.sm.padding.x');
    }

    .p-inputtext-lg {
        font-size: dt('inputtext.lg.font.size');
        padding-block: dt('inputtext.lg.padding.y');
        padding-inline: dt('inputtext.lg.padding.x');
    }

    .p-inputtext-fluid {
        width: 100%;
    }
`, Ky = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-inputtext p-component", {
      "p-filled": n.$filled,
      "p-inputtext-sm p-inputfield-sm": o.size === "small",
      "p-inputtext-lg p-inputfield-lg": o.size === "large",
      "p-invalid": n.$invalid,
      "p-variant-filled": n.$variant === "filled",
      "p-inputtext-fluid": n.$fluid
    }];
  }
}, Hy = te.extend({
  name: "inputtext",
  style: _y,
  classes: Ky
}), Wy = {
  name: "BaseInputText",
  extends: gr,
  style: Hy,
  provide: function() {
    return {
      $pcInputText: this,
      $parentInstance: this
    };
  }
};
function Yr(t) {
  "@babel/helpers - typeof";
  return Yr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Yr(t);
}
function Uy(t, e, n) {
  return (e = Gy(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function Gy(t) {
  var e = qy(t, "string");
  return Yr(e) == "symbol" ? e : e + "";
}
function qy(t, e) {
  if (Yr(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Yr(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var oa = {
  name: "InputText",
  extends: Wy,
  inheritAttrs: !1,
  methods: {
    onInput: function(e) {
      this.writeValue(e.target.value, e);
    }
  },
  computed: {
    attrs: function() {
      return k(this.ptmi("root", {
        context: {
          filled: this.$filled,
          disabled: this.disabled
        }
      }), this.formField);
    },
    dataP: function() {
      return Te(Uy({
        invalid: this.$invalid,
        fluid: this.$fluid,
        filled: this.$variant === "filled"
      }, this.size, this.size));
    }
  }
}, Jy = ["value", "name", "disabled", "aria-invalid", "data-p"];
function Yy(t, e, n, o, i, r) {
  return m(), y("input", k({
    type: "text",
    class: t.cx("root"),
    value: t.d_value,
    name: t.name,
    disabled: t.disabled,
    "aria-invalid": t.$invalid || void 0,
    "data-p": r.dataP,
    onInput: e[0] || (e[0] = function() {
      return r.onInput && r.onInput.apply(r, arguments);
    })
  }, r.attrs), null, 16, Jy);
}
oa.render = Yy;
var Xy = `
    .p-tree {
        display: block;
        background: dt('tree.background');
        color: dt('tree.color');
        padding: dt('tree.padding');
    }

    .p-tree-root-children,
    .p-tree-node-children {
        display: flex;
        list-style-type: none;
        flex-direction: column;
        margin: 0;
        gap: dt('tree.gap');
    }

    .p-tree-root-children {
        padding: 0;
        padding-block-start: dt('tree.gap');
    }

    .p-tree-node-children {
        padding: 0;
        padding-block-start: dt('tree.gap');
        padding-inline-start: dt('tree.indent');
    }

    .p-tree-node {
        padding: 0;
        outline: 0 none;
    }

    .p-tree-node-content {
        border-radius: dt('tree.node.border.radius');
        padding: dt('tree.node.padding');
        display: flex;
        align-items: center;
        outline-color: transparent;
        color: dt('tree.node.color');
        gap: dt('tree.node.gap');
        transition:
            background dt('tree.transition.duration'),
            color dt('tree.transition.duration'),
            outline-color dt('tree.transition.duration'),
            box-shadow dt('tree.transition.duration');
    }

    .p-tree-node:focus-visible > .p-tree-node-content {
        box-shadow: dt('tree.node.focus.ring.shadow');
        outline: dt('tree.node.focus.ring.width') dt('tree.node.focus.ring.style') dt('tree.node.focus.ring.color');
        outline-offset: dt('tree.node.focus.ring.offset');
    }

    .p-tree-node-content.p-tree-node-selectable:not(.p-tree-node-selected):hover {
        background: dt('tree.node.hover.background');
        color: dt('tree.node.hover.color');
    }

    .p-tree-node-content.p-tree-node-selectable:not(.p-tree-node-selected):hover .p-tree-node-icon {
        color: dt('tree.node.icon.hover.color');
    }

    .p-tree-node-content.p-tree-node-selected {
        background: dt('tree.node.selected.background');
        color: dt('tree.node.selected.color');
    }

    .p-tree-node-content.p-tree-node-selected .p-tree-node-toggle-button {
        color: inherit;
    }

    .p-tree-node-toggle-button {
        cursor: pointer;
        user-select: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
        flex-shrink: 0;
        width: dt('tree.node.toggle.button.size');
        height: dt('tree.node.toggle.button.size');
        color: dt('tree.node.toggle.button.color');
        border: 0 none;
        background: transparent;
        border-radius: dt('tree.node.toggle.button.border.radius');
        transition:
            background dt('tree.transition.duration'),
            color dt('tree.transition.duration'),
            border-color dt('tree.transition.duration'),
            outline-color dt('tree.transition.duration'),
            box-shadow dt('tree.transition.duration');
        outline-color: transparent;
        padding: 0;
    }

    .p-tree-node-toggle-button:enabled:hover {
        background: dt('tree.node.toggle.button.hover.background');
        color: dt('tree.node.toggle.button.hover.color');
    }

    .p-tree-node-content.p-tree-node-selected .p-tree-node-toggle-button:hover {
        background: dt('tree.node.toggle.button.selected.hover.background');
        color: dt('tree.node.toggle.button.selected.hover.color');
    }

    .p-tree-root {
        overflow: auto;
    }

    .p-tree-node-selectable {
        cursor: pointer;
        user-select: none;
    }

    .p-tree-node-leaf > .p-tree-node-content .p-tree-node-toggle-button {
        visibility: hidden;
    }

    .p-tree-node-icon {
        color: dt('tree.node.icon.color');
        transition: color dt('tree.transition.duration');
    }

    .p-tree-node-content.p-tree-node-selected .p-tree-node-icon {
        color: dt('tree.node.icon.selected.color');
    }

    .p-tree-filter {
        margin: dt('tree.filter.margin');
    }

    .p-tree-filter-input {
        width: 100%;
    }

    .p-tree-loading {
        position: relative;
        height: 100%;
    }

    .p-tree-loading-icon {
        font-size: dt('tree.loading.icon.size');
        width: dt('tree.loading.icon.size');
        height: dt('tree.loading.icon.size');
    }

    .p-tree .p-tree-mask {
        position: absolute;
        z-index: 1;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .p-tree-flex-scrollable {
        display: flex;
        flex: 1;
        height: 100%;
        flex-direction: column;
    }

    .p-tree-flex-scrollable .p-tree-root {
        flex: 1;
    }
`, Zy = {
  root: function(e) {
    var n = e.props;
    return ["p-tree p-component", {
      "p-tree-selectable": n.selectionMode != null,
      "p-tree-loading": n.loading,
      "p-tree-flex-scrollable": n.scrollHeight === "flex"
    }];
  },
  mask: "p-tree-mask p-overlay-mask",
  loadingIcon: "p-tree-loading-icon",
  pcFilterContainer: "p-tree-filter",
  pcFilterInput: "p-tree-filter-input",
  wrapper: "p-tree-root",
  //TODO: discuss
  rootChildren: "p-tree-root-children",
  node: function(e) {
    var n = e.instance;
    return ["p-tree-node", {
      "p-tree-node-leaf": n.leaf
    }];
  },
  nodeContent: function(e) {
    var n = e.instance;
    return ["p-tree-node-content", n.node.styleClass, {
      "p-tree-node-selectable": n.selectable,
      "p-tree-node-selected": n.checkboxMode && n.$parentInstance.highlightOnSelect ? n.checked : n.selected
    }];
  },
  nodeToggleButton: "p-tree-node-toggle-button",
  nodeToggleIcon: "p-tree-node-toggle-icon",
  nodeCheckbox: "p-tree-node-checkbox",
  nodeIcon: "p-tree-node-icon",
  nodeLabel: "p-tree-node-label",
  nodeChildren: "p-tree-node-children"
}, Qy = te.extend({
  name: "tree",
  style: Xy,
  classes: Zy
}), Tn = {
  name: "CheckIcon",
  extends: Ie
};
function e1(t) {
  return r1(t) || o1(t) || n1(t) || t1();
}
function t1() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function n1(t, e) {
  if (t) {
    if (typeof t == "string") return zs(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? zs(t, e) : void 0;
  }
}
function o1(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function r1(t) {
  if (Array.isArray(t)) return zs(t);
}
function zs(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function i1(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), e1(e[0] || (e[0] = [v("path", {
    d: "M4.86199 11.5948C4.78717 11.5923 4.71366 11.5745 4.64596 11.5426C4.57826 11.5107 4.51779 11.4652 4.46827 11.4091L0.753985 7.69483C0.683167 7.64891 0.623706 7.58751 0.580092 7.51525C0.536478 7.44299 0.509851 7.36177 0.502221 7.27771C0.49459 7.19366 0.506156 7.10897 0.536046 7.03004C0.565935 6.95111 0.613367 6.88 0.674759 6.82208C0.736151 6.76416 0.8099 6.72095 0.890436 6.69571C0.970973 6.67046 1.05619 6.66385 1.13966 6.67635C1.22313 6.68886 1.30266 6.72017 1.37226 6.76792C1.44186 6.81567 1.4997 6.8786 1.54141 6.95197L4.86199 10.2503L12.6397 2.49483C12.7444 2.42694 12.8689 2.39617 12.9932 2.40745C13.1174 2.41873 13.2343 2.47141 13.3251 2.55705C13.4159 2.64268 13.4753 2.75632 13.4938 2.87973C13.5123 3.00315 13.4888 3.1292 13.4271 3.23768L5.2557 11.4091C5.20618 11.4652 5.14571 11.5107 5.07801 11.5426C5.01031 11.5745 4.9368 11.5923 4.86199 11.5948Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Tn.render = i1;
var ra = {
  name: "ChevronDownIcon",
  extends: Ie
};
function a1(t) {
  return c1(t) || d1(t) || s1(t) || l1();
}
function l1() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function s1(t, e) {
  if (t) {
    if (typeof t == "string") return Fs(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Fs(t, e) : void 0;
  }
}
function d1(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function c1(t) {
  if (Array.isArray(t)) return Fs(t);
}
function Fs(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function u1(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), a1(e[0] || (e[0] = [v("path", {
    d: "M7.01744 10.398C6.91269 10.3985 6.8089 10.378 6.71215 10.3379C6.61541 10.2977 6.52766 10.2386 6.45405 10.1641L1.13907 4.84913C1.03306 4.69404 0.985221 4.5065 1.00399 4.31958C1.02276 4.13266 1.10693 3.95838 1.24166 3.82747C1.37639 3.69655 1.55301 3.61742 1.74039 3.60402C1.92777 3.59062 2.11386 3.64382 2.26584 3.75424L7.01744 8.47394L11.769 3.75424C11.9189 3.65709 12.097 3.61306 12.2748 3.62921C12.4527 3.64535 12.6199 3.72073 12.7498 3.84328C12.8797 3.96582 12.9647 4.12842 12.9912 4.30502C13.0177 4.48162 12.9841 4.662 12.8958 4.81724L7.58083 10.1322C7.50996 10.2125 7.42344 10.2775 7.32656 10.3232C7.22968 10.3689 7.12449 10.3944 7.01744 10.398Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
ra.render = u1;
var ia = {
  name: "ChevronRightIcon",
  extends: Ie
};
function p1(t) {
  return g1(t) || m1(t) || h1(t) || f1();
}
function f1() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function h1(t, e) {
  if (t) {
    if (typeof t == "string") return Ns(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ns(t, e) : void 0;
  }
}
function m1(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function g1(t) {
  if (Array.isArray(t)) return Ns(t);
}
function Ns(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function b1(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), p1(e[0] || (e[0] = [v("path", {
    d: "M4.38708 13C4.28408 13.0005 4.18203 12.9804 4.08691 12.9409C3.99178 12.9014 3.9055 12.8433 3.83313 12.7701C3.68634 12.6231 3.60388 12.4238 3.60388 12.2161C3.60388 12.0084 3.68634 11.8091 3.83313 11.6622L8.50507 6.99022L3.83313 2.31827C3.69467 2.16968 3.61928 1.97313 3.62287 1.77005C3.62645 1.56698 3.70872 1.37322 3.85234 1.22959C3.99596 1.08597 4.18972 1.00371 4.3928 1.00012C4.59588 0.996539 4.79242 1.07192 4.94102 1.21039L10.1669 6.43628C10.3137 6.58325 10.3962 6.78249 10.3962 6.99022C10.3962 7.19795 10.3137 7.39718 10.1669 7.54416L4.94102 12.7701C4.86865 12.8433 4.78237 12.9014 4.68724 12.9409C4.59212 12.9804 4.49007 13.0005 4.38708 13Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
ia.render = b1;
var bc = {
  name: "MinusIcon",
  extends: Ie
};
function v1(t) {
  return C1(t) || w1(t) || k1(t) || y1();
}
function y1() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function k1(t, e) {
  if (t) {
    if (typeof t == "string") return js(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? js(t, e) : void 0;
  }
}
function w1(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function C1(t) {
  if (Array.isArray(t)) return js(t);
}
function js(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function x1(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), v1(e[0] || (e[0] = [v("path", {
    d: "M13.2222 7.77778H0.777778C0.571498 7.77778 0.373667 7.69584 0.227806 7.54998C0.0819442 7.40412 0 7.20629 0 7.00001C0 6.79373 0.0819442 6.5959 0.227806 6.45003C0.373667 6.30417 0.571498 6.22223 0.777778 6.22223H13.2222C13.4285 6.22223 13.6263 6.30417 13.7722 6.45003C13.9181 6.5959 14 6.79373 14 7.00001C14 7.20629 13.9181 7.40412 13.7722 7.54998C13.6263 7.69584 13.4285 7.77778 13.2222 7.77778Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
bc.render = x1;
var S1 = `
    .p-checkbox {
        position: relative;
        display: inline-flex;
        user-select: none;
        vertical-align: bottom;
        width: dt('checkbox.width');
        height: dt('checkbox.height');
    }

    .p-checkbox-input {
        cursor: pointer;
        appearance: none;
        position: absolute;
        inset-block-start: 0;
        inset-inline-start: 0;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        opacity: 0;
        z-index: 1;
        outline: 0 none;
        border: 1px solid transparent;
        border-radius: dt('checkbox.border.radius');
    }

    .p-checkbox-box {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: dt('checkbox.border.radius');
        border: 1px solid dt('checkbox.border.color');
        background: dt('checkbox.background');
        width: dt('checkbox.width');
        height: dt('checkbox.height');
        transition:
            background dt('checkbox.transition.duration'),
            color dt('checkbox.transition.duration'),
            border-color dt('checkbox.transition.duration'),
            box-shadow dt('checkbox.transition.duration'),
            outline-color dt('checkbox.transition.duration');
        outline-color: transparent;
        box-shadow: dt('checkbox.shadow');
    }

    .p-checkbox-icon {
        transition-duration: dt('checkbox.transition.duration');
        color: dt('checkbox.icon.color');
        font-size: dt('checkbox.icon.size');
        width: dt('checkbox.icon.size');
        height: dt('checkbox.icon.size');
    }

    .p-checkbox:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {
        border-color: dt('checkbox.hover.border.color');
    }

    .p-checkbox-checked .p-checkbox-box {
        border-color: dt('checkbox.checked.border.color');
        background: dt('checkbox.checked.background');
    }

    .p-checkbox-checked .p-checkbox-icon {
        color: dt('checkbox.icon.checked.color');
    }

    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {
        background: dt('checkbox.checked.hover.background');
        border-color: dt('checkbox.checked.hover.border.color');
    }

    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-icon {
        color: dt('checkbox.icon.checked.hover.color');
    }

    .p-checkbox:not(.p-disabled):has(.p-checkbox-input:focus-visible) .p-checkbox-box {
        border-color: dt('checkbox.focus.border.color');
        box-shadow: dt('checkbox.focus.ring.shadow');
        outline: dt('checkbox.focus.ring.width') dt('checkbox.focus.ring.style') dt('checkbox.focus.ring.color');
        outline-offset: dt('checkbox.focus.ring.offset');
    }

    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:focus-visible) .p-checkbox-box {
        border-color: dt('checkbox.checked.focus.border.color');
    }

    .p-checkbox.p-invalid > .p-checkbox-box {
        border-color: dt('checkbox.invalid.border.color');
    }

    .p-checkbox.p-variant-filled .p-checkbox-box {
        background: dt('checkbox.filled.background');
    }

    .p-checkbox-checked.p-variant-filled .p-checkbox-box {
        background: dt('checkbox.checked.background');
    }

    .p-checkbox-checked.p-variant-filled:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {
        background: dt('checkbox.checked.hover.background');
    }

    .p-checkbox.p-disabled {
        opacity: 1;
    }

    .p-checkbox.p-disabled .p-checkbox-box {
        background: dt('checkbox.disabled.background');
        border-color: dt('checkbox.checked.disabled.border.color');
    }

    .p-checkbox.p-disabled .p-checkbox-box .p-checkbox-icon {
        color: dt('checkbox.icon.disabled.color');
    }

    .p-checkbox-sm,
    .p-checkbox-sm .p-checkbox-box {
        width: dt('checkbox.sm.width');
        height: dt('checkbox.sm.height');
    }

    .p-checkbox-sm .p-checkbox-icon {
        font-size: dt('checkbox.icon.sm.size');
        width: dt('checkbox.icon.sm.size');
        height: dt('checkbox.icon.sm.size');
    }

    .p-checkbox-lg,
    .p-checkbox-lg .p-checkbox-box {
        width: dt('checkbox.lg.width');
        height: dt('checkbox.lg.height');
    }

    .p-checkbox-lg .p-checkbox-icon {
        font-size: dt('checkbox.icon.lg.size');
        width: dt('checkbox.icon.lg.size');
        height: dt('checkbox.icon.lg.size');
    }
`, I1 = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-checkbox p-component", {
      "p-checkbox-checked": n.checked,
      "p-disabled": o.disabled,
      "p-invalid": n.$pcCheckboxGroup ? n.$pcCheckboxGroup.$invalid : n.$invalid,
      "p-variant-filled": n.$variant === "filled",
      "p-checkbox-sm p-inputfield-sm": o.size === "small",
      "p-checkbox-lg p-inputfield-lg": o.size === "large"
    }];
  },
  box: "p-checkbox-box",
  input: "p-checkbox-input",
  icon: "p-checkbox-icon"
}, O1 = te.extend({
  name: "checkbox",
  style: S1,
  classes: I1
}), P1 = {
  name: "BaseCheckbox",
  extends: gr,
  props: {
    value: null,
    binary: Boolean,
    indeterminate: {
      type: Boolean,
      default: !1
    },
    trueValue: {
      type: null,
      default: !0
    },
    falseValue: {
      type: null,
      default: !1
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    required: {
      type: Boolean,
      default: !1
    },
    tabindex: {
      type: Number,
      default: null
    },
    inputId: {
      type: String,
      default: null
    },
    inputClass: {
      type: [String, Object],
      default: null
    },
    inputStyle: {
      type: Object,
      default: null
    },
    ariaLabelledby: {
      type: String,
      default: null
    },
    ariaLabel: {
      type: String,
      default: null
    }
  },
  style: O1,
  provide: function() {
    return {
      $pcCheckbox: this,
      $parentInstance: this
    };
  }
};
function Xr(t) {
  "@babel/helpers - typeof";
  return Xr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Xr(t);
}
function $1(t, e, n) {
  return (e = T1(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function T1(t) {
  var e = R1(t, "string");
  return Xr(e) == "symbol" ? e : e + "";
}
function R1(t, e) {
  if (Xr(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Xr(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function B1(t) {
  return D1(t) || A1(t) || M1(t) || E1();
}
function E1() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function M1(t, e) {
  if (t) {
    if (typeof t == "string") return Vs(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Vs(t, e) : void 0;
  }
}
function A1(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function D1(t) {
  if (Array.isArray(t)) return Vs(t);
}
function Vs(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var aa = {
  name: "Checkbox",
  extends: P1,
  inheritAttrs: !1,
  emits: ["change", "focus", "blur", "update:indeterminate"],
  inject: {
    $pcCheckboxGroup: {
      default: void 0
    }
  },
  data: function() {
    return {
      d_indeterminate: this.indeterminate
    };
  },
  watch: {
    indeterminate: function(e) {
      this.d_indeterminate = e;
    }
  },
  methods: {
    getPTOptions: function(e) {
      var n = e === "root" ? this.ptmi : this.ptm;
      return n(e, {
        context: {
          checked: this.checked,
          indeterminate: this.d_indeterminate,
          disabled: this.disabled
        }
      });
    },
    onChange: function(e) {
      var n = this;
      if (!this.disabled && !this.readonly) {
        var o = this.$pcCheckboxGroup ? this.$pcCheckboxGroup.d_value : this.d_value, i;
        this.binary ? i = this.d_indeterminate ? this.trueValue : this.checked ? this.falseValue : this.trueValue : this.checked || this.d_indeterminate ? i = o.filter(function(r) {
          return !Kt(r, n.value);
        }) : i = o ? [].concat(B1(o), [this.value]) : [this.value], this.d_indeterminate && (this.d_indeterminate = !1, this.$emit("update:indeterminate", this.d_indeterminate)), this.$pcCheckboxGroup ? this.$pcCheckboxGroup.writeValue(i, e) : this.writeValue(i, e), this.$emit("change", e);
      }
    },
    onFocus: function(e) {
      this.$emit("focus", e);
    },
    onBlur: function(e) {
      var n, o;
      this.$emit("blur", e), (n = (o = this.formField).onBlur) === null || n === void 0 || n.call(o, e);
    }
  },
  computed: {
    groupName: function() {
      return this.$pcCheckboxGroup ? this.$pcCheckboxGroup.groupName : this.$formName;
    },
    checked: function() {
      var e = this.$pcCheckboxGroup ? this.$pcCheckboxGroup.d_value : this.d_value;
      return this.d_indeterminate ? !1 : this.binary ? e === this.trueValue : Bv(this.value, e);
    },
    dataP: function() {
      return Te($1({
        invalid: this.$invalid,
        checked: this.checked,
        disabled: this.disabled,
        filled: this.$variant === "filled"
      }, this.size, this.size));
    }
  },
  components: {
    CheckIcon: Tn,
    MinusIcon: bc
  }
}, L1 = ["data-p-checked", "data-p-indeterminate", "data-p-disabled", "data-p"], z1 = ["id", "value", "name", "checked", "tabindex", "disabled", "readonly", "required", "aria-labelledby", "aria-label", "aria-invalid", "aria-checked"], F1 = ["data-p"];
function N1(t, e, n, o, i, r) {
  var a = $("CheckIcon"), l = $("MinusIcon");
  return m(), y("div", k({
    class: t.cx("root")
  }, r.getPTOptions("root"), {
    "data-p-checked": r.checked,
    "data-p-indeterminate": i.d_indeterminate || void 0,
    "data-p-disabled": t.disabled,
    "data-p": r.dataP
  }), [v("input", k({
    id: t.inputId,
    type: "checkbox",
    class: [t.cx("input"), t.inputClass],
    style: t.inputStyle,
    value: t.value,
    name: r.groupName,
    checked: r.checked,
    tabindex: t.tabindex,
    disabled: t.disabled,
    readonly: t.readonly,
    required: t.required,
    "aria-labelledby": t.ariaLabelledby,
    "aria-label": t.ariaLabel,
    "aria-invalid": t.invalid || void 0,
    "aria-checked": i.d_indeterminate ? "mixed" : void 0,
    onFocus: e[0] || (e[0] = function() {
      return r.onFocus && r.onFocus.apply(r, arguments);
    }),
    onBlur: e[1] || (e[1] = function() {
      return r.onBlur && r.onBlur.apply(r, arguments);
    }),
    onChange: e[2] || (e[2] = function() {
      return r.onChange && r.onChange.apply(r, arguments);
    })
  }, r.getPTOptions("input")), null, 16, z1), v("div", k({
    class: t.cx("box")
  }, r.getPTOptions("box"), {
    "data-p": r.dataP
  }), [L(t.$slots, "icon", {
    checked: r.checked,
    indeterminate: i.d_indeterminate,
    class: Y(t.cx("icon")),
    dataP: r.dataP
  }, function() {
    return [r.checked ? (m(), O(a, k({
      key: 0,
      class: t.cx("icon")
    }, r.getPTOptions("icon"), {
      "data-p": r.dataP
    }), null, 16, ["class", "data-p"])) : i.d_indeterminate ? (m(), O(l, k({
      key: 1,
      class: t.cx("icon")
    }, r.getPTOptions("icon"), {
      "data-p": r.dataP
    }), null, 16, ["class", "data-p"])) : M("", !0)];
  })], 16, F1)], 16, L1);
}
aa.render = N1;
var Kn = ta();
function Zr(t) {
  "@babel/helpers - typeof";
  return Zr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Zr(t);
}
function zu(t, e) {
  return K1(t) || _1(t, e) || V1(t, e) || j1();
}
function j1() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function V1(t, e) {
  if (t) {
    if (typeof t == "string") return Fu(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Fu(t, e) : void 0;
  }
}
function Fu(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function _1(t, e) {
  var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (n != null) {
    var o, i, r, a, l = [], s = !0, d = !1;
    try {
      if (r = (n = n.call(t)).next, e !== 0) for (; !(s = (o = r.call(n)).done) && (l.push(o.value), l.length !== e); s = !0) ;
    } catch (c) {
      d = !0, i = c;
    } finally {
      try {
        if (!s && n.return != null && (a = n.return(), Object(a) !== a)) return;
      } finally {
        if (d) throw i;
      }
    }
    return l;
  }
}
function K1(t) {
  if (Array.isArray(t)) return t;
}
function Nu(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Se(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Nu(Object(n), !0).forEach(function(o) {
      _s(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Nu(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function _s(t, e, n) {
  return (e = H1(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function H1(t) {
  var e = W1(t, "string");
  return Zr(e) == "symbol" ? e : e + "";
}
function W1(t, e) {
  if (Zr(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Zr(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var ge = {
  _getMeta: function() {
    return [pn(arguments.length <= 0 ? void 0 : arguments[0]) || arguments.length <= 0 ? void 0 : arguments[0], yt(pn(arguments.length <= 0 ? void 0 : arguments[0]) ? arguments.length <= 0 ? void 0 : arguments[0] : arguments.length <= 1 ? void 0 : arguments[1])];
  },
  _getConfig: function(e, n) {
    var o, i, r;
    return (o = (e == null || (i = e.instance) === null || i === void 0 ? void 0 : i.$primevue) || (n == null || (r = n.ctx) === null || r === void 0 || (r = r.appContext) === null || r === void 0 || (r = r.config) === null || r === void 0 || (r = r.globalProperties) === null || r === void 0 ? void 0 : r.$primevue)) === null || o === void 0 ? void 0 : o.config;
  },
  _getOptionValue: hc,
  _getPTValue: function() {
    var e, n, o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "", a = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, l = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0, s = function() {
      var x = ge._getOptionValue.apply(ge, arguments);
      return St(x) || Qh(x) ? {
        class: x
      } : x;
    }, d = ((e = o.binding) === null || e === void 0 || (e = e.value) === null || e === void 0 ? void 0 : e.ptOptions) || ((n = o.$primevueConfig) === null || n === void 0 ? void 0 : n.ptOptions) || {}, c = d.mergeSections, u = c === void 0 ? !0 : c, f = d.mergeProps, p = f === void 0 ? !1 : f, h = l ? ge._useDefaultPT(o, o.defaultPT(), s, r, a) : void 0, g = ge._usePT(o, ge._getPT(i, o.$name), s, r, Se(Se({}, a), {}, {
      global: h || {}
    })), b = ge._getPTDatasets(o, r);
    return u || !u && g ? p ? ge._mergeProps(o, p, h, g, b) : Se(Se(Se({}, h), g), b) : Se(Se({}, g), b);
  },
  _getPTDatasets: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", o = "data-pc-";
    return Se(Se({}, n === "root" && _s({}, "".concat(o, "name"), dn(e.$name))), {}, _s({}, "".concat(o, "section"), dn(n)));
  },
  _getPT: function(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", o = arguments.length > 2 ? arguments[2] : void 0, i = function(a) {
      var l, s = o ? o(a) : a, d = dn(n);
      return (l = s == null ? void 0 : s[d]) !== null && l !== void 0 ? l : s;
    };
    return e && Object.hasOwn(e, "_usept") ? {
      _usept: e._usept,
      originalValue: i(e.originalValue),
      value: i(e.value)
    } : i(e);
  },
  _usePT: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0, o = arguments.length > 2 ? arguments[2] : void 0, i = arguments.length > 3 ? arguments[3] : void 0, r = arguments.length > 4 ? arguments[4] : void 0, a = function(b) {
      return o(b, i, r);
    };
    if (n && Object.hasOwn(n, "_usept")) {
      var l, s = n._usept || ((l = e.$primevueConfig) === null || l === void 0 ? void 0 : l.ptOptions) || {}, d = s.mergeSections, c = d === void 0 ? !0 : d, u = s.mergeProps, f = u === void 0 ? !1 : u, p = a(n.originalValue), h = a(n.value);
      return p === void 0 && h === void 0 ? void 0 : St(h) ? h : St(p) ? p : c || !c && h ? f ? ge._mergeProps(e, f, p, h) : Se(Se({}, p), h) : h;
    }
    return a(n);
  },
  _useDefaultPT: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o = arguments.length > 2 ? arguments[2] : void 0, i = arguments.length > 3 ? arguments[3] : void 0, r = arguments.length > 4 ? arguments[4] : void 0;
    return ge._usePT(e, n, o, i, r);
  },
  _loadStyles: function() {
    var e, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, o = arguments.length > 1 ? arguments[1] : void 0, i = arguments.length > 2 ? arguments[2] : void 0, r = ge._getConfig(o, i), a = {
      nonce: r == null || (e = r.csp) === null || e === void 0 ? void 0 : e.nonce
    };
    ge._loadCoreStyles(n, a), ge._loadThemeStyles(n, a), ge._loadScopedThemeStyles(n, a), ge._removeThemeListeners(n), n.$loadStyles = function() {
      return ge._loadThemeStyles(n, a);
    }, ge._themeChangeListener(n.$loadStyles);
  },
  _loadCoreStyles: function() {
    var e, n, o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i = arguments.length > 1 ? arguments[1] : void 0;
    if (!Vn.isStyleNameLoaded((e = o.$style) === null || e === void 0 ? void 0 : e.name) && (n = o.$style) !== null && n !== void 0 && n.name) {
      var r;
      te.loadCSS(i), (r = o.$style) === null || r === void 0 || r.loadCSS(i), Vn.setLoadedStyleName(o.$style.name);
    }
  },
  _loadThemeStyles: function() {
    var e, n, o, i = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = arguments.length > 1 ? arguments[1] : void 0;
    if (!(i != null && i.isUnstyled() || (i == null || (e = i.theme) === null || e === void 0 ? void 0 : e.call(i)) === "none")) {
      if (!$e.isStyleNameLoaded("common")) {
        var a, l, s = ((a = i.$style) === null || a === void 0 || (l = a.getCommonTheme) === null || l === void 0 ? void 0 : l.call(a)) || {}, d = s.primitive, c = s.semantic, u = s.global, f = s.style;
        te.load(d == null ? void 0 : d.css, Se({
          name: "primitive-variables"
        }, r)), te.load(c == null ? void 0 : c.css, Se({
          name: "semantic-variables"
        }, r)), te.load(u == null ? void 0 : u.css, Se({
          name: "global-variables"
        }, r)), te.loadStyle(Se({
          name: "global-style"
        }, r), f), $e.setLoadedStyleName("common");
      }
      if (!$e.isStyleNameLoaded((n = i.$style) === null || n === void 0 ? void 0 : n.name) && (o = i.$style) !== null && o !== void 0 && o.name) {
        var p, h, g, b, C = ((p = i.$style) === null || p === void 0 || (h = p.getDirectiveTheme) === null || h === void 0 ? void 0 : h.call(p)) || {}, x = C.css, R = C.style;
        (g = i.$style) === null || g === void 0 || g.load(x, Se({
          name: "".concat(i.$style.name, "-variables")
        }, r)), (b = i.$style) === null || b === void 0 || b.loadStyle(Se({
          name: "".concat(i.$style.name, "-style")
        }, r), R), $e.setLoadedStyleName(i.$style.name);
      }
      if (!$e.isStyleNameLoaded("layer-order")) {
        var w, T, S = (w = i.$style) === null || w === void 0 || (T = w.getLayerOrderThemeCSS) === null || T === void 0 ? void 0 : T.call(w);
        te.load(S, Se({
          name: "layer-order",
          first: !0
        }, r)), $e.setLoadedStyleName("layer-order");
      }
    }
  },
  _loadScopedThemeStyles: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0, o = e.preset();
    if (o && e.$attrSelector) {
      var i, r, a, l = ((i = e.$style) === null || i === void 0 || (r = i.getPresetTheme) === null || r === void 0 ? void 0 : r.call(i, o, "[".concat(e.$attrSelector, "]"))) || {}, s = l.css, d = (a = e.$style) === null || a === void 0 ? void 0 : a.load(s, Se({
        name: "".concat(e.$attrSelector, "-").concat(e.$style.name)
      }, n));
      e.scopedStyleEl = d.el;
    }
  },
  _themeChangeListener: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function() {
    };
    Vn.clearLoadedStyleNames(), rt.on("theme:change", e);
  },
  _removeThemeListeners: function() {
    var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    rt.off("theme:change", e.$loadStyles), e.$loadStyles = void 0;
  },
  _hook: function(e, n, o, i, r, a) {
    var l, s, d = "on".concat(Av(n)), c = ge._getConfig(i, r), u = o == null ? void 0 : o.$instance, f = ge._usePT(u, ge._getPT(i == null || (l = i.value) === null || l === void 0 ? void 0 : l.pt, e), ge._getOptionValue, "hooks.".concat(d)), p = ge._useDefaultPT(u, c == null || (s = c.pt) === null || s === void 0 || (s = s.directives) === null || s === void 0 ? void 0 : s[e], ge._getOptionValue, "hooks.".concat(d)), h = {
      el: o,
      binding: i,
      vnode: r,
      prevVnode: a
    };
    f == null || f(u, h), p == null || p(u, h);
  },
  /* eslint-disable-next-line no-unused-vars */
  _mergeProps: function() {
    for (var e = arguments.length > 1 ? arguments[1] : void 0, n = arguments.length, o = new Array(n > 2 ? n - 2 : 0), i = 2; i < n; i++)
      o[i - 2] = arguments[i];
    return na(e) ? e.apply(void 0, o) : k.apply(void 0, o);
  },
  _extend: function(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, o = function(l, s, d, c, u) {
      var f, p, h, g;
      s._$instances = s._$instances || {};
      var b = ge._getConfig(d, c), C = s._$instances[e] || {}, x = lt(C) ? Se(Se({}, n), n == null ? void 0 : n.methods) : {};
      s._$instances[e] = Se(Se({}, C), {}, {
        /* new instance variables to pass in directive methods */
        $name: e,
        $host: s,
        $binding: d,
        $modifiers: d == null ? void 0 : d.modifiers,
        $value: d == null ? void 0 : d.value,
        $el: C.$el || s || void 0,
        $style: Se({
          classes: void 0,
          inlineStyles: void 0,
          load: function() {
          },
          loadCSS: function() {
          },
          loadStyle: function() {
          }
        }, n == null ? void 0 : n.style),
        $primevueConfig: b,
        $attrSelector: (f = s.$pd) === null || f === void 0 || (f = f[e]) === null || f === void 0 ? void 0 : f.attrSelector,
        /* computed instance variables */
        defaultPT: function() {
          return ge._getPT(b == null ? void 0 : b.pt, void 0, function(w) {
            var T;
            return w == null || (T = w.directives) === null || T === void 0 ? void 0 : T[e];
          });
        },
        isUnstyled: function() {
          var w, T;
          return ((w = s._$instances[e]) === null || w === void 0 || (w = w.$binding) === null || w === void 0 || (w = w.value) === null || w === void 0 ? void 0 : w.unstyled) !== void 0 ? (T = s._$instances[e]) === null || T === void 0 || (T = T.$binding) === null || T === void 0 || (T = T.value) === null || T === void 0 ? void 0 : T.unstyled : b == null ? void 0 : b.unstyled;
        },
        theme: function() {
          var w;
          return (w = s._$instances[e]) === null || w === void 0 || (w = w.$primevueConfig) === null || w === void 0 ? void 0 : w.theme;
        },
        preset: function() {
          var w;
          return (w = s._$instances[e]) === null || w === void 0 || (w = w.$binding) === null || w === void 0 || (w = w.value) === null || w === void 0 ? void 0 : w.dt;
        },
        /* instance's methods */
        ptm: function() {
          var w, T = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", S = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          return ge._getPTValue(s._$instances[e], (w = s._$instances[e]) === null || w === void 0 || (w = w.$binding) === null || w === void 0 || (w = w.value) === null || w === void 0 ? void 0 : w.pt, T, Se({}, S));
        },
        ptmo: function() {
          var w = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, T = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", S = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return ge._getPTValue(s._$instances[e], w, T, S, !1);
        },
        cx: function() {
          var w, T, S = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", I = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
          return (w = s._$instances[e]) !== null && w !== void 0 && w.isUnstyled() ? void 0 : ge._getOptionValue((T = s._$instances[e]) === null || T === void 0 || (T = T.$style) === null || T === void 0 ? void 0 : T.classes, S, Se({}, I));
        },
        sx: function() {
          var w, T = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", S = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, I = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
          return S ? ge._getOptionValue((w = s._$instances[e]) === null || w === void 0 || (w = w.$style) === null || w === void 0 ? void 0 : w.inlineStyles, T, Se({}, I)) : void 0;
        }
      }, x), s.$instance = s._$instances[e], (p = (h = s.$instance)[l]) === null || p === void 0 || p.call(h, s, d, c, u), s["$".concat(e)] = s.$instance, ge._hook(e, l, s, d, c, u), s.$pd || (s.$pd = {}), s.$pd[e] = Se(Se({}, (g = s.$pd) === null || g === void 0 ? void 0 : g[e]), {}, {
        name: e,
        instance: s._$instances[e]
      });
    }, i = function(l) {
      var s, d, c, u = l._$instances[e], f = u == null ? void 0 : u.watch, p = function(b) {
        var C, x = b.newValue, R = b.oldValue;
        return f == null || (C = f.config) === null || C === void 0 ? void 0 : C.call(u, x, R);
      }, h = function(b) {
        var C, x = b.newValue, R = b.oldValue;
        return f == null || (C = f["config.ripple"]) === null || C === void 0 ? void 0 : C.call(u, x, R);
      };
      u.$watchersCallback = {
        config: p,
        "config.ripple": h
      }, f == null || (s = f.config) === null || s === void 0 || s.call(u, u == null ? void 0 : u.$primevueConfig), Kn.on("config:change", p), f == null || (d = f["config.ripple"]) === null || d === void 0 || d.call(u, u == null || (c = u.$primevueConfig) === null || c === void 0 ? void 0 : c.ripple), Kn.on("config:ripple:change", h);
    }, r = function(l) {
      var s = l._$instances[e].$watchersCallback;
      s && (Kn.off("config:change", s.config), Kn.off("config:ripple:change", s["config.ripple"]), l._$instances[e].$watchersCallback = void 0);
    };
    return {
      created: function(l, s, d, c) {
        l.$pd || (l.$pd = {}), l.$pd[e] = {
          name: e,
          attrSelector: Dv("pd")
        }, o("created", l, s, d, c);
      },
      beforeMount: function(l, s, d, c) {
        var u;
        ge._loadStyles((u = l.$pd[e]) === null || u === void 0 ? void 0 : u.instance, s, d), o("beforeMount", l, s, d, c), i(l);
      },
      mounted: function(l, s, d, c) {
        var u;
        ge._loadStyles((u = l.$pd[e]) === null || u === void 0 ? void 0 : u.instance, s, d), o("mounted", l, s, d, c);
      },
      beforeUpdate: function(l, s, d, c) {
        o("beforeUpdate", l, s, d, c);
      },
      updated: function(l, s, d, c) {
        var u;
        ge._loadStyles((u = l.$pd[e]) === null || u === void 0 ? void 0 : u.instance, s, d), o("updated", l, s, d, c);
      },
      beforeUnmount: function(l, s, d, c) {
        var u;
        r(l), ge._removeThemeListeners((u = l.$pd[e]) === null || u === void 0 ? void 0 : u.instance), o("beforeUnmount", l, s, d, c);
      },
      unmounted: function(l, s, d, c) {
        var u;
        (u = l.$pd[e]) === null || u === void 0 || (u = u.instance) === null || u === void 0 || (u = u.scopedStyleEl) === null || u === void 0 || (u = u.value) === null || u === void 0 || u.remove(), o("unmounted", l, s, d, c);
      }
    };
  },
  extend: function() {
    var e = ge._getMeta.apply(ge, arguments), n = zu(e, 2), o = n[0], i = n[1];
    return Se({
      extend: function() {
        var a = ge._getMeta.apply(ge, arguments), l = zu(a, 2), s = l[0], d = l[1];
        return ge.extend(s, Se(Se(Se({}, i), i == null ? void 0 : i.methods), d));
      }
    }, ge._extend(o, i));
  }
}, U1 = `
    .p-ink {
        display: block;
        position: absolute;
        background: dt('ripple.background');
        border-radius: 100%;
        transform: scale(0);
        pointer-events: none;
    }

    .p-ink-active {
        animation: ripple 0.4s linear;
    }

    @keyframes ripple {
        100% {
            opacity: 0;
            transform: scale(2.5);
        }
    }
`, G1 = {
  root: "p-ink"
}, q1 = te.extend({
  name: "ripple-directive",
  style: U1,
  classes: G1
}), J1 = ge.extend({
  style: q1
});
function Qr(t) {
  "@babel/helpers - typeof";
  return Qr = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Qr(t);
}
function Y1(t) {
  return ek(t) || Q1(t) || Z1(t) || X1();
}
function X1() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Z1(t, e) {
  if (t) {
    if (typeof t == "string") return Ks(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ks(t, e) : void 0;
  }
}
function Q1(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function ek(t) {
  if (Array.isArray(t)) return Ks(t);
}
function Ks(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function ju(t, e, n) {
  return (e = tk(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function tk(t) {
  var e = nk(t, "string");
  return Qr(e) == "symbol" ? e : e + "";
}
function nk(t, e) {
  if (Qr(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Qr(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var mt = J1.extend("ripple", {
  watch: {
    "config.ripple": function(e) {
      e ? (this.createRipple(this.$host), this.bindEvents(this.$host), this.$host.setAttribute("data-pd-ripple", !0), this.$host.style.overflow = "hidden", this.$host.style.position = "relative") : (this.remove(this.$host), this.$host.removeAttribute("data-pd-ripple"));
    }
  },
  unmounted: function(e) {
    this.remove(e);
  },
  timeout: void 0,
  methods: {
    bindEvents: function(e) {
      e.addEventListener("mousedown", this.onMouseDown.bind(this));
    },
    unbindEvents: function(e) {
      e.removeEventListener("mousedown", this.onMouseDown.bind(this));
    },
    createRipple: function(e) {
      var n = this.getInk(e);
      n || (n = Gh("span", ju(ju({
        role: "presentation",
        "aria-hidden": !0,
        "data-p-ink": !0,
        "data-p-ink-active": !1,
        class: !this.isUnstyled() && this.cx("root"),
        onAnimationEnd: this.onAnimationEnd.bind(this)
      }, this.$attrSelector, ""), "p-bind", this.ptm("root"))), e.appendChild(n), this.$el = n);
    },
    remove: function(e) {
      var n = this.getInk(e);
      n && (this.$host.style.overflow = "", this.$host.style.position = "", this.unbindEvents(e), n.removeEventListener("animationend", this.onAnimationEnd), n.remove());
    },
    onMouseDown: function(e) {
      var n = this, o = e.currentTarget, i = this.getInk(o);
      if (!(!i || getComputedStyle(i, null).display === "none")) {
        if (!this.isUnstyled() && an(i, "p-ink-active"), i.setAttribute("data-p-ink-active", "false"), !jn(i) && !sn(i)) {
          var r = Math.max(pt(o), er(o));
          i.style.height = r + "px", i.style.width = r + "px";
        }
        var a = ln(o), l = e.pageX - a.left + document.body.scrollTop - sn(i) / 2, s = e.pageY - a.top + document.body.scrollLeft - jn(i) / 2;
        i.style.top = s + "px", i.style.left = l + "px", !this.isUnstyled() && xn(i, "p-ink-active"), i.setAttribute("data-p-ink-active", "true"), this.timeout = setTimeout(function() {
          i && (!n.isUnstyled() && an(i, "p-ink-active"), i.setAttribute("data-p-ink-active", "false"));
        }, 401);
      }
    },
    onAnimationEnd: function(e) {
      this.timeout && clearTimeout(this.timeout), !this.isUnstyled() && an(e.currentTarget, "p-ink-active"), e.currentTarget.setAttribute("data-p-ink-active", "false");
    },
    getInk: function(e) {
      return e && e.children ? Y1(e.children).find(function(n) {
        return Le(n, "data-pc-name") === "ripple";
      }) : void 0;
    }
  }
}), ok = {
  name: "BaseTree",
  extends: ne,
  props: {
    value: {
      type: null,
      default: null
    },
    expandedKeys: {
      type: null,
      default: null
    },
    selectionKeys: {
      type: null,
      default: null
    },
    selectionMode: {
      type: String,
      default: null
    },
    metaKeySelection: {
      type: Boolean,
      default: !1
    },
    loading: {
      type: Boolean,
      default: !1
    },
    loadingIcon: {
      type: String,
      default: void 0
    },
    loadingMode: {
      type: String,
      default: "mask"
    },
    filter: {
      type: Boolean,
      default: !1
    },
    filterBy: {
      type: [String, Function],
      default: "label"
    },
    filterMode: {
      type: String,
      default: "lenient"
    },
    filterPlaceholder: {
      type: String,
      default: null
    },
    filterLocale: {
      type: String,
      default: void 0
    },
    highlightOnSelect: {
      type: Boolean,
      default: !1
    },
    scrollHeight: {
      type: String,
      default: null
    },
    level: {
      type: Number,
      default: 0
    },
    ariaLabelledby: {
      type: String,
      default: null
    },
    ariaLabel: {
      type: String,
      default: null
    }
  },
  style: Qy,
  provide: function() {
    return {
      $pcTree: this,
      $parentInstance: this
    };
  }
};
function ei(t) {
  "@babel/helpers - typeof";
  return ei = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ei(t);
}
function Vu(t, e) {
  var n = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = fm(t)) || e) {
      n && (t = n);
      var o = 0, i = function() {
      };
      return { s: i, n: function() {
        return o >= t.length ? { done: !0 } : { done: !1, value: t[o++] };
      }, e: function(d) {
        throw d;
      }, f: i };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var r, a = !0, l = !1;
  return { s: function() {
    n = n.call(t);
  }, n: function() {
    var d = n.next();
    return a = d.done, d;
  }, e: function(d) {
    l = !0, r = d;
  }, f: function() {
    try {
      a || n.return == null || n.return();
    } finally {
      if (l) throw r;
    }
  } };
}
function _u(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Ku(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? _u(Object(n), !0).forEach(function(o) {
      rk(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : _u(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function rk(t, e, n) {
  return (e = ik(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function ik(t) {
  var e = ak(t, "string");
  return ei(e) == "symbol" ? e : e + "";
}
function ak(t, e) {
  if (ei(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ei(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function Cr(t) {
  return dk(t) || sk(t) || fm(t) || lk();
}
function lk() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function fm(t, e) {
  if (t) {
    if (typeof t == "string") return Hs(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Hs(t, e) : void 0;
  }
}
function sk(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function dk(t) {
  if (Array.isArray(t)) return Hs(t);
}
function Hs(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var hm = {
  name: "TreeNode",
  hostName: "Tree",
  extends: ne,
  emits: ["node-toggle", "node-click", "checkbox-change"],
  props: {
    node: {
      type: null,
      default: null
    },
    expandedKeys: {
      type: null,
      default: null
    },
    loadingMode: {
      type: String,
      default: "mask"
    },
    selectionKeys: {
      type: null,
      default: null
    },
    selectionMode: {
      type: String,
      default: null
    },
    templates: {
      type: null,
      default: null
    },
    level: {
      type: Number,
      default: null
    },
    index: null
  },
  nodeTouched: !1,
  toggleClicked: !1,
  mounted: function() {
    this.setAllNodesTabIndexes();
  },
  methods: {
    toggle: function() {
      this.$emit("node-toggle", this.node), this.toggleClicked = !0;
    },
    label: function(e) {
      return typeof e.label == "function" ? e.label() : e.label;
    },
    onChildNodeToggle: function(e) {
      this.$emit("node-toggle", e);
    },
    getPTOptions: function(e) {
      return this.ptm(e, {
        context: {
          node: this.node,
          index: this.index,
          expanded: this.expanded,
          selected: this.selected,
          checked: this.checked,
          partialChecked: this.partialChecked,
          leaf: this.leaf
        }
      });
    },
    onClick: function(e) {
      if (this.toggleClicked || Le(e.target, '[data-pc-section="nodetogglebutton"]') || Le(e.target.parentElement, '[data-pc-section="nodetogglebutton"]')) {
        this.toggleClicked = !1;
        return;
      }
      this.isCheckboxSelectionMode() ? this.node.selectable != !1 && this.toggleCheckbox() : this.$emit("node-click", {
        originalEvent: e,
        nodeTouched: this.nodeTouched,
        node: this.node
      }), this.nodeTouched = !1;
    },
    onChildNodeClick: function(e) {
      this.$emit("node-click", e);
    },
    onTouchEnd: function() {
      this.nodeTouched = !0;
    },
    onKeyDown: function(e) {
      if (this.isSameNode(e))
        switch (e.code) {
          case "Tab":
            this.onTabKey(e);
            break;
          case "ArrowDown":
            this.onArrowDown(e);
            break;
          case "ArrowUp":
            this.onArrowUp(e);
            break;
          case "ArrowRight":
            this.onArrowRight(e);
            break;
          case "ArrowLeft":
            this.onArrowLeft(e);
            break;
          case "Enter":
          case "NumpadEnter":
          case "Space":
            this.onEnterKey(e);
            break;
        }
    },
    onArrowDown: function(e) {
      var n = e.target.getAttribute("data-pc-section") === "nodetogglebutton" ? e.target.closest('[role="treeitem"]') : e.target, o = n.children[1];
      if (o)
        this.focusRowChange(n, o.children[0]);
      else if (n.nextElementSibling)
        this.focusRowChange(n, n.nextElementSibling);
      else {
        var i = this.findNextSiblingOfAncestor(n);
        i && this.focusRowChange(n, i);
      }
      e.preventDefault();
    },
    onArrowUp: function(e) {
      var n = e.target;
      if (n.previousElementSibling)
        this.focusRowChange(n, n.previousElementSibling, this.findLastVisibleDescendant(n.previousElementSibling));
      else {
        var o = this.getParentNodeElement(n);
        o && this.focusRowChange(n, o);
      }
      e.preventDefault();
    },
    onArrowRight: function(e) {
      var n = this;
      this.leaf || this.expanded || (e.currentTarget.tabIndex = -1, this.$emit("node-toggle", this.node), this.$nextTick(function() {
        n.onArrowDown(e);
      }));
    },
    onArrowLeft: function(e) {
      var n = ft(e.currentTarget, '[data-pc-section="nodetogglebutton"]');
      if (this.level === 0 && !this.expanded)
        return !1;
      if (this.expanded && !this.leaf)
        return n.click(), !1;
      var o = this.findBeforeClickableNode(e.currentTarget);
      o && this.focusRowChange(e.currentTarget, o);
    },
    onEnterKey: function(e) {
      this.setTabIndexForSelectionMode(e, this.nodeTouched), this.onClick(e), e.preventDefault();
    },
    onTabKey: function() {
      this.setAllNodesTabIndexes();
    },
    setAllNodesTabIndexes: function() {
      var e = Nn(this.$refs.currentNode.closest('[data-pc-section="rootchildren"]'), '[role="treeitem"]'), n = Cr(e).some(function(i) {
        return i.getAttribute("aria-selected") === "true" || i.getAttribute("aria-checked") === "true";
      });
      if (Cr(e).forEach(function(i) {
        i.tabIndex = -1;
      }), n) {
        var o = Cr(e).filter(function(i) {
          return i.getAttribute("aria-selected") === "true" || i.getAttribute("aria-checked") === "true";
        });
        o[0].tabIndex = 0;
        return;
      }
      Cr(e)[0].tabIndex = 0;
    },
    setTabIndexForSelectionMode: function(e, n) {
      if (this.selectionMode !== null) {
        var o = Cr(Nn(this.$refs.currentNode.parentElement, '[role="treeitem"]'));
        e.currentTarget.tabIndex = n === !1 ? -1 : 0, o.every(function(i) {
          return i.tabIndex === -1;
        }) && (o[0].tabIndex = 0);
      }
    },
    focusRowChange: function(e, n, o) {
      e.tabIndex = "-1", n.tabIndex = "0", this.focusNode(o || n);
    },
    findBeforeClickableNode: function(e) {
      var n = e.closest("ul").closest("li");
      if (n) {
        var o = ft(n, "button");
        return o && o.style.visibility !== "hidden" ? n : this.findBeforeClickableNode(e.previousElementSibling);
      }
      return null;
    },
    toggleCheckbox: function() {
      var e = this.selectionKeys ? Ku({}, this.selectionKeys) : {}, n = !this.checked;
      this.propagateDown(this.node, n, e), this.$emit("checkbox-change", {
        node: this.node,
        check: n,
        selectionKeys: e
      });
    },
    propagateDown: function(e, n, o) {
      if (n && e.selectable != !1 ? o[e.key] = {
        checked: !0,
        partialChecked: !1
      } : delete o[e.key], e.children && e.children.length) {
        var i = Vu(e.children), r;
        try {
          for (i.s(); !(r = i.n()).done; ) {
            var a = r.value;
            this.propagateDown(a, n, o);
          }
        } catch (l) {
          i.e(l);
        } finally {
          i.f();
        }
      }
    },
    propagateUp: function(e) {
      var n = e.check, o = Ku({}, e.selectionKeys), i = 0, r = !1, a = Vu(this.node.children), l;
      try {
        for (a.s(); !(l = a.n()).done; ) {
          var s = l.value;
          o[s.key] && o[s.key].checked ? i++ : o[s.key] && o[s.key].partialChecked && (r = !0);
        }
      } catch (d) {
        a.e(d);
      } finally {
        a.f();
      }
      n && i === this.node.children.length ? o[this.node.key] = {
        checked: !0,
        partialChecked: !1
      } : (n || delete o[this.node.key], r || i > 0 && i !== this.node.children.length ? o[this.node.key] = {
        checked: !1,
        partialChecked: !0
      } : delete o[this.node.key]), this.$emit("checkbox-change", {
        node: e.node,
        check: e.check,
        selectionKeys: o
      });
    },
    onChildCheckboxChange: function(e) {
      this.$emit("checkbox-change", e);
    },
    findNextSiblingOfAncestor: function(e) {
      var n = this.getParentNodeElement(e);
      return n ? n.nextElementSibling ? n.nextElementSibling : this.findNextSiblingOfAncestor(n) : null;
    },
    findLastVisibleDescendant: function(e) {
      var n = e.children[1];
      if (n) {
        var o = n.children[n.children.length - 1];
        return this.findLastVisibleDescendant(o);
      } else
        return e;
    },
    getParentNodeElement: function(e) {
      var n = e.parentElement.parentElement;
      return Le(n, "role") === "treeitem" ? n : null;
    },
    focusNode: function(e) {
      e.focus();
    },
    isCheckboxSelectionMode: function() {
      return this.selectionMode === "checkbox";
    },
    isSameNode: function(e) {
      return e.currentTarget && (e.currentTarget.isSameNode(e.target) || e.currentTarget.isSameNode(e.target.closest('[role="treeitem"]')));
    }
  },
  computed: {
    hasChildren: function() {
      return this.node.children && this.node.children.length > 0;
    },
    expanded: function() {
      return this.expandedKeys && this.expandedKeys[this.node.key] === !0;
    },
    leaf: function() {
      return this.node.leaf === !1 ? !1 : !(this.node.children && this.node.children.length);
    },
    selectable: function() {
      return this.node.selectable === !1 ? !1 : this.selectionMode != null;
    },
    selected: function() {
      return this.selectionMode && this.selectionKeys ? this.selectionKeys[this.node.key] === !0 : !1;
    },
    checkboxMode: function() {
      return this.selectionMode === "checkbox" && this.node.selectable !== !1;
    },
    checked: function() {
      return this.selectionKeys ? this.selectionKeys[this.node.key] && this.selectionKeys[this.node.key].checked : !1;
    },
    partialChecked: function() {
      return this.selectionKeys ? this.selectionKeys[this.node.key] && this.selectionKeys[this.node.key].partialChecked : !1;
    },
    ariaChecked: function() {
      return this.selectionMode === "single" || this.selectionMode === "multiple" ? this.selected : void 0;
    },
    ariaSelected: function() {
      return this.checkboxMode ? this.checked : void 0;
    }
  },
  components: {
    Checkbox: aa,
    ChevronDownIcon: ra,
    ChevronRightIcon: ia,
    CheckIcon: Tn,
    MinusIcon: bc,
    SpinnerIcon: Mo
  },
  directives: {
    ripple: mt
  }
}, ck = ["aria-label", "aria-selected", "aria-expanded", "aria-setsize", "aria-posinset", "aria-level", "aria-checked", "tabindex"], uk = ["data-p-selected", "data-p-selectable"], pk = ["data-p-leaf"];
function fk(t, e, n, o, i, r) {
  var a = $("SpinnerIcon"), l = $("Checkbox"), s = $("TreeNode", !0), d = tt("ripple");
  return m(), y("li", k({
    ref: "currentNode",
    class: t.cx("node"),
    role: "treeitem",
    "aria-label": r.label(n.node),
    "aria-selected": r.ariaSelected,
    "aria-expanded": r.expanded,
    "aria-setsize": n.node.children ? n.node.children.length : 0,
    "aria-posinset": n.index + 1,
    "aria-level": n.level,
    "aria-checked": r.ariaChecked,
    tabindex: n.index === 0 ? 0 : -1,
    onKeydown: e[4] || (e[4] = function() {
      return r.onKeyDown && r.onKeyDown.apply(r, arguments);
    })
  }, r.getPTOptions("node")), [v("div", k({
    class: t.cx("nodeContent"),
    onClick: e[2] || (e[2] = function() {
      return r.onClick && r.onClick.apply(r, arguments);
    }),
    onTouchend: e[3] || (e[3] = function() {
      return r.onTouchEnd && r.onTouchEnd.apply(r, arguments);
    }),
    style: n.node.style
  }, r.getPTOptions("nodeContent"), {
    "data-p-selected": r.checkboxMode ? r.checked : r.selected,
    "data-p-selectable": r.selectable
  }), [We((m(), y("button", k({
    type: "button",
    class: t.cx("nodeToggleButton"),
    onClick: e[0] || (e[0] = function() {
      return r.toggle && r.toggle.apply(r, arguments);
    }),
    tabindex: "-1",
    "data-p-leaf": r.leaf
  }, r.getPTOptions("nodeToggleButton")), [n.node.loading && n.loadingMode === "icon" ? (m(), y(_, {
    key: 0
  }, [n.templates.nodetoggleicon || n.templates.nodetogglericon ? (m(), O(q(n.templates.nodetoggleicon || n.templates.nodetogglericon), {
    key: 0,
    node: n.node,
    expanded: r.expanded,
    class: Y(t.cx("nodeToggleIcon"))
  }, null, 8, ["node", "expanded", "class"])) : (m(), O(a, k({
    key: 1,
    spin: "",
    class: t.cx("nodeToggleIcon")
  }, r.getPTOptions("nodeToggleIcon")), null, 16, ["class"]))], 64)) : (m(), y(_, {
    key: 1
  }, [n.templates.nodetoggleicon || n.templates.togglericon ? (m(), O(q(n.templates.nodetoggleicon || n.templates.togglericon), {
    key: 0,
    node: n.node,
    expanded: r.expanded,
    class: Y(t.cx("nodeToggleIcon"))
  }, null, 8, ["node", "expanded", "class"])) : r.expanded ? (m(), O(q(n.node.expandedIcon ? "span" : "ChevronDownIcon"), k({
    key: 1,
    class: t.cx("nodeToggleIcon")
  }, r.getPTOptions("nodeToggleIcon")), null, 16, ["class"])) : (m(), O(q(n.node.collapsedIcon ? "span" : "ChevronRightIcon"), k({
    key: 2,
    class: t.cx("nodeToggleIcon")
  }, r.getPTOptions("nodeToggleIcon")), null, 16, ["class"]))], 64))], 16, pk)), [[d]]), r.checkboxMode ? (m(), O(l, {
    key: 0,
    defaultValue: r.checked,
    binary: !0,
    indeterminate: r.partialChecked,
    class: Y(t.cx("nodeCheckbox")),
    tabindex: -1,
    unstyled: t.unstyled,
    pt: r.getPTOptions("pcNodeCheckbox"),
    "data-p-partialchecked": r.partialChecked
  }, {
    icon: E(function(c) {
      return [n.templates.checkboxicon ? (m(), O(q(n.templates.checkboxicon), {
        key: 0,
        checked: c.checked,
        partialChecked: r.partialChecked,
        class: Y(c.class)
      }, null, 8, ["checked", "partialChecked", "class"])) : M("", !0)];
    }),
    _: 1
  }, 8, ["defaultValue", "indeterminate", "class", "unstyled", "pt", "data-p-partialchecked"])) : M("", !0), n.templates.nodeicon ? (m(), O(q(n.templates.nodeicon), k({
    key: 1,
    node: n.node,
    class: [t.cx("nodeIcon")]
  }, r.getPTOptions("nodeIcon")), null, 16, ["node", "class"])) : (m(), y("span", k({
    key: 2,
    class: [t.cx("nodeIcon"), n.node.icon]
  }, r.getPTOptions("nodeIcon")), null, 16)), v("span", k({
    class: t.cx("nodeLabel")
  }, r.getPTOptions("nodeLabel"), {
    onKeydown: e[1] || (e[1] = Qi(function() {
    }, ["stop"]))
  }), [n.templates[n.node.type] || n.templates.default ? (m(), O(q(n.templates[n.node.type] || n.templates.default), {
    key: 0,
    node: n.node,
    expanded: r.expanded,
    selected: r.checkboxMode ? r.checked : r.selected
  }, null, 8, ["node", "expanded", "selected"])) : (m(), y(_, {
    key: 1
  }, [ee(re(r.label(n.node)), 1)], 64))], 16)], 16, uk), r.hasChildren && r.expanded ? (m(), y("ul", k({
    key: 0,
    class: t.cx("nodeChildren"),
    role: "group"
  }, t.ptm("nodeChildren")), [(m(!0), y(_, null, fe(n.node.children, function(c, u) {
    return m(), O(s, {
      key: c.key,
      node: c,
      templates: n.templates,
      level: n.level + 1,
      index: u,
      loadingMode: n.loadingMode,
      expandedKeys: n.expandedKeys,
      onNodeToggle: r.onChildNodeToggle,
      onNodeClick: r.onChildNodeClick,
      selectionMode: n.selectionMode,
      selectionKeys: n.selectionKeys,
      onCheckboxChange: r.propagateUp,
      unstyled: t.unstyled,
      pt: t.pt
    }, null, 8, ["node", "templates", "level", "index", "loadingMode", "expandedKeys", "onNodeToggle", "onNodeClick", "selectionMode", "selectionKeys", "onCheckboxChange", "unstyled", "pt"]);
  }), 128))], 16)) : M("", !0)], 16, ck);
}
hm.render = fk;
function ti(t) {
  "@babel/helpers - typeof";
  return ti = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ti(t);
}
function Ql(t, e) {
  var n = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = mm(t)) || e) {
      n && (t = n);
      var o = 0, i = function() {
      };
      return { s: i, n: function() {
        return o >= t.length ? { done: !0 } : { done: !1, value: t[o++] };
      }, e: function(d) {
        throw d;
      }, f: i };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var r, a = !0, l = !1;
  return { s: function() {
    n = n.call(t);
  }, n: function() {
    var d = n.next();
    return a = d.done, d;
  }, e: function(d) {
    l = !0, r = d;
  }, f: function() {
    try {
      a || n.return == null || n.return();
    } finally {
      if (l) throw r;
    }
  } };
}
function hk(t) {
  return bk(t) || gk(t) || mm(t) || mk();
}
function mk() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function mm(t, e) {
  if (t) {
    if (typeof t == "string") return Ws(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ws(t, e) : void 0;
  }
}
function gk(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function bk(t) {
  if (Array.isArray(t)) return Ws(t);
}
function Ws(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function Hu(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function so(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Hu(Object(n), !0).forEach(function(o) {
      vk(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Hu(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function vk(t, e, n) {
  return (e = yk(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function yk(t) {
  var e = kk(t, "string");
  return ti(e) == "symbol" ? e : e + "";
}
function kk(t, e) {
  if (ti(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ti(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var vc = {
  name: "Tree",
  extends: ok,
  inheritAttrs: !1,
  emits: ["node-expand", "node-collapse", "update:expandedKeys", "update:selectionKeys", "node-select", "node-unselect", "filter"],
  data: function() {
    return {
      d_expandedKeys: this.expandedKeys || {},
      filterValue: null
    };
  },
  watch: {
    expandedKeys: function(e) {
      this.d_expandedKeys = e;
    }
  },
  methods: {
    onNodeToggle: function(e) {
      var n = e.key;
      this.d_expandedKeys[n] ? (delete this.d_expandedKeys[n], this.$emit("node-collapse", e)) : (this.d_expandedKeys[n] = !0, this.$emit("node-expand", e)), this.d_expandedKeys = so({}, this.d_expandedKeys), this.$emit("update:expandedKeys", this.d_expandedKeys);
    },
    onNodeClick: function(e) {
      if (this.selectionMode != null && e.node.selectable !== !1) {
        var n = e.nodeTouched ? !1 : this.metaKeySelection, o = n ? this.handleSelectionWithMetaKey(e) : this.handleSelectionWithoutMetaKey(e);
        this.$emit("update:selectionKeys", o);
      }
    },
    onCheckboxChange: function(e) {
      this.$emit("update:selectionKeys", e.selectionKeys), e.check ? this.$emit("node-select", e.node) : this.$emit("node-unselect", e.node);
    },
    handleSelectionWithMetaKey: function(e) {
      var n = e.originalEvent, o = e.node, i = n.metaKey || n.ctrlKey, r = this.isNodeSelected(o), a;
      return r && i ? (this.isSingleSelectionMode() ? a = {} : (a = so({}, this.selectionKeys), delete a[o.key]), this.$emit("node-unselect", o)) : (this.isSingleSelectionMode() ? a = {} : this.isMultipleSelectionMode() && (a = i ? this.selectionKeys ? so({}, this.selectionKeys) : {} : {}), a[o.key] = !0, this.$emit("node-select", o)), a;
    },
    handleSelectionWithoutMetaKey: function(e) {
      var n = e.node, o = this.isNodeSelected(n), i;
      return this.isSingleSelectionMode() ? o ? (i = {}, this.$emit("node-unselect", n)) : (i = {}, i[n.key] = !0, this.$emit("node-select", n)) : o ? (i = so({}, this.selectionKeys), delete i[n.key], this.$emit("node-unselect", n)) : (i = this.selectionKeys ? so({}, this.selectionKeys) : {}, i[n.key] = !0, this.$emit("node-select", n)), i;
    },
    isSingleSelectionMode: function() {
      return this.selectionMode === "single";
    },
    isMultipleSelectionMode: function() {
      return this.selectionMode === "multiple";
    },
    isNodeSelected: function(e) {
      return this.selectionMode && this.selectionKeys ? this.selectionKeys[e.key] === !0 : !1;
    },
    isChecked: function(e) {
      return this.selectionKeys ? this.selectionKeys[e.key] && this.selectionKeys[e.key].checked : !1;
    },
    isNodeLeaf: function(e) {
      return e.leaf === !1 ? !1 : !(e.children && e.children.length);
    },
    onFilterKeyup: function(e) {
      (e.code === "Enter" || e.code === "NumpadEnter") && e.preventDefault(), this.$emit("filter", {
        originalEvent: e,
        value: e.target.value
      });
    },
    findFilteredNodes: function(e, n) {
      if (e) {
        var o = !1;
        if (e.children) {
          var i = hk(e.children);
          e.children = [];
          var r = Ql(i), a;
          try {
            for (r.s(); !(a = r.n()).done; ) {
              var l = a.value, s = so({}, l);
              this.isFilterMatched(s, n) && (o = !0, e.children.push(s));
            }
          } catch (d) {
            r.e(d);
          } finally {
            r.f();
          }
        }
        if (o)
          return !0;
      }
    },
    isFilterMatched: function(e, n) {
      var o = n.searchFields, i = n.filterText, r = n.strict, a = !1, l = Ql(o), s;
      try {
        for (l.s(); !(s = l.n()).done; ) {
          var d = s.value, c = String(be(e, d)).toLocaleLowerCase(this.filterLocale);
          c.indexOf(i) > -1 && (a = !0);
        }
      } catch (u) {
        l.e(u);
      } finally {
        l.f();
      }
      return (!a || r && !this.isNodeLeaf(e)) && (a = this.findFilteredNodes(e, {
        searchFields: o,
        filterText: i,
        strict: r
      }) || a), a;
    }
  },
  computed: {
    filteredValue: function() {
      var e = [], n = na(this.filterBy) ? [this.filterBy] : this.filterBy.split(","), o = this.filterValue.trim().toLocaleLowerCase(this.filterLocale), i = this.filterMode === "strict", r = Ql(this.value), a;
      try {
        for (r.s(); !(a = r.n()).done; ) {
          var l = a.value, s = so({}, l), d = {
            searchFields: n,
            filterText: o,
            strict: i
          };
          (i && (this.findFilteredNodes(s, d) || this.isFilterMatched(s, d)) || !i && (this.isFilterMatched(s, d) || this.findFilteredNodes(s, d))) && e.push(s);
        }
      } catch (c) {
        r.e(c);
      } finally {
        r.f();
      }
      return e;
    },
    valueToRender: function() {
      return this.filterValue && this.filterValue.trim().length > 0 ? this.filteredValue : this.value;
    },
    containerDataP: function() {
      return Te({
        loading: this.loading,
        scrollable: this.scrollHeight === "flex"
      });
    },
    wrapperDataP: function() {
      return Te({
        scrollable: this.scrollHeight === "flex"
      });
    }
  },
  components: {
    TreeNode: hm,
    InputText: oa,
    InputIcon: wl,
    IconField: kl,
    SearchIcon: mc,
    SpinnerIcon: Mo
  }
};
function ni(t) {
  "@babel/helpers - typeof";
  return ni = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ni(t);
}
function Wu(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Uu(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Wu(Object(n), !0).forEach(function(o) {
      wk(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Wu(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function wk(t, e, n) {
  return (e = Ck(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function Ck(t) {
  var e = xk(t, "string");
  return ni(e) == "symbol" ? e : e + "";
}
function xk(t, e) {
  if (ni(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ni(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Sk = ["data-p"], Ik = ["data-p"], Ok = ["aria-labelledby", "aria-label"];
function Pk(t, e, n, o, i, r) {
  var a = $("SpinnerIcon"), l = $("InputText"), s = $("SearchIcon"), d = $("InputIcon"), c = $("IconField"), u = $("TreeNode");
  return m(), y("div", k({
    class: t.cx("root"),
    "data-p": r.containerDataP
  }, t.ptmi("root")), [t.loading && t.loadingMode === "mask" ? (m(), y("div", k({
    key: 0,
    class: t.cx("mask")
  }, t.ptm("mask")), [L(t.$slots, "loadingicon", {
    class: Y(t.cx("loadingIcon"))
  }, function() {
    return [t.loadingIcon ? (m(), y("i", k({
      key: 0,
      class: [t.cx("loadingIcon"), "pi-spin", t.loadingIcon]
    }, t.ptm("loadingIcon")), null, 16)) : (m(), O(a, k({
      key: 1,
      spin: "",
      class: t.cx("loadingIcon")
    }, t.ptm("loadingIcon")), null, 16, ["class"]))];
  })], 16)) : M("", !0), t.filter ? (m(), O(c, {
    key: 1,
    unstyled: t.unstyled,
    pt: Uu(Uu({}, t.ptm("pcFilter")), t.ptm("pcFilterContainer")),
    class: Y(t.cx("pcFilterContainer"))
  }, {
    default: E(function() {
      return [P(l, {
        modelValue: i.filterValue,
        "onUpdate:modelValue": e[0] || (e[0] = function(f) {
          return i.filterValue = f;
        }),
        autocomplete: "off",
        class: Y(t.cx("pcFilterInput")),
        placeholder: t.filterPlaceholder,
        unstyled: t.unstyled,
        onKeyup: r.onFilterKeyup,
        pt: t.ptm("pcFilterInput")
      }, null, 8, ["modelValue", "class", "placeholder", "unstyled", "onKeyup", "pt"]), P(d, {
        unstyled: t.unstyled,
        pt: t.ptm("pcFilterIconContainer")
      }, {
        default: E(function() {
          return [L(t.$slots, t.$slots.filtericon ? "filtericon" : "searchicon", {
            class: Y(t.cx("filterIcon"))
          }, function() {
            return [P(s, k({
              class: t.cx("filterIcon")
            }, t.ptm("filterIcon")), null, 16, ["class"])];
          })];
        }),
        _: 3
      }, 8, ["unstyled", "pt"])];
    }),
    _: 3
  }, 8, ["unstyled", "pt", "class"])) : M("", !0), v("div", k({
    class: t.cx("wrapper"),
    style: {
      maxHeight: t.scrollHeight
    },
    "data-p": r.wrapperDataP
  }, t.ptm("wrapper")), [L(t.$slots, "header", {
    value: t.value,
    expandedKeys: t.expandedKeys,
    selectionKeys: t.selectionKeys
  }), v("ul", k({
    class: t.cx("rootChildren"),
    role: "tree",
    "aria-labelledby": t.ariaLabelledby,
    "aria-label": t.ariaLabel
  }, t.ptm("rootChildren")), [(m(!0), y(_, null, fe(r.valueToRender, function(f, p) {
    return m(), O(u, {
      key: f.key,
      node: f,
      templates: t.$slots,
      level: t.level + 1,
      index: p,
      expandedKeys: i.d_expandedKeys,
      onNodeToggle: r.onNodeToggle,
      onNodeClick: r.onNodeClick,
      selectionMode: t.selectionMode,
      selectionKeys: t.selectionKeys,
      onCheckboxChange: r.onCheckboxChange,
      loadingMode: t.loadingMode,
      unstyled: t.unstyled,
      pt: t.pt
    }, null, 8, ["node", "templates", "level", "index", "expandedKeys", "onNodeToggle", "onNodeClick", "selectionMode", "selectionKeys", "onCheckboxChange", "loadingMode", "unstyled", "pt"]);
  }), 128))], 16, Ok), L(t.$slots, "footer", {
    value: t.value,
    expandedKeys: t.expandedKeys,
    selectionKeys: t.selectionKeys
  })], 16, Ik)], 16, Sk);
}
vc.render = Pk;
const $k = { class: "flex gap-2" }, Tk = { class: "text-primary text-lg" }, Rk = /* @__PURE__ */ Be({
  __name: "Tree",
  props: {
    trees: {},
    expandedKeys: {},
    variant: {}
  },
  emits: ["nodeSelect", "update:expandedKeys", "nodeClick", "toggle"],
  setup(t, { emit: e }) {
    const n = vc;
    function o(l) {
      i("update:expandedKeys", l);
    }
    const i = e;
    function r(l) {
      i("nodeSelect", l.key);
    }
    const a = z({
      handle: {
        borderRadius: "4px"
      },
      colorScheme: {
        light: {
          root: {
            Color: "{zinc.50}",
            Background: "#2b6cb0",
            NodeColor: "{zinc.50}",
            NodeToggleButtonColor: "{zinc.50}"
          }
        }
      }
    });
    return (l, s) => (m(), y("div", null, [
      (m(!0), y(_, null, fe(l.trees, (d) => (m(), y("ul", {
        key: d.key
      }, [
        v("div", $k, [
          s[0] || (s[0] = v("div", { class: "bg-primary h-[25px] w-2" }, null, -1)),
          v("p", Tk, re(d.label), 1)
        ]),
        P(He(n), {
          pt: {
            nodeChildren: {
              style: {
                paddingInlineStart: "0rem",
                paddingBlockStart: "0.5rem"
                // 若要保留垂直間距可自訂
              }
            }
          },
          value: d.items,
          selectionMode: "single",
          onNodeSelect: r,
          dt: a.value,
          expandedKeys: l.expandedKeys,
          "onUpdate:expandedKeys": o
        }, null, 8, ["value", "dt", "expandedKeys"])
      ]))), 128))
    ]));
  }
});
/*!
  * vue-router v4.5.1
  * (c) 2025 Eduardo San Martin Morote
  * @license MIT
  */
const Ko = typeof document < "u";
function gm(t) {
  return typeof t == "object" || "displayName" in t || "props" in t || "__vccOpts" in t;
}
function Bk(t) {
  return t.__esModule || t[Symbol.toStringTag] === "Module" || // support CF with dynamic imports that do not
  // add the Module string tag
  t.default && gm(t.default);
}
const Oe = Object.assign;
function es(t, e) {
  const n = {};
  for (const o in e) {
    const i = e[o];
    n[o] = en(i) ? i.map(t) : t(i);
  }
  return n;
}
const Ar = () => {
}, en = Array.isArray, bm = /#/g, Ek = /&/g, Mk = /\//g, Ak = /=/g, Dk = /\?/g, vm = /\+/g, Lk = /%5B/g, zk = /%5D/g, ym = /%5E/g, Fk = /%60/g, km = /%7B/g, Nk = /%7C/g, wm = /%7D/g, jk = /%20/g;
function yc(t) {
  return encodeURI("" + t).replace(Nk, "|").replace(Lk, "[").replace(zk, "]");
}
function Vk(t) {
  return yc(t).replace(km, "{").replace(wm, "}").replace(ym, "^");
}
function Us(t) {
  return yc(t).replace(vm, "%2B").replace(jk, "+").replace(bm, "%23").replace(Ek, "%26").replace(Fk, "`").replace(km, "{").replace(wm, "}").replace(ym, "^");
}
function _k(t) {
  return Us(t).replace(Ak, "%3D");
}
function Kk(t) {
  return yc(t).replace(bm, "%23").replace(Dk, "%3F");
}
function Hk(t) {
  return t == null ? "" : Kk(t).replace(Mk, "%2F");
}
function oi(t) {
  try {
    return decodeURIComponent("" + t);
  } catch {
  }
  return "" + t;
}
const Wk = /\/$/, Uk = (t) => t.replace(Wk, "");
function ts(t, e, n = "/") {
  let o, i = {}, r = "", a = "";
  const l = e.indexOf("#");
  let s = e.indexOf("?");
  return l < s && l >= 0 && (s = -1), s > -1 && (o = e.slice(0, s), r = e.slice(s + 1, l > -1 ? l : e.length), i = t(r)), l > -1 && (o = o || e.slice(0, l), a = e.slice(l, e.length)), o = Yk(o ?? e, n), {
    fullPath: o + (r && "?") + r + a,
    path: o,
    query: i,
    hash: oi(a)
  };
}
function Gk(t, e) {
  const n = e.query ? t(e.query) : "";
  return e.path + (n && "?") + n + (e.hash || "");
}
function Gu(t, e) {
  return !e || !t.toLowerCase().startsWith(e.toLowerCase()) ? t : t.slice(e.length) || "/";
}
function qk(t, e, n) {
  const o = e.matched.length - 1, i = n.matched.length - 1;
  return o > -1 && o === i && tr(e.matched[o], n.matched[i]) && Cm(e.params, n.params) && t(e.query) === t(n.query) && e.hash === n.hash;
}
function tr(t, e) {
  return (t.aliasOf || t) === (e.aliasOf || e);
}
function Cm(t, e) {
  if (Object.keys(t).length !== Object.keys(e).length)
    return !1;
  for (const n in t)
    if (!Jk(t[n], e[n]))
      return !1;
  return !0;
}
function Jk(t, e) {
  return en(t) ? qu(t, e) : en(e) ? qu(e, t) : t === e;
}
function qu(t, e) {
  return en(e) ? t.length === e.length && t.every((n, o) => n === e[o]) : t.length === 1 && t[0] === e;
}
function Yk(t, e) {
  if (t.startsWith("/"))
    return t;
  if (!t)
    return e;
  const n = e.split("/"), o = t.split("/"), i = o[o.length - 1];
  (i === ".." || i === ".") && o.push("");
  let r = n.length - 1, a, l;
  for (a = 0; a < o.length; a++)
    if (l = o[a], l !== ".")
      if (l === "..")
        r > 1 && r--;
      else
        break;
  return n.slice(0, r).join("/") + "/" + o.slice(a).join("/");
}
const Mn = {
  path: "/",
  // TODO: could we use a symbol in the future?
  name: void 0,
  params: {},
  query: {},
  hash: "",
  fullPath: "/",
  matched: [],
  meta: {},
  redirectedFrom: void 0
};
var ri;
(function(t) {
  t.pop = "pop", t.push = "push";
})(ri || (ri = {}));
var Dr;
(function(t) {
  t.back = "back", t.forward = "forward", t.unknown = "";
})(Dr || (Dr = {}));
function Xk(t) {
  if (!t)
    if (Ko) {
      const e = document.querySelector("base");
      t = e && e.getAttribute("href") || "/", t = t.replace(/^\w+:\/\/[^\/]+/, "");
    } else
      t = "/";
  return t[0] !== "/" && t[0] !== "#" && (t = "/" + t), Uk(t);
}
const Zk = /^[^#]+#/;
function Qk(t, e) {
  return t.replace(Zk, "#") + e;
}
function ew(t, e) {
  const n = document.documentElement.getBoundingClientRect(), o = t.getBoundingClientRect();
  return {
    behavior: e.behavior,
    left: o.left - n.left - (e.left || 0),
    top: o.top - n.top - (e.top || 0)
  };
}
const Cl = () => ({
  left: window.scrollX,
  top: window.scrollY
});
function tw(t) {
  let e;
  if ("el" in t) {
    const n = t.el, o = typeof n == "string" && n.startsWith("#"), i = typeof n == "string" ? o ? document.getElementById(n.slice(1)) : document.querySelector(n) : n;
    if (!i)
      return;
    e = ew(i, t);
  } else
    e = t;
  "scrollBehavior" in document.documentElement.style ? window.scrollTo(e) : window.scrollTo(e.left != null ? e.left : window.scrollX, e.top != null ? e.top : window.scrollY);
}
function Ju(t, e) {
  return (history.state ? history.state.position - e : -1) + t;
}
const Gs = /* @__PURE__ */ new Map();
function nw(t, e) {
  Gs.set(t, e);
}
function ow(t) {
  const e = Gs.get(t);
  return Gs.delete(t), e;
}
let rw = () => location.protocol + "//" + location.host;
function xm(t, e) {
  const { pathname: n, search: o, hash: i } = e, r = t.indexOf("#");
  if (r > -1) {
    let l = i.includes(t.slice(r)) ? t.slice(r).length : 1, s = i.slice(l);
    return s[0] !== "/" && (s = "/" + s), Gu(s, "");
  }
  return Gu(n, t) + o + i;
}
function iw(t, e, n, o) {
  let i = [], r = [], a = null;
  const l = ({ state: f }) => {
    const p = xm(t, location), h = n.value, g = e.value;
    let b = 0;
    if (f) {
      if (n.value = p, e.value = f, a && a === h) {
        a = null;
        return;
      }
      b = g ? f.position - g.position : 0;
    } else
      o(p);
    i.forEach((C) => {
      C(n.value, h, {
        delta: b,
        type: ri.pop,
        direction: b ? b > 0 ? Dr.forward : Dr.back : Dr.unknown
      });
    });
  };
  function s() {
    a = n.value;
  }
  function d(f) {
    i.push(f);
    const p = () => {
      const h = i.indexOf(f);
      h > -1 && i.splice(h, 1);
    };
    return r.push(p), p;
  }
  function c() {
    const { history: f } = window;
    f.state && f.replaceState(Oe({}, f.state, { scroll: Cl() }), "");
  }
  function u() {
    for (const f of r)
      f();
    r = [], window.removeEventListener("popstate", l), window.removeEventListener("beforeunload", c);
  }
  return window.addEventListener("popstate", l), window.addEventListener("beforeunload", c, {
    passive: !0
  }), {
    pauseListeners: s,
    listen: d,
    destroy: u
  };
}
function Yu(t, e, n, o = !1, i = !1) {
  return {
    back: t,
    current: e,
    forward: n,
    replaced: o,
    position: window.history.length,
    scroll: i ? Cl() : null
  };
}
function aw(t) {
  const { history: e, location: n } = window, o = {
    value: xm(t, n)
  }, i = { value: e.state };
  i.value || r(o.value, {
    back: null,
    current: o.value,
    forward: null,
    // the length is off by one, we need to decrease it
    position: e.length - 1,
    replaced: !0,
    // don't add a scroll as the user may have an anchor, and we want
    // scrollBehavior to be triggered without a saved position
    scroll: null
  }, !0);
  function r(s, d, c) {
    const u = t.indexOf("#"), f = u > -1 ? (n.host && document.querySelector("base") ? t : t.slice(u)) + s : rw() + t + s;
    try {
      e[c ? "replaceState" : "pushState"](d, "", f), i.value = d;
    } catch (p) {
      console.error(p), n[c ? "replace" : "assign"](f);
    }
  }
  function a(s, d) {
    const c = Oe({}, e.state, Yu(
      i.value.back,
      // keep back and forward entries but override current position
      s,
      i.value.forward,
      !0
    ), d, { position: i.value.position });
    r(s, c, !0), o.value = s;
  }
  function l(s, d) {
    const c = Oe(
      {},
      // use current history state to gracefully handle a wrong call to
      // history.replaceState
      // https://github.com/vuejs/router/issues/366
      i.value,
      e.state,
      {
        forward: s,
        scroll: Cl()
      }
    );
    r(c.current, c, !0);
    const u = Oe({}, Yu(o.value, s, null), { position: c.position + 1 }, d);
    r(s, u, !1), o.value = s;
  }
  return {
    location: o,
    state: i,
    push: l,
    replace: a
  };
}
function lw(t) {
  t = Xk(t);
  const e = aw(t), n = iw(t, e.state, e.location, e.replace);
  function o(r, a = !0) {
    a || n.pauseListeners(), history.go(r);
  }
  const i = Oe({
    // it's overridden right after
    location: "",
    base: t,
    go: o,
    createHref: Qk.bind(null, t)
  }, e, n);
  return Object.defineProperty(i, "location", {
    enumerable: !0,
    get: () => e.location.value
  }), Object.defineProperty(i, "state", {
    enumerable: !0,
    get: () => e.state.value
  }), i;
}
function sw(t) {
  return typeof t == "string" || t && typeof t == "object";
}
function Sm(t) {
  return typeof t == "string" || typeof t == "symbol";
}
const Im = Symbol("");
var Xu;
(function(t) {
  t[t.aborted = 4] = "aborted", t[t.cancelled = 8] = "cancelled", t[t.duplicated = 16] = "duplicated";
})(Xu || (Xu = {}));
function nr(t, e) {
  return Oe(new Error(), {
    type: t,
    [Im]: !0
  }, e);
}
function kn(t, e) {
  return t instanceof Error && Im in t && (e == null || !!(t.type & e));
}
const Zu = "[^/]+?", dw = {
  sensitive: !1,
  strict: !1,
  start: !0,
  end: !0
}, cw = /[.+*?^${}()[\]/\\]/g;
function uw(t, e) {
  const n = Oe({}, dw, e), o = [];
  let i = n.start ? "^" : "";
  const r = [];
  for (const d of t) {
    const c = d.length ? [] : [
      90
      /* PathScore.Root */
    ];
    n.strict && !d.length && (i += "/");
    for (let u = 0; u < d.length; u++) {
      const f = d[u];
      let p = 40 + (n.sensitive ? 0.25 : 0);
      if (f.type === 0)
        u || (i += "/"), i += f.value.replace(cw, "\\$&"), p += 40;
      else if (f.type === 1) {
        const { value: h, repeatable: g, optional: b, regexp: C } = f;
        r.push({
          name: h,
          repeatable: g,
          optional: b
        });
        const x = C || Zu;
        if (x !== Zu) {
          p += 10;
          try {
            new RegExp(`(${x})`);
          } catch (w) {
            throw new Error(`Invalid custom RegExp for param "${h}" (${x}): ` + w.message);
          }
        }
        let R = g ? `((?:${x})(?:/(?:${x}))*)` : `(${x})`;
        u || (R = // avoid an optional / if there are more segments e.g. /:p?-static
        // or /:p?-:p2
        b && d.length < 2 ? `(?:/${R})` : "/" + R), b && (R += "?"), i += R, p += 20, b && (p += -8), g && (p += -20), x === ".*" && (p += -50);
      }
      c.push(p);
    }
    o.push(c);
  }
  if (n.strict && n.end) {
    const d = o.length - 1;
    o[d][o[d].length - 1] += 0.7000000000000001;
  }
  n.strict || (i += "/?"), n.end ? i += "$" : n.strict && !i.endsWith("/") && (i += "(?:/|$)");
  const a = new RegExp(i, n.sensitive ? "" : "i");
  function l(d) {
    const c = d.match(a), u = {};
    if (!c)
      return null;
    for (let f = 1; f < c.length; f++) {
      const p = c[f] || "", h = r[f - 1];
      u[h.name] = p && h.repeatable ? p.split("/") : p;
    }
    return u;
  }
  function s(d) {
    let c = "", u = !1;
    for (const f of t) {
      (!u || !c.endsWith("/")) && (c += "/"), u = !1;
      for (const p of f)
        if (p.type === 0)
          c += p.value;
        else if (p.type === 1) {
          const { value: h, repeatable: g, optional: b } = p, C = h in d ? d[h] : "";
          if (en(C) && !g)
            throw new Error(`Provided param "${h}" is an array but it is not repeatable (* or + modifiers)`);
          const x = en(C) ? C.join("/") : C;
          if (!x)
            if (b)
              f.length < 2 && (c.endsWith("/") ? c = c.slice(0, -1) : u = !0);
            else
              throw new Error(`Missing required param "${h}"`);
          c += x;
        }
    }
    return c || "/";
  }
  return {
    re: a,
    score: o,
    keys: r,
    parse: l,
    stringify: s
  };
}
function pw(t, e) {
  let n = 0;
  for (; n < t.length && n < e.length; ) {
    const o = e[n] - t[n];
    if (o)
      return o;
    n++;
  }
  return t.length < e.length ? t.length === 1 && t[0] === 80 ? -1 : 1 : t.length > e.length ? e.length === 1 && e[0] === 80 ? 1 : -1 : 0;
}
function Om(t, e) {
  let n = 0;
  const o = t.score, i = e.score;
  for (; n < o.length && n < i.length; ) {
    const r = pw(o[n], i[n]);
    if (r)
      return r;
    n++;
  }
  if (Math.abs(i.length - o.length) === 1) {
    if (Qu(o))
      return 1;
    if (Qu(i))
      return -1;
  }
  return i.length - o.length;
}
function Qu(t) {
  const e = t[t.length - 1];
  return t.length > 0 && e[e.length - 1] < 0;
}
const fw = {
  type: 0,
  value: ""
}, hw = /[a-zA-Z0-9_]/;
function mw(t) {
  if (!t)
    return [[]];
  if (t === "/")
    return [[fw]];
  if (!t.startsWith("/"))
    throw new Error(`Invalid path "${t}"`);
  function e(p) {
    throw new Error(`ERR (${n})/"${d}": ${p}`);
  }
  let n = 0, o = n;
  const i = [];
  let r;
  function a() {
    r && i.push(r), r = [];
  }
  let l = 0, s, d = "", c = "";
  function u() {
    d && (n === 0 ? r.push({
      type: 0,
      value: d
    }) : n === 1 || n === 2 || n === 3 ? (r.length > 1 && (s === "*" || s === "+") && e(`A repeatable param (${d}) must be alone in its segment. eg: '/:ids+.`), r.push({
      type: 1,
      value: d,
      regexp: c,
      repeatable: s === "*" || s === "+",
      optional: s === "*" || s === "?"
    })) : e("Invalid state to consume buffer"), d = "");
  }
  function f() {
    d += s;
  }
  for (; l < t.length; ) {
    if (s = t[l++], s === "\\" && n !== 2) {
      o = n, n = 4;
      continue;
    }
    switch (n) {
      case 0:
        s === "/" ? (d && u(), a()) : s === ":" ? (u(), n = 1) : f();
        break;
      case 4:
        f(), n = o;
        break;
      case 1:
        s === "(" ? n = 2 : hw.test(s) ? f() : (u(), n = 0, s !== "*" && s !== "?" && s !== "+" && l--);
        break;
      case 2:
        s === ")" ? c[c.length - 1] == "\\" ? c = c.slice(0, -1) + s : n = 3 : c += s;
        break;
      case 3:
        u(), n = 0, s !== "*" && s !== "?" && s !== "+" && l--, c = "";
        break;
      default:
        e("Unknown state");
        break;
    }
  }
  return n === 2 && e(`Unfinished custom RegExp for param "${d}"`), u(), a(), i;
}
function gw(t, e, n) {
  const o = uw(mw(t.path), n), i = Oe(o, {
    record: t,
    parent: e,
    // these needs to be populated by the parent
    children: [],
    alias: []
  });
  return e && !i.record.aliasOf == !e.record.aliasOf && e.children.push(i), i;
}
function bw(t, e) {
  const n = [], o = /* @__PURE__ */ new Map();
  e = op({ strict: !1, end: !0, sensitive: !1 }, e);
  function i(u) {
    return o.get(u);
  }
  function r(u, f, p) {
    const h = !p, g = tp(u);
    g.aliasOf = p && p.record;
    const b = op(e, u), C = [g];
    if ("alias" in u) {
      const w = typeof u.alias == "string" ? [u.alias] : u.alias;
      for (const T of w)
        C.push(
          // we need to normalize again to ensure the `mods` property
          // being non enumerable
          tp(Oe({}, g, {
            // this allows us to hold a copy of the `components` option
            // so that async components cache is hold on the original record
            components: p ? p.record.components : g.components,
            path: T,
            // we might be the child of an alias
            aliasOf: p ? p.record : g
            // the aliases are always of the same kind as the original since they
            // are defined on the same record
          }))
        );
    }
    let x, R;
    for (const w of C) {
      const { path: T } = w;
      if (f && T[0] !== "/") {
        const S = f.record.path, I = S[S.length - 1] === "/" ? "" : "/";
        w.path = f.record.path + (T && I + T);
      }
      if (x = gw(w, f, b), p ? p.alias.push(x) : (R = R || x, R !== x && R.alias.push(x), h && u.name && !np(x) && a(u.name)), Pm(x) && s(x), g.children) {
        const S = g.children;
        for (let I = 0; I < S.length; I++)
          r(S[I], x, p && p.children[I]);
      }
      p = p || x;
    }
    return R ? () => {
      a(R);
    } : Ar;
  }
  function a(u) {
    if (Sm(u)) {
      const f = o.get(u);
      f && (o.delete(u), n.splice(n.indexOf(f), 1), f.children.forEach(a), f.alias.forEach(a));
    } else {
      const f = n.indexOf(u);
      f > -1 && (n.splice(f, 1), u.record.name && o.delete(u.record.name), u.children.forEach(a), u.alias.forEach(a));
    }
  }
  function l() {
    return n;
  }
  function s(u) {
    const f = kw(u, n);
    n.splice(f, 0, u), u.record.name && !np(u) && o.set(u.record.name, u);
  }
  function d(u, f) {
    let p, h = {}, g, b;
    if ("name" in u && u.name) {
      if (p = o.get(u.name), !p)
        throw nr(1, {
          location: u
        });
      b = p.record.name, h = Oe(
        // paramsFromLocation is a new object
        ep(
          f.params,
          // only keep params that exist in the resolved location
          // only keep optional params coming from a parent record
          p.keys.filter((R) => !R.optional).concat(p.parent ? p.parent.keys.filter((R) => R.optional) : []).map((R) => R.name)
        ),
        // discard any existing params in the current location that do not exist here
        // #1497 this ensures better active/exact matching
        u.params && ep(u.params, p.keys.map((R) => R.name))
      ), g = p.stringify(h);
    } else if (u.path != null)
      g = u.path, p = n.find((R) => R.re.test(g)), p && (h = p.parse(g), b = p.record.name);
    else {
      if (p = f.name ? o.get(f.name) : n.find((R) => R.re.test(f.path)), !p)
        throw nr(1, {
          location: u,
          currentLocation: f
        });
      b = p.record.name, h = Oe({}, f.params, u.params), g = p.stringify(h);
    }
    const C = [];
    let x = p;
    for (; x; )
      C.unshift(x.record), x = x.parent;
    return {
      name: b,
      path: g,
      params: h,
      matched: C,
      meta: yw(C)
    };
  }
  t.forEach((u) => r(u));
  function c() {
    n.length = 0, o.clear();
  }
  return {
    addRoute: r,
    resolve: d,
    removeRoute: a,
    clearRoutes: c,
    getRoutes: l,
    getRecordMatcher: i
  };
}
function ep(t, e) {
  const n = {};
  for (const o of e)
    o in t && (n[o] = t[o]);
  return n;
}
function tp(t) {
  const e = {
    path: t.path,
    redirect: t.redirect,
    name: t.name,
    meta: t.meta || {},
    aliasOf: t.aliasOf,
    beforeEnter: t.beforeEnter,
    props: vw(t),
    children: t.children || [],
    instances: {},
    leaveGuards: /* @__PURE__ */ new Set(),
    updateGuards: /* @__PURE__ */ new Set(),
    enterCallbacks: {},
    // must be declared afterwards
    // mods: {},
    components: "components" in t ? t.components || null : t.component && { default: t.component }
  };
  return Object.defineProperty(e, "mods", {
    value: {}
  }), e;
}
function vw(t) {
  const e = {}, n = t.props || !1;
  if ("component" in t)
    e.default = n;
  else
    for (const o in t.components)
      e[o] = typeof n == "object" ? n[o] : n;
  return e;
}
function np(t) {
  for (; t; ) {
    if (t.record.aliasOf)
      return !0;
    t = t.parent;
  }
  return !1;
}
function yw(t) {
  return t.reduce((e, n) => Oe(e, n.meta), {});
}
function op(t, e) {
  const n = {};
  for (const o in t)
    n[o] = o in e ? e[o] : t[o];
  return n;
}
function kw(t, e) {
  let n = 0, o = e.length;
  for (; n !== o; ) {
    const r = n + o >> 1;
    Om(t, e[r]) < 0 ? o = r : n = r + 1;
  }
  const i = ww(t);
  return i && (o = e.lastIndexOf(i, o - 1)), o;
}
function ww(t) {
  let e = t;
  for (; e = e.parent; )
    if (Pm(e) && Om(t, e) === 0)
      return e;
}
function Pm({ record: t }) {
  return !!(t.name || t.components && Object.keys(t.components).length || t.redirect);
}
function Cw(t) {
  const e = {};
  if (t === "" || t === "?")
    return e;
  const o = (t[0] === "?" ? t.slice(1) : t).split("&");
  for (let i = 0; i < o.length; ++i) {
    const r = o[i].replace(vm, " "), a = r.indexOf("="), l = oi(a < 0 ? r : r.slice(0, a)), s = a < 0 ? null : oi(r.slice(a + 1));
    if (l in e) {
      let d = e[l];
      en(d) || (d = e[l] = [d]), d.push(s);
    } else
      e[l] = s;
  }
  return e;
}
function rp(t) {
  let e = "";
  for (let n in t) {
    const o = t[n];
    if (n = _k(n), o == null) {
      o !== void 0 && (e += (e.length ? "&" : "") + n);
      continue;
    }
    (en(o) ? o.map((r) => r && Us(r)) : [o && Us(o)]).forEach((r) => {
      r !== void 0 && (e += (e.length ? "&" : "") + n, r != null && (e += "=" + r));
    });
  }
  return e;
}
function xw(t) {
  const e = {};
  for (const n in t) {
    const o = t[n];
    o !== void 0 && (e[n] = en(o) ? o.map((i) => i == null ? null : "" + i) : o == null ? o : "" + o);
  }
  return e;
}
const Sw = Symbol(""), ip = Symbol(""), xl = Symbol(""), $m = Symbol(""), qs = Symbol("");
function xr() {
  let t = [];
  function e(o) {
    return t.push(o), () => {
      const i = t.indexOf(o);
      i > -1 && t.splice(i, 1);
    };
  }
  function n() {
    t = [];
  }
  return {
    add: e,
    list: () => t.slice(),
    reset: n
  };
}
function Ln(t, e, n, o, i, r = (a) => a()) {
  const a = o && // name is defined if record is because of the function overload
  (o.enterCallbacks[i] = o.enterCallbacks[i] || []);
  return () => new Promise((l, s) => {
    const d = (f) => {
      f === !1 ? s(nr(4, {
        from: n,
        to: e
      })) : f instanceof Error ? s(f) : sw(f) ? s(nr(2, {
        from: e,
        to: f
      })) : (a && // since enterCallbackArray is truthy, both record and name also are
      o.enterCallbacks[i] === a && typeof f == "function" && a.push(f), l());
    }, c = r(() => t.call(o && o.instances[i], e, n, d));
    let u = Promise.resolve(c);
    t.length < 3 && (u = u.then(d)), u.catch((f) => s(f));
  });
}
function ns(t, e, n, o, i = (r) => r()) {
  const r = [];
  for (const a of t)
    for (const l in a.components) {
      let s = a.components[l];
      if (!(e !== "beforeRouteEnter" && !a.instances[l]))
        if (gm(s)) {
          const c = (s.__vccOpts || s)[e];
          c && r.push(Ln(c, n, o, a, l, i));
        } else {
          let d = s();
          r.push(() => d.then((c) => {
            if (!c)
              throw new Error(`Couldn't resolve component "${l}" at "${a.path}"`);
            const u = Bk(c) ? c.default : c;
            a.mods[l] = c, a.components[l] = u;
            const p = (u.__vccOpts || u)[e];
            return p && Ln(p, n, o, a, l, i)();
          }));
        }
    }
  return r;
}
function ap(t) {
  const e = Zn(xl), n = Zn($m), o = vt(() => {
    const s = He(t.to);
    return e.resolve(s);
  }), i = vt(() => {
    const { matched: s } = o.value, { length: d } = s, c = s[d - 1], u = n.matched;
    if (!c || !u.length)
      return -1;
    const f = u.findIndex(tr.bind(null, c));
    if (f > -1)
      return f;
    const p = lp(s[d - 2]);
    return (
      // we are dealing with nested routes
      d > 1 && // if the parent and matched route have the same path, this link is
      // referring to the empty child. Or we currently are on a different
      // child of the same parent
      lp(c) === p && // avoid comparing the child with its parent
      u[u.length - 1].path !== p ? u.findIndex(tr.bind(null, s[d - 2])) : f
    );
  }), r = vt(() => i.value > -1 && Tw(n.params, o.value.params)), a = vt(() => i.value > -1 && i.value === n.matched.length - 1 && Cm(n.params, o.value.params));
  function l(s = {}) {
    if ($w(s)) {
      const d = e[He(t.replace) ? "replace" : "push"](
        He(t.to)
        // avoid uncaught errors are they are logged anyway
      ).catch(Ar);
      return t.viewTransition && typeof document < "u" && "startViewTransition" in document && document.startViewTransition(() => d), d;
    }
    return Promise.resolve();
  }
  return {
    route: o,
    href: vt(() => o.value.href),
    isActive: r,
    isExactActive: a,
    navigate: l
  };
}
function Iw(t) {
  return t.length === 1 ? t[0] : t;
}
const Ow = /* @__PURE__ */ Be({
  name: "RouterLink",
  compatConfig: { MODE: 3 },
  props: {
    to: {
      type: [String, Object],
      required: !0
    },
    replace: Boolean,
    activeClass: String,
    // inactiveClass: String,
    exactActiveClass: String,
    custom: Boolean,
    ariaCurrentValue: {
      type: String,
      default: "page"
    },
    viewTransition: Boolean
  },
  useLink: ap,
  setup(t, { slots: e }) {
    const n = Kh(ap(t)), { options: o } = Zn(xl), i = vt(() => ({
      [sp(t.activeClass, o.linkActiveClass, "router-link-active")]: n.isActive,
      // [getLinkClass(
      //   props.inactiveClass,
      //   options.linkInactiveClass,
      //   'router-link-inactive'
      // )]: !link.isExactActive,
      [sp(t.exactActiveClass, o.linkExactActiveClass, "router-link-exact-active")]: n.isExactActive
    }));
    return () => {
      const r = e.default && Iw(e.default(n));
      return t.custom ? r : Bo("a", {
        "aria-current": n.isExactActive ? t.ariaCurrentValue : null,
        href: n.href,
        // this would override user added attrs but Vue will still add
        // the listener, so we end up triggering both
        onClick: n.navigate,
        class: i.value
      }, r);
    };
  }
}), Pw = Ow;
function $w(t) {
  if (!(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey) && !t.defaultPrevented && !(t.button !== void 0 && t.button !== 0)) {
    if (t.currentTarget && t.currentTarget.getAttribute) {
      const e = t.currentTarget.getAttribute("target");
      if (/\b_blank\b/i.test(e))
        return;
    }
    return t.preventDefault && t.preventDefault(), !0;
  }
}
function Tw(t, e) {
  for (const n in e) {
    const o = e[n], i = t[n];
    if (typeof o == "string") {
      if (o !== i)
        return !1;
    } else if (!en(i) || i.length !== o.length || o.some((r, a) => r !== i[a]))
      return !1;
  }
  return !0;
}
function lp(t) {
  return t ? t.aliasOf ? t.aliasOf.path : t.path : "";
}
const sp = (t, e, n) => t ?? e ?? n, Rw = /* @__PURE__ */ Be({
  name: "RouterView",
  // #674 we manually inherit them
  inheritAttrs: !1,
  props: {
    name: {
      type: String,
      default: "default"
    },
    route: Object
  },
  // Better compat for @vue/compat users
  // https://github.com/vuejs/router/issues/1315
  compatConfig: { MODE: 3 },
  setup(t, { attrs: e, slots: n }) {
    const o = Zn(qs), i = vt(() => t.route || o.value), r = Zn(ip, 0), a = vt(() => {
      let d = He(r);
      const { matched: c } = i.value;
      let u;
      for (; (u = c[d]) && !u.components; )
        d++;
      return d;
    }), l = vt(() => i.value.matched[a.value]);
    ql(ip, vt(() => a.value + 1)), ql(Sw, l), ql(qs, i);
    const s = z();
    return Go(() => [s.value, l.value, t.name], ([d, c, u], [f, p, h]) => {
      c && (c.instances[u] = d, p && p !== c && d && d === f && (c.leaveGuards.size || (c.leaveGuards = p.leaveGuards), c.updateGuards.size || (c.updateGuards = p.updateGuards))), d && c && // if there is no instance but to and from are the same this might be
      // the first visit
      (!p || !tr(c, p) || !f) && (c.enterCallbacks[u] || []).forEach((g) => g(d));
    }, { flush: "post" }), () => {
      const d = i.value, c = t.name, u = l.value, f = u && u.components[c];
      if (!f)
        return dp(n.default, { Component: f, route: d });
      const p = u.props[c], h = p ? p === !0 ? d.params : typeof p == "function" ? p(d) : p : null, b = Bo(f, Oe({}, h, e, {
        onVnodeUnmounted: (C) => {
          C.component.isUnmounted && (u.instances[c] = null);
        },
        ref: s
      }));
      return (
        // pass the vnode to the slot as a prop.
        // h and <component :is="..."> both accept vnodes
        dp(n.default, { Component: b, route: d }) || b
      );
    };
  }
});
function dp(t, e) {
  if (!t)
    return null;
  const n = t(e);
  return n.length === 1 ? n[0] : n;
}
const Bw = Rw;
function Ew(t) {
  const e = bw(t.routes, t), n = t.parseQuery || Cw, o = t.stringifyQuery || rp, i = t.history, r = xr(), a = xr(), l = xr(), s = hr(Mn);
  let d = Mn;
  Ko && t.scrollBehavior && "scrollRestoration" in history && (history.scrollRestoration = "manual");
  const c = es.bind(null, (D) => "" + D), u = es.bind(null, Hk), f = (
    // @ts-expect-error: intentionally avoid the type check
    es.bind(null, oi)
  );
  function p(D, G) {
    let W, Z;
    return Sm(D) ? (W = e.getRecordMatcher(D), Z = G) : Z = D, e.addRoute(Z, W);
  }
  function h(D) {
    const G = e.getRecordMatcher(D);
    G && e.removeRoute(G);
  }
  function g() {
    return e.getRoutes().map((D) => D.record);
  }
  function b(D) {
    return !!e.getRecordMatcher(D);
  }
  function C(D, G) {
    if (G = Oe({}, G || s.value), typeof D == "string") {
      const pe = ts(n, D, G.path), De = e.resolve({ path: pe.path }, G), Tt = i.createHref(pe.fullPath);
      return Oe(pe, De, {
        params: f(De.params),
        hash: oi(pe.hash),
        redirectedFrom: void 0,
        href: Tt
      });
    }
    let W;
    if (D.path != null)
      W = Oe({}, D, {
        path: ts(n, D.path, G.path).path
      });
    else {
      const pe = Oe({}, D.params);
      for (const De in pe)
        pe[De] == null && delete pe[De];
      W = Oe({}, D, {
        params: u(pe)
      }), G.params = u(G.params);
    }
    const Z = e.resolve(W, G), we = D.hash || "";
    Z.params = c(f(Z.params));
    const Me = Gk(o, Oe({}, D, {
      hash: Vk(we),
      path: Z.path
    })), me = i.createHref(Me);
    return Oe({
      fullPath: Me,
      // keep the hash encoded so fullPath is effectively path + encodedQuery +
      // hash
      hash: we,
      query: (
        // if the user is using a custom query lib like qs, we might have
        // nested objects, so we keep the query as is, meaning it can contain
        // numbers at `$route.query`, but at the point, the user will have to
        // use their own type anyway.
        // https://github.com/vuejs/router/issues/328#issuecomment-649481567
        o === rp ? xw(D.query) : D.query || {}
      )
    }, Z, {
      redirectedFrom: void 0,
      href: me
    });
  }
  function x(D) {
    return typeof D == "string" ? ts(n, D, s.value.path) : Oe({}, D);
  }
  function R(D, G) {
    if (d !== D)
      return nr(8, {
        from: G,
        to: D
      });
  }
  function w(D) {
    return I(D);
  }
  function T(D) {
    return w(Oe(x(D), { replace: !0 }));
  }
  function S(D) {
    const G = D.matched[D.matched.length - 1];
    if (G && G.redirect) {
      const { redirect: W } = G;
      let Z = typeof W == "function" ? W(D) : W;
      return typeof Z == "string" && (Z = Z.includes("?") || Z.includes("#") ? Z = x(Z) : (
        // force empty params
        { path: Z }
      ), Z.params = {}), Oe({
        query: D.query,
        hash: D.hash,
        // avoid transferring params if the redirect has a path
        params: Z.path != null ? {} : D.params
      }, Z);
    }
  }
  function I(D, G) {
    const W = d = C(D), Z = s.value, we = D.state, Me = D.force, me = D.replace === !0, pe = S(W);
    if (pe)
      return I(
        Oe(x(pe), {
          state: typeof pe == "object" ? Oe({}, we, pe.state) : we,
          force: Me,
          replace: me
        }),
        // keep original redirectedFrom if it exists
        G || W
      );
    const De = W;
    De.redirectedFrom = G;
    let Tt;
    return !Me && qk(o, Z, W) && (Tt = nr(16, { to: De, from: Z }), _e(
      Z,
      Z,
      // this is a push, the only way for it to be triggered from a
      // history.listen is with a redirect, which makes it become a push
      !0,
      // This cannot be the first navigation because the initial location
      // cannot be manually navigated to
      !1
    )), (Tt ? Promise.resolve(Tt) : K(De, Z)).catch((je) => kn(je) ? (
      // navigation redirects still mark the router as ready
      kn(
        je,
        2
        /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */
      ) ? je : Ee(je)
    ) : (
      // reject any unknown error
      Ce(je, De, Z)
    )).then((je) => {
      if (je) {
        if (kn(
          je,
          2
          /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */
        ))
          return I(
            // keep options
            Oe({
              // preserve an existing replacement but allow the redirect to override it
              replace: me
            }, x(je.to), {
              state: typeof je.to == "object" ? Oe({}, we, je.to.state) : we,
              force: Me
            }),
            // preserve the original redirectedFrom if any
            G || De
          );
      } else
        je = F(De, Z, !0, me, we);
      return j(De, Z, je), je;
    });
  }
  function B(D, G) {
    const W = R(D, G);
    return W ? Promise.reject(W) : Promise.resolve();
  }
  function H(D) {
    const G = Ke.values().next().value;
    return G && typeof G.runWithContext == "function" ? G.runWithContext(D) : D();
  }
  function K(D, G) {
    let W;
    const [Z, we, Me] = Mw(D, G);
    W = ns(Z.reverse(), "beforeRouteLeave", D, G);
    for (const pe of Z)
      pe.leaveGuards.forEach((De) => {
        W.push(Ln(De, D, G));
      });
    const me = B.bind(null, D, G);
    return W.push(me), Ge(W).then(() => {
      W = [];
      for (const pe of r.list())
        W.push(Ln(pe, D, G));
      return W.push(me), Ge(W);
    }).then(() => {
      W = ns(we, "beforeRouteUpdate", D, G);
      for (const pe of we)
        pe.updateGuards.forEach((De) => {
          W.push(Ln(De, D, G));
        });
      return W.push(me), Ge(W);
    }).then(() => {
      W = [];
      for (const pe of Me)
        if (pe.beforeEnter)
          if (en(pe.beforeEnter))
            for (const De of pe.beforeEnter)
              W.push(Ln(De, D, G));
          else
            W.push(Ln(pe.beforeEnter, D, G));
      return W.push(me), Ge(W);
    }).then(() => (D.matched.forEach((pe) => pe.enterCallbacks = {}), W = ns(Me, "beforeRouteEnter", D, G, H), W.push(me), Ge(W))).then(() => {
      W = [];
      for (const pe of a.list())
        W.push(Ln(pe, D, G));
      return W.push(me), Ge(W);
    }).catch((pe) => kn(
      pe,
      8
      /* ErrorTypes.NAVIGATION_CANCELLED */
    ) ? pe : Promise.reject(pe));
  }
  function j(D, G, W) {
    l.list().forEach((Z) => H(() => Z(D, G, W)));
  }
  function F(D, G, W, Z, we) {
    const Me = R(D, G);
    if (Me)
      return Me;
    const me = G === Mn, pe = Ko ? history.state : {};
    W && (Z || me ? i.replace(D.fullPath, Oe({
      scroll: me && pe && pe.scroll
    }, we)) : i.push(D.fullPath, we)), s.value = D, _e(D, G, W, me), Ee();
  }
  let U;
  function le() {
    U || (U = i.listen((D, G, W) => {
      if (!nt.listening)
        return;
      const Z = C(D), we = S(Z);
      if (we) {
        I(Oe(we, { replace: !0, force: !0 }), Z).catch(Ar);
        return;
      }
      d = Z;
      const Me = s.value;
      Ko && nw(Ju(Me.fullPath, W.delta), Cl()), K(Z, Me).catch((me) => kn(
        me,
        12
        /* ErrorTypes.NAVIGATION_CANCELLED */
      ) ? me : kn(
        me,
        2
        /* ErrorTypes.NAVIGATION_GUARD_REDIRECT */
      ) ? (I(
        Oe(x(me.to), {
          force: !0
        }),
        Z
        // avoid an uncaught rejection, let push call triggerError
      ).then((pe) => {
        kn(
          pe,
          20
          /* ErrorTypes.NAVIGATION_DUPLICATED */
        ) && !W.delta && W.type === ri.pop && i.go(-1, !1);
      }).catch(Ar), Promise.reject()) : (W.delta && i.go(-W.delta, !1), Ce(me, Z, Me))).then((me) => {
        me = me || F(
          // after navigation, all matched components are resolved
          Z,
          Me,
          !1
        ), me && (W.delta && // a new navigation has been triggered, so we do not want to revert, that will change the current history
        // entry while a different route is displayed
        !kn(
          me,
          8
          /* ErrorTypes.NAVIGATION_CANCELLED */
        ) ? i.go(-W.delta, !1) : W.type === ri.pop && kn(
          me,
          20
          /* ErrorTypes.NAVIGATION_DUPLICATED */
        ) && i.go(-1, !1)), j(Z, Me, me);
      }).catch(Ar);
    }));
  }
  let ie = xr(), ue = xr(), de;
  function Ce(D, G, W) {
    Ee(D);
    const Z = ue.list();
    return Z.length ? Z.forEach((we) => we(D, G, W)) : console.error(D), Promise.reject(D);
  }
  function Re() {
    return de && s.value !== Mn ? Promise.resolve() : new Promise((D, G) => {
      ie.add([D, G]);
    });
  }
  function Ee(D) {
    return de || (de = !D, le(), ie.list().forEach(([G, W]) => D ? W(D) : G()), ie.reset()), D;
  }
  function _e(D, G, W, Z) {
    const { scrollBehavior: we } = t;
    if (!Ko || !we)
      return Promise.resolve();
    const Me = !W && ow(Ju(D.fullPath, 0)) || (Z || !W) && history.state && history.state.scroll || null;
    return sc().then(() => we(D, G, Me)).then((me) => me && tw(me)).catch((me) => Ce(me, D, G));
  }
  const Ne = (D) => i.go(D);
  let ct;
  const Ke = /* @__PURE__ */ new Set(), nt = {
    currentRoute: s,
    listening: !0,
    addRoute: p,
    removeRoute: h,
    clearRoutes: e.clearRoutes,
    hasRoute: b,
    getRoutes: g,
    resolve: C,
    options: t,
    push: w,
    replace: T,
    go: Ne,
    back: () => Ne(-1),
    forward: () => Ne(1),
    beforeEach: r.add,
    beforeResolve: a.add,
    afterEach: l.add,
    onError: ue.add,
    isReady: Re,
    install(D) {
      const G = this;
      D.component("RouterLink", Pw), D.component("RouterView", Bw), D.config.globalProperties.$router = G, Object.defineProperty(D.config.globalProperties, "$route", {
        enumerable: !0,
        get: () => He(s)
      }), Ko && // used for the initial navigation client side to avoid pushing
      // multiple times when the router is used in multiple apps
      !ct && s.value === Mn && (ct = !0, w(i.location).catch((we) => {
      }));
      const W = {};
      for (const we in Mn)
        Object.defineProperty(W, we, {
          get: () => s.value[we],
          enumerable: !0
        });
      D.provide(xl, G), D.provide($m, nv(W)), D.provide(qs, s);
      const Z = D.unmount;
      Ke.add(D), D.unmount = function() {
        Ke.delete(D), Ke.size < 1 && (d = Mn, U && U(), U = null, s.value = Mn, ct = !1, de = !1), Z();
      };
    }
  };
  function Ge(D) {
    return D.reduce((G, W) => G.then(() => H(W)), Promise.resolve());
  }
  return nt;
}
function Mw(t, e) {
  const n = [], o = [], i = [], r = Math.max(e.matched.length, t.matched.length);
  for (let a = 0; a < r; a++) {
    const l = e.matched[a];
    l && (t.matched.find((d) => tr(d, l)) ? o.push(l) : n.push(l));
    const s = t.matched[a];
    s && (e.matched.find((d) => tr(d, s)) || i.push(s));
  }
  return [n, o, i];
}
function Aw() {
  return Zn(xl);
}
const Dw = { class: "card flex justify-start" }, Lw = /* @__PURE__ */ Be({
  __name: "SidebarDrawer",
  setup(t) {
    const e = z(!1), n = z(""), o = z({
      "frequencies-1": !0
    });
    function i(c) {
      o.value = c;
    }
    const r = {
      key: "frequencies",
      label: "第一棵樹",
      items: [
        {
          key: "frequencies-1",
          label: "測試用",
          children: [
            {
              key: "2-1-1",
              label: "掛號系統",
              route: "/his-primevue-app/",
              leaf: !0
            },
            {
              key: "2-1-2",
              label: "門診醫囑",
              route: "/his-primevue-app/CPOEDemo",
              leaf: !0
            },
            {
              key: "2-1-3",
              label: "門診病患清單",
              route: "/his-primevue-app/PatientList",
              leaf: !0
            },
            {
              key: "2-1-4",
              label: "Datatable",
              route: "/his-primevue-app/Datatable",
              leaf: !0
            },
            {
              key: "2-1-5",
              label: "追蹤修訂(taptip)",
              route: "/his-primevue-app/Textcheck",
              leaf: !0
            },
            {
              key: "2-1-6",
              label: "DatatableSaveCell",
              route: "/his-primevue-app/DatatableSaveCell",
              leaf: !0
            },
            {
              key: "2-1-7",
              label: "DatatableVirtualScroll",
              route: "/his-primevue-app/DatatableVirtualScroll",
              leaf: !0
            },
            {
              key: "2-1-8",
              label: "DatatableReorder",
              route: "/his-primevue-app/DatatableReorder",
              leaf: !0
            }
          ]
        }
      ]
    }, a = {
      key: "menu",
      label: "第二棵樹",
      items: [
        {
          key: "1",
          label: "危急值",
          children: [
            { key: "1-1", label: "危急值通報紀錄", route: "/datatable", leaf: !0 },
            { key: "1-2", label: "感染管制通報紀錄", route: "/datatable", leaf: !0 },
            { key: "1-3", label: "待回覆提示", route: "/datatable", leaf: !0 }
          ]
        },
        {
          key: "2",
          label: "掛號系統",
          children: [
            { key: "2-1", label: "掛號作業", route: "/datatable", leaf: !0 },
            { key: "2-2", label: "停代診聯絡作業", route: "/datatable", leaf: !0 },
            {
              key: "2-3",
              label: "維護作業",
              children: [
                { key: "2-3-1", label: "給號方式維護", route: "/datatable", leaf: !0 },
                { key: "2-3-2", label: "行事曆維護", route: "/datatable", leaf: !0 }
              ]
            }
          ]
        }
      ]
    }, l = z({
      colorScheme: {
        light: {
          root: {
            Background: "{sky.700}",
            Color: "{sky.950}"
          }
        }
      }
    }), s = Aw(), d = (c) => {
      let u = null;
      const f = (p) => {
        for (const h of p) {
          if (h.key === c) return h;
          if (h.children) {
            const g = f(h.children);
            if (g) return g;
          }
        }
        return null;
      };
      for (const p of [r, a])
        if (u = f(p.items), u) break;
      if (u) {
        if (n.value = c, u.children) {
          const p = { ...o.value };
          p[c] ? delete p[c] : p[c] = !0, i(p);
          return;
        }
        if (u.route) {
          const p = Array.isArray(u.route) ? u.route[0] : u.route;
          s.push(p), e.value = !1;
        }
      }
    };
    return (c, u) => (m(), y("div", Dw, [
      P(Rk, {
        dt: l.value,
        trees: [r, a],
        variant: "his",
        selectionKeys: n.value,
        "onUpdate:selectionKeys": u[0] || (u[0] = (f) => n.value = f),
        onNodeSelect: d,
        expandedKeys: o.value,
        "onUpdate:expandedKeys": i
      }, null, 8, ["dt", "trees", "selectionKeys", "expandedKeys"])
    ]));
  }
}), zw = { class: "flex flex-col h-screen" }, Fw = {
  key: 1,
  class: "ml-auto border border-surface rounded bg-emphasis text-muted-color text-xs p-1"
}, Nw = { class: "flex flex-grow overflow-hidden" }, jw = { class: "flex items-center justify-end" }, Vw = { class: "overflow-y-auto p-4 flex-grow" }, _w = { class: "flex-grow overflow-auto p-1 transition-all duration-300" }, Kw = /* @__PURE__ */ Be({
  __name: "App",
  setup(t) {
    const e = z({
      handle: {
        borderRadius: "4px"
      },
      colorScheme: {
        light: {
          root: {
            Color: "{zinc.50}",
            Background: "#2b6cb0"
          }
        }
      }
    }), n = z(!1);
    function o() {
      n.value = !n.value;
    }
    return (i, r) => {
      const a = $("Button"), l = $("Badge"), s = $("Menubar"), d = $("router-view"), c = tt("ripple");
      return m(), y("div", zw, [
        P(s, {
          dt: e.value,
          class: "h-12 border-b border-gray-300 shadow-sm flex-shrink-0 flex items-center justify-between px-4"
        }, {
          start: E(() => [
            P(a, {
              icon: "pi pi-bars",
              class: "p-button-text",
              onClick: o,
              "aria-label": "Toggle Drawer"
            })
          ]),
          item: E(({ item: u, props: f, hasSubmenu: p, root: h }) => [
            We((m(), y("a", k({ class: "flex items-center" }, f.action), [
              v("span", null, re(u.label), 1),
              u.badge ? (m(), O(l, {
                key: 0,
                class: Y({ "ml-auto": !h, "ml-2": h }),
                value: u.badge
              }, null, 8, ["class", "value"])) : M("", !0),
              u.shortcut ? (m(), y("span", Fw, re(u.shortcut), 1)) : M("", !0),
              p ? (m(), y("i", {
                key: 2,
                class: Y([
                  "pi pi-angle-down ml-auto",
                  { "pi-angle-down": h, "pi-angle-right": !h }
                ])
              }, null, 2)) : M("", !0)
            ], 16)), [
              [c]
            ])
          ]),
          _: 1
        }, 8, ["dt"]),
        v("div", Nw, [
          v("div", {
            class: "bg-[#2b6cb0] text-white transition-width duration-300 flex flex-col",
            style: dc({ width: n.value ? "250px" : "0" })
          }, [
            v("div", jw, [
              P(a, {
                icon: "pi pi-times",
                class: "p-button-text",
                onClick: r[0] || (r[0] = (u) => n.value = !1),
                "aria-label": "Close Drawer"
              })
            ]),
            We(v("div", Vw, [
              P(Lw)
            ], 512), [
              [Hh, n.value]
            ])
          ], 4),
          v("div", _w, [
            P(d)
          ])
        ])
      ]);
    };
  }
}), Bn = (t, e) => {
  const n = t.__vccOpts || t;
  for (const [o, i] of e)
    n[o] = i;
  return n;
}, Hw = /* @__PURE__ */ Bn(Kw, [["__scopeId", "data-v-a392746d"]]);
var V = {
  STARTS_WITH: "startsWith",
  CONTAINS: "contains",
  NOT_CONTAINS: "notContains",
  ENDS_WITH: "endsWith",
  EQUALS: "equals",
  NOT_EQUALS: "notEquals",
  IN: "in",
  LESS_THAN: "lt",
  LESS_THAN_OR_EQUAL_TO: "lte",
  GREATER_THAN: "gt",
  GREATER_THAN_OR_EQUAL_TO: "gte",
  DATE_IS: "dateIs",
  DATE_IS_NOT: "dateIsNot",
  DATE_BEFORE: "dateBefore",
  DATE_AFTER: "dateAfter"
}, se = {
  AND: "and",
  OR: "or"
};
function cp(t, e) {
  var n = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = Ww(t)) || e) {
      n && (t = n);
      var o = 0, i = function() {
      };
      return { s: i, n: function() {
        return o >= t.length ? { done: !0 } : { done: !1, value: t[o++] };
      }, e: function(d) {
        throw d;
      }, f: i };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var r, a = !0, l = !1;
  return { s: function() {
    n = n.call(t);
  }, n: function() {
    var d = n.next();
    return a = d.done, d;
  }, e: function(d) {
    l = !0, r = d;
  }, f: function() {
    try {
      a || n.return == null || n.return();
    } finally {
      if (l) throw r;
    }
  } };
}
function Ww(t, e) {
  if (t) {
    if (typeof t == "string") return up(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? up(t, e) : void 0;
  }
}
function up(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var Js = {
  filter: function(e, n, o, i, r) {
    var a = [];
    if (!e)
      return a;
    var l = cp(e), s;
    try {
      for (l.s(); !(s = l.n()).done; ) {
        var d = s.value;
        if (typeof d == "string") {
          if (this.filters[i](d, o, r)) {
            a.push(d);
            continue;
          }
        } else {
          var c = cp(n), u;
          try {
            for (c.s(); !(u = c.n()).done; ) {
              var f = u.value, p = be(d, f);
              if (this.filters[i](p, o, r)) {
                a.push(d);
                break;
              }
            }
          } catch (h) {
            c.e(h);
          } finally {
            c.f();
          }
        }
      }
    } catch (h) {
      l.e(h);
    } finally {
      l.f();
    }
    return a;
  },
  filters: {
    startsWith: function(e, n, o) {
      if (n == null || n === "")
        return !0;
      if (e == null)
        return !1;
      var i = Ft(n.toString()).toLocaleLowerCase(o), r = Ft(e.toString()).toLocaleLowerCase(o);
      return r.slice(0, i.length) === i;
    },
    contains: function(e, n, o) {
      if (n == null || n === "")
        return !0;
      if (e == null)
        return !1;
      var i = Ft(n.toString()).toLocaleLowerCase(o), r = Ft(e.toString()).toLocaleLowerCase(o);
      return r.indexOf(i) !== -1;
    },
    notContains: function(e, n, o) {
      if (n == null || n === "")
        return !0;
      if (e == null)
        return !1;
      var i = Ft(n.toString()).toLocaleLowerCase(o), r = Ft(e.toString()).toLocaleLowerCase(o);
      return r.indexOf(i) === -1;
    },
    endsWith: function(e, n, o) {
      if (n == null || n === "")
        return !0;
      if (e == null)
        return !1;
      var i = Ft(n.toString()).toLocaleLowerCase(o), r = Ft(e.toString()).toLocaleLowerCase(o);
      return r.indexOf(i, r.length - i.length) !== -1;
    },
    equals: function(e, n, o) {
      return n == null || n === "" ? !0 : e == null ? !1 : e.getTime && n.getTime ? e.getTime() === n.getTime() : Ft(e.toString()).toLocaleLowerCase(o) == Ft(n.toString()).toLocaleLowerCase(o);
    },
    notEquals: function(e, n, o) {
      return n == null || n === "" ? !1 : e == null ? !0 : e.getTime && n.getTime ? e.getTime() !== n.getTime() : Ft(e.toString()).toLocaleLowerCase(o) != Ft(n.toString()).toLocaleLowerCase(o);
    },
    in: function(e, n) {
      if (n == null || n.length === 0)
        return !0;
      for (var o = 0; o < n.length; o++)
        if (Kt(e, n[o]))
          return !0;
      return !1;
    },
    between: function(e, n) {
      return n == null || n[0] == null || n[1] == null ? !0 : e == null ? !1 : e.getTime ? n[0].getTime() <= e.getTime() && e.getTime() <= n[1].getTime() : n[0] <= e && e <= n[1];
    },
    lt: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime && n.getTime ? e.getTime() < n.getTime() : e < n;
    },
    lte: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime && n.getTime ? e.getTime() <= n.getTime() : e <= n;
    },
    gt: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime && n.getTime ? e.getTime() > n.getTime() : e > n;
    },
    gte: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime && n.getTime ? e.getTime() >= n.getTime() : e >= n;
    },
    dateIs: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.toDateString() === n.toDateString();
    },
    dateIsNot: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.toDateString() !== n.toDateString();
    },
    dateBefore: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime() < n.getTime();
    },
    dateAfter: function(e, n) {
      return n == null ? !0 : e == null ? !1 : e.getTime() > n.getTime();
    }
  },
  register: function(e, n) {
    this.filters[e] = n;
  }
};
function ii(t) {
  "@babel/helpers - typeof";
  return ii = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ii(t);
}
function pp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function xa(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? pp(Object(n), !0).forEach(function(o) {
      Uw(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : pp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function Uw(t, e, n) {
  return (e = Gw(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function Gw(t) {
  var e = qw(t, "string");
  return ii(e) == "symbol" ? e : e + "";
}
function qw(t, e) {
  if (ii(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ii(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Jw = {
  ripple: !1,
  inputStyle: null,
  inputVariant: null,
  locale: {
    startsWith: "Starts with",
    contains: "Contains",
    notContains: "Not contains",
    endsWith: "Ends with",
    equals: "Equals",
    notEquals: "Not equals",
    noFilter: "No Filter",
    lt: "Less than",
    lte: "Less than or equal to",
    gt: "Greater than",
    gte: "Greater than or equal to",
    dateIs: "Date is",
    dateIsNot: "Date is not",
    dateBefore: "Date is before",
    dateAfter: "Date is after",
    clear: "Clear",
    apply: "Apply",
    matchAll: "Match All",
    matchAny: "Match Any",
    addRule: "Add Rule",
    removeRule: "Remove Rule",
    accept: "Yes",
    reject: "No",
    choose: "Choose",
    upload: "Upload",
    cancel: "Cancel",
    completed: "Completed",
    pending: "Pending",
    fileSizeTypes: ["B", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"],
    dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
    monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
    chooseYear: "Choose Year",
    chooseMonth: "Choose Month",
    chooseDate: "Choose Date",
    prevDecade: "Previous Decade",
    nextDecade: "Next Decade",
    prevYear: "Previous Year",
    nextYear: "Next Year",
    prevMonth: "Previous Month",
    nextMonth: "Next Month",
    prevHour: "Previous Hour",
    nextHour: "Next Hour",
    prevMinute: "Previous Minute",
    nextMinute: "Next Minute",
    prevSecond: "Previous Second",
    nextSecond: "Next Second",
    am: "am",
    pm: "pm",
    today: "Today",
    weekHeader: "Wk",
    firstDayOfWeek: 0,
    showMonthAfterYear: !1,
    dateFormat: "mm/dd/yy",
    weak: "Weak",
    medium: "Medium",
    strong: "Strong",
    passwordPrompt: "Enter a password",
    emptyFilterMessage: "No results found",
    searchMessage: "{0} results are available",
    selectionMessage: "{0} items selected",
    emptySelectionMessage: "No selected item",
    emptySearchMessage: "No results found",
    fileChosenMessage: "{0} files",
    noFileChosenMessage: "No file chosen",
    emptyMessage: "No available options",
    aria: {
      trueLabel: "True",
      falseLabel: "False",
      nullLabel: "Not Selected",
      star: "1 star",
      stars: "{star} stars",
      selectAll: "All items selected",
      unselectAll: "All items unselected",
      close: "Close",
      previous: "Previous",
      next: "Next",
      navigation: "Navigation",
      scrollTop: "Scroll Top",
      moveTop: "Move Top",
      moveUp: "Move Up",
      moveDown: "Move Down",
      moveBottom: "Move Bottom",
      moveToTarget: "Move to Target",
      moveToSource: "Move to Source",
      moveAllToTarget: "Move All to Target",
      moveAllToSource: "Move All to Source",
      pageLabel: "Page {page}",
      firstPageLabel: "First Page",
      lastPageLabel: "Last Page",
      nextPageLabel: "Next Page",
      prevPageLabel: "Previous Page",
      rowsPerPageLabel: "Rows per page",
      jumpToPageDropdownLabel: "Jump to Page Dropdown",
      jumpToPageInputLabel: "Jump to Page Input",
      selectRow: "Row Selected",
      unselectRow: "Row Unselected",
      expandRow: "Row Expanded",
      collapseRow: "Row Collapsed",
      showFilterMenu: "Show Filter Menu",
      hideFilterMenu: "Hide Filter Menu",
      filterOperator: "Filter Operator",
      filterConstraint: "Filter Constraint",
      editRow: "Row Edit",
      saveEdit: "Save Edit",
      cancelEdit: "Cancel Edit",
      listView: "List View",
      gridView: "Grid View",
      slide: "Slide",
      slideNumber: "{slideNumber}",
      zoomImage: "Zoom Image",
      zoomIn: "Zoom In",
      zoomOut: "Zoom Out",
      rotateRight: "Rotate Right",
      rotateLeft: "Rotate Left",
      listLabel: "Option List"
    }
  },
  filterMatchModeOptions: {
    text: [V.STARTS_WITH, V.CONTAINS, V.NOT_CONTAINS, V.ENDS_WITH, V.EQUALS, V.NOT_EQUALS],
    numeric: [V.EQUALS, V.NOT_EQUALS, V.LESS_THAN, V.LESS_THAN_OR_EQUAL_TO, V.GREATER_THAN, V.GREATER_THAN_OR_EQUAL_TO],
    date: [V.DATE_IS, V.DATE_IS_NOT, V.DATE_BEFORE, V.DATE_AFTER]
  },
  zIndex: {
    modal: 1100,
    overlay: 1e3,
    menu: 1e3,
    tooltip: 1100
  },
  theme: void 0,
  unstyled: !1,
  pt: void 0,
  ptOptions: {
    mergeSections: !0,
    mergeProps: !1
  },
  csp: {
    nonce: void 0
  }
}, Yw = Symbol();
function Xw(t, e) {
  var n = {
    config: Kh(e)
  };
  return t.config.globalProperties.$primevue = n, t.provide(Yw, n), Zw(), Qw(t, n), n;
}
var qo = [];
function Zw() {
  rt.clear(), qo.forEach(function(t) {
    return t == null ? void 0 : t();
  }), qo = [];
}
function Qw(t, e) {
  var n = z(!1), o = function() {
    var d;
    if (((d = e.config) === null || d === void 0 ? void 0 : d.theme) !== "none" && !$e.isStyleNameLoaded("common")) {
      var c, u, f = ((c = te.getCommonTheme) === null || c === void 0 ? void 0 : c.call(te)) || {}, p = f.primitive, h = f.semantic, g = f.global, b = f.style, C = {
        nonce: (u = e.config) === null || u === void 0 || (u = u.csp) === null || u === void 0 ? void 0 : u.nonce
      };
      te.load(p == null ? void 0 : p.css, xa({
        name: "primitive-variables"
      }, C)), te.load(h == null ? void 0 : h.css, xa({
        name: "semantic-variables"
      }, C)), te.load(g == null ? void 0 : g.css, xa({
        name: "global-variables"
      }, C)), te.loadStyle(xa({
        name: "global-style"
      }, C), b), $e.setLoadedStyleName("common");
    }
  };
  rt.on("theme:change", function(s) {
    n.value || (t.config.globalProperties.$primevue.config.theme = s, n.value = !0);
  });
  var i = Go(e.config, function(s, d) {
    Kn.emit("config:change", {
      newValue: s,
      oldValue: d
    });
  }, {
    immediate: !0,
    deep: !0
  }), r = Go(function() {
    return e.config.ripple;
  }, function(s, d) {
    Kn.emit("config:ripple:change", {
      newValue: s,
      oldValue: d
    });
  }, {
    immediate: !0,
    deep: !0
  }), a = Go(function() {
    return e.config.theme;
  }, function(s, d) {
    n.value || $e.setTheme(s), e.config.unstyled || o(), n.value = !1, Kn.emit("config:theme:change", {
      newValue: s,
      oldValue: d
    });
  }, {
    immediate: !0,
    deep: !1
  }), l = Go(function() {
    return e.config.unstyled;
  }, function(s, d) {
    !s && e.config.theme && o(), Kn.emit("config:unstyled:change", {
      newValue: s,
      oldValue: d
    });
  }, {
    immediate: !0,
    deep: !0
  });
  qo.push(i), qo.push(r), qo.push(a), qo.push(l);
}
var eC = {
  install: function(e, n) {
    var o = Mv(Jw, n);
    Xw(e, o);
  }
}, tC = { transitionDuration: "{transition.duration}" }, nC = { borderWidth: "0", borderColor: "{content.border.color}" }, oC = { color: "{text.color}", hoverColor: "{text.color}", activeColor: "{text.color}", activeHoverColor: "{text.color}", padding: "1.25rem", fontWeight: "600", borderRadius: "0", borderWidth: "0", borderColor: "{content.border.color}", background: "{content.background}", hoverBackground: "{content.hover.background}", activeBackground: "{content.background}", activeHoverBackground: "{content.background}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" }, toggleIcon: { color: "{text.muted.color}", hoverColor: "{text.muted.color}", activeColor: "{text.muted.color}", activeHoverColor: "{text.muted.color}" }, first: { topBorderRadius: "{content.border.radius}", borderWidth: "0" }, last: { bottomBorderRadius: "{content.border.radius}", activeBottomBorderRadius: "0" } }, rC = { borderWidth: "0", borderColor: "{content.border.color}", background: "{content.background}", color: "{text.color}", padding: "0 1.25rem 1.25rem 1.25rem" }, iC = `
.p-accordionpanel {
    box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);
    transition: margin dt('accordion.transition.duration');
}

.p-accordionpanel-active {
    margin: 1rem 0;
}

.p-accordionpanel:first-child {
    border-top-left-radius: dt('content.border.radius');
    border-top-right-radius: dt('content.border.radius');
    margin-top: 0;
}

.p-accordionpanel:last-child {
    border-bottom-left-radius: dt('content.border.radius');
    border-bottom-right-radius: dt('content.border.radius');
    margin-bottom: 0;
}

.p-accordionpanel:not(.p-disabled) .p-accordionheader:focus-visible {
    background: dt('navigation.item.active.background');
}
`, aC = { root: tC, panel: nC, header: oC, content: rC, css: iC }, lC = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledHoverBackground: "{form.field.filled.hover.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}" }, sC = { background: "{overlay.select.background}", borderColor: "{overlay.select.border.color}", borderRadius: "{overlay.select.border.radius}", color: "{overlay.select.color}", shadow: "{overlay.select.shadow}" }, dC = { padding: "{list.padding}", gap: "{list.gap}" }, cC = { focusBackground: "{list.option.focus.background}", selectedBackground: "{list.option.selected.background}", selectedFocusBackground: "{list.option.selected.focus.background}", color: "{list.option.color}", focusColor: "{list.option.focus.color}", selectedColor: "{list.option.selected.color}", selectedFocusColor: "{list.option.selected.focus.color}", padding: "{list.option.padding}", borderRadius: "{list.option.border.radius}" }, uC = { background: "{list.option.group.background}", color: "{list.option.group.color}", fontWeight: "{list.option.group.font.weight}", padding: "{list.option.group.padding}" }, pC = { width: "3rem", sm: { width: "2.5rem" }, lg: { width: "3.5rem" }, borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.border.color}", activeBorderColor: "{form.field.border.color}", borderRadius: "{form.field.border.radius}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, fC = { borderRadius: "{border.radius.sm}" }, hC = { padding: "{list.option.padding}" }, mC = { light: { chip: { focusBackground: "{surface.300}", focusColor: "{surface.950}" }, dropdown: { background: "{surface.100}", hoverBackground: "{surface.200}", activeBackground: "{surface.300}", color: "{surface.600}", hoverColor: "{surface.700}", activeColor: "{surface.800}" } }, dark: { chip: { focusBackground: "{surface.600}", focusColor: "{surface.0}" }, dropdown: { background: "{surface.800}", hoverBackground: "{surface.700}", activeBackground: "{surface.600}", color: "{surface.300}", hoverColor: "{surface.200}", activeColor: "{surface.100}" } } }, gC = `
.p-autocomplete-dropdown:focus-visible {
    background: dt('autocomplete.dropdown.hover.background');
    border-color: dt('autocomplete.dropdown.hover.border.color');
    color: dt('autocomplete.dropdown.hover.color');
}

.p-variant-filled.p-autocomplete-input-multiple {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: 1px solid transparent;
    background: dt('autocomplete.filled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.border.color'), dt('autocomplete.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.p-autocomplete:not(.p-disabled):hover .p-variant-filled.p-autocomplete-input-multiple {
    background: dt('autocomplete.filled.hover.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.hover.border.color'), dt('autocomplete.hover.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-autocomplete:not(.p-disabled).p-focus .p-variant-filled.p-autocomplete-input-multiple {
    outline: 0 none;
    background: dt('autocomplete.filled.focus.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.border.color'), dt('autocomplete.border.color'));
    background-size: 100% 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-autocomplete:not(.p-disabled).p-focus:hover .p-variant-filled.p-autocomplete-input-multiple {
    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.hover.border.color'), dt('autocomplete.hover.border.color'));
}

.p-autocomplete.p-invalid .p-autocomplete-input-multiple {
    background-image: linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color')), linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color'));
}

.p-autocomplete.p-invalid.p-focus .p-autocomplete-input-multiple  {
    background-image: linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color')), linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color'));
}

.p-autocomplete-option {
    transition: none;
}
`, bC = { root: lC, overlay: sC, list: dC, option: cC, optionGroup: uC, dropdown: pC, chip: fC, emptyMessage: hC, colorScheme: mC, css: gC }, vC = { width: "2rem", height: "2rem", fontSize: "1rem", background: "{content.border.color}", color: "{content.color}", borderRadius: "{content.border.radius}" }, yC = { size: "1rem" }, kC = { borderColor: "{content.background}", offset: "-0.75rem" }, wC = { width: "3rem", height: "3rem", fontSize: "1.5rem", icon: { size: "1.5rem" }, group: { offset: "-1rem" } }, CC = { width: "4rem", height: "4rem", fontSize: "2rem", icon: { size: "2rem" }, group: { offset: "-1.5rem" } }, xC = { root: vC, icon: yC, group: kC, lg: wC, xl: CC, css: "" }, SC = { borderRadius: "{border.radius.md}", padding: "0 0.5rem", fontSize: "0.75rem", fontWeight: "700", minWidth: "1.5rem", height: "1.5rem" }, IC = { size: "0.5rem" }, OC = { fontSize: "0.625rem", minWidth: "1.25rem", height: "1.25rem" }, PC = { fontSize: "0.875rem", minWidth: "1.75rem", height: "1.75rem" }, $C = { fontSize: "1rem", minWidth: "2rem", height: "2rem" }, TC = { light: { primary: { background: "{primary.color}", color: "{primary.contrast.color}" }, secondary: { background: "{surface.100}", color: "{surface.600}" }, success: { background: "{green.500}", color: "{surface.0}" }, info: { background: "{sky.500}", color: "{surface.0}" }, warn: { background: "{orange.500}", color: "{surface.0}" }, danger: { background: "{red.500}", color: "{surface.0}" }, contrast: { background: "{surface.950}", color: "{surface.0}" } }, dark: { primary: { background: "{primary.color}", color: "{primary.contrast.color}" }, secondary: { background: "{surface.800}", color: "{surface.300}" }, success: { background: "{green.400}", color: "{green.950}" }, info: { background: "{sky.400}", color: "{sky.950}" }, warn: { background: "{orange.400}", color: "{orange.950}" }, danger: { background: "{red.400}", color: "{red.950}" }, contrast: { background: "{surface.0}", color: "{surface.950}" } } }, RC = { root: SC, dot: IC, sm: OC, lg: PC, xl: $C, colorScheme: TC, css: "" }, BC = { borderRadius: { none: "0", xs: "2px", sm: "4px", md: "6px", lg: "8px", xl: "12px" }, emerald: { 50: "#E8F6F1", 100: "#C5EBE1", 200: "#9EDFCF", 300: "#76D3BD", 400: "#58C9AF", 500: "#3BBFA1", 600: "#35AF94", 700: "#2D9B83", 800: "#268873", 900: "#1A6657", 950: "#0d3329" }, green: { 50: "#E8F5E9", 100: "#C8E6C9", 200: "#A5D6A7", 300: "#81C784", 400: "#66BB6A", 500: "#4CAF50", 600: "#43A047", 700: "#388E3C", 800: "#2E7D32", 900: "#1B5E20", 950: "#0e2f10" }, lime: { 50: "#F9FBE7", 100: "#F0F4C3", 200: "#E6EE9C", 300: "#DCE775", 400: "#D4E157", 500: "#CDDC39", 600: "#C0CA33", 700: "#AFB42B", 800: "#9E9D24", 900: "#827717", 950: "#413c0c" }, red: { 50: "#FFEBEE", 100: "#FFCDD2", 200: "#EF9A9A", 300: "#E57373", 400: "#EF5350", 500: "#F44336", 600: "#E53935", 700: "#D32F2F", 800: "#C62828", 900: "#B71C1C", 950: "#5c0e0e" }, orange: { 50: "#FFF3E0", 100: "#FFE0B2", 200: "#FFCC80", 300: "#FFB74D", 400: "#FFA726", 500: "#FF9800", 600: "#FB8C00", 700: "#F57C00", 800: "#EF6C00", 900: "#E65100", 950: "#732900" }, amber: { 50: "#FFF8E1", 100: "#FFECB3", 200: "#FFE082", 300: "#FFD54F", 400: "#FFCA28", 500: "#FFC107", 600: "#FFB300", 700: "#FFA000", 800: "#FF8F00", 900: "#FF6F00", 950: "#803800" }, yellow: { 50: "#FFFDE7", 100: "#FFF9C4", 200: "#FFF59D", 300: "#FFF176", 400: "#FFEE58", 500: "#FFEB3B", 600: "#FDD835", 700: "#FBC02D", 800: "#F9A825", 900: "#F57F17", 950: "#7b400c" }, teal: { 50: "#E0F2F1", 100: "#B2DFDB", 200: "#80CBC4", 300: "#4DB6AC", 400: "#26A69A", 500: "#009688", 600: "#00897B", 700: "#00796B", 800: "#00695C", 900: "#004D40", 950: "#002720" }, cyan: { 50: "#E0F7FA", 100: "#B2EBF2", 200: "#80DEEA", 300: "#4DD0E1", 400: "#26C6DA", 500: "#00BCD4", 600: "#00ACC1", 700: "#0097A7", 800: "#00838F", 900: "#006064", 950: "#003032" }, sky: { 50: "#E1F5FE", 100: "#B3E5FC", 200: "#81D4FA", 300: "#4FC3F7", 400: "#29B6F6", 500: "#03A9F4", 600: "#039BE5", 700: "#0288D1", 800: "#0277BD", 900: "#01579B", 950: "#012c4e" }, blue: { 50: "#E3F2FD", 100: "#BBDEFB", 200: "#90CAF9", 300: "#64B5F6", 400: "#42A5F5", 500: "#2196F3", 600: "#1E88E5", 700: "#1976D2", 800: "#1565C0", 900: "#0D47A1", 950: "#072451" }, indigo: { 50: "#E8EAF6", 100: "#C5CAE9", 200: "#9FA8DA", 300: "#7986CB", 400: "#5C6BC0", 500: "#3F51B5", 600: "#3949AB", 700: "#303F9F", 800: "#283593", 900: "#1A237E", 950: "#0d123f" }, violet: { 50: "#EDE7F6", 100: "#D1C4E9", 200: "#B39DDB", 300: "#9575CD", 400: "#7E57C2", 500: "#673AB7", 600: "#5E35B1", 700: "#512DA8", 800: "#4527A0", 900: "#311B92", 950: "#190e49" }, purple: { 50: "#F3E5F5", 100: "#E1BEE7", 200: "#CE93D8", 300: "#BA68C8", 400: "#AB47BC", 500: "#9C27B0", 600: "#8E24AA", 700: "#7B1FA2", 800: "#6A1B9A", 900: "#4A148C", 950: "#250a46" }, fuchsia: { 50: "#FDE6F3", 100: "#FBC1E3", 200: "#F897D1", 300: "#F56DBF", 400: "#F34DB2", 500: "#F12DA5", 600: "#E0289D", 700: "#CC2392", 800: "#B81E88", 900: "#951777", 950: "#4b0c3c" }, pink: { 50: "#FCE4EC", 100: "#F8BBD0", 200: "#F48FB1", 300: "#F06292", 400: "#EC407A", 500: "#E91E63", 600: "#D81B60", 700: "#C2185B", 800: "#AD1457", 900: "#880E4F", 950: "#440728" }, rose: { 50: "#FFF0F0", 100: "#FFD9D9", 200: "#FFC0C0", 300: "#FFA7A7", 400: "#FF8E8E", 500: "#FF7575", 600: "#FF5252", 700: "#FF3838", 800: "#F71C1C", 900: "#D50000", 950: "#3E0000" }, slate: { 50: "#f8fafc", 100: "#f1f5f9", 200: "#e2e8f0", 300: "#cbd5e1", 400: "#94a3b8", 500: "#64748b", 600: "#475569", 700: "#334155", 800: "#1e293b", 900: "#0f172a", 950: "#020617" }, gray: { 50: "#f9fafb", 100: "#f3f4f6", 200: "#e5e7eb", 300: "#d1d5db", 400: "#9ca3af", 500: "#6b7280", 600: "#4b5563", 700: "#374151", 800: "#1f2937", 900: "#111827", 950: "#030712" }, zinc: { 50: "#fafafa", 100: "#f4f4f5", 200: "#e4e4e7", 300: "#d4d4d8", 400: "#a1a1aa", 500: "#71717a", 600: "#52525b", 700: "#3f3f46", 800: "#27272a", 900: "#18181b", 950: "#09090b" }, neutral: { 50: "#fafafa", 100: "#f5f5f5", 200: "#e5e5e5", 300: "#d4d4d4", 400: "#a3a3a3", 500: "#737373", 600: "#525252", 700: "#404040", 800: "#262626", 900: "#171717", 950: "#0a0a0a" }, stone: { 50: "#fafaf9", 100: "#f5f5f4", 200: "#e7e5e4", 300: "#d6d3d1", 400: "#a8a29e", 500: "#78716c", 600: "#57534e", 700: "#44403c", 800: "#292524", 900: "#1c1917", 950: "#0c0a09" } }, EC = { transitionDuration: "0.2s", focusRing: { width: "0", style: "none", color: "unset", offset: "0" }, disabledOpacity: "0.38", iconSize: "1rem", anchorGutter: "0", primary: { 50: "{emerald.50}", 100: "{emerald.100}", 200: "{emerald.200}", 300: "{emerald.300}", 400: "{emerald.400}", 500: "{emerald.500}", 600: "{emerald.600}", 700: "{emerald.700}", 800: "{emerald.800}", 900: "{emerald.900}", 950: "{emerald.950}" }, formField: { paddingX: "0.75rem", paddingY: "0.75rem", sm: { fontSize: "0.875rem", paddingX: "0.625rem", paddingY: "0.625rem" }, lg: { fontSize: "1.125rem", paddingX: "0.825rem", paddingY: "0.825rem" }, borderRadius: "{border.radius.sm}", focusRing: { width: "2px", style: "solid", color: "{primary.color}", offset: "-2px", shadow: "none" }, transitionDuration: "{transition.duration}" }, list: { padding: "0.5rem 0", gap: "0", header: { padding: "0.75rem 1rem" }, option: { padding: "0.75rem 1rem", borderRadius: "{border.radius.none}" }, optionGroup: { padding: "0.75rem 1rem", fontWeight: "700" } }, content: { borderRadius: "{border.radius.sm}" }, mask: { transitionDuration: "0.15s" }, navigation: { list: { padding: "0.5rem 0", gap: "0" }, item: { padding: "0.75rem 1rem", borderRadius: "{border.radius.none}", gap: "0.5rem" }, submenuLabel: { padding: "0.75rem 1rem", fontWeight: "700" }, submenuIcon: { size: "0.875rem" } }, overlay: { select: { borderRadius: "{border.radius.sm}", shadow: "0 5px 5px -3px rgba(0,0,0,.2), 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 2px rgba(0,0,0,.12)" }, popover: { borderRadius: "{border.radius.sm}", padding: "1rem", shadow: "0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)" }, modal: { borderRadius: "{border.radius.sm}", padding: "1.5rem", shadow: "0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)" }, navigation: { shadow: "0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)" } }, colorScheme: { light: { focusRing: { shadow: "0 0 1px 4px {surface.200}" }, surface: { 0: "#ffffff", 50: "{slate.50}", 100: "{slate.100}", 200: "{slate.200}", 300: "{slate.300}", 400: "{slate.400}", 500: "{slate.500}", 600: "{slate.600}", 700: "{slate.700}", 800: "{slate.800}", 900: "{slate.900}", 950: "{slate.950}" }, primary: { color: "{primary.500}", contrastColor: "#ffffff", hoverColor: "{primary.400}", activeColor: "{primary.300}" }, highlight: { background: "color-mix(in srgb, {primary.color}, transparent 88%)", focusBackground: "color-mix(in srgb, {primary.color}, transparent 76%)", color: "{primary.700}", focusColor: "{primary.800}" }, mask: { background: "rgba(0,0,0,0.32)", color: "{surface.200}" }, formField: { background: "{surface.0}", disabledBackground: "{surface.300}", filledBackground: "{surface.100}", filledHoverBackground: "{surface.200}", filledFocusBackground: "{surface.100}", borderColor: "{surface.400}", hoverBorderColor: "{surface.900}", focusBorderColor: "{primary.color}", invalidBorderColor: "{red.800}", color: "{surface.900}", disabledColor: "{surface.600}", placeholderColor: "{surface.600}", invalidPlaceholderColor: "{red.800}", floatLabelColor: "{surface.600}", floatLabelFocusColor: "{primary.600}", floatLabelActiveColor: "{surface.600}", floatLabelInvalidColor: "{form.field.invalid.placeholder.color}", iconColor: "{surface.600}", shadow: "none" }, text: { color: "{surface.900}", hoverColor: "{surface.900}", mutedColor: "{surface.600}", hoverMutedColor: "{surface.600}" }, content: { background: "{surface.0}", hoverBackground: "{surface.100}", borderColor: "{surface.300}", color: "{text.color}", hoverColor: "{text.hover.color}" }, overlay: { select: { background: "{surface.0}", borderColor: "{surface.0}", color: "{text.color}" }, popover: { background: "{surface.0}", borderColor: "{surface.0}", color: "{text.color}" }, modal: { background: "{surface.0}", borderColor: "{surface.0}", color: "{text.color}" } }, list: { option: { focusBackground: "{surface.100}", selectedBackground: "{highlight.background}", selectedFocusBackground: "{highlight.focus.background}", color: "{text.color}", focusColor: "{text.hover.color}", selectedColor: "{highlight.color}", selectedFocusColor: "{highlight.focus.color}", icon: { color: "{surface.600}", focusColor: "{surface.600}" } }, optionGroup: { background: "transparent", color: "{text.color}" } }, navigation: { item: { focusBackground: "{surface.100}", activeBackground: "{surface.200}", color: "{text.color}", focusColor: "{text.hover.color}", activeColor: "{text.hover.color}", icon: { color: "{surface.600}", focusColor: "{surface.600}", activeColor: "{surface.600}" } }, submenuLabel: { background: "transparent", color: "{text.color}" }, submenuIcon: { color: "{surface.600}", focusColor: "{surface.600}", activeColor: "{surface.600}" } } }, dark: { focusRing: { shadow: "0 0 1px 4px {surface.700}" }, surface: { 0: "#ffffff", 50: "{zinc.50}", 100: "{zinc.100}", 200: "{zinc.200}", 300: "{zinc.300}", 400: "{zinc.400}", 500: "{zinc.500}", 600: "{zinc.600}", 700: "{zinc.700}", 800: "{zinc.800}", 900: "{zinc.900}", 950: "{zinc.950}" }, primary: { color: "{primary.400}", contrastColor: "{surface.900}", hoverColor: "{primary.300}", activeColor: "{primary.200}" }, highlight: { background: "color-mix(in srgb, {primary.400}, transparent 84%)", focusBackground: "color-mix(in srgb, {primary.400}, transparent 76%)", color: "rgba(255,255,255,.87)", focusColor: "rgba(255,255,255,.87)" }, mask: { background: "rgba(0,0,0,0.6)", color: "{surface.200}" }, formField: { background: "{surface.950}", disabledBackground: "{surface.700}", filledBackground: "{surface.800}", filledHoverBackground: "{surface.700}", filledFocusBackground: "{surface.800}", borderColor: "{surface.600}", hoverBorderColor: "{surface.400}", focusBorderColor: "{primary.color}", invalidBorderColor: "{red.300}", color: "{surface.0}", disabledColor: "{surface.400}", placeholderColor: "{surface.400}", invalidPlaceholderColor: "{red.300}", floatLabelColor: "{surface.400}", floatLabelFocusColor: "{primary.color}", floatLabelActiveColor: "{surface.400}", floatLabelInvalidColor: "{form.field.invalid.placeholder.color}", iconColor: "{surface.400}", shadow: "none" }, text: { color: "{surface.0}", hoverColor: "{surface.0}", mutedColor: "{surface.400}", hoverMutedColor: "{surface.400}" }, content: { background: "{surface.900}", hoverBackground: "{surface.800}", borderColor: "{surface.700}", color: "{text.color}", hoverColor: "{text.hover.color}" }, overlay: { select: { background: "{surface.900}", borderColor: "{surface.900}", color: "{text.color}" }, popover: { background: "{surface.900}", borderColor: "{surface.900}", color: "{text.color}" }, modal: { background: "{surface.900}", borderColor: "{surface.900}", color: "{text.color}" } }, list: { option: { focusBackground: "{surface.800}", selectedBackground: "{highlight.background}", selectedFocusBackground: "{highlight.focus.background}", color: "{text.color}", focusColor: "{text.hover.color}", selectedColor: "{highlight.color}", selectedFocusColor: "{highlight.focus.color}", icon: { color: "{surface.400}", focusColor: "{surface.400}" } }, optionGroup: { background: "transparent", color: "{text.muted.color}" } }, navigation: { item: { focusBackground: "{surface.800}", activeBackground: "{surface.700}", color: "{text.color}", focusColor: "{text.hover.color}", activeColor: "{text.hover.color}", icon: { color: "{surface.400}", focusColor: "{surface.400}", activeColor: "{surface.400}" } }, submenuLabel: { background: "transparent", color: "{text.muted.color}" }, submenuIcon: { color: "{surface.400}", focusColor: "{surface.400}", activeColor: "{surface.400}" } } } } }, MC = { primitive: BC, semantic: EC }, AC = { borderRadius: "{content.border.radius}" }, DC = { root: AC, css: "" }, LC = { padding: "1rem", background: "{content.background}", gap: "0.5rem", transitionDuration: "{transition.duration}" }, zC = { color: "{text.muted.color}", hoverColor: "{text.color}", borderRadius: "{content.border.radius}", gap: "{navigation.item.gap}", icon: { color: "{navigation.item.icon.color}", hoverColor: "{navigation.item.icon.focus.color}" }, focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, FC = { color: "{navigation.item.icon.color}" }, NC = { root: LC, item: zC, separator: FC, css: "" }, jC = { borderRadius: "{form.field.border.radius}", roundedBorderRadius: "2rem", gap: "0.5rem", paddingX: "1rem", paddingY: "0.625rem", iconOnlyWidth: "3rem", sm: { fontSize: "{form.field.sm.font.size}", paddingX: "{form.field.sm.padding.x}", paddingY: "{form.field.sm.padding.y}", iconOnlyWidth: "2.5rem" }, lg: { fontSize: "{form.field.lg.font.size}", paddingX: "{form.field.lg.padding.x}", paddingY: "{form.field.lg.padding.y}", iconOnlyWidth: "3.5rem" }, label: { fontWeight: "500" }, raisedShadow: "0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", offset: "{focus.ring.offset}" }, badgeSize: "1rem", transitionDuration: "{form.field.transition.duration}" }, VC = { light: { root: { primary: { background: "{primary.color}", hoverBackground: "{primary.hover.color}", activeBackground: "{primary.active.color}", borderColor: "{primary.color}", hoverBorderColor: "{primary.hover.color}", activeBorderColor: "{primary.active.color}", color: "{primary.contrast.color}", hoverColor: "{primary.contrast.color}", activeColor: "{primary.contrast.color}", focusRing: { color: "{primary.color}", shadow: "none" } }, secondary: { background: "{surface.100}", hoverBackground: "{surface.200}", activeBackground: "{surface.300}", borderColor: "{surface.100}", hoverBorderColor: "{surface.200}", activeBorderColor: "{surface.300}", color: "{surface.600}", hoverColor: "{surface.700}", activeColor: "{surface.800}", focusRing: { color: "{surface.600}", shadow: "none" } }, info: { background: "{sky.500}", hoverBackground: "{sky.400}", activeBackground: "{sky.300}", borderColor: "{sky.500}", hoverBorderColor: "{sky.400}", activeBorderColor: "{sky.300}", color: "#ffffff", hoverColor: "#ffffff", activeColor: "#ffffff", focusRing: { color: "{sky.500}", shadow: "none" } }, success: { background: "{green.500}", hoverBackground: "{green.400}", activeBackground: "{green.300}", borderColor: "{green.500}", hoverBorderColor: "{green.400}", activeBorderColor: "{green.300}", color: "#ffffff", hoverColor: "#ffffff", activeColor: "#ffffff", focusRing: { color: "{green.500}", shadow: "none" } }, warn: { background: "{orange.500}", hoverBackground: "{orange.400}", activeBackground: "{orange.300}", borderColor: "{orange.500}", hoverBorderColor: "{orange.400}", activeBorderColor: "{orange.300}", color: "#ffffff", hoverColor: "#ffffff", activeColor: "#ffffff", focusRing: { color: "{orange.500}", shadow: "none" } }, help: { background: "{purple.500}", hoverBackground: "{purple.400}", activeBackground: "{purple.300}", borderColor: "{purple.500}", hoverBorderColor: "{purple.400}", activeBorderColor: "{purple.300}", color: "#ffffff", hoverColor: "#ffffff", activeColor: "#ffffff", focusRing: { color: "{purple.500}", shadow: "none" } }, danger: { background: "{red.500}", hoverBackground: "{red.400}", activeBackground: "{red.300}", borderColor: "{red.500}", hoverBorderColor: "{red.400}", activeBorderColor: "{red.300}", color: "#ffffff", hoverColor: "#ffffff", activeColor: "#ffffff", focusRing: { color: "{red.500}", shadow: "none" } }, contrast: { background: "{surface.950}", hoverBackground: "{surface.800}", activeBackground: "{surface.700}", borderColor: "{surface.950}", hoverBorderColor: "{surface.800}", activeBorderColor: "{surface.700}", color: "{surface.0}", hoverColor: "{surface.0}", activeColor: "{surface.0}", focusRing: { color: "{surface.950}", shadow: "none" } } }, outlined: { primary: { hoverBackground: "{primary.50}", activeBackground: "{primary.100}", borderColor: "{primary.color}", color: "{primary.color}" }, secondary: { hoverBackground: "{surface.50}", activeBackground: "{surface.100}", borderColor: "{surface.600}", color: "{surface.600}" }, success: { hoverBackground: "{green.50}", activeBackground: "{green.100}", borderColor: "{green.500}", color: "{green.500}" }, info: { hoverBackground: "{sky.50}", activeBackground: "{sky.100}", borderColor: "{sky.500}", color: "{sky.500}" }, warn: { hoverBackground: "{orange.50}", activeBackground: "{orange.100}", borderColor: "{orange.500}", color: "{orange.500}" }, help: { hoverBackground: "{purple.50}", activeBackground: "{purple.100}", borderColor: "{purple.500}", color: "{purple.500}" }, danger: { hoverBackground: "{red.50}", activeBackground: "{red.100}", borderColor: "{red.500}", color: "{red.500}" }, contrast: { hoverBackground: "{surface.50}", activeBackground: "{surface.100}", borderColor: "{surface.950}", color: "{surface.950}" }, plain: { hoverBackground: "{surface.50}", activeBackground: "{surface.100}", borderColor: "{surface.900}", color: "{surface.900}" } }, text: { primary: { hoverBackground: "{primary.50}", activeBackground: "{primary.100}", color: "{primary.color}" }, secondary: { hoverBackground: "{surface.50}", activeBackground: "{surface.100}", color: "{surface.600}" }, success: { hoverBackground: "{green.50}", activeBackground: "{green.100}", color: "{green.500}" }, info: { hoverBackground: "{sky.50}", activeBackground: "{sky.100}", color: "{sky.500}" }, warn: { hoverBackground: "{orange.50}", activeBackground: "{orange.100}", color: "{orange.500}" }, help: { hoverBackground: "{purple.50}", activeBackground: "{purple.100}", color: "{purple.500}" }, danger: { hoverBackground: "{red.50}", activeBackground: "{red.100}", color: "{red.500}" }, contrast: { hoverBackground: "{surface.50}", activeBackground: "{surface.100}", color: "{surface.950}" }, plain: { hoverBackground: "{surface.50}", activeBackground: "{surface.100}", color: "{surface.900}" } }, link: { color: "{primary.color}", hoverColor: "{primary.color}", activeColor: "{primary.color}" } }, dark: { root: { primary: { background: "{primary.color}", hoverBackground: "{primary.hover.color}", activeBackground: "{primary.active.color}", borderColor: "{primary.color}", hoverBorderColor: "{primary.hover.color}", activeBorderColor: "{primary.active.color}", color: "{primary.contrast.color}", hoverColor: "{primary.contrast.color}", activeColor: "{primary.contrast.color}", focusRing: { color: "{primary.color}", shadow: "none" } }, secondary: { background: "{surface.800}", hoverBackground: "{surface.700}", activeBackground: "{surface.600}", borderColor: "{surface.800}", hoverBorderColor: "{surface.700}", activeBorderColor: "{surface.600}", color: "{surface.300}", hoverColor: "{surface.200}", activeColor: "{surface.100}", focusRing: { color: "{surface.300}", shadow: "none" } }, info: { background: "{sky.400}", hoverBackground: "{sky.300}", activeBackground: "{sky.200}", borderColor: "{sky.400}", hoverBorderColor: "{sky.300}", activeBorderColor: "{sky.200}", color: "{sky.950}", hoverColor: "{sky.950}", activeColor: "{sky.950}", focusRing: { color: "{sky.400}", shadow: "none" } }, success: { background: "{green.400}", hoverBackground: "{green.300}", activeBackground: "{green.200}", borderColor: "{green.400}", hoverBorderColor: "{green.300}", activeBorderColor: "{green.200}", color: "{green.950}", hoverColor: "{green.950}", activeColor: "{green.950}", focusRing: { color: "{green.400}", shadow: "none" } }, warn: { background: "{orange.400}", hoverBackground: "{orange.300}", activeBackground: "{orange.200}", borderColor: "{orange.400}", hoverBorderColor: "{orange.300}", activeBorderColor: "{orange.200}", color: "{orange.950}", hoverColor: "{orange.950}", activeColor: "{orange.950}", focusRing: { color: "{orange.400}", shadow: "none" } }, help: { background: "{purple.400}", hoverBackground: "{purple.300}", activeBackground: "{purple.200}", borderColor: "{purple.400}", hoverBorderColor: "{purple.300}", activeBorderColor: "{purple.200}", color: "{purple.950}", hoverColor: "{purple.950}", activeColor: "{purple.950}", focusRing: { color: "{purple.400}", shadow: "none" } }, danger: { background: "{red.400}", hoverBackground: "{red.300}", activeBackground: "{red.200}", borderColor: "{red.400}", hoverBorderColor: "{red.300}", activeBorderColor: "{red.200}", color: "{red.950}", hoverColor: "{red.950}", activeColor: "{red.950}", focusRing: { color: "{red.400}", shadow: "none" } }, contrast: { background: "{surface.0}", hoverBackground: "{surface.100}", activeBackground: "{surface.200}", borderColor: "{surface.0}", hoverBorderColor: "{surface.100}", activeBorderColor: "{surface.200}", color: "{surface.950}", hoverColor: "{surface.950}", activeColor: "{surface.950}", focusRing: { color: "{surface.0}", shadow: "none" } } }, outlined: { primary: { hoverBackground: "color-mix(in srgb, {primary.color}, transparent 96%)", activeBackground: "color-mix(in srgb, {primary.color}, transparent 84%)", borderColor: "{primary.700}", color: "{primary.color}" }, secondary: { hoverBackground: "rgba(255,255,255,0.04)", activeBackground: "rgba(255,255,255,0.16)", borderColor: "{surface.700}", color: "{surface.400}" }, success: { hoverBackground: "color-mix(in srgb, {green.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {green.400}, transparent 84%)", borderColor: "{green.700}", color: "{green.400}" }, info: { hoverBackground: "color-mix(in srgb, {sky.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {sky.400}, transparent 84%)", borderColor: "{sky.700}", color: "{sky.400}" }, warn: { hoverBackground: "color-mix(in srgb, {orange.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {orange.400}, transparent 84%)", borderColor: "{orange.700}", color: "{orange.400}" }, help: { hoverBackground: "color-mix(in srgb, {purple.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {purple.400}, transparent 84%)", borderColor: "{purple.700}", color: "{purple.400}" }, danger: { hoverBackground: "color-mix(in srgb, {red.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {red.400}, transparent 84%)", borderColor: "{red.700}", color: "{red.400}" }, contrast: { hoverBackground: "{surface.800}", activeBackground: "{surface.700}", borderColor: "{surface.500}", color: "{surface.0}" }, plain: { hoverBackground: "{surface.800}", activeBackground: "{surface.700}", borderColor: "{surface.600}", color: "{surface.0}" } }, text: { primary: { hoverBackground: "color-mix(in srgb, {primary.color}, transparent 96%)", activeBackground: "color-mix(in srgb, {primary.color}, transparent 84%)", color: "{primary.color}" }, secondary: { hoverBackground: "{surface.800}", activeBackground: "{surface.700}", color: "{surface.400}" }, success: { hoverBackground: "color-mix(in srgb, {green.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {green.400}, transparent 84%)", color: "{green.400}" }, info: { hoverBackground: "color-mix(in srgb, {sky.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {sky.400}, transparent 84%)", color: "{sky.400}" }, warn: { hoverBackground: "color-mix(in srgb, {orange.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {orange.400}, transparent 84%)", color: "{orange.400}" }, help: { hoverBackground: "color-mix(in srgb, {purple.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {purple.400}, transparent 84%)", color: "{purple.400}" }, danger: { hoverBackground: "color-mix(in srgb, {red.400}, transparent 96%)", activeBackground: "color-mix(in srgb, {red.400}, transparent 84%)", color: "{red.400}" }, contrast: { hoverBackground: "{surface.800}", activeBackground: "{surface.700}", color: "{surface.0}" }, plain: { hoverBackground: "{surface.800}", activeBackground: "{surface.700}", color: "{surface.0}" } }, link: { color: "{primary.color}", hoverColor: "{primary.color}", activeColor: "{primary.color}" } } }, _C = `
.p-button:focus-visible {
    background: dt('button.primary.active.background');
    border-color: dt('button.primary.active.background');
}

.p-button-secondary:focus-visible {
    background: dt('button.secondary.active.background');
    border-color: dt('button.secondary.active.background');
}

.p-button-success:focus-visible {
    background: dt('button.success.active.background');
    border-color: dt('button.success.active.background');
}

.p-button-info:focus-visible {
    background: dt('button.info.active.background');
    border-color: dt('button.info.active.background');
}

.p-button-warn:focus-visible {
    background: dt('button.warn.active.background');
    border-color: dt('button.warn.active.background');
}

.p-button-help:focus-visible {
    background: dt('button.help.active.background');
    border-color: dt('button.help.active.background');
}

.p-button-danger:focus-visible {
    background: dt('button.danger.active.background');
    border-color: dt('button.danger.active.background');
}

.p-button-contrast:focus-visible {
    background: dt('button.contrast.active.background');
    border-color: dt('button.contrast.active.background');
}

.p-button-link:focus-visible {
    background: color-mix(in srgb, dt('primary.color'), transparent 84%);
    border-color: transparent;
}

.p-button-text:focus-visible {
    background: dt('button.text.primary.active.background');
    border-color: transparent;
}

.p-button-secondary.p-button-text:focus-visible {
    background: dt('button.text.secondary.active.background');
    border-color: transparent;
}

.p-button-success.p-button-text:focus-visible {
    background: dt('button.text.success.active.background');
    border-color: transparent;
}

.p-button-info.p-button-text:focus-visible {
    background: dt('button.text.info.active.background');
    border-color: transparent;
}

.p-button-warn.p-button-text:focus-visible {
    background: dt('button.text.warn.active.background');
    border-color: transparent;
}

.p-button-help.p-button-text:focus-visible {
    background: dt('button.text.help.active.background');
    border-color: transparent;
}

.p-button-danger.p-button-text:focus-visible {
    background: dt('button.text.danger.active.background');
    border-color: transparent;
}

.p-button-contrast.p-button-text:focus-visible {
    background: dt('button.text.contrast.active.background');
    border-color: transparent;
}

.p-button-plain.p-button-text:focus-visible {
    background: dt('button.text.plain.active.background');
    border-color: transparent;
}

.p-button-outlined:focus-visible {
    background: dt('button.outlined.primary.active.background');
}

.p-button-secondary.p-button-outlined:focus-visible {
    background: dt('button.outlined.secondary.active.background');
    border-color: dt('button.outlined.secondary.border.color');
}

.p-button-success.p-button-outlined:focus-visible {
    background: dt('button.outlined.success.active.background');
}

.p-button-info.p-button-outlined:focus-visible {
    background: dt('button.outlined.info.active.background');
}

.p-button-warn.p-button-outlined:focus-visible {
    background: dt('button.outlined.warn.active.background');
}

.p-button-help.p-button-outlined:focus-visible {
    background: dt('button.outlined.help.active.background');
}

.p-button-danger.p-button-outlined:focus-visible {
    background: dt('button.outlined.danger.active.background');
}

.p-button-contrast.p-button-outlined:focus-visible {
    background: dt('button.outlined.contrast.active.background');
}

.p-button-plain.p-button-outlined:focus-visible {
    background: dt('button.outlined.plain.active.background');
}
`, KC = { root: jC, colorScheme: VC, css: _C }, HC = { background: "{content.background}", borderRadius: "{content.border.radius}", color: "{content.color}", shadow: "0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)" }, WC = { padding: "1.5rem", gap: "0.75rem" }, UC = { gap: "0.5rem" }, GC = { fontSize: "1.25rem", fontWeight: "500" }, qC = { color: "{text.muted.color}" }, JC = { root: HC, body: WC, caption: UC, title: GC, subtitle: qC, css: "" }, YC = { transitionDuration: "{transition.duration}" }, XC = { gap: "0.25rem" }, ZC = { padding: "1rem", gap: "1rem" }, QC = { width: "1.25rem", height: "1.25rem", borderRadius: "50%", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, ex = { light: { indicator: { background: "{surface.200}", hoverBackground: "{surface.300}", activeBackground: "{primary.color}" } }, dark: { indicator: { background: "{surface.700}", hoverBackground: "{surface.600}", activeBackground: "{primary.color}" } } }, tx = `
.p-carousel-indicator-button:hover {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%);
}

.p-carousel-indicator-button:focus-visible {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%);
}

.p-carousel-indicator-active .p-carousel-indicator-button:hover {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('carousel.indicator.active.background'), transparent 92%);
}

.p-carousel-indicator-active .p-carousel-indicator-button:focus-visible {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('carousel.indicator.active.background'), transparent 84%);
}
`, nx = { root: YC, content: XC, indicatorList: ZC, indicator: QC, colorScheme: ex, css: tx }, ox = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledHoverBackground: "{form.field.filled.hover.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", invalidPlaceholderColor: "{form.field.invalid.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}", sm: { fontSize: "{form.field.sm.font.size}", paddingX: "{form.field.sm.padding.x}", paddingY: "{form.field.sm.padding.y}" }, lg: { fontSize: "{form.field.lg.font.size}", paddingX: "{form.field.lg.padding.x}", paddingY: "{form.field.lg.padding.y}" } }, rx = { width: "2.5rem", color: "{form.field.icon.color}" }, ix = { background: "{overlay.select.background}", borderColor: "{overlay.select.border.color}", borderRadius: "{overlay.select.border.radius}", color: "{overlay.select.color}", shadow: "{overlay.select.shadow}" }, ax = { padding: "{list.padding}", gap: "{list.gap}", mobileIndent: "1rem" }, lx = { focusBackground: "{list.option.focus.background}", selectedBackground: "{list.option.selected.background}", selectedFocusBackground: "{list.option.selected.focus.background}", color: "{list.option.color}", focusColor: "{list.option.focus.color}", selectedColor: "{list.option.selected.color}", selectedFocusColor: "{list.option.selected.focus.color}", padding: "{list.option.padding}", borderRadius: "{list.option.border.radius}", icon: { color: "{list.option.icon.color}", focusColor: "{list.option.icon.focus.color}", size: "0.875rem" } }, sx = { color: "{form.field.icon.color}" }, dx = `
.p-cascadeselect.p-variant-filled {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: 1px solid transparent;
    background: dt('cascadeselect.filled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.border.color'), dt('cascadeselect.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.p-cascadeselect.p-variant-filled:not(.p-disabled):hover {
    background: dt('cascadeselect.filled.hover.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.hover.border.color'), dt('cascadeselect.hover.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-cascadeselect.p-variant-filled:not(.p-disabled).p-focus {
    outline: 0 none;
    background: dt('cascadeselect.filled.focus.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.border.color'), dt('cascadeselect.border.color'));
    background-size: 100% 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-cascadeselect.p-variant-filled:not(.p-disabled).p-focus:hover {
    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.hover.border.color'), dt('cascadeselect.hover.border.color'));
}

.p-cascadeselect.p-variant-filled.p-invalid {
    background-image: linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color')), linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color'));
}

.p-cascadeselect.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {
    background-image: linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color')), linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color'));
}

.p-cascadeselect-option {
    transition: none;
}
`, cx = { root: ox, dropdown: rx, overlay: ix, list: ax, option: lx, clearIcon: sx, css: dx }, ux = { borderRadius: "{border.radius.xs}", width: "18px", height: "18px", background: "{form.field.background}", checkedBackground: "{primary.color}", checkedHoverBackground: "{primary.color}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", checkedBorderColor: "{primary.color}", checkedHoverBorderColor: "{primary.color}", checkedFocusBorderColor: "{primary.color}", checkedDisabledBorderColor: "{form.field.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", shadow: "{form.field.shadow}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" }, transitionDuration: "{form.field.transition.duration}", sm: { width: "14px", height: "14px" }, lg: { width: "22px", height: "22px" } }, px = { size: "0.875rem", color: "{form.field.color}", checkedColor: "{primary.contrast.color}", checkedHoverColor: "{primary.contrast.color}", disabledColor: "{form.field.disabled.color}", sm: { size: "0.75rem" }, lg: { size: "1rem" } }, fx = `
.p-checkbox {
    border-radius: 50%;
    transition: box-shadow dt('checkbox.transition.duration');
}

.p-checkbox-box {
    border-width: 2px;
}

.p-checkbox:not(.p-disabled):has(.p-checkbox-input:hover) {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%);
}

.p-checkbox:not(.p-disabled):has(.p-checkbox-input:focus-visible) {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 88%);
}

.p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('checkbox.checked.background'), transparent 92%);
}

.p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:focus-visible) {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('checkbox.checked.background'), transparent 84%);
}

.p-checkbox-checked .p-checkbox-box:before  {
    content: "";
    position: absolute;
    top: var(--p-md-check-icon-t);
    left: 2px;
    border-right: 2px solid transparent;
    border-bottom: 2px solid transparent;
    transform: rotate(45deg);
    transform-origin: 0% 100%;
    animation: p-md-check 125ms 50ms linear forwards;
}

.p-checkbox-checked .p-checkbox-icon {
    display: none;
}

.p-checkbox {
    --p-md-check-icon-t: 10px;
    --p-md-check-icon-w: 6px;
    --p-md-check-icon-h: 12px;
}

.p-checkbox-sm {
    --p-md-check-icon-t: 8px;
    --p-md-check-icon-w: 4px;
    --p-md-check-icon-h: 10px;
}

.p-checkbox-lg {
    --p-md-check-icon-t: 12px;
    --p-md-check-icon-w: 8px;
    --p-md-check-icon-h: 16px;
}

@keyframes p-md-check {
    0%{
      width: 0;
      height: 0;
      border-color: dt('checkbox.icon.checked.color');
      transform: translate3d(0,0,0) rotate(45deg);
    }
    33%{
      width: var(--p-md-check-icon-w);
      height: 0;
      transform: translate3d(0,0,0) rotate(45deg);
    }
    100%{
      width: var(--p-md-check-icon-w);
      height: var(--p-md-check-icon-h);
      border-color: dt('checkbox.icon.checked.color');
      transform: translate3d(0,calc(-1 * var(--p-md-check-icon-h)),0) rotate(45deg);
    }
}
`, hx = { root: ux, icon: px, css: fx }, mx = { borderRadius: "2rem", paddingX: "0.75rem", paddingY: "0.75rem", gap: "0.5rem", transitionDuration: "{transition.duration}" }, gx = { width: "2.25rem", height: "2.25rem" }, bx = { size: "1rem" }, vx = { size: "1rem", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}" } }, yx = { light: { root: { background: "{surface.200}", color: "{surface.900}" }, icon: { color: "{surface.600}" }, removeIcon: { color: "{surface.600}", focusRing: { shadow: "0 0 1px 4px {surface.300}" } } }, dark: { root: { background: "{surface.700}", color: "{surface.0}" }, icon: { color: "{surface.0}" }, removeIcon: { color: "{surface.0}", focusRing: { shadow: "0 0 1px 4px {surface.600}" } } } }, kx = { root: mx, image: gx, icon: bx, removeIcon: vx, colorScheme: yx, css: "" }, wx = { transitionDuration: "{transition.duration}" }, Cx = { width: "2rem", height: "2rem", borderRadius: "{form.field.border.radius}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, xx = { shadow: "{overlay.popover.shadow}", borderRadius: "{overlay.popover.borderRadius}" }, Sx = { light: { panel: { background: "{surface.800}", borderColor: "{surface.900}" }, handle: { color: "{surface.0}" } }, dark: { panel: { background: "{surface.900}", borderColor: "{surface.700}" }, handle: { color: "{surface.0}" } } }, Ix = { root: wx, preview: Cx, panel: xx, colorScheme: Sx, css: "" }, Ox = { size: "2rem", color: "{overlay.modal.color}" }, Px = { gap: "1rem" }, $x = { icon: Ox, content: Px, css: "" }, Tx = { background: "{overlay.popover.background}", borderColor: "{overlay.popover.border.color}", color: "{overlay.popover.color}", borderRadius: "{overlay.popover.border.radius}", shadow: "{overlay.popover.shadow}", gutter: "10px", arrowOffset: "1.25rem" }, Rx = { padding: "{overlay.popover.padding}", gap: "1rem" }, Bx = { size: "1.5rem", color: "{overlay.popover.color}" }, Ex = { gap: "0.5rem", padding: "0 {overlay.popover.padding} {overlay.popover.padding} {overlay.popover.padding}" }, Mx = { root: Tx, content: Rx, icon: Bx, footer: Ex, css: "" }, Ax = { background: "{content.background}", borderColor: "transparent", color: "{content.color}", borderRadius: "{content.border.radius}", shadow: "{overlay.navigation.shadow}", transitionDuration: "{transition.duration}" }, Dx = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" }, Lx = { focusBackground: "{navigation.item.focus.background}", activeBackground: "{navigation.item.active.background}", color: "{navigation.item.color}", focusColor: "{navigation.item.focus.color}", activeColor: "{navigation.item.active.color}", padding: "{navigation.item.padding}", borderRadius: "{navigation.item.border.radius}", gap: "{navigation.item.gap}", icon: { color: "{navigation.item.icon.color}", focusColor: "{navigation.item.icon.focus.color}", activeColor: "{navigation.item.icon.active.color}" } }, zx = { mobileIndent: "1rem" }, Fx = { size: "{navigation.submenu.icon.size}", color: "{navigation.submenu.icon.color}", focusColor: "{navigation.submenu.icon.focus.color}", activeColor: "{navigation.submenu.icon.active.color}" }, Nx = { borderColor: "{content.border.color}" }, jx = { root: Ax, list: Dx, item: Lx, submenu: zx, submenuIcon: Fx, separator: Nx, css: "" }, Vx = { transitionDuration: "{transition.duration}" }, _x = { background: "{content.background}", borderColor: "{datatable.border.color}", color: "{content.color}", borderWidth: "0 0 1px 0", padding: "0.75rem 1rem", sm: { padding: "0.375rem 0.5rem" }, lg: { padding: "1rem 1.25rem" } }, Kx = { background: "{content.background}", hoverBackground: "{content.hover.background}", selectedBackground: "{highlight.background}", borderColor: "{datatable.border.color}", color: "{content.color}", hoverColor: "{content.hover.color}", selectedColor: "{highlight.color}", gap: "0.5rem", padding: "0.75rem 1rem", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "-1px", shadow: "{focus.ring.shadow}" }, sm: { padding: "0.375rem 0.5rem" }, lg: { padding: "1rem 1.25rem" } }, Hx = { fontWeight: "600" }, Wx = { background: "{content.background}", hoverBackground: "{content.hover.background}", selectedBackground: "{highlight.background}", color: "{content.color}", hoverColor: "{content.hover.color}", selectedColor: "{highlight.color}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "-1px", shadow: "{focus.ring.shadow}" } }, Ux = { borderColor: "{datatable.border.color}", padding: "0.75rem 1rem", sm: { padding: "0.375rem 0.5rem" }, lg: { padding: "1rem 1.25rem" } }, Gx = { background: "{content.background}", borderColor: "{datatable.border.color}", color: "{content.color}", padding: "0.75rem 1rem", sm: { padding: "0.375rem 0.5rem" }, lg: { padding: "1rem 1.25rem" } }, qx = { fontWeight: "600" }, Jx = { background: "{content.background}", borderColor: "{datatable.border.color}", color: "{content.color}", borderWidth: "0 0 1px 0", padding: "0.75rem 1rem", sm: { padding: "0.375rem 0.5rem" }, lg: { padding: "1rem 1.25rem" } }, Yx = { color: "{primary.color}" }, Xx = { width: "0.5rem" }, Zx = { width: "1px", color: "{primary.color}" }, Qx = { color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}", size: "0.875rem" }, e2 = { size: "2rem" }, t2 = { hoverBackground: "{content.hover.background}", selectedHoverBackground: "{content.background}", color: "{text.muted.color}", hoverColor: "{text.color}", selectedHoverColor: "{primary.color}", size: "1.75rem", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, n2 = { inlineGap: "0.5rem", overlaySelect: { background: "{overlay.select.background}", borderColor: "{overlay.select.border.color}", borderRadius: "{overlay.select.border.radius}", color: "{overlay.select.color}", shadow: "{overlay.select.shadow}" }, overlayPopover: { background: "{overlay.popover.background}", borderColor: "{overlay.popover.border.color}", borderRadius: "{overlay.popover.border.radius}", color: "{overlay.popover.color}", shadow: "{overlay.popover.shadow}", padding: "{overlay.popover.padding}", gap: "0.5rem" }, rule: { borderColor: "{content.border.color}" }, constraintList: { padding: "{list.padding}", gap: "{list.gap}" }, constraint: { focusBackground: "{list.option.focus.background}", selectedBackground: "{list.option.selected.background}", selectedFocusBackground: "{list.option.selected.focus.background}", color: "{list.option.color}", focusColor: "{list.option.focus.color}", selectedColor: "{list.option.selected.color}", selectedFocusColor: "{list.option.selected.focus.color}", separator: { borderColor: "{content.border.color}" }, padding: "{list.option.padding}", borderRadius: "{list.option.border.radius}" } }, o2 = { borderColor: "{datatable.border.color}", borderWidth: "0 0 1px 0" }, r2 = { borderColor: "{datatable.border.color}", borderWidth: "0 0 1px 0" }, i2 = { light: { root: { borderColor: "{content.border.color}" }, row: { stripedBackground: "{surface.50}" }, bodyCell: { selectedBorderColor: "{primary.100}" } }, dark: { root: { borderColor: "{surface.800}" }, row: { stripedBackground: "{surface.950}" }, bodyCell: { selectedBorderColor: "{primary.900}" } } }, a2 = `
.p-datatable-header-cell,
.p-datatable-tbody > tr {
    transition: none;
}
`, l2 = { root: Vx, header: _x, headerCell: Kx, columnTitle: Hx, row: Wx, bodyCell: Ux, footerCell: Gx, columnFooter: qx, footer: Jx, dropPoint: Yx, columnResizer: Xx, resizeIndicator: Zx, sortIcon: Qx, loadingIcon: e2, rowToggleButton: t2, filter: n2, paginatorTop: o2, paginatorBottom: r2, colorScheme: i2, css: a2 }, s2 = { borderColor: "transparent", borderWidth: "0", borderRadius: "0", padding: "0" }, d2 = { background: "{content.background}", color: "{content.color}", borderColor: "{content.border.color}", borderWidth: "0 0 1px 0", padding: "0.75rem 1rem", borderRadius: "0" }, c2 = { background: "{content.background}", color: "{content.color}", borderColor: "transparent", borderWidth: "0", padding: "0", borderRadius: "0" }, u2 = { background: "{content.background}", color: "{content.color}", borderColor: "{content.border.color}", borderWidth: "1px 0 0 0", padding: "0.75rem 1rem", borderRadius: "0" }, p2 = { borderColor: "{content.border.color}", borderWidth: "0 0 1px 0" }, f2 = { borderColor: "{content.border.color}", borderWidth: "1px 0 0 0" }, h2 = { root: s2, header: d2, content: c2, footer: u2, paginatorTop: p2, paginatorBottom: f2, css: "" }, m2 = { transitionDuration: "{transition.duration}" }, g2 = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", borderRadius: "{content.border.radius}", shadow: "{overlay.popover.shadow}", padding: "0.5rem" }, b2 = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", padding: "0 0 0.5rem 0" }, v2 = { gap: "0.5rem", fontWeight: "700" }, y2 = { width: "3rem", sm: { width: "2.5rem" }, lg: { width: "3.5rem" }, borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.border.color}", activeBorderColor: "{form.field.border.color}", borderRadius: "{form.field.border.radius}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, k2 = { color: "{form.field.icon.color}" }, w2 = { hoverBackground: "{content.hover.background}", color: "{content.color}", hoverColor: "{content.hover.color}", padding: "0.5rem 0.75rem", borderRadius: "{content.border.radius}" }, C2 = { hoverBackground: "{content.hover.background}", color: "{content.color}", hoverColor: "{content.hover.color}", padding: "0.5rem 0.75rem", borderRadius: "{content.border.radius}" }, x2 = { borderColor: "{content.border.color}", gap: "{overlay.popover.padding}" }, S2 = { margin: "0.5rem 0 0 0" }, I2 = { padding: "0.5rem", fontWeight: "700", color: "{content.color}" }, O2 = { hoverBackground: "{content.hover.background}", selectedBackground: "{primary.color}", rangeSelectedBackground: "{highlight.background}", color: "{content.color}", hoverColor: "{content.hover.color}", selectedColor: "{primary.contrast.color}", rangeSelectedColor: "{highlight.color}", width: "2.5rem", height: "2.5rem", borderRadius: "50%", padding: "0.125rem", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, P2 = { margin: "0.5rem 0 0 0" }, $2 = { padding: "0.625rem", borderRadius: "{content.border.radius}" }, T2 = { margin: "0.5rem 0 0 0" }, R2 = { padding: "0.625rem", borderRadius: "{content.border.radius}" }, B2 = { padding: "0.5rem 0 0 0", borderColor: "{content.border.color}" }, E2 = { padding: "0.5rem 0 0 0", borderColor: "{content.border.color}", gap: "0.5rem", buttonGap: "0.25rem" }, M2 = { light: { dropdown: { background: "{surface.100}", hoverBackground: "{surface.200}", activeBackground: "{surface.300}", color: "{surface.600}", hoverColor: "{surface.700}", activeColor: "{surface.800}" }, today: { background: "{surface.200}", color: "{surface.900}" } }, dark: { dropdown: { background: "{surface.800}", hoverBackground: "{surface.700}", activeBackground: "{surface.600}", color: "{surface.300}", hoverColor: "{surface.200}", activeColor: "{surface.100}" }, today: { background: "{surface.700}", color: "{surface.0}" } } }, A2 = `
.p-datepicker-header {
    justify-content: start;
}

.p-datepicker-title {
    order: 1;
}

.p-datepicker-prev-button {
    order: 2;
    margin-inline-start: auto;
}

.p-datepicker-next-button {
    order: 2;
    margin-inline-start: 0.5rem;
}

.p-datepicker-select-month:focus-visible {
    background: dt('datepicker.select.month.hover.background');
    color: dt('datepicker.select.month.hover.color');
    outline: 0 none;
}

.p-datepicker-select-year:focus-visible {
    background: dt('datepicker.select.year.hover.background');
    color: dt('datepicker.select.year.hover.color');
    outline: 0 none;
}

.p-datepicker-dropdown:focus-visible {
    outline: 0 none;
    background: dt('datepicker.dropdown.hover.background');
    border-color: dt('datepicker.dropdown.hover.border.color');
    color: dt('datepicker.dropdown.hover.color');
}
`, D2 = { root: m2, panel: g2, header: b2, title: v2, dropdown: y2, inputIcon: k2, selectMonth: w2, selectYear: C2, group: x2, dayView: S2, weekDay: I2, date: O2, monthView: P2, month: $2, yearView: T2, year: R2, buttonbar: B2, timePicker: E2, colorScheme: M2, css: A2 }, L2 = { background: "{overlay.modal.background}", borderColor: "{overlay.modal.border.color}", color: "{overlay.modal.color}", borderRadius: "{overlay.modal.border.radius}", shadow: "{overlay.modal.shadow}" }, z2 = { padding: "{overlay.modal.padding}", gap: "0.5rem" }, F2 = { fontSize: "1.25rem", fontWeight: "600" }, N2 = { padding: "0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}" }, j2 = { padding: "0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}", gap: "0.5rem" }, V2 = { root: L2, header: z2, title: F2, content: N2, footer: j2, css: "" }, _2 = { borderColor: "{content.border.color}" }, K2 = { background: "{content.background}", color: "{text.color}" }, H2 = { margin: "1rem 0", padding: "0 1rem", content: { padding: "0 0.5rem" } }, W2 = { margin: "0 1rem", padding: "0.5rem 0", content: { padding: "0.5rem 0" } }, U2 = { root: _2, content: K2, horizontal: H2, vertical: W2, css: "" }, G2 = { background: "rgba(255, 255, 255, 0.1)", borderColor: "rgba(255, 255, 255, 0.2)", padding: "0.5rem", borderRadius: "{border.radius.xl}" }, q2 = { borderRadius: "{content.border.radius}", padding: "0.5rem", size: "3rem", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, J2 = { root: G2, item: q2, css: "" }, Y2 = { background: "{overlay.modal.background}", borderColor: "{overlay.modal.border.color}", color: "{overlay.modal.color}", shadow: "{overlay.modal.shadow}" }, X2 = { padding: "{overlay.modal.padding}" }, Z2 = { fontSize: "1.5rem", fontWeight: "600" }, Q2 = { padding: "0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}" }, e5 = { padding: "{overlay.modal.padding}" }, t5 = { root: Y2, header: X2, title: Z2, content: Q2, footer: e5, css: "" }, n5 = { background: "{content.background}", borderColor: "{content.border.color}", borderRadius: "{content.border.radius}" }, o5 = { color: "{text.muted.color}", hoverColor: "{text.color}", activeColor: "{primary.color}" }, r5 = { background: "{overlay.select.background}", borderColor: "{overlay.select.border.color}", borderRadius: "{overlay.select.border.radius}", color: "{overlay.select.color}", shadow: "{overlay.select.shadow}", padding: "{list.padding}" }, i5 = { focusBackground: "{list.option.focus.background}", color: "{list.option.color}", focusColor: "{list.option.focus.color}", padding: "{list.option.padding}", borderRadius: "{list.option.border.radius}" }, a5 = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", borderRadius: "{content.border.radius}" }, l5 = `
.p-editor .p-editor-toolbar {
    padding: 0.75rem
}
`, s5 = { toolbar: n5, toolbarItem: o5, overlay: r5, overlayOption: i5, content: a5, css: l5 }, d5 = { background: "{content.background}", borderColor: "{content.border.color}", borderRadius: "{content.border.radius}", color: "{content.color}", padding: "0 1.25rem 1.25rem 1.25rem", transitionDuration: "{transition.duration}" }, c5 = { background: "{content.background}", hoverBackground: "{content.hover.background}", color: "{content.color}", hoverColor: "{content.hover.color}", borderRadius: "{content.border.radius}", borderWidth: "1px", borderColor: "transparent", padding: "0.75rem 1rem", gap: "0.5rem", fontWeight: "600", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, u5 = { color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}" }, p5 = { padding: "0" }, f5 = `
.p-fieldset-toggle-button:focus-visible {
    background: dt('navigation.item.active.background');
}
`, h5 = { root: d5, legend: c5, toggleIcon: u5, content: p5, css: f5 }, m5 = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", borderRadius: "{content.border.radius}", transitionDuration: "{transition.duration}" }, g5 = { background: "transparent", color: "{text.color}", padding: "1.25rem", borderColor: "unset", borderWidth: "0", borderRadius: "0", gap: "0.5rem" }, b5 = { highlightBorderColor: "{primary.color}", padding: "0 1.25rem 1.25rem 1.25rem", gap: "1rem" }, v5 = { padding: "1rem", gap: "1rem", borderColor: "{content.border.color}", info: { gap: "0.5rem" } }, y5 = { gap: "0.5rem" }, k5 = { height: "0.25rem" }, w5 = { gap: "0.5rem" }, C5 = { root: m5, header: g5, content: b5, file: v5, fileList: y5, progressbar: k5, basic: w5, css: "" }, x5 = { color: "{form.field.float.label.color}", focusColor: "{form.field.float.label.focus.color}", activeColor: "{form.field.float.label.active.color}", invalidColor: "{form.field.float.label.invalid.color}", transitionDuration: "0.2s", positionX: "{form.field.padding.x}", positionY: "{form.field.padding.y}", fontWeight: "500", active: { fontSize: "0.75rem", fontWeight: "400" } }, S5 = { active: { top: "-1.25rem" } }, I5 = { input: { paddingTop: "1.5rem", paddingBottom: "0.5rem" }, active: { top: "0.5rem" } }, O5 = { borderRadius: "{border.radius.xs}", active: { background: "{form.field.background}", padding: "0 0.125rem" } }, P5 = { root: x5, over: S5, in: I5, on: O5, css: "" }, $5 = { borderWidth: "1px", borderColor: "{content.border.color}", borderRadius: "{content.border.radius}", transitionDuration: "{transition.duration}" }, T5 = { background: "rgba(255, 255, 255, 0.1)", hoverBackground: "rgba(255, 255, 255, 0.2)", color: "{surface.100}", hoverColor: "{surface.0}", size: "3rem", gutter: "0.5rem", prev: { borderRadius: "50%" }, next: { borderRadius: "50%" }, focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, R5 = { size: "1.5rem" }, B5 = { background: "{content.background}", padding: "1rem 0.25rem" }, E5 = { size: "2rem", borderRadius: "50%", gutter: "0.5rem", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, M5 = { size: "1rem" }, A5 = { background: "rgba(0, 0, 0, 0.5)", color: "{surface.100}", padding: "1rem" }, D5 = { gap: "0.5rem", padding: "1rem" }, L5 = { width: "1rem", height: "1rem", activeBackground: "{primary.color}", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, z5 = { background: "rgba(0, 0, 0, 0.5)" }, F5 = { background: "rgba(255, 255, 255, 0.4)", hoverBackground: "rgba(255, 255, 255, 0.6)", activeBackground: "rgba(255, 255, 255, 0.9)" }, N5 = { size: "3rem", gutter: "0.5rem", background: "rgba(255, 255, 255, 0.1)", hoverBackground: "rgba(255, 255, 255, 0.2)", color: "{surface.50}", hoverColor: "{surface.0}", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, j5 = { size: "1.5rem" }, V5 = { light: { thumbnailNavButton: { hoverBackground: "{surface.100}", color: "{surface.600}", hoverColor: "{surface.700}" }, indicatorButton: { background: "{surface.200}", hoverBackground: "{surface.300}" } }, dark: { thumbnailNavButton: { hoverBackground: "{surface.700}", color: "{surface.400}", hoverColor: "{surface.0}" }, indicatorButton: { background: "{surface.700}", hoverBackground: "{surface.600}" } } }, _5 = { root: $5, navButton: T5, navIcon: R5, thumbnailsContent: B5, thumbnailNavButton: E5, thumbnailNavButtonIcon: M5, caption: A5, indicatorList: D5, indicatorButton: L5, insetIndicatorList: z5, insetIndicatorButton: F5, closeButton: N5, closeButtonIcon: j5, colorScheme: V5, css: "" }, K5 = { color: "{form.field.icon.color}" }, H5 = { icon: K5, css: "" }, W5 = { color: "{form.field.float.label.color}", focusColor: "{form.field.float.label.focus.color}", invalidColor: "{form.field.float.label.invalid.color}", transitionDuration: "0.2s", positionX: "{form.field.padding.x}", top: "0.5rem", fontSize: "0.75rem", fontWeight: "400" }, U5 = { paddingTop: "1.5rem", paddingBottom: "0.5rem" }, G5 = { root: W5, input: U5, css: "" }, q5 = { transitionDuration: "{transition.duration}" }, J5 = { icon: { size: "1.5rem" }, mask: { background: "{mask.background}", color: "{mask.color}" } }, Y5 = { position: { left: "auto", right: "1rem", top: "1rem", bottom: "auto" }, blur: "8px", background: "rgba(255,255,255,0.1)", borderColor: "rgba(255,255,255,0.2)", borderWidth: "1px", borderRadius: "30px", padding: ".5rem", gap: "0.5rem" }, X5 = { hoverBackground: "rgba(255,255,255,0.1)", color: "{surface.50}", hoverColor: "{surface.0}", size: "3rem", iconSize: "1.5rem", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, Z5 = { root: q5, preview: J5, toolbar: Y5, action: X5, css: "" }, Q5 = { size: "20px", hoverSize: "40px", background: "rgba(255,255,255,0.4)", hoverBackground: "rgba(255,255,255,0.6)", borderColor: "unset", hoverBorderColor: "unset", borderWidth: "0", borderRadius: "50%", transitionDuration: "{transition.duration}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "rgba(255,255,255,0.3)", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, eS = { handle: Q5, css: "" }, tS = { padding: "{form.field.padding.y} {form.field.padding.x}", borderRadius: "{content.border.radius}", gap: "0.5rem" }, nS = { fontWeight: "500" }, oS = { size: "1rem" }, rS = { light: { info: { background: "color-mix(in srgb, {blue.50}, transparent 5%)", borderColor: "{blue.200}", color: "{blue.600}", shadow: "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)" }, success: { background: "color-mix(in srgb, {green.50}, transparent 5%)", borderColor: "{green.200}", color: "{green.600}", shadow: "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)" }, warn: { background: "color-mix(in srgb,{yellow.50}, transparent 5%)", borderColor: "{yellow.200}", color: "{yellow.600}", shadow: "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)" }, error: { background: "color-mix(in srgb, {red.50}, transparent 5%)", borderColor: "{red.200}", color: "{red.600}", shadow: "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)" }, secondary: { background: "{surface.100}", borderColor: "{surface.200}", color: "{surface.600}", shadow: "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)" }, contrast: { background: "{surface.900}", borderColor: "{surface.950}", color: "{surface.50}", shadow: "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)" } }, dark: { info: { background: "color-mix(in srgb, {blue.500}, transparent 84%)", borderColor: "color-mix(in srgb, {blue.700}, transparent 64%)", color: "{blue.500}", shadow: "0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)" }, success: { background: "color-mix(in srgb, {green.500}, transparent 84%)", borderColor: "color-mix(in srgb, {green.700}, transparent 64%)", color: "{green.500}", shadow: "0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)" }, warn: { background: "color-mix(in srgb, {yellow.500}, transparent 84%)", borderColor: "color-mix(in srgb, {yellow.700}, transparent 64%)", color: "{yellow.500}", shadow: "0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)" }, error: { background: "color-mix(in srgb, {red.500}, transparent 84%)", borderColor: "color-mix(in srgb, {red.700}, transparent 64%)", color: "{red.500}", shadow: "0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)" }, secondary: { background: "{surface.800}", borderColor: "{surface.700}", color: "{surface.300}", shadow: "0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)" }, contrast: { background: "{surface.0}", borderColor: "{surface.100}", color: "{surface.950}", shadow: "0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)" } } }, iS = { root: tS, text: nS, icon: oS, colorScheme: rS, css: "" }, aS = { padding: "{form.field.padding.y} {form.field.padding.x}", borderRadius: "{content.border.radius}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" }, transitionDuration: "{transition.duration}" }, lS = { hoverBackground: "{content.hover.background}", hoverColor: "{content.hover.color}" }, sS = { root: aS, display: lS, css: "" }, dS = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}" }, cS = { borderRadius: "{border.radius.sm}" }, uS = { light: { chip: { focusBackground: "{surface.200}", color: "{surface.800}" } }, dark: { chip: { focusBackground: "{surface.700}", color: "{surface.0}" } } }, pS = { root: dS, chip: cS, colorScheme: uS, css: "" }, fS = { background: "{form.field.background}", borderColor: "{form.field.border.color}", color: "{form.field.icon.color}", borderRadius: "{form.field.border.radius}", padding: "0.75rem", minWidth: "3rem" }, hS = `
.p-inputgroup:has(.p-variant-filled) .p-inputgroupaddon {
    border-block-start-color: dt('inputtext.filled.background');
    border-inline-color: dt('inputtext.filled.background');
    background: dt('inputtext.filled.background') no-repeat;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}
`, mS = { addon: fS, css: hS }, gS = { transitionDuration: "{transition.duration}" }, bS = { width: "3rem", borderRadius: "{form.field.border.radius}", verticalPadding: "{form.field.padding.y}" }, vS = { light: { button: { background: "transparent", hoverBackground: "{surface.100}", activeBackground: "{surface.200}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.border.color}", activeBorderColor: "{form.field.border.color}", color: "{surface.400}", hoverColor: "{surface.500}", activeColor: "{surface.600}" } }, dark: { button: { background: "transparent", hoverBackground: "{surface.800}", activeBackground: "{surface.700}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.border.color}", activeBorderColor: "{form.field.border.color}", color: "{surface.400}", hoverColor: "{surface.300}", activeColor: "{surface.200}" } } }, yS = `
.p-inputnumber-stacked .p-inputnumber-button-group {
    top: 2px;
    right: 2px;
    height: calc(100% - 4px);
}

.p-inputnumber-horizontal:has(.p-variant-filled) .p-inputnumber-button {
    border-block-start-color: dt('inputtext.filled.background');
    border-inline-color: dt('inputtext.filled.background');
    background: dt('inputtext.filled.background') no-repeat;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.p-inputnumber-vertical:has(.p-variant-filled) .p-inputnumber-button {
    border-block-color: dt('inputtext.filled.background');
    border-inline-color: dt('inputtext.filled.background');
    background: dt('inputtext.filled.background') no-repeat;
}

.p-inputnumber-vertical:has(.p-variant-filled) .p-inputnumber-increment-button {
    border-block-end: 1px solid dt('inputtext.border.color')
}
`, kS = { root: gS, button: bS, colorScheme: vS, css: yS }, wS = { gap: "0.5rem" }, CS = { width: "3rem", sm: { width: "2.5rem" }, lg: { width: "3.5rem" } }, xS = { root: wS, input: CS, css: "" }, SS = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledHoverBackground: "{form.field.filled.hover.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", invalidPlaceholderColor: "{form.field.invalid.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}", sm: { fontSize: "{form.field.sm.font.size}", paddingX: "{form.field.sm.padding.x}", paddingY: "{form.field.sm.padding.y}" }, lg: { fontSize: "{form.field.lg.font.size}", paddingX: "{form.field.lg.padding.x}", paddingY: "{form.field.lg.padding.y}" } }, IS = `
.p-inputtext.p-variant-filled {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: 1px solid transparent;
    background: dt('inputtext.filled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.border.color'), dt('inputtext.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.p-inputtext.p-variant-filled:enabled:hover {
    background: dt('inputtext.filled.hover.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.hover.border.color'), dt('inputtext.hover.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-inputtext.p-variant-filled:enabled:focus {
    outline: 0 none;
    background: dt('inputtext.filled.focus.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.border.color'), dt('inputtext.border.color'));
    background-size: 100% 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-inputtext.p-variant-filled:enabled:hover:focus {
    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.hover.border.color'), dt('inputtext.hover.border.color'));
}

.p-inputtext.p-variant-filled.p-invalid {
    background-image: linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color')), linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color'));
}

.p-inputtext.p-variant-filled.p-invalid:enabled:focus {
    background-image: linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color')), linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color'));
}

.p-inputtext.p-variant-filled:disabled {
    background: dt('inputtext.disabled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('inputtext.border.color'), dt('inputtext.border.color')), linear-gradient(to bottom, dt('inputtext.border.color'), dt('inputtext.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}
`, OS = { root: SS, css: IS }, PS = { transitionDuration: "{transition.duration}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, $S = { background: "{primary.color}" }, TS = { background: "{content.border.color}" }, RS = { color: "{text.muted.color}" }, BS = { root: PS, value: $S, range: TS, text: RS, css: "" }, ES = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", borderColor: "{form.field.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", shadow: "{form.field.shadow}", borderRadius: "{form.field.border.radius}", transitionDuration: "{form.field.transition.duration}" }, MS = { padding: "{list.padding}", gap: "{list.gap}", header: { padding: "{list.header.padding}" } }, AS = { focusBackground: "{list.option.focus.background}", selectedBackground: "{list.option.selected.background}", selectedFocusBackground: "{list.option.selected.focus.background}", color: "{list.option.color}", focusColor: "{list.option.focus.color}", selectedColor: "{list.option.selected.color}", selectedFocusColor: "{list.option.selected.focus.color}", padding: "{list.option.padding}", borderRadius: "{list.option.border.radius}" }, DS = { background: "{list.option.group.background}", color: "{list.option.group.color}", fontWeight: "{list.option.group.font.weight}", padding: "{list.option.group.padding}" }, LS = { color: "{list.option.color}", gutterStart: "-0.375rem", gutterEnd: "0.375rem" }, zS = { padding: "{list.option.padding}" }, FS = { light: { option: { stripedBackground: "{surface.50}" } }, dark: { option: { stripedBackground: "{surface.900}" } } }, NS = `
.p-listbox-option {
    transition: none;
}
`, jS = { root: ES, list: MS, option: AS, optionGroup: DS, checkmark: LS, emptyMessage: zS, colorScheme: FS, css: NS }, VS = { background: "{content.background}", borderColor: "{content.border.color}", borderRadius: "{content.border.radius}", color: "{content.color}", gap: "0.5rem", verticalOrientation: { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" }, horizontalOrientation: { padding: "0.5rem 0.75rem", gap: "0.5rem" }, transitionDuration: "{transition.duration}" }, _S = { borderRadius: "{content.border.radius}", padding: "{navigation.item.padding}" }, KS = { focusBackground: "{navigation.item.focus.background}", activeBackground: "{navigation.item.active.background}", color: "{navigation.item.color}", focusColor: "{navigation.item.focus.color}", activeColor: "{navigation.item.active.color}", padding: "{navigation.item.padding}", borderRadius: "{navigation.item.border.radius}", gap: "{navigation.item.gap}", icon: { color: "{navigation.item.icon.color}", focusColor: "{navigation.item.icon.focus.color}", activeColor: "{navigation.item.icon.active.color}" } }, HS = { padding: "0", background: "{content.background}", borderColor: "transparent", borderRadius: "{content.border.radius}", color: "{content.color}", shadow: "{overlay.navigation.shadow}", gap: "0.5rem" }, WS = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" }, US = { padding: "{navigation.submenu.label.padding}", fontWeight: "{navigation.submenu.label.font.weight}", background: "{navigation.submenu.label.background.}", color: "{navigation.submenu.label.color}" }, GS = { size: "{navigation.submenu.icon.size}", color: "{navigation.submenu.icon.color}", focusColor: "{navigation.submenu.icon.focus.color}", activeColor: "{navigation.submenu.icon.active.color}" }, qS = { borderColor: "{content.border.color}" }, JS = { borderRadius: "50%", size: "2.5rem", color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}", hoverBackground: "{content.hover.background}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, YS = `
.p-megamenu-button:focus-visible {
    background: dt('navigation.item.active.background');
}
`, XS = { root: VS, baseItem: _S, item: KS, overlay: HS, submenu: WS, submenuLabel: US, submenuIcon: GS, separator: qS, mobileButton: JS, css: YS }, ZS = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", borderRadius: "{content.border.radius}", shadow: "{overlay.navigation.shadow}", transitionDuration: "{transition.duration}" }, QS = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" }, e3 = { focusBackground: "{navigation.item.focus.background}", color: "{navigation.item.color}", focusColor: "{navigation.item.focus.color}", padding: "{navigation.item.padding}", borderRadius: "{navigation.item.border.radius}", gap: "{navigation.item.gap}", icon: { color: "{navigation.item.icon.color}", focusColor: "{navigation.item.icon.focus.color}" } }, t3 = { padding: "{navigation.submenu.label.padding}", fontWeight: "{navigation.submenu.label.font.weight}", background: "{navigation.submenu.label.background}", color: "{navigation.submenu.label.color}" }, n3 = { borderColor: "{content.border.color}" }, o3 = `
.p-menu-overlay {
    border-color: transparent;
}
`, r3 = { root: ZS, list: QS, item: e3, submenuLabel: t3, separator: n3, css: o3 }, i3 = { background: "{content.background}", borderColor: "{content.border.color}", borderRadius: "{content.border.radius}", color: "{content.color}", gap: "0.5rem", padding: "0.5rem 0.75rem", transitionDuration: "{transition.duration}" }, a3 = { borderRadius: "{content.border.radius}", padding: "{navigation.item.padding}" }, l3 = { focusBackground: "{navigation.item.focus.background}", activeBackground: "{navigation.item.active.background}", color: "{navigation.item.color}", focusColor: "{navigation.item.focus.color}", activeColor: "{navigation.item.active.color}", padding: "{navigation.item.padding}", borderRadius: "{navigation.item.border.radius}", gap: "{navigation.item.gap}", icon: { color: "{navigation.item.icon.color}", focusColor: "{navigation.item.icon.focus.color}", activeColor: "{navigation.item.icon.active.color}" } }, s3 = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}", background: "{content.background}", borderColor: "transparent", borderRadius: "{content.border.radius}", shadow: "{overlay.navigation.shadow}", mobileIndent: "1rem", icon: { size: "{navigation.submenu.icon.size}", color: "{navigation.submenu.icon.color}", focusColor: "{navigation.submenu.icon.focus.color}", activeColor: "{navigation.submenu.icon.active.color}" } }, d3 = { borderColor: "{content.border.color}" }, c3 = { borderRadius: "50%", size: "2.5rem", color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}", hoverBackground: "{content.hover.background}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, u3 = `
.p-menubar-button:focus-visible {
    background: dt('navigation.item.active.background');
}
`, p3 = { root: i3, baseItem: a3, item: l3, submenu: s3, separator: d3, mobileButton: c3, css: u3 }, f3 = { borderRadius: "{content.border.radius}", borderWidth: "0", transitionDuration: "{transition.duration}" }, h3 = { padding: "1rem 1.25rem", gap: "0.5rem", sm: { padding: "0.625rem 0.625rem" }, lg: { padding: "0.825rem 0.825rem" } }, m3 = { fontSize: "1rem", fontWeight: "500", sm: { fontSize: "0.875rem" }, lg: { fontSize: "1.125rem" } }, g3 = { size: "1.25rem", sm: { size: "1rem" }, lg: { size: "1.5rem" } }, b3 = { width: "2rem", height: "2rem", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", offset: "{focus.ring.offset}" } }, v3 = { size: "1rem", sm: { size: "0.875rem" }, lg: { size: "1.125rem" } }, y3 = { root: { borderWidth: "1px" } }, k3 = { content: { padding: "0" } }, w3 = { light: { info: { background: "color-mix(in srgb, {blue.50}, transparent 5%)", borderColor: "{blue.200}", color: "{blue.600}", shadow: "none", closeButton: { hoverBackground: "{blue.100}", focusRing: { color: "{blue.600}", shadow: "none" } }, outlined: { color: "{blue.600}", borderColor: "{blue.600}" }, simple: { color: "{blue.600}" } }, success: { background: "color-mix(in srgb, {green.50}, transparent 5%)", borderColor: "{green.200}", color: "{green.600}", shadow: "none", closeButton: { hoverBackground: "{green.100}", focusRing: { color: "{green.600}", shadow: "none" } }, outlined: { color: "{green.600}", borderColor: "{green.600}" }, simple: { color: "{green.600}" } }, warn: { background: "color-mix(in srgb,{yellow.50}, transparent 5%)", borderColor: "{yellow.200}", color: "{yellow.900}", shadow: "none", closeButton: { hoverBackground: "{yellow.100}", focusRing: { color: "{yellow.600}", shadow: "none" } }, outlined: { color: "{yellow.900}", borderColor: "{yellow.900}" }, simple: { color: "{yellow.900}" } }, error: { background: "color-mix(in srgb, {red.50}, transparent 5%)", borderColor: "{red.200}", color: "{red.600}", shadow: "none", closeButton: { hoverBackground: "{red.100}", focusRing: { color: "{red.600}", shadow: "none" } }, outlined: { color: "{red.600}", borderColor: "{red.600}" }, simple: { color: "{red.600}" } }, secondary: { background: "{surface.100}", borderColor: "{surface.200}", color: "{surface.600}", shadow: "none", closeButton: { hoverBackground: "{surface.200}", focusRing: { color: "{surface.600}", shadow: "none" } }, outlined: { color: "{surface.600}", borderColor: "{surface.600}" }, simple: { color: "{surface.600}" } }, contrast: { background: "{surface.900}", borderColor: "{surface.950}", color: "{surface.50}", shadow: "none", closeButton: { hoverBackground: "{surface.800}", focusRing: { color: "{surface.50}", shadow: "none" } }, outlined: { color: "{surface.950}", borderColor: "{surface.950}" }, simple: { color: "{surface.950}" } } }, dark: { info: { background: "color-mix(in srgb, {blue.500}, transparent 84%)", borderColor: "color-mix(in srgb, {blue.700}, transparent 64%)", color: "{blue.500}", shadow: "none", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{blue.500}", shadow: "none" } }, outlined: { color: "{blue.500}", borderColor: "{blue.500}" }, simple: { color: "{blue.500}" } }, success: { background: "color-mix(in srgb, {green.500}, transparent 84%)", borderColor: "color-mix(in srgb, {green.700}, transparent 64%)", color: "{green.500}", shadow: "none", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{green.500}", shadow: "none" } }, outlined: { color: "{green.500}", borderColor: "{green.500}" }, simple: { color: "{green.500}" } }, warn: { background: "color-mix(in srgb, {yellow.500}, transparent 84%)", borderColor: "color-mix(in srgb, {yellow.700}, transparent 64%)", color: "{yellow.500}", shadow: "none", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{yellow.500}", shadow: "none" } }, outlined: { color: "{yellow.500}", borderColor: "{yellow.500}" }, simple: { color: "{yellow.500}" } }, error: { background: "color-mix(in srgb, {red.500}, transparent 84%)", borderColor: "color-mix(in srgb, {red.700}, transparent 64%)", color: "{red.500}", shadow: "none", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{red.500}", shadow: "none" } }, outlined: { color: "{red.500}", borderColor: "{red.500}" }, simple: { color: "{red.500}" } }, secondary: { background: "{surface.800}", borderColor: "{surface.700}", color: "{surface.300}", shadow: "none", closeButton: { hoverBackground: "{surface.700}", focusRing: { color: "{surface.300}", shadow: "none" } }, outlined: { color: "{surface.400}", borderColor: "{surface.400}" }, simple: { color: "{surface.400}" } }, contrast: { background: "{surface.0}", borderColor: "{surface.100}", color: "{surface.950}", shadow: "none", closeButton: { hoverBackground: "{surface.100}", focusRing: { color: "{surface.950}", shadow: "none" } }, outlined: { color: "{surface.0}", borderColor: "{surface.0}" }, simple: { color: "{surface.0}" } } } }, C3 = { root: f3, content: h3, text: m3, icon: g3, closeButton: b3, closeIcon: v3, outlined: y3, simple: k3, colorScheme: w3, css: "" }, x3 = { borderRadius: "{content.border.radius}", gap: "1rem" }, S3 = { background: "{content.border.color}", size: "0.5rem" }, I3 = { gap: "0.5rem" }, O3 = { size: "0.5rem" }, P3 = { size: "1rem" }, $3 = { verticalGap: "0.5rem", horizontalGap: "1rem" }, T3 = { root: x3, meters: S3, label: I3, labelMarker: O3, labelIcon: P3, labelList: $3, css: "" }, R3 = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledHoverBackground: "{form.field.filled.hover.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", invalidPlaceholderColor: "{form.field.invalid.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}", sm: { fontSize: "{form.field.sm.font.size}", paddingX: "{form.field.sm.padding.x}", paddingY: "{form.field.sm.padding.y}" }, lg: { fontSize: "{form.field.lg.font.size}", paddingX: "{form.field.lg.padding.x}", paddingY: "{form.field.lg.padding.y}" } }, B3 = { width: "2.5rem", color: "{form.field.icon.color}" }, E3 = { background: "{overlay.select.background}", borderColor: "{overlay.select.border.color}", borderRadius: "{overlay.select.border.radius}", color: "{overlay.select.color}", shadow: "{overlay.select.shadow}" }, M3 = { padding: "{list.padding}", gap: "{list.gap}", header: { padding: "{list.header.padding}" } }, A3 = { focusBackground: "{list.option.focus.background}", selectedBackground: "{list.option.selected.background}", selectedFocusBackground: "{list.option.selected.focus.background}", color: "{list.option.color}", focusColor: "{list.option.focus.color}", selectedColor: "{list.option.selected.color}", selectedFocusColor: "{list.option.selected.focus.color}", padding: "{list.option.padding}", borderRadius: "{list.option.border.radius}", gap: "0.75rem" }, D3 = { background: "{list.option.group.background}", color: "{list.option.group.color}", fontWeight: "{list.option.group.font.weight}", padding: "{list.option.group.padding}" }, L3 = { color: "{form.field.icon.color}" }, z3 = { borderRadius: "{border.radius.sm}" }, F3 = { padding: "{list.option.padding}" }, N3 = `
.p-multiselect.p-variant-filled {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: 1px solid transparent;
    background: dt('multiselect.filled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.border.color'), dt('multiselect.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.p-multiselect.p-variant-filled:not(.p-disabled):hover {
    background: dt('multiselect.filled.hover.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.hover.border.color'), dt('multiselect.hover.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-multiselect.p-variant-filled:not(.p-disabled).p-focus {
    outline: 0 none;
    background: dt('multiselect.filled.focus.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.border.color'), dt('multiselect.border.color'));
    background-size: 100% 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-multiselect.p-variant-filled:not(.p-disabled).p-focus:hover {
    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.hover.border.color'), dt('multiselect.hover.border.color'));
}

.p-multiselect.p-variant-filled.p-invalid {
    background-image: linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color')), linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color'));
}

.p-multiselect.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {
    background-image: linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color')), linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color'));
}

.p-multiselect-option {
    transition: none;
}
`, j3 = { root: R3, dropdown: B3, overlay: E3, list: M3, option: A3, optionGroup: D3, chip: z3, clearIcon: L3, emptyMessage: F3, css: N3 }, V3 = { gap: "1.125rem" }, _3 = { gap: "0.5rem" }, K3 = { root: V3, controls: _3, css: "" }, H3 = { gutter: "0.75rem", transitionDuration: "{transition.duration}" }, W3 = { background: "{content.background}", hoverBackground: "{content.hover.background}", selectedBackground: "{highlight.background}", borderColor: "{content.border.color}", color: "{content.color}", selectedColor: "{highlight.color}", hoverColor: "{content.hover.color}", padding: "1rem 1.25rem", toggleablePadding: "1rem 1.25rem 1.5rem 1.25rem", borderRadius: "{content.border.radius}" }, U3 = { background: "{content.background}", hoverBackground: "{content.hover.background}", borderColor: "{content.border.color}", color: "{text.muted.color}", hoverColor: "{text.color}", size: "1.75rem", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, G3 = { color: "{content.border.color}", borderRadius: "{content.border.radius}", height: "24px" }, q3 = { root: H3, node: W3, nodeToggleButton: U3, connector: G3, css: "" }, J3 = { outline: { width: "2px", color: "{content.background}" } }, Y3 = { root: J3, css: "" }, X3 = { padding: "0.5rem 1rem", gap: "0.25rem", borderRadius: "{content.border.radius}", background: "{content.background}", color: "{content.color}", transitionDuration: "{transition.duration}" }, Z3 = { background: "transparent", hoverBackground: "{content.hover.background}", selectedBackground: "{highlight.background}", color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}", selectedColor: "{highlight.color}", width: "2.5rem", height: "2.5rem", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, Q3 = { color: "{text.muted.color}" }, e6 = { maxWidth: "2.5rem" }, t6 = { root: X3, navButton: Z3, currentPageReport: Q3, jumpToPageInput: e6, css: "" }, n6 = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", borderRadius: "{content.border.radius}" }, o6 = { background: "transparent", color: "{text.color}", padding: "1.25rem", borderColor: "{content.border.color}", borderWidth: "0", borderRadius: "0" }, r6 = { padding: "0.5rem 1.25rem" }, i6 = { fontWeight: "600" }, a6 = { padding: "0 1.25rem 1.25rem 1.25rem" }, l6 = { padding: "0 1.25rem 1.25rem 1.25rem" }, s6 = { root: n6, header: o6, toggleableHeader: r6, title: i6, content: a6, footer: l6, css: "" }, d6 = { gap: "0", transitionDuration: "{transition.duration}" }, c6 = { background: "{content.background}", borderColor: "{content.border.color}", borderWidth: "0", color: "{content.color}", padding: "0", borderRadius: "0", first: { borderWidth: "0", topBorderRadius: "{content.border.radius}" }, last: { borderWidth: "0", bottomBorderRadius: "{content.border.radius}" } }, u6 = { focusBackground: "{navigation.item.focus.background}", color: "{navigation.item.color}", focusColor: "{navigation.item.focus.color}", gap: "0.5rem", padding: "{navigation.item.padding}", borderRadius: "{content.border.radius}", icon: { color: "{navigation.item.icon.color}", focusColor: "{navigation.item.icon.focus.color}" } }, p6 = { indent: "1rem" }, f6 = { color: "{navigation.submenu.icon.color}", focusColor: "{navigation.submenu.icon.focus.color}" }, h6 = `
.p-panelmenu-panel {
    box-shadow: 0 0 0 1px dt('panelmenu.panel.border.color');
    transition: margin dt('panelmenu.transition.duration');
}

.p-panelmenu-panel:has(.p-panelmenu-header-active) {
    margin: 1rem 0;
}

.p-panelmenu-panel:first-child {
    border-top-left-radius: dt('content.border.radius');
    border-top-right-radius: dt('content.border.radius');
    margin-top: 0;
}

.p-panelmenu-panel:last-child {
    border-bottom-left-radius: dt('content.border.radius');
    border-bottom-right-radius: dt('content.border.radius');
    margin-bottom: 0;
}

.p-accordionpanel:not(.p-disabled) .p-accordionheader:focus-visible {
    background: dt('navigation.item.active.background');
}
`, m6 = { root: d6, panel: c6, item: u6, submenu: p6, submenuIcon: f6, css: h6 }, g6 = { background: "{content.border.color}", borderRadius: "{content.border.radius}", height: ".75rem" }, b6 = { color: "{form.field.icon.color}" }, v6 = { background: "{overlay.popover.background}", borderColor: "{overlay.popover.border.color}", borderRadius: "{overlay.popover.border.radius}", color: "{overlay.popover.color}", padding: "{overlay.popover.padding}", shadow: "{overlay.popover.shadow}" }, y6 = { gap: "0.5rem" }, k6 = { light: { strength: { weakBackground: "{red.500}", mediumBackground: "{amber.500}", strongBackground: "{green.500}" } }, dark: { strength: { weakBackground: "{red.400}", mediumBackground: "{amber.400}", strongBackground: "{green.400}" } } }, w6 = { meter: g6, icon: b6, overlay: v6, content: y6, colorScheme: k6, css: "" }, C6 = { gap: "1.125rem" }, x6 = { gap: "0.5rem" }, S6 = { root: C6, controls: x6, css: "" }, I6 = { background: "{overlay.popover.background}", borderColor: "{overlay.popover.border.color}", color: "{overlay.popover.color}", borderRadius: "{overlay.popover.border.radius}", shadow: "{overlay.popover.shadow}", gutter: "10px", arrowOffset: "1.25rem" }, O6 = { padding: "{overlay.popover.padding}" }, P6 = { root: I6, content: O6, css: "" }, $6 = { background: "{content.border.color}", borderRadius: "{content.border.radius}", height: "1rem" }, T6 = { background: "{primary.color}" }, R6 = { color: "{primary.contrast.color}", fontSize: "0.75rem", fontWeight: "600" }, B6 = { root: $6, value: T6, label: R6, css: "" }, E6 = { light: { root: { colorOne: "{red.500}", colorTwo: "{blue.500}", colorThree: "{green.500}", colorFour: "{yellow.500}" } }, dark: { root: { colorOne: "{red.400}", colorTwo: "{blue.400}", colorThree: "{green.400}", colorFour: "{yellow.400}" } } }, M6 = { colorScheme: E6, css: "" }, A6 = { width: "20px", height: "20px", background: "{form.field.background}", checkedBackground: "{primary.contrast.color}", checkedHoverBackground: "{primary.contrast.color}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", checkedBorderColor: "{primary.color}", checkedHoverBorderColor: "{primary.color}", checkedFocusBorderColor: "{primary.color}", checkedDisabledBorderColor: "{form.field.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", shadow: "{form.field.shadow}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" }, transitionDuration: "{form.field.transition.duration}", sm: { width: "16px", height: "16px" }, lg: { width: "24px", height: "24px" } }, D6 = { size: "10px", checkedColor: "{primary.color}", checkedHoverColor: "{primary.color}", disabledColor: "{form.field.disabled.color}", sm: { size: "8px" }, lg: { size: "12px" } }, L6 = { root: A6, icon: D6 }, z6 = { gap: "0.5rem", transitionDuration: "{transition.duration}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, F6 = { size: "1.125rem", color: "{text.muted.color}", hoverColor: "{primary.color}", activeColor: "{primary.color}" }, N6 = `
.p-rating:not(.p-disabled):not(.p-readonly) .p-rating-option:hover {
    background: color-mix(in srgb, dt('rating.icon.color'), transparent 96%);
    box-shadow: 0 0 1px 8px color-mix(in srgb, dt('rating.icon.color'), transparent 96%);
}

.p-rating:not(.p-disabled):not(.p-readonly) .p-rating-option-active:hover {
    background: color-mix(in srgb, dt('rating.icon.active.color'), transparent 92%);
    box-shadow: 0 0 1px 8px color-mix(in srgb, dt('rating.icon.active.color'), transparent 92%);
}

.p-rating-option.p-focus-visible {
    background: color-mix(in srgb, dt('rating.icon.active.color'), transparent 84%);
    box-shadow: 0 0 1px 8px color-mix(in srgb, dt('rating.icon.active.color'), transparent 84%);
}
`, j6 = { root: z6, icon: F6, css: N6 }, V6 = { light: { root: { background: "rgba(0,0,0,0.1)" } }, dark: { root: { background: "rgba(255,255,255,0.3)" } } }, _6 = { colorScheme: V6, css: "" }, K6 = { transitionDuration: "{transition.duration}" }, H6 = { size: "9px", borderRadius: "{border.radius.sm}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, W6 = { light: { bar: { background: "{surface.200}" } }, dark: { bar: { background: "{surface.700}" } } }, U6 = { root: K6, bar: H6, colorScheme: W6, css: "" }, G6 = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledHoverBackground: "{form.field.filled.hover.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", invalidPlaceholderColor: "{form.field.invalid.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}", sm: { fontSize: "{form.field.sm.font.size}", paddingX: "{form.field.sm.padding.x}", paddingY: "{form.field.sm.padding.y}" }, lg: { fontSize: "{form.field.lg.font.size}", paddingX: "{form.field.lg.padding.x}", paddingY: "{form.field.lg.padding.y}" } }, q6 = { width: "2.5rem", color: "{form.field.icon.color}" }, J6 = { background: "{overlay.select.background}", borderColor: "{overlay.select.border.color}", borderRadius: "{overlay.select.border.radius}", color: "{overlay.select.color}", shadow: "{overlay.select.shadow}" }, Y6 = { padding: "{list.padding}", gap: "{list.gap}", header: { padding: "{list.header.padding}" } }, X6 = { focusBackground: "{list.option.focus.background}", selectedBackground: "{list.option.selected.background}", selectedFocusBackground: "{list.option.selected.focus.background}", color: "{list.option.color}", focusColor: "{list.option.focus.color}", selectedColor: "{list.option.selected.color}", selectedFocusColor: "{list.option.selected.focus.color}", padding: "{list.option.padding}", borderRadius: "{list.option.border.radius}" }, Z6 = { background: "{list.option.group.background}", color: "{list.option.group.color}", fontWeight: "{list.option.group.font.weight}", padding: "{list.option.group.padding}" }, Q6 = { color: "{form.field.icon.color}" }, e4 = { color: "{list.option.color}", gutterStart: "-0.375rem", gutterEnd: "0.375rem" }, t4 = { padding: "{list.option.padding}" }, n4 = `
.p-select.p-variant-filled {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: 1px solid transparent;
    background: dt('select.filled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.border.color'), dt('select.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.p-select.p-variant-filled:not(.p-disabled):hover {
    background: dt('select.filled.hover.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.hover.border.color'), dt('select.hover.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-select.p-variant-filled:not(.p-disabled).p-focus {
    outline: 0 none;
    background: dt('select.filled.focus.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.border.color'), dt('select.border.color'));
    background-size: 100% 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-select.p-variant-filled:not(.p-disabled).p-focus:hover {
    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.hover.border.color'), dt('select.hover.border.color'));
}

.p-select.p-variant-filled.p-invalid {
    background-image: linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color')), linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color'));
}

.p-select.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {
    background-image: linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color')), linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color'));
}

.p-select-option {
    transition: none;
}
`, o4 = { root: G6, dropdown: q6, overlay: J6, list: Y6, option: X6, optionGroup: Z6, clearIcon: Q6, checkmark: e4, emptyMessage: t4, css: n4 }, r4 = { borderRadius: "{form.field.border.radius}" }, i4 = { light: { root: { invalidBorderColor: "{form.field.invalid.border.color}" } }, dark: { root: { invalidBorderColor: "{form.field.invalid.border.color}" } } }, a4 = { root: r4, colorScheme: i4, css: "" }, l4 = { borderRadius: "{content.border.radius}" }, s4 = { light: { root: { background: "{surface.200}", animationBackground: "rgba(255,255,255,0.4)" } }, dark: { root: { background: "rgba(255, 255, 255, 0.06)", animationBackground: "rgba(255, 255, 255, 0.04)" } } }, d4 = { root: l4, colorScheme: s4, css: "" }, c4 = { transitionDuration: "{transition.duration}" }, u4 = { background: "{content.border.color}", borderRadius: "{border.radius.xs}", size: "2px" }, p4 = { background: "{primary.color}" }, f4 = { width: "18px", height: "18px", borderRadius: "50%", background: "{primary.color}", hoverBackground: "{primary.color}", content: { borderRadius: "50%", background: "{primary.color}", hoverBackground: "{primary.color}", width: "18px", height: "18px", shadow: "0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12)" }, focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, h4 = `
.p-slider-handle {
    transition: box-shadow dt('slider.transition.duration');
}

.p-slider:not(.p-disabled) .p-slider-handle:hover {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('slider.handle.background'), transparent 92%);
}

.p-slider-handle:focus-visible,
.p-slider:not(.p-disabled) .p-slider-handle:focus:hover {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('slider.handle.background'), transparent 84%);
}
`, m4 = { root: c4, track: u4, range: p4, handle: f4, css: h4 }, g4 = { gap: "0.5rem", transitionDuration: "{transition.duration}" }, b4 = { root: g4, css: "" }, v4 = { borderRadius: "{form.field.border.radius}", roundedBorderRadius: "2rem", raisedShadow: "0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)" }, y4 = { root: v4, css: "" }, k4 = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", transitionDuration: "{transition.duration}" }, w4 = { background: "{content.border.color}" }, C4 = { size: "24px", background: "transparent", borderRadius: "{content.border.radius}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, x4 = { root: k4, gutter: w4, handle: C4, css: "" }, S4 = { transitionDuration: "{transition.duration}" }, I4 = { background: "{content.border.color}", activeBackground: "{primary.color}", margin: "0 0 0 1.625rem", size: "2px" }, O4 = { padding: "0.5rem", gap: "1rem" }, P4 = { padding: "0.75rem 1rem", borderRadius: "{content.border.radius}", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" }, gap: "0.5rem" }, $4 = { color: "{text.muted.color}", activeColor: "{text.color}", fontWeight: "500" }, T4 = { activeBackground: "{primary.color}", activeBorderColor: "{primary.color}", activeColor: "{primary.contrast.color}", size: "2rem", fontSize: "1.143rem", fontWeight: "500", borderRadius: "50%", shadow: "none" }, R4 = { padding: "0.875rem 0.5rem 1.125rem 0.5rem" }, B4 = { background: "{content.background}", color: "{content.color}", padding: "0", indent: "1rem" }, E4 = { light: { stepNumber: { background: "{surface.400}", borderColor: "{surface.400}", color: "{surface.0}" } }, dark: { stepNumber: { background: "{surface.200}", borderColor: "{surface.200}", color: "{surface.900}" } } }, M4 = `
.p-step-header:focus-visible {
    background: dt('navigation.item.active.background');
}
`, A4 = { root: S4, separator: I4, step: O4, stepHeader: P4, stepTitle: $4, stepNumber: T4, steppanels: R4, steppanel: B4, colorScheme: E4, css: M4 }, D4 = { transitionDuration: "{transition.duration}" }, L4 = { background: "{content.border.color}" }, z4 = { borderRadius: "{content.border.radius}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" }, gap: "0.5rem" }, F4 = { color: "{text.muted.color}", activeColor: "{primary.color}", fontWeight: "500" }, N4 = { background: "{content.background}", activeBackground: "{content.background}", borderColor: "{content.border.color}", activeBorderColor: "{content.border.color}", color: "{text.muted.color}", activeColor: "{primary.color}", size: "2rem", fontSize: "1.143rem", fontWeight: "500", borderRadius: "50%", shadow: "0px 0.5px 0px 0px rgba(0, 0, 0, 0.06), 0px 1px 1px 0px rgba(0, 0, 0, 0.12)" }, j4 = { root: D4, separator: L4, itemLink: z4, itemLabel: F4, itemNumber: N4, css: "" }, V4 = { transitionDuration: "{transition.duration}" }, _4 = { borderWidth: "0 0 1px 0", background: "{content.background}", borderColor: "{content.border.color}" }, K4 = { background: "transparent", hoverBackground: "transparent", activeBackground: "transparent", borderWidth: "0 0 1px 0", borderColor: "{content.border.color}", hoverBorderColor: "{content.border.color}", activeBorderColor: "{primary.color}", color: "{text.muted.color}", hoverColor: "{text.color}", activeColor: "{primary.color}", padding: "1rem 1.125rem", fontWeight: "600", margin: "0 0 -1px 0", gap: "0.5rem", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, H4 = { color: "{text.muted.color}", hoverColor: "{text.color}", activeColor: "{primary.color}" }, W4 = { height: "1px", bottom: "-1px", background: "{primary.color}" }, U4 = { root: V4, tablist: _4, item: K4, itemIcon: H4, activeBar: W4, css: "" }, G4 = { transitionDuration: "{transition.duration}" }, q4 = { borderWidth: "0 0 1px 0", background: "{content.background}", borderColor: "{content.border.color}" }, J4 = { background: "transparent", hoverBackground: "{content.hover.background}", activeBackground: "transparent", borderWidth: "0 0 1px 0", borderColor: "{content.border.color}", hoverBorderColor: "{content.border.color}", activeBorderColor: "{primary.color}", color: "{text.color}", hoverColor: "{text.color}", activeColor: "{primary.color}", padding: "1rem 1.25rem", fontWeight: "600", margin: "0 0 -1px 0", gap: "0.5rem", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, Y4 = { background: "{content.background}", color: "{content.color}", padding: "1.25rem 1.25rem 1.25rem 1.25rem", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, X4 = { background: "{content.background}", color: "{text.muted.color}", hoverColor: "{text.color}", width: "3rem", shadow: "none", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" } }, Z4 = { height: "2px", bottom: "-1px", background: "{primary.color}" }, Q4 = `
.p-tabs-scrollable .p-tab {
    flex-grow: 0
}

.p-tab-active {
    --p-ripple-background: color-mix(in srgb, dt('primary.color'), transparent 90%);
}

.p-tab:not(.p-disabled):focus-visible {
    background: dt('navigation.item.active.background');
}

.p-tablist-nav-button:focus-visible {
    background: dt('navigation.item.active.background');
}
`, e7 = { root: G4, tablist: q4, tab: J4, tabpanel: Y4, navButton: X4, activeBar: Z4, css: Q4 }, t7 = { transitionDuration: "{transition.duration}" }, n7 = { background: "{content.background}", borderColor: "{content.border.color}" }, o7 = { borderColor: "{content.border.color}", activeBorderColor: "{primary.color}", color: "{text.muted.color}", hoverColor: "{text.color}", activeColor: "{primary.color}" }, r7 = { background: "{content.background}", color: "{content.color}" }, i7 = { background: "{content.background}", color: "{text.muted.color}", hoverColor: "{text.color}" }, a7 = { light: { navButton: { shadow: "0px 0px 10px 50px rgba(255, 255, 255, 0.6)" } }, dark: { navButton: { shadow: "0px 0px 10px 50px color-mix(in srgb, {content.background}, transparent 50%)" } } }, l7 = { root: t7, tabList: n7, tab: o7, tabPanel: r7, navButton: i7, colorScheme: a7, css: "" }, s7 = { fontSize: "0.875rem", fontWeight: "700", padding: "0.25rem 0.5rem", gap: "0.25rem", borderRadius: "{content.border.radius}", roundedBorderRadius: "{border.radius.xl}" }, d7 = { size: "0.75rem" }, c7 = { light: { primary: { background: "{primary.color}", color: "{primary.contrast.color}" }, secondary: { background: "{surface.100}", color: "{surface.600}" }, success: { background: "{green.500}", color: "{surface.0}" }, info: { background: "{sky.500}", color: "{surface.0}" }, warn: { background: "{orange.500}", color: "{surface.0}" }, danger: { background: "{red.500}", color: "{surface.0}" }, contrast: { background: "{surface.950}", color: "{surface.0}" } }, dark: { primary: { background: "{primary.color}", color: "{primary.contrast.color}" }, secondary: { background: "{surface.800}", color: "{surface.300}" }, success: { background: "{green.400}", color: "{green.950}" }, info: { background: "{sky.400}", color: "{sky.950}" }, warn: { background: "{orange.400}", color: "{orange.950}" }, danger: { background: "{red.400}", color: "{red.950}" }, contrast: { background: "{surface.0}", color: "{surface.950}" } } }, u7 = { root: s7, icon: d7, colorScheme: c7, css: "" }, p7 = { background: "{form.field.background}", borderColor: "{form.field.border.color}", color: "{form.field.color}", height: "18rem", padding: "{form.field.padding.y} {form.field.padding.x}", borderRadius: "{form.field.border.radius}" }, f7 = { gap: "0.25rem" }, h7 = { margin: "2px 0" }, m7 = { root: p7, prompt: f7, commandResponse: h7, css: "" }, g7 = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledHoverBackground: "{form.field.filled.hover.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", invalidPlaceholderColor: "{form.field.invalid.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}", sm: { fontSize: "{form.field.sm.font.size}", paddingX: "{form.field.sm.padding.x}", paddingY: "{form.field.sm.padding.y}" }, lg: { fontSize: "{form.field.lg.font.size}", paddingX: "{form.field.lg.padding.x}", paddingY: "{form.field.lg.padding.y}" } }, b7 = `
.p-textarea.p-variant-filled {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: 1px solid transparent;
    background: dt('textarea.filled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.border.color'), dt('textarea.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.p-textarea.p-variant-filled:enabled:hover {
    background: dt('textarea.filled.hover.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.hover.border.color'), dt('textarea.hover.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-textarea.p-variant-filled:enabled:focus {
    outline: 0 none;
    background: dt('textarea.filled.focus.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.border.color'), dt('textarea.border.color'));
    background-size: 100% 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-textarea.p-variant-filled:enabled:hover:focus {
    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.hover.border.color'), dt('textarea.hover.border.color'));
}

.p-textarea.p-variant-filled.p-invalid {
    background-image: linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color')), linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color'));
}

.p-textarea.p-variant-filled.p-invalid:enabled:focus {
    background-image: linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color')), linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color'));
}
`, v7 = { root: g7, css: b7 }, y7 = { background: "{content.background}", borderColor: "{content.border.color}", color: "{content.color}", borderRadius: "{content.border.radius}", shadow: "{overlay.navigation.shadow}", transitionDuration: "{transition.duration}" }, k7 = { padding: "{navigation.list.padding}", gap: "{navigation.list.gap}" }, w7 = { focusBackground: "{navigation.item.focus.background}", activeBackground: "{navigation.item.active.background}", color: "{navigation.item.color}", focusColor: "{navigation.item.focus.color}", activeColor: "{navigation.item.active.color}", padding: "{navigation.item.padding}", borderRadius: "{navigation.item.border.radius}", gap: "{navigation.item.gap}", icon: { color: "{navigation.item.icon.color}", focusColor: "{navigation.item.icon.focus.color}", activeColor: "{navigation.item.icon.active.color}" } }, C7 = { mobileIndent: "1rem" }, x7 = { size: "{navigation.submenu.icon.size}", color: "{navigation.submenu.icon.color}", focusColor: "{navigation.submenu.icon.focus.color}", activeColor: "{navigation.submenu.icon.active.color}" }, S7 = { borderColor: "{content.border.color}" }, I7 = `
.p-tieredmenu-overlay {
    border-color: transparent;
}
`, O7 = { root: y7, list: k7, item: w7, submenu: C7, submenuIcon: x7, separator: S7, css: I7 }, P7 = { minHeight: "5rem" }, $7 = { eventContent: { padding: "1rem 0" } }, T7 = { eventContent: { padding: "0 1rem" } }, R7 = { size: "1.5rem", borderRadius: "50%", borderWidth: "2px", background: "{primary.color}", content: { borderRadius: "50%", size: "0", background: "{primary.color}", insetShadow: "none" } }, B7 = { color: "{content.border.color}", size: "2px" }, E7 = { light: { eventMarker: { borderColor: "{surface.0}" } }, dark: { eventMarker: { borderColor: "{surface.900}" } } }, M7 = { event: P7, horizontal: $7, vertical: T7, eventMarker: R7, eventConnector: B7, colorScheme: E7, css: "" }, A7 = { width: "25rem", borderRadius: "{content.border.radius}", borderWidth: "0", transitionDuration: "{transition.duration}" }, D7 = { size: "1.25rem" }, L7 = { padding: "{overlay.popover.padding}", gap: "0.5rem" }, z7 = { gap: "0.5rem" }, F7 = { fontWeight: "500", fontSize: "1rem" }, N7 = { fontWeight: "500", fontSize: "0.875rem" }, j7 = { width: "2rem", height: "2rem", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", offset: "{focus.ring.offset}" } }, V7 = { size: "1rem" }, _7 = { light: { root: { blur: "0" }, info: { background: "{blue.50}", borderColor: "{blue.200}", color: "{blue.600}", detailColor: "{surface.700}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{blue.100}", focusRing: { color: "{blue.600}", shadow: "none" } } }, success: { background: "{green.50}", borderColor: "{green.200}", color: "{green.600}", detailColor: "{surface.700}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{green.100}", focusRing: { color: "{green.600}", shadow: "none" } } }, warn: { background: "{yellow.50}", borderColor: "{yellow.200}", color: "{yellow.900}", detailColor: "{surface.700}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{yellow.100}", focusRing: { color: "{yellow.600}", shadow: "none" } } }, error: { background: "{red.50}", borderColor: "{red.200}", color: "{red.600}", detailColor: "{surface.700}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{red.100}", focusRing: { color: "{red.600}", shadow: "none" } } }, secondary: { background: "{surface.100}", borderColor: "{surface.200}", color: "{surface.600}", detailColor: "{surface.700}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{surface.200}", focusRing: { color: "{surface.600}", shadow: "none" } } }, contrast: { background: "{surface.900}", borderColor: "{surface.950}", color: "{surface.50}", detailColor: "{surface.0}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{surface.800}", focusRing: { color: "{surface.50}", shadow: "none" } } } }, dark: { root: { blur: "10px" }, info: { background: "color-mix(in srgb, {blue.500}, transparent 36%)", borderColor: "color-mix(in srgb, {blue.700}, transparent 64%)", color: "{surface.0}", detailColor: "{blue.100}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{blue.500}", shadow: "none" } } }, success: { background: "color-mix(in srgb, {green.500}, transparent 36%)", borderColor: "color-mix(in srgb, {green.700}, transparent 64%)", color: "{surface.0}", detailColor: "{green.100}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{green.500}", shadow: "none" } } }, warn: { background: "color-mix(in srgb, {yellow.500}, transparent 36%)", borderColor: "color-mix(in srgb, {yellow.700}, transparent 64%)", color: "{surface.0}", detailColor: "{yellow.50}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{yellow.500}", shadow: "none" } } }, error: { background: "color-mix(in srgb, {red.500}, transparent 36%)", borderColor: "color-mix(in srgb, {red.700}, transparent 64%)", color: "{surface.0}", detailColor: "{red.100}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "rgba(255, 255, 255, 0.05)", focusRing: { color: "{red.500}", shadow: "none" } } }, secondary: { background: "{surface.800}", borderColor: "{surface.700}", color: "{surface.300}", detailColor: "{surface.0}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{surface.700}", focusRing: { color: "{surface.300}", shadow: "none" } } }, contrast: { background: "{surface.0}", borderColor: "{surface.100}", color: "{surface.950}", detailColor: "{surface.950}", shadow: "0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)", closeButton: { hoverBackground: "{surface.100}", focusRing: { color: "{surface.950}", shadow: "none" } } } } }, K7 = { root: A7, icon: D7, content: L7, text: z7, summary: F7, detail: N7, closeButton: j7, closeIcon: V7, colorScheme: _7, css: "" }, H7 = { padding: "0.75rem 1rem", borderRadius: "{form.field.border.radius}", gap: "0.5rem", fontWeight: "500", background: "{form.field.background}", borderColor: "{form.field.border.color}", color: "{form.field.color}", hoverColor: "{form.field.color}", checkedColor: "{form.field.color}", checkedBorderColor: "{form.field.border.color}", disabledBackground: "{form.field.disabled.background}", disabledBorderColor: "{form.field.disabled.background}", disabledColor: "{form.field.disabled.color}", invalidBorderColor: "{form.field.invalid.border.color}", focusRing: { width: "0", style: "none", offset: "0", color: "unset", shadow: "none" }, transitionDuration: "{form.field.transition.duration}", sm: { fontSize: "{form.field.sm.font.size}", padding: "0.625rem 0.75rem" }, lg: { fontSize: "{form.field.lg.font.size}", padding: "0.875rem 1.25rem" } }, W7 = { color: "{text.muted.color}", hoverColor: "{text.muted.color}", checkedColor: "{text.muted.color}", disabledColor: "{form.field.disabled.color}" }, U7 = { checkedBackground: "transparent", checkedShadow: "none", padding: "0", borderRadius: "0", sm: { padding: "0" }, lg: { padding: "0" } }, G7 = { light: { root: { hoverBackground: "{surface.100}", checkedBackground: "{surface.200}" } }, dark: { root: { hoverBackground: "{surface.800}", checkedBackground: "{surface.700}" } } }, q7 = `
.p-togglebutton:focus-visible {
    background: dt('togglebutton.hover.background');
}
`, J7 = { root: H7, icon: W7, content: U7, colorScheme: G7, css: q7 }, Y7 = { width: "2.75rem", height: "1rem", borderRadius: "30px", gap: "0px", shadow: "none", focusRing: { width: "0", style: "none", color: "unset", offset: "0", shadow: "none" }, borderWidth: "1px", borderColor: "transparent", hoverBorderColor: "transparent", checkedBorderColor: "transparent", checkedHoverBorderColor: "transparent", invalidBorderColor: "{form.field.invalid.border.color}", transitionDuration: "{form.field.transition.duration}", slideDuration: "0.2s" }, X7 = { borderRadius: "50%", size: "1.5rem" }, Z7 = { light: { root: { background: "{surface.300}", disabledBackground: "{surface.400}", hoverBackground: "{surface.300}", checkedBackground: "{primary.200}", checkedHoverBackground: "{primary.200}" }, handle: { background: "{surface.0}", disabledBackground: "{surface.200}", hoverBackground: "{surface.0}", checkedBackground: "{primary.color}", checkedHoverBackground: "{primary.color}", color: "{text.muted.color}", hoverColor: "{text.color}", checkedColor: "{primary.contrast.color}", checkedHoverColor: "{primary.contrast.color}" } }, dark: { root: { background: "{surface.700}", disabledBackground: "{surface.600}", hoverBackground: "{surface.700}", checkedBackground: "{primary.color}", checkedHoverBackground: "{primary.color}" }, handle: { background: "{surface.400}", disabledBackground: "{surface.500}", hoverBackground: "{surface.300}", checkedBackground: "{primary.200}", checkedHoverBackground: "{primary.200}", color: "{surface.800}", hoverColor: "{surface.900}", checkedColor: "{primary.contrast.color}", checkedHoverColor: "{primary.contrast.color}" } } }, Q7 = `
.p-toggleswitch-handle {
    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}

.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover) .p-toggleswitch-handle {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}

.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:focus-visible) .p-toggleswitch-handle {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 88%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}

.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover).p-toggleswitch-checked .p-toggleswitch-handle {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('toggleswitch.handle.checked.background'), transparent 92%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}

.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:focus-visible).p-toggleswitch-checked .p-toggleswitch-handle {
    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('toggleswitch.handle.checked.background'), transparent 84%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
}
`, e8 = { root: Y7, handle: X7, colorScheme: Z7, css: Q7 }, t8 = { color: "{content.color}", borderRadius: "{content.border.radius}", gap: "0.5rem", padding: "1rem" }, n8 = { light: { root: { background: "{surface.100}", borderColor: "{surface.100}" } }, dark: { root: { background: "{surface.800}", borderColor: "{surface.800}" } } }, o8 = { root: t8, colorScheme: n8, css: "" }, r8 = { background: "{surface.600}", color: "{surface.0}", maxWidth: "12.5rem", gutter: "0.25rem", shadow: "{overlay.popover.shadow}", padding: "0.5rem 0.75rem", borderRadius: "{overlay.popover.border.radius}" }, i8 = { root: r8, css: "" }, a8 = { background: "{content.background}", color: "{content.color}", padding: "1rem", gap: "2px", indent: "2rem", transitionDuration: "{transition.duration}" }, l8 = { padding: "0.5rem 0.75rem", borderRadius: "{border.radius.xs}", hoverBackground: "{content.hover.background}", selectedBackground: "{highlight.background}", color: "{text.color}", hoverColor: "{text.hover.color}", selectedColor: "{highlight.color}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "-1px", shadow: "{focus.ring.shadow}" }, gap: "0.5rem" }, s8 = { color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}", selectedColor: "{highlight.color}" }, d8 = { borderRadius: "50%", size: "2rem", hoverBackground: "{content.hover.background}", selectedHoverBackground: "{content.background}", color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}", selectedHoverColor: "{primary.color}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, c8 = { size: "2rem" }, u8 = { margin: "0 0 0.75rem 0" }, p8 = `
.p-tree-node-content {
    transition: none;
}
`, f8 = { root: a8, node: l8, nodeIcon: s8, nodeToggleButton: d8, loadingIcon: c8, filter: u8, css: p8 }, h8 = { background: "{form.field.background}", disabledBackground: "{form.field.disabled.background}", filledBackground: "{form.field.filled.background}", filledHoverBackground: "{form.field.filled.hover.background}", filledFocusBackground: "{form.field.filled.focus.background}", borderColor: "{form.field.border.color}", hoverBorderColor: "{form.field.hover.border.color}", focusBorderColor: "{form.field.focus.border.color}", invalidBorderColor: "{form.field.invalid.border.color}", color: "{form.field.color}", disabledColor: "{form.field.disabled.color}", placeholderColor: "{form.field.placeholder.color}", invalidPlaceholderColor: "{form.field.invalid.placeholder.color}", shadow: "{form.field.shadow}", paddingX: "{form.field.padding.x}", paddingY: "{form.field.padding.y}", borderRadius: "{form.field.border.radius}", focusRing: { width: "{form.field.focus.ring.width}", style: "{form.field.focus.ring.style}", color: "{form.field.focus.ring.color}", offset: "{form.field.focus.ring.offset}", shadow: "{form.field.focus.ring.shadow}" }, transitionDuration: "{form.field.transition.duration}", sm: { fontSize: "{form.field.sm.font.size}", paddingX: "{form.field.sm.padding.x}", paddingY: "{form.field.sm.padding.y}" }, lg: { fontSize: "{form.field.lg.font.size}", paddingX: "{form.field.lg.padding.x}", paddingY: "{form.field.lg.padding.y}" } }, m8 = { width: "2.5rem", color: "{form.field.icon.color}" }, g8 = { background: "{overlay.select.background}", borderColor: "{overlay.select.border.color}", borderRadius: "{overlay.select.border.radius}", color: "{overlay.select.color}", shadow: "{overlay.select.shadow}" }, b8 = { padding: "{list.padding}" }, v8 = { padding: "{list.option.padding}" }, y8 = { borderRadius: "{border.radius.sm}" }, k8 = { color: "{form.field.icon.color}" }, w8 = `
.p-treeselect.p-variant-filled {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    border: 1px solid transparent;
    background: dt('treeselect.filled.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.border.color'), dt('treeselect.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.p-treeselect.p-variant-filled:not(.p-disabled):hover {
    background: dt('treeselect.filled.hover.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.hover.border.color'), dt('treeselect.hover.border.color'));
    background-size: 0 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-treeselect.p-variant-filled:not(.p-disabled).p-focus {
    outline: 0 none;
    background: dt('treeselect.filled.focus.background') no-repeat;
    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.border.color'), dt('treeselect.border.color'));
    background-size: 100% 2px, 100% 1px;
    background-position: 50% 100%, 50% 100%;
    background-origin: border-box;
    border-color: transparent;
}

.p-treeselect.p-variant-filled:not(.p-disabled).p-focus:hover {
    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.hover.border.color'), dt('treeselect.hover.border.color'));
}

.p-treeselect.p-variant-filled.p-invalid {
    background-image: linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color')), linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color'));
}

.p-treeselect.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {
    background-image: linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color')), linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color'));
}
`, C8 = { root: h8, dropdown: m8, overlay: g8, tree: b8, emptyMessage: v8, chip: y8, clearIcon: k8, css: w8 }, x8 = { transitionDuration: "{transition.duration}" }, S8 = { background: "{content.background}", borderColor: "{treetable.border.color}", color: "{content.color}", borderWidth: "0 0 1px 0", padding: "0.75rem 1rem" }, I8 = { background: "{content.background}", hoverBackground: "{content.hover.background}", selectedBackground: "{highlight.background}", borderColor: "{treetable.border.color}", color: "{content.color}", hoverColor: "{content.hover.color}", selectedColor: "{highlight.color}", gap: "0.5rem", padding: "0.75rem 1rem", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "-1px", shadow: "{focus.ring.shadow}" } }, O8 = { fontWeight: "600" }, P8 = { background: "{content.background}", hoverBackground: "{content.hover.background}", selectedBackground: "{highlight.background}", color: "{content.color}", hoverColor: "{content.hover.color}", selectedColor: "{highlight.color}", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "-1px", shadow: "{focus.ring.shadow}" } }, $8 = { borderColor: "{treetable.border.color}", padding: "0.75rem 1rem", gap: "0.5rem" }, T8 = { background: "{content.background}", borderColor: "{treetable.border.color}", color: "{content.color}", padding: "0.75rem 1rem" }, R8 = { fontWeight: "600" }, B8 = { background: "{content.background}", borderColor: "{treetable.border.color}", color: "{content.color}", borderWidth: "0 0 1px 0", padding: "0.75rem 1rem" }, E8 = { width: "0.5rem" }, M8 = { width: "1px", color: "{primary.color}" }, A8 = { color: "{text.muted.color}", hoverColor: "{text.hover.muted.color}", size: "0.875rem" }, D8 = { size: "2rem" }, L8 = { hoverBackground: "{content.hover.background}", selectedHoverBackground: "{content.background}", color: "{text.muted.color}", hoverColor: "{text.color}", selectedHoverColor: "{primary.color}", size: "1.75rem", borderRadius: "50%", focusRing: { width: "{focus.ring.width}", style: "{focus.ring.style}", color: "{focus.ring.color}", offset: "{focus.ring.offset}", shadow: "{focus.ring.shadow}" } }, z8 = { borderColor: "{content.border.color}", borderWidth: "0 0 1px 0" }, F8 = { borderColor: "{content.border.color}", borderWidth: "0 0 1px 0" }, N8 = { light: { root: { borderColor: "{content.border.color}" }, bodyCell: { selectedBorderColor: "{primary.100}" } }, dark: { root: { borderColor: "{surface.800}" }, bodyCell: { selectedBorderColor: "{primary.900}" } } }, j8 = { root: x8, header: S8, headerCell: I8, columnTitle: O8, row: P8, bodyCell: $8, footerCell: T8, columnFooter: R8, footer: B8, columnResizer: E8, resizeIndicator: M8, sortIcon: A8, loadingIcon: D8, nodeToggleButton: L8, paginatorTop: z8, paginatorBottom: F8, colorScheme: N8 }, V8 = { mask: { background: "{content.background}", color: "{text.muted.color}" }, icon: { size: "2rem" } }, _8 = { loader: V8, css: "" }, K8 = Object.defineProperty, H8 = Object.defineProperties, W8 = Object.getOwnPropertyDescriptors, fp = Object.getOwnPropertySymbols, U8 = Object.prototype.hasOwnProperty, G8 = Object.prototype.propertyIsEnumerable, hp = (t, e, n) => e in t ? K8(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, mp, q8 = (mp = ((t, e) => {
  for (var n in e || (e = {})) U8.call(e, n) && hp(t, n, e[n]);
  if (fp) for (var n of fp(e)) G8.call(e, n) && hp(t, n, e[n]);
  return t;
})({}, MC), H8(mp, W8({ components: { accordion: aC, autocomplete: bC, avatar: xC, badge: RC, blockui: DC, breadcrumb: NC, button: KC, datepicker: D2, card: JC, carousel: nx, cascadeselect: cx, checkbox: hx, chip: kx, colorpicker: Ix, confirmdialog: $x, confirmpopup: Mx, contextmenu: jx, dataview: h2, datatable: l2, dialog: V2, divider: U2, dock: J2, drawer: t5, editor: s5, fieldset: h5, fileupload: C5, iftalabel: G5, floatlabel: P5, galleria: _5, iconfield: H5, image: Z5, imagecompare: eS, inlinemessage: iS, inplace: sS, inputchips: pS, inputgroup: mS, inputnumber: kS, inputotp: xS, inputtext: OS, knob: BS, listbox: jS, megamenu: XS, menu: r3, menubar: p3, message: C3, metergroup: T3, multiselect: j3, orderlist: K3, organizationchart: q3, overlaybadge: Y3, popover: P6, paginator: t6, password: w6, panel: s6, panelmenu: m6, picklist: S6, progressbar: B6, progressspinner: M6, radiobutton: L6, rating: j6, ripple: _6, scrollpanel: U6, select: o4, selectbutton: a4, skeleton: d4, slider: m4, speeddial: b4, splitter: x4, splitbutton: y4, stepper: A4, steps: j4, tabmenu: U4, tabs: e7, tabview: l7, textarea: v7, tieredmenu: O7, tag: u7, terminal: m7, timeline: M7, togglebutton: J7, toggleswitch: e8, tree: f8, treeselect: C8, treetable: j8, toast: K7, toolbar: o8, tooltip: i8, virtualscroller: _8 } }))), J8 = (...t) => jv(...t), Y8 = `
    .p-badge {
        display: inline-flex;
        border-radius: dt('badge.border.radius');
        align-items: center;
        justify-content: center;
        padding: dt('badge.padding');
        background: dt('badge.primary.background');
        color: dt('badge.primary.color');
        font-size: dt('badge.font.size');
        font-weight: dt('badge.font.weight');
        min-width: dt('badge.min.width');
        height: dt('badge.height');
    }

    .p-badge-dot {
        width: dt('badge.dot.size');
        min-width: dt('badge.dot.size');
        height: dt('badge.dot.size');
        border-radius: 50%;
        padding: 0;
    }

    .p-badge-circle {
        padding: 0;
        border-radius: 50%;
    }

    .p-badge-secondary {
        background: dt('badge.secondary.background');
        color: dt('badge.secondary.color');
    }

    .p-badge-success {
        background: dt('badge.success.background');
        color: dt('badge.success.color');
    }

    .p-badge-info {
        background: dt('badge.info.background');
        color: dt('badge.info.color');
    }

    .p-badge-warn {
        background: dt('badge.warn.background');
        color: dt('badge.warn.color');
    }

    .p-badge-danger {
        background: dt('badge.danger.background');
        color: dt('badge.danger.color');
    }

    .p-badge-contrast {
        background: dt('badge.contrast.background');
        color: dt('badge.contrast.color');
    }

    .p-badge-sm {
        font-size: dt('badge.sm.font.size');
        min-width: dt('badge.sm.min.width');
        height: dt('badge.sm.height');
    }

    .p-badge-lg {
        font-size: dt('badge.lg.font.size');
        min-width: dt('badge.lg.min.width');
        height: dt('badge.lg.height');
    }

    .p-badge-xl {
        font-size: dt('badge.xl.font.size');
        min-width: dt('badge.xl.min.width');
        height: dt('badge.xl.height');
    }
`, X8 = {
  root: function(e) {
    var n = e.props, o = e.instance;
    return ["p-badge p-component", {
      "p-badge-circle": ae(n.value) && String(n.value).length === 1,
      "p-badge-dot": lt(n.value) && !o.$slots.default,
      "p-badge-sm": n.size === "small",
      "p-badge-lg": n.size === "large",
      "p-badge-xl": n.size === "xlarge",
      "p-badge-info": n.severity === "info",
      "p-badge-success": n.severity === "success",
      "p-badge-warn": n.severity === "warn",
      "p-badge-danger": n.severity === "danger",
      "p-badge-secondary": n.severity === "secondary",
      "p-badge-contrast": n.severity === "contrast"
    }];
  }
}, Z8 = te.extend({
  name: "badge",
  style: Y8,
  classes: X8
}), Q8 = {
  name: "BaseBadge",
  extends: ne,
  props: {
    value: {
      type: [String, Number],
      default: null
    },
    severity: {
      type: String,
      default: null
    },
    size: {
      type: String,
      default: null
    }
  },
  style: Z8,
  provide: function() {
    return {
      $pcBadge: this,
      $parentInstance: this
    };
  }
};
function ai(t) {
  "@babel/helpers - typeof";
  return ai = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ai(t);
}
function gp(t, e, n) {
  return (e = e9(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function e9(t) {
  var e = t9(t, "string");
  return ai(e) == "symbol" ? e : e + "";
}
function t9(t, e) {
  if (ai(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ai(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Sl = {
  name: "Badge",
  extends: Q8,
  inheritAttrs: !1,
  computed: {
    dataP: function() {
      return Te(gp(gp({
        circle: this.value != null && String(this.value).length === 1,
        empty: this.value == null && !this.$slots.default
      }, this.severity, this.severity), this.size, this.size));
    }
  }
}, n9 = ["data-p"];
function o9(t, e, n, o, i, r) {
  return m(), y("span", k({
    class: t.cx("root"),
    "data-p": r.dataP
  }, t.ptmi("root")), [L(t.$slots, "default", {}, function() {
    return [ee(re(t.value), 1)];
  })], 16, n9);
}
Sl.render = o9;
var r9 = `
    .p-button {
        display: inline-flex;
        cursor: pointer;
        user-select: none;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
        color: dt('button.primary.color');
        background: dt('button.primary.background');
        border: 1px solid dt('button.primary.border.color');
        padding: dt('button.padding.y') dt('button.padding.x');
        font-size: 1rem;
        font-family: inherit;
        font-feature-settings: inherit;
        transition:
            background dt('button.transition.duration'),
            color dt('button.transition.duration'),
            border-color dt('button.transition.duration'),
            outline-color dt('button.transition.duration'),
            box-shadow dt('button.transition.duration');
        border-radius: dt('button.border.radius');
        outline-color: transparent;
        gap: dt('button.gap');
    }

    .p-button:disabled {
        cursor: default;
    }

    .p-button-icon-right {
        order: 1;
    }

    .p-button-icon-right:dir(rtl) {
        order: -1;
    }

    .p-button:not(.p-button-vertical) .p-button-icon:not(.p-button-icon-right):dir(rtl) {
        order: 1;
    }

    .p-button-icon-bottom {
        order: 2;
    }

    .p-button-icon-only {
        width: dt('button.icon.only.width');
        padding-inline-start: 0;
        padding-inline-end: 0;
        gap: 0;
    }

    .p-button-icon-only.p-button-rounded {
        border-radius: 50%;
        height: dt('button.icon.only.width');
    }

    .p-button-icon-only .p-button-label {
        visibility: hidden;
        width: 0;
    }

    .p-button-icon-only::after {
        content: "\0A0";
        visibility: hidden;
        width: 0;
    }

    .p-button-sm {
        font-size: dt('button.sm.font.size');
        padding: dt('button.sm.padding.y') dt('button.sm.padding.x');
    }

    .p-button-sm .p-button-icon {
        font-size: dt('button.sm.font.size');
    }

    .p-button-sm.p-button-icon-only {
        width: dt('button.sm.icon.only.width');
    }

    .p-button-sm.p-button-icon-only.p-button-rounded {
        height: dt('button.sm.icon.only.width');
    }

    .p-button-lg {
        font-size: dt('button.lg.font.size');
        padding: dt('button.lg.padding.y') dt('button.lg.padding.x');
    }

    .p-button-lg .p-button-icon {
        font-size: dt('button.lg.font.size');
    }

    .p-button-lg.p-button-icon-only {
        width: dt('button.lg.icon.only.width');
    }

    .p-button-lg.p-button-icon-only.p-button-rounded {
        height: dt('button.lg.icon.only.width');
    }

    .p-button-vertical {
        flex-direction: column;
    }

    .p-button-label {
        font-weight: dt('button.label.font.weight');
    }

    .p-button-fluid {
        width: 100%;
    }

    .p-button-fluid.p-button-icon-only {
        width: dt('button.icon.only.width');
    }

    .p-button:not(:disabled):hover {
        background: dt('button.primary.hover.background');
        border: 1px solid dt('button.primary.hover.border.color');
        color: dt('button.primary.hover.color');
    }

    .p-button:not(:disabled):active {
        background: dt('button.primary.active.background');
        border: 1px solid dt('button.primary.active.border.color');
        color: dt('button.primary.active.color');
    }

    .p-button:focus-visible {
        box-shadow: dt('button.primary.focus.ring.shadow');
        outline: dt('button.focus.ring.width') dt('button.focus.ring.style') dt('button.primary.focus.ring.color');
        outline-offset: dt('button.focus.ring.offset');
    }

    .p-button .p-badge {
        min-width: dt('button.badge.size');
        height: dt('button.badge.size');
        line-height: dt('button.badge.size');
    }

    .p-button-raised {
        box-shadow: dt('button.raised.shadow');
    }

    .p-button-rounded {
        border-radius: dt('button.rounded.border.radius');
    }

    .p-button-secondary {
        background: dt('button.secondary.background');
        border: 1px solid dt('button.secondary.border.color');
        color: dt('button.secondary.color');
    }

    .p-button-secondary:not(:disabled):hover {
        background: dt('button.secondary.hover.background');
        border: 1px solid dt('button.secondary.hover.border.color');
        color: dt('button.secondary.hover.color');
    }

    .p-button-secondary:not(:disabled):active {
        background: dt('button.secondary.active.background');
        border: 1px solid dt('button.secondary.active.border.color');
        color: dt('button.secondary.active.color');
    }

    .p-button-secondary:focus-visible {
        outline-color: dt('button.secondary.focus.ring.color');
        box-shadow: dt('button.secondary.focus.ring.shadow');
    }

    .p-button-success {
        background: dt('button.success.background');
        border: 1px solid dt('button.success.border.color');
        color: dt('button.success.color');
    }

    .p-button-success:not(:disabled):hover {
        background: dt('button.success.hover.background');
        border: 1px solid dt('button.success.hover.border.color');
        color: dt('button.success.hover.color');
    }

    .p-button-success:not(:disabled):active {
        background: dt('button.success.active.background');
        border: 1px solid dt('button.success.active.border.color');
        color: dt('button.success.active.color');
    }

    .p-button-success:focus-visible {
        outline-color: dt('button.success.focus.ring.color');
        box-shadow: dt('button.success.focus.ring.shadow');
    }

    .p-button-info {
        background: dt('button.info.background');
        border: 1px solid dt('button.info.border.color');
        color: dt('button.info.color');
    }

    .p-button-info:not(:disabled):hover {
        background: dt('button.info.hover.background');
        border: 1px solid dt('button.info.hover.border.color');
        color: dt('button.info.hover.color');
    }

    .p-button-info:not(:disabled):active {
        background: dt('button.info.active.background');
        border: 1px solid dt('button.info.active.border.color');
        color: dt('button.info.active.color');
    }

    .p-button-info:focus-visible {
        outline-color: dt('button.info.focus.ring.color');
        box-shadow: dt('button.info.focus.ring.shadow');
    }

    .p-button-warn {
        background: dt('button.warn.background');
        border: 1px solid dt('button.warn.border.color');
        color: dt('button.warn.color');
    }

    .p-button-warn:not(:disabled):hover {
        background: dt('button.warn.hover.background');
        border: 1px solid dt('button.warn.hover.border.color');
        color: dt('button.warn.hover.color');
    }

    .p-button-warn:not(:disabled):active {
        background: dt('button.warn.active.background');
        border: 1px solid dt('button.warn.active.border.color');
        color: dt('button.warn.active.color');
    }

    .p-button-warn:focus-visible {
        outline-color: dt('button.warn.focus.ring.color');
        box-shadow: dt('button.warn.focus.ring.shadow');
    }

    .p-button-help {
        background: dt('button.help.background');
        border: 1px solid dt('button.help.border.color');
        color: dt('button.help.color');
    }

    .p-button-help:not(:disabled):hover {
        background: dt('button.help.hover.background');
        border: 1px solid dt('button.help.hover.border.color');
        color: dt('button.help.hover.color');
    }

    .p-button-help:not(:disabled):active {
        background: dt('button.help.active.background');
        border: 1px solid dt('button.help.active.border.color');
        color: dt('button.help.active.color');
    }

    .p-button-help:focus-visible {
        outline-color: dt('button.help.focus.ring.color');
        box-shadow: dt('button.help.focus.ring.shadow');
    }

    .p-button-danger {
        background: dt('button.danger.background');
        border: 1px solid dt('button.danger.border.color');
        color: dt('button.danger.color');
    }

    .p-button-danger:not(:disabled):hover {
        background: dt('button.danger.hover.background');
        border: 1px solid dt('button.danger.hover.border.color');
        color: dt('button.danger.hover.color');
    }

    .p-button-danger:not(:disabled):active {
        background: dt('button.danger.active.background');
        border: 1px solid dt('button.danger.active.border.color');
        color: dt('button.danger.active.color');
    }

    .p-button-danger:focus-visible {
        outline-color: dt('button.danger.focus.ring.color');
        box-shadow: dt('button.danger.focus.ring.shadow');
    }

    .p-button-contrast {
        background: dt('button.contrast.background');
        border: 1px solid dt('button.contrast.border.color');
        color: dt('button.contrast.color');
    }

    .p-button-contrast:not(:disabled):hover {
        background: dt('button.contrast.hover.background');
        border: 1px solid dt('button.contrast.hover.border.color');
        color: dt('button.contrast.hover.color');
    }

    .p-button-contrast:not(:disabled):active {
        background: dt('button.contrast.active.background');
        border: 1px solid dt('button.contrast.active.border.color');
        color: dt('button.contrast.active.color');
    }

    .p-button-contrast:focus-visible {
        outline-color: dt('button.contrast.focus.ring.color');
        box-shadow: dt('button.contrast.focus.ring.shadow');
    }

    .p-button-outlined {
        background: transparent;
        border-color: dt('button.outlined.primary.border.color');
        color: dt('button.outlined.primary.color');
    }

    .p-button-outlined:not(:disabled):hover {
        background: dt('button.outlined.primary.hover.background');
        border-color: dt('button.outlined.primary.border.color');
        color: dt('button.outlined.primary.color');
    }

    .p-button-outlined:not(:disabled):active {
        background: dt('button.outlined.primary.active.background');
        border-color: dt('button.outlined.primary.border.color');
        color: dt('button.outlined.primary.color');
    }

    .p-button-outlined.p-button-secondary {
        border-color: dt('button.outlined.secondary.border.color');
        color: dt('button.outlined.secondary.color');
    }

    .p-button-outlined.p-button-secondary:not(:disabled):hover {
        background: dt('button.outlined.secondary.hover.background');
        border-color: dt('button.outlined.secondary.border.color');
        color: dt('button.outlined.secondary.color');
    }

    .p-button-outlined.p-button-secondary:not(:disabled):active {
        background: dt('button.outlined.secondary.active.background');
        border-color: dt('button.outlined.secondary.border.color');
        color: dt('button.outlined.secondary.color');
    }

    .p-button-outlined.p-button-success {
        border-color: dt('button.outlined.success.border.color');
        color: dt('button.outlined.success.color');
    }

    .p-button-outlined.p-button-success:not(:disabled):hover {
        background: dt('button.outlined.success.hover.background');
        border-color: dt('button.outlined.success.border.color');
        color: dt('button.outlined.success.color');
    }

    .p-button-outlined.p-button-success:not(:disabled):active {
        background: dt('button.outlined.success.active.background');
        border-color: dt('button.outlined.success.border.color');
        color: dt('button.outlined.success.color');
    }

    .p-button-outlined.p-button-info {
        border-color: dt('button.outlined.info.border.color');
        color: dt('button.outlined.info.color');
    }

    .p-button-outlined.p-button-info:not(:disabled):hover {
        background: dt('button.outlined.info.hover.background');
        border-color: dt('button.outlined.info.border.color');
        color: dt('button.outlined.info.color');
    }

    .p-button-outlined.p-button-info:not(:disabled):active {
        background: dt('button.outlined.info.active.background');
        border-color: dt('button.outlined.info.border.color');
        color: dt('button.outlined.info.color');
    }

    .p-button-outlined.p-button-warn {
        border-color: dt('button.outlined.warn.border.color');
        color: dt('button.outlined.warn.color');
    }

    .p-button-outlined.p-button-warn:not(:disabled):hover {
        background: dt('button.outlined.warn.hover.background');
        border-color: dt('button.outlined.warn.border.color');
        color: dt('button.outlined.warn.color');
    }

    .p-button-outlined.p-button-warn:not(:disabled):active {
        background: dt('button.outlined.warn.active.background');
        border-color: dt('button.outlined.warn.border.color');
        color: dt('button.outlined.warn.color');
    }

    .p-button-outlined.p-button-help {
        border-color: dt('button.outlined.help.border.color');
        color: dt('button.outlined.help.color');
    }

    .p-button-outlined.p-button-help:not(:disabled):hover {
        background: dt('button.outlined.help.hover.background');
        border-color: dt('button.outlined.help.border.color');
        color: dt('button.outlined.help.color');
    }

    .p-button-outlined.p-button-help:not(:disabled):active {
        background: dt('button.outlined.help.active.background');
        border-color: dt('button.outlined.help.border.color');
        color: dt('button.outlined.help.color');
    }

    .p-button-outlined.p-button-danger {
        border-color: dt('button.outlined.danger.border.color');
        color: dt('button.outlined.danger.color');
    }

    .p-button-outlined.p-button-danger:not(:disabled):hover {
        background: dt('button.outlined.danger.hover.background');
        border-color: dt('button.outlined.danger.border.color');
        color: dt('button.outlined.danger.color');
    }

    .p-button-outlined.p-button-danger:not(:disabled):active {
        background: dt('button.outlined.danger.active.background');
        border-color: dt('button.outlined.danger.border.color');
        color: dt('button.outlined.danger.color');
    }

    .p-button-outlined.p-button-contrast {
        border-color: dt('button.outlined.contrast.border.color');
        color: dt('button.outlined.contrast.color');
    }

    .p-button-outlined.p-button-contrast:not(:disabled):hover {
        background: dt('button.outlined.contrast.hover.background');
        border-color: dt('button.outlined.contrast.border.color');
        color: dt('button.outlined.contrast.color');
    }

    .p-button-outlined.p-button-contrast:not(:disabled):active {
        background: dt('button.outlined.contrast.active.background');
        border-color: dt('button.outlined.contrast.border.color');
        color: dt('button.outlined.contrast.color');
    }

    .p-button-outlined.p-button-plain {
        border-color: dt('button.outlined.plain.border.color');
        color: dt('button.outlined.plain.color');
    }

    .p-button-outlined.p-button-plain:not(:disabled):hover {
        background: dt('button.outlined.plain.hover.background');
        border-color: dt('button.outlined.plain.border.color');
        color: dt('button.outlined.plain.color');
    }

    .p-button-outlined.p-button-plain:not(:disabled):active {
        background: dt('button.outlined.plain.active.background');
        border-color: dt('button.outlined.plain.border.color');
        color: dt('button.outlined.plain.color');
    }

    .p-button-text {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.primary.color');
    }

    .p-button-text:not(:disabled):hover {
        background: dt('button.text.primary.hover.background');
        border-color: transparent;
        color: dt('button.text.primary.color');
    }

    .p-button-text:not(:disabled):active {
        background: dt('button.text.primary.active.background');
        border-color: transparent;
        color: dt('button.text.primary.color');
    }

    .p-button-text.p-button-secondary {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.secondary.color');
    }

    .p-button-text.p-button-secondary:not(:disabled):hover {
        background: dt('button.text.secondary.hover.background');
        border-color: transparent;
        color: dt('button.text.secondary.color');
    }

    .p-button-text.p-button-secondary:not(:disabled):active {
        background: dt('button.text.secondary.active.background');
        border-color: transparent;
        color: dt('button.text.secondary.color');
    }

    .p-button-text.p-button-success {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.success.color');
    }

    .p-button-text.p-button-success:not(:disabled):hover {
        background: dt('button.text.success.hover.background');
        border-color: transparent;
        color: dt('button.text.success.color');
    }

    .p-button-text.p-button-success:not(:disabled):active {
        background: dt('button.text.success.active.background');
        border-color: transparent;
        color: dt('button.text.success.color');
    }

    .p-button-text.p-button-info {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.info.color');
    }

    .p-button-text.p-button-info:not(:disabled):hover {
        background: dt('button.text.info.hover.background');
        border-color: transparent;
        color: dt('button.text.info.color');
    }

    .p-button-text.p-button-info:not(:disabled):active {
        background: dt('button.text.info.active.background');
        border-color: transparent;
        color: dt('button.text.info.color');
    }

    .p-button-text.p-button-warn {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.warn.color');
    }

    .p-button-text.p-button-warn:not(:disabled):hover {
        background: dt('button.text.warn.hover.background');
        border-color: transparent;
        color: dt('button.text.warn.color');
    }

    .p-button-text.p-button-warn:not(:disabled):active {
        background: dt('button.text.warn.active.background');
        border-color: transparent;
        color: dt('button.text.warn.color');
    }

    .p-button-text.p-button-help {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.help.color');
    }

    .p-button-text.p-button-help:not(:disabled):hover {
        background: dt('button.text.help.hover.background');
        border-color: transparent;
        color: dt('button.text.help.color');
    }

    .p-button-text.p-button-help:not(:disabled):active {
        background: dt('button.text.help.active.background');
        border-color: transparent;
        color: dt('button.text.help.color');
    }

    .p-button-text.p-button-danger {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.danger.color');
    }

    .p-button-text.p-button-danger:not(:disabled):hover {
        background: dt('button.text.danger.hover.background');
        border-color: transparent;
        color: dt('button.text.danger.color');
    }

    .p-button-text.p-button-danger:not(:disabled):active {
        background: dt('button.text.danger.active.background');
        border-color: transparent;
        color: dt('button.text.danger.color');
    }

    .p-button-text.p-button-contrast {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.contrast.color');
    }

    .p-button-text.p-button-contrast:not(:disabled):hover {
        background: dt('button.text.contrast.hover.background');
        border-color: transparent;
        color: dt('button.text.contrast.color');
    }

    .p-button-text.p-button-contrast:not(:disabled):active {
        background: dt('button.text.contrast.active.background');
        border-color: transparent;
        color: dt('button.text.contrast.color');
    }

    .p-button-text.p-button-plain {
        background: transparent;
        border-color: transparent;
        color: dt('button.text.plain.color');
    }

    .p-button-text.p-button-plain:not(:disabled):hover {
        background: dt('button.text.plain.hover.background');
        border-color: transparent;
        color: dt('button.text.plain.color');
    }

    .p-button-text.p-button-plain:not(:disabled):active {
        background: dt('button.text.plain.active.background');
        border-color: transparent;
        color: dt('button.text.plain.color');
    }

    .p-button-link {
        background: transparent;
        border-color: transparent;
        color: dt('button.link.color');
    }

    .p-button-link:not(:disabled):hover {
        background: transparent;
        border-color: transparent;
        color: dt('button.link.hover.color');
    }

    .p-button-link:not(:disabled):hover .p-button-label {
        text-decoration: underline;
    }

    .p-button-link:not(:disabled):active {
        background: transparent;
        border-color: transparent;
        color: dt('button.link.active.color');
    }
`;
function li(t) {
  "@babel/helpers - typeof";
  return li = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, li(t);
}
function nn(t, e, n) {
  return (e = i9(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function i9(t) {
  var e = a9(t, "string");
  return li(e) == "symbol" ? e : e + "";
}
function a9(t, e) {
  if (li(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (li(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var l9 = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-button p-component", nn(nn(nn(nn(nn(nn(nn(nn(nn({
      "p-button-icon-only": n.hasIcon && !o.label && !o.badge,
      "p-button-vertical": (o.iconPos === "top" || o.iconPos === "bottom") && o.label,
      "p-button-loading": o.loading,
      "p-button-link": o.link || o.variant === "link"
    }, "p-button-".concat(o.severity), o.severity), "p-button-raised", o.raised), "p-button-rounded", o.rounded), "p-button-text", o.text || o.variant === "text"), "p-button-outlined", o.outlined || o.variant === "outlined"), "p-button-sm", o.size === "small"), "p-button-lg", o.size === "large"), "p-button-plain", o.plain), "p-button-fluid", n.hasFluid)];
  },
  loadingIcon: "p-button-loading-icon",
  icon: function(e) {
    var n = e.props;
    return ["p-button-icon", nn({}, "p-button-icon-".concat(n.iconPos), n.label)];
  },
  label: "p-button-label"
}, s9 = te.extend({
  name: "button",
  style: r9,
  classes: l9
}), d9 = {
  name: "BaseButton",
  extends: ne,
  props: {
    label: {
      type: String,
      default: null
    },
    icon: {
      type: String,
      default: null
    },
    iconPos: {
      type: String,
      default: "left"
    },
    iconClass: {
      type: [String, Object],
      default: null
    },
    badge: {
      type: String,
      default: null
    },
    badgeClass: {
      type: [String, Object],
      default: null
    },
    badgeSeverity: {
      type: String,
      default: "secondary"
    },
    loading: {
      type: Boolean,
      default: !1
    },
    loadingIcon: {
      type: String,
      default: void 0
    },
    as: {
      type: [String, Object],
      default: "BUTTON"
    },
    asChild: {
      type: Boolean,
      default: !1
    },
    link: {
      type: Boolean,
      default: !1
    },
    severity: {
      type: String,
      default: null
    },
    raised: {
      type: Boolean,
      default: !1
    },
    rounded: {
      type: Boolean,
      default: !1
    },
    text: {
      type: Boolean,
      default: !1
    },
    outlined: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: null
    },
    variant: {
      type: String,
      default: null
    },
    plain: {
      type: Boolean,
      default: !1
    },
    fluid: {
      type: Boolean,
      default: null
    }
  },
  style: s9,
  provide: function() {
    return {
      $pcButton: this,
      $parentInstance: this
    };
  }
};
function si(t) {
  "@babel/helpers - typeof";
  return si = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, si(t);
}
function xt(t, e, n) {
  return (e = c9(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function c9(t) {
  var e = u9(t, "string");
  return si(e) == "symbol" ? e : e + "";
}
function u9(t, e) {
  if (si(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (si(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Ao = {
  name: "Button",
  extends: d9,
  inheritAttrs: !1,
  inject: {
    $pcFluid: {
      default: null
    }
  },
  methods: {
    getPTOptions: function(e) {
      var n = e === "root" ? this.ptmi : this.ptm;
      return n(e, {
        context: {
          disabled: this.disabled
        }
      });
    }
  },
  computed: {
    disabled: function() {
      return this.$attrs.disabled || this.$attrs.disabled === "" || this.loading;
    },
    defaultAriaLabel: function() {
      return this.label ? this.label + (this.badge ? " " + this.badge : "") : this.$attrs.ariaLabel;
    },
    hasIcon: function() {
      return this.icon || this.$slots.icon;
    },
    attrs: function() {
      return k(this.asAttrs, this.a11yAttrs, this.getPTOptions("root"));
    },
    asAttrs: function() {
      return this.as === "BUTTON" ? {
        type: "button",
        disabled: this.disabled
      } : void 0;
    },
    a11yAttrs: function() {
      return {
        "aria-label": this.defaultAriaLabel,
        "data-pc-name": "button",
        "data-p-disabled": this.disabled,
        "data-p-severity": this.severity
      };
    },
    hasFluid: function() {
      return lt(this.fluid) ? !!this.$pcFluid : this.fluid;
    },
    dataP: function() {
      return Te(xt(xt(xt(xt(xt(xt(xt(xt(xt(xt({}, this.size, this.size), "icon-only", this.hasIcon && !this.label && !this.badge), "loading", this.loading), "fluid", this.hasFluid), "rounded", this.rounded), "raised", this.raised), "outlined", this.outlined || this.variant === "outlined"), "text", this.text || this.variant === "text"), "link", this.link || this.variant === "link"), "vertical", (this.iconPos === "top" || this.iconPos === "bottom") && this.label));
    },
    dataIconP: function() {
      return Te(xt(xt({}, this.iconPos, this.iconPos), this.size, this.size));
    },
    dataLabelP: function() {
      return Te(xt(xt({}, this.size, this.size), "icon-only", this.hasIcon && !this.label && !this.badge));
    }
  },
  components: {
    SpinnerIcon: Mo,
    Badge: Sl
  },
  directives: {
    ripple: mt
  }
}, p9 = ["data-p"], f9 = ["data-p"];
function h9(t, e, n, o, i, r) {
  var a = $("SpinnerIcon"), l = $("Badge"), s = tt("ripple");
  return t.asChild ? L(t.$slots, "default", {
    key: 1,
    class: Y(t.cx("root")),
    a11yAttrs: r.a11yAttrs
  }) : We((m(), O(q(t.as), k({
    key: 0,
    class: t.cx("root"),
    "data-p": r.dataP
  }, r.attrs), {
    default: E(function() {
      return [L(t.$slots, "default", {}, function() {
        return [t.loading ? L(t.$slots, "loadingicon", k({
          key: 0,
          class: [t.cx("loadingIcon"), t.cx("icon")]
        }, t.ptm("loadingIcon")), function() {
          return [t.loadingIcon ? (m(), y("span", k({
            key: 0,
            class: [t.cx("loadingIcon"), t.cx("icon"), t.loadingIcon]
          }, t.ptm("loadingIcon")), null, 16)) : (m(), O(a, k({
            key: 1,
            class: [t.cx("loadingIcon"), t.cx("icon")],
            spin: ""
          }, t.ptm("loadingIcon")), null, 16, ["class"]))];
        }) : L(t.$slots, "icon", k({
          key: 1,
          class: [t.cx("icon")]
        }, t.ptm("icon")), function() {
          return [t.icon ? (m(), y("span", k({
            key: 0,
            class: [t.cx("icon"), t.icon, t.iconClass],
            "data-p": r.dataIconP
          }, t.ptm("icon")), null, 16, p9)) : M("", !0)];
        }), t.label ? (m(), y("span", k({
          key: 2,
          class: t.cx("label")
        }, t.ptm("label"), {
          "data-p": r.dataLabelP
        }), re(t.label), 17, f9)) : M("", !0), t.badge ? (m(), O(l, {
          key: 3,
          value: t.badge,
          class: Y(t.badgeClass),
          severity: t.badgeSeverity,
          unstyled: t.unstyled,
          pt: t.ptm("pcBadge")
        }, null, 8, ["value", "class", "severity", "unstyled", "pt"])) : M("", !0)];
      })];
    }),
    _: 3
  }, 16, ["class", "data-p"])), [[s]]);
}
Ao.render = h9;
function di(t) {
  "@babel/helpers - typeof";
  return di = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, di(t);
}
function m9(t, e) {
  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function g9(t, e) {
  for (var n = 0; n < e.length; n++) {
    var o = e[n];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, v9(o.key), o);
  }
}
function b9(t, e, n) {
  return e && g9(t.prototype, e), Object.defineProperty(t, "prototype", { writable: !1 }), t;
}
function v9(t) {
  var e = y9(t, "string");
  return di(e) == "symbol" ? e : e + "";
}
function y9(t, e) {
  if (di(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (di(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(t);
}
var Tm = /* @__PURE__ */ (function() {
  function t(e) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : function() {
    };
    m9(this, t), this.element = e, this.listener = n;
  }
  return b9(t, [{
    key: "bindScrollListener",
    value: function() {
      this.scrollableParents = xv(this.element);
      for (var n = 0; n < this.scrollableParents.length; n++)
        this.scrollableParents[n].addEventListener("scroll", this.listener);
    }
  }, {
    key: "unbindScrollListener",
    value: function() {
      if (this.scrollableParents)
        for (var n = 0; n < this.scrollableParents.length; n++)
          this.scrollableParents[n].removeEventListener("scroll", this.listener);
    }
  }, {
    key: "destroy",
    value: function() {
      this.unbindScrollListener(), this.element = null, this.listener = null, this.scrollableParents = null;
    }
  }]);
})();
function ci(t) {
  "@babel/helpers - typeof";
  return ci = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ci(t);
}
function k9(t) {
  return S9(t) || x9(t) || C9(t) || w9();
}
function w9() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function C9(t, e) {
  if (t) {
    if (typeof t == "string") return Ys(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ys(t, e) : void 0;
  }
}
function x9(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function S9(t) {
  if (Array.isArray(t)) return Ys(t);
}
function Ys(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function I9(t, e) {
  if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
}
function O9(t, e) {
  for (var n = 0; n < e.length; n++) {
    var o = e[n];
    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(t, Rm(o.key), o);
  }
}
function P9(t, e, n) {
  return e && O9(t.prototype, e), Object.defineProperty(t, "prototype", { writable: !1 }), t;
}
function bp(t, e, n) {
  return (e = Rm(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function Rm(t) {
  var e = $9(t, "string");
  return ci(e) == "symbol" ? e : e + "";
}
function $9(t, e) {
  if (ci(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ci(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return String(t);
}
var or = /* @__PURE__ */ (function() {
  function t(e) {
    var n = e.init, o = e.type;
    I9(this, t), bp(this, "helpers", void 0), bp(this, "type", void 0), this.helpers = new Set(n), this.type = o;
  }
  return P9(t, [{
    key: "add",
    value: function(n) {
      this.helpers.add(n);
    }
  }, {
    key: "update",
    value: function() {
    }
  }, {
    key: "delete",
    value: function(n) {
      this.helpers.delete(n);
    }
  }, {
    key: "clear",
    value: function() {
      this.helpers.clear();
    }
  }, {
    key: "get",
    value: function(n, o) {
      var i = this._get(n, o), r = i ? this._recursive(k9(this.helpers), i) : null;
      return ae(r) ? r : null;
    }
  }, {
    key: "_isMatched",
    value: function(n, o) {
      var i, r = n == null ? void 0 : n.parent;
      return (r == null || (i = r.vnode) === null || i === void 0 ? void 0 : i.key) === o || r && this._isMatched(r, o) || !1;
    }
  }, {
    key: "_get",
    value: function(n, o) {
      var i, r;
      return ((i = o || (n == null ? void 0 : n.$slots)) === null || i === void 0 || (r = i.default) === null || r === void 0 ? void 0 : r.call(i)) || null;
    }
  }, {
    key: "_recursive",
    value: function() {
      var n = this, o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], r = [];
      return i.forEach(function(a) {
        a.children instanceof Array ? r = r.concat(n._recursive(r, a.children)) : a.type.name === n.type ? r.push(a) : ae(a.key) && (r = r.concat(o.filter(function(l) {
          return n._isMatched(l, a.key);
        }).map(function(l) {
          return l.vnode;
        })));
      }), r;
    }
  }]);
})();
function eo(t, e) {
  if (t) {
    var n = t.props;
    if (n) {
      var o = e.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase(), i = Object.prototype.hasOwnProperty.call(n, o) ? o : e;
      return t.type.extends.props[e].type === Boolean && n[i] === "" ? !0 : n[i];
    }
  }
  return null;
}
var Bm = {
  name: "BlankIcon",
  extends: Ie
};
function T9(t) {
  return M9(t) || E9(t) || B9(t) || R9();
}
function R9() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function B9(t, e) {
  if (t) {
    if (typeof t == "string") return Xs(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Xs(t, e) : void 0;
  }
}
function E9(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function M9(t) {
  if (Array.isArray(t)) return Xs(t);
}
function Xs(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function A9(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), T9(e[0] || (e[0] = [v("rect", {
    width: "1",
    height: "1",
    fill: "currentColor",
    "fill-opacity": "0"
  }, null, -1)])), 16);
}
Bm.render = A9;
var br = {
  name: "TimesIcon",
  extends: Ie
};
function D9(t) {
  return N9(t) || F9(t) || z9(t) || L9();
}
function L9() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function z9(t, e) {
  if (t) {
    if (typeof t == "string") return Zs(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Zs(t, e) : void 0;
  }
}
function F9(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function N9(t) {
  if (Array.isArray(t)) return Zs(t);
}
function Zs(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function j9(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), D9(e[0] || (e[0] = [v("path", {
    d: "M8.01186 7.00933L12.27 2.75116C12.341 2.68501 12.398 2.60524 12.4375 2.51661C12.4769 2.42798 12.4982 2.3323 12.4999 2.23529C12.5016 2.13827 12.4838 2.0419 12.4474 1.95194C12.4111 1.86197 12.357 1.78024 12.2884 1.71163C12.2198 1.64302 12.138 1.58893 12.0481 1.55259C11.9581 1.51625 11.8617 1.4984 11.7647 1.50011C11.6677 1.50182 11.572 1.52306 11.4834 1.56255C11.3948 1.60204 11.315 1.65898 11.2488 1.72997L6.99067 5.98814L2.7325 1.72997C2.59553 1.60234 2.41437 1.53286 2.22718 1.53616C2.03999 1.53946 1.8614 1.61529 1.72901 1.74767C1.59663 1.88006 1.5208 2.05865 1.5175 2.24584C1.5142 2.43303 1.58368 2.61419 1.71131 2.75116L5.96948 7.00933L1.71131 11.2675C1.576 11.403 1.5 11.5866 1.5 11.7781C1.5 11.9696 1.576 12.1532 1.71131 12.2887C1.84679 12.424 2.03043 12.5 2.2219 12.5C2.41338 12.5 2.59702 12.424 2.7325 12.2887L6.99067 8.03052L11.2488 12.2887C11.3843 12.424 11.568 12.5 11.7594 12.5C11.9509 12.5 12.1346 12.424 12.27 12.2887C12.4053 12.1532 12.4813 11.9696 12.4813 11.7781C12.4813 11.5866 12.4053 11.403 12.27 11.2675L8.01186 7.00933Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
br.render = j9;
var Hn = ta(), vr = {
  name: "Portal",
  props: {
    appendTo: {
      type: [String, Object],
      default: "body"
    },
    disabled: {
      type: Boolean,
      default: !1
    }
  },
  data: function() {
    return {
      mounted: !1
    };
  },
  mounted: function() {
    this.mounted = Yh();
  },
  computed: {
    inline: function() {
      return this.disabled || this.appendTo === "self";
    }
  }
};
function V9(t, e, n, o, i, r) {
  return r.inline ? L(t.$slots, "default", {
    key: 0
  }) : i.mounted ? (m(), O(ov, {
    key: 1,
    to: n.appendTo
  }, [L(t.$slots, "default")], 8, ["to"])) : M("", !0);
}
vr.render = V9;
var _9 = `
    .p-virtualscroller-loader {
        background: dt('virtualscroller.loader.mask.background');
        color: dt('virtualscroller.loader.mask.color');
    }

    .p-virtualscroller-loading-icon {
        font-size: dt('virtualscroller.loader.icon.size');
        width: dt('virtualscroller.loader.icon.size');
        height: dt('virtualscroller.loader.icon.size');
    }
`, K9 = `
.p-virtualscroller {
    position: relative;
    overflow: auto;
    contain: strict;
    transform: translateZ(0);
    will-change: scroll-position;
    outline: 0 none;
}

.p-virtualscroller-content {
    position: absolute;
    top: 0;
    left: 0;
    min-height: 100%;
    min-width: 100%;
    will-change: transform;
}

.p-virtualscroller-spacer {
    position: absolute;
    top: 0;
    left: 0;
    height: 1px;
    width: 1px;
    transform-origin: 0 0;
    pointer-events: none;
}

.p-virtualscroller-loader {
    position: sticky;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.p-virtualscroller-loader-mask {
    display: flex;
    align-items: center;
    justify-content: center;
}

.p-virtualscroller-horizontal > .p-virtualscroller-content {
    display: flex;
}

.p-virtualscroller-inline .p-virtualscroller-content {
    position: static;
}

.p-virtualscroller .p-virtualscroller-loading {
    transform: none !important;
    min-height: 0;
    position: sticky;
    inset-block-start: 0;
    inset-inline-start: 0;
}
`, vp = te.extend({
  name: "virtualscroller",
  css: K9,
  style: _9
}), H9 = {
  name: "BaseVirtualScroller",
  extends: ne,
  props: {
    id: {
      type: String,
      default: null
    },
    style: null,
    class: null,
    items: {
      type: Array,
      default: null
    },
    itemSize: {
      type: [Number, Array],
      default: 0
    },
    scrollHeight: null,
    scrollWidth: null,
    orientation: {
      type: String,
      default: "vertical"
    },
    numToleratedItems: {
      type: Number,
      default: null
    },
    delay: {
      type: Number,
      default: 0
    },
    resizeDelay: {
      type: Number,
      default: 10
    },
    lazy: {
      type: Boolean,
      default: !1
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    loaderDisabled: {
      type: Boolean,
      default: !1
    },
    columns: {
      type: Array,
      default: null
    },
    loading: {
      type: Boolean,
      default: !1
    },
    showSpacer: {
      type: Boolean,
      default: !0
    },
    showLoader: {
      type: Boolean,
      default: !1
    },
    tabindex: {
      type: Number,
      default: 0
    },
    inline: {
      type: Boolean,
      default: !1
    },
    step: {
      type: Number,
      default: 0
    },
    appendOnly: {
      type: Boolean,
      default: !1
    },
    autoSize: {
      type: Boolean,
      default: !1
    }
  },
  style: vp,
  provide: function() {
    return {
      $pcVirtualScroller: this,
      $parentInstance: this
    };
  },
  beforeMount: function() {
    var e;
    vp.loadCSS({
      nonce: (e = this.$primevueConfig) === null || e === void 0 || (e = e.csp) === null || e === void 0 ? void 0 : e.nonce
    });
  }
};
function ui(t) {
  "@babel/helpers - typeof";
  return ui = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ui(t);
}
function yp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Sr(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? yp(Object(n), !0).forEach(function(o) {
      Em(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : yp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function Em(t, e, n) {
  return (e = W9(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function W9(t) {
  var e = U9(t, "string");
  return ui(e) == "symbol" ? e : e + "";
}
function U9(t, e) {
  if (ui(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ui(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var kc = {
  name: "VirtualScroller",
  extends: H9,
  inheritAttrs: !1,
  emits: ["update:numToleratedItems", "scroll", "scroll-index-change", "lazy-load"],
  data: function() {
    var e = this.isBoth();
    return {
      first: e ? {
        rows: 0,
        cols: 0
      } : 0,
      last: e ? {
        rows: 0,
        cols: 0
      } : 0,
      page: e ? {
        rows: 0,
        cols: 0
      } : 0,
      numItemsInViewport: e ? {
        rows: 0,
        cols: 0
      } : 0,
      lastScrollPos: e ? {
        top: 0,
        left: 0
      } : 0,
      d_numToleratedItems: this.numToleratedItems,
      d_loading: this.loading,
      loaderArr: [],
      spacerStyle: {},
      contentStyle: {}
    };
  },
  element: null,
  content: null,
  lastScrollPos: null,
  scrollTimeout: null,
  resizeTimeout: null,
  defaultWidth: 0,
  defaultHeight: 0,
  defaultContentWidth: 0,
  defaultContentHeight: 0,
  isRangeChanged: !1,
  lazyLoadState: {},
  resizeListener: null,
  resizeObserver: null,
  initialized: !1,
  watch: {
    numToleratedItems: function(e) {
      this.d_numToleratedItems = e;
    },
    loading: function(e, n) {
      this.lazy && e !== n && e !== this.d_loading && (this.d_loading = e);
    },
    items: {
      handler: function(e, n) {
        (!n || n.length !== (e || []).length) && (this.init(), this.calculateAutoSize());
      },
      deep: !0
    },
    itemSize: function() {
      this.init(), this.calculateAutoSize();
    },
    orientation: function() {
      this.lastScrollPos = this.isBoth() ? {
        top: 0,
        left: 0
      } : 0;
    },
    scrollHeight: function() {
      this.init(), this.calculateAutoSize();
    },
    scrollWidth: function() {
      this.init(), this.calculateAutoSize();
    }
  },
  mounted: function() {
    this.viewInit(), this.lastScrollPos = this.isBoth() ? {
      top: 0,
      left: 0
    } : 0, this.lazyLoadState = this.lazyLoadState || {};
  },
  updated: function() {
    !this.initialized && this.viewInit();
  },
  unmounted: function() {
    this.unbindResizeListener(), this.initialized = !1;
  },
  methods: {
    viewInit: function() {
      Xa(this.element) && (this.setContentEl(this.content), this.init(), this.calculateAutoSize(), this.defaultWidth = sn(this.element), this.defaultHeight = jn(this.element), this.defaultContentWidth = sn(this.content), this.defaultContentHeight = jn(this.content), this.initialized = !0), this.element && this.bindResizeListener();
    },
    init: function() {
      this.disabled || (this.setSize(), this.calculateOptions(), this.setSpacerSize());
    },
    isVertical: function() {
      return this.orientation === "vertical";
    },
    isHorizontal: function() {
      return this.orientation === "horizontal";
    },
    isBoth: function() {
      return this.orientation === "both";
    },
    scrollTo: function(e) {
      this.element && this.element.scrollTo(e);
    },
    scrollToIndex: function(e) {
      var n = this, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "auto", i = this.isBoth(), r = this.isHorizontal(), a = i ? e.every(function(I) {
        return I > -1;
      }) : e > -1;
      if (a) {
        var l = this.first, s = this.element, d = s.scrollTop, c = d === void 0 ? 0 : d, u = s.scrollLeft, f = u === void 0 ? 0 : u, p = this.calculateNumItems(), h = p.numToleratedItems, g = this.getContentPosition(), b = this.itemSize, C = function() {
          var B = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, H = arguments.length > 1 ? arguments[1] : void 0;
          return B <= H ? 0 : B;
        }, x = function(B, H, K) {
          return B * H + K;
        }, R = function() {
          var B = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, H = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return n.scrollTo({
            left: B,
            top: H,
            behavior: o
          });
        }, w = i ? {
          rows: 0,
          cols: 0
        } : 0, T = !1, S = !1;
        i ? (w = {
          rows: C(e[0], h[0]),
          cols: C(e[1], h[1])
        }, R(x(w.cols, b[1], g.left), x(w.rows, b[0], g.top)), S = this.lastScrollPos.top !== c || this.lastScrollPos.left !== f, T = w.rows !== l.rows || w.cols !== l.cols) : (w = C(e, h), r ? R(x(w, b, g.left), c) : R(f, x(w, b, g.top)), S = this.lastScrollPos !== (r ? f : c), T = w !== l), this.isRangeChanged = T, S && (this.first = w);
      }
    },
    scrollInView: function(e, n) {
      var o = this, i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "auto";
      if (n) {
        var r = this.isBoth(), a = this.isHorizontal(), l = r ? e.every(function(b) {
          return b > -1;
        }) : e > -1;
        if (l) {
          var s = this.getRenderedRange(), d = s.first, c = s.viewport, u = function() {
            var C = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, x = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
            return o.scrollTo({
              left: C,
              top: x,
              behavior: i
            });
          }, f = n === "to-start", p = n === "to-end";
          if (f) {
            if (r)
              c.first.rows - d.rows > e[0] ? u(c.first.cols * this.itemSize[1], (c.first.rows - 1) * this.itemSize[0]) : c.first.cols - d.cols > e[1] && u((c.first.cols - 1) * this.itemSize[1], c.first.rows * this.itemSize[0]);
            else if (c.first - d > e) {
              var h = (c.first - 1) * this.itemSize;
              a ? u(h, 0) : u(0, h);
            }
          } else if (p) {
            if (r)
              c.last.rows - d.rows <= e[0] + 1 ? u(c.first.cols * this.itemSize[1], (c.first.rows + 1) * this.itemSize[0]) : c.last.cols - d.cols <= e[1] + 1 && u((c.first.cols + 1) * this.itemSize[1], c.first.rows * this.itemSize[0]);
            else if (c.last - d <= e + 1) {
              var g = (c.first + 1) * this.itemSize;
              a ? u(g, 0) : u(0, g);
            }
          }
        }
      } else
        this.scrollToIndex(e, i);
    },
    getRenderedRange: function() {
      var e = function(u, f) {
        return Math.floor(u / (f || u));
      }, n = this.first, o = 0;
      if (this.element) {
        var i = this.isBoth(), r = this.isHorizontal(), a = this.element, l = a.scrollTop, s = a.scrollLeft;
        if (i)
          n = {
            rows: e(l, this.itemSize[0]),
            cols: e(s, this.itemSize[1])
          }, o = {
            rows: n.rows + this.numItemsInViewport.rows,
            cols: n.cols + this.numItemsInViewport.cols
          };
        else {
          var d = r ? s : l;
          n = e(d, this.itemSize), o = n + this.numItemsInViewport;
        }
      }
      return {
        first: this.first,
        last: this.last,
        viewport: {
          first: n,
          last: o
        }
      };
    },
    calculateNumItems: function() {
      var e = this.isBoth(), n = this.isHorizontal(), o = this.itemSize, i = this.getContentPosition(), r = this.element ? this.element.offsetWidth - i.left : 0, a = this.element ? this.element.offsetHeight - i.top : 0, l = function(f, p) {
        return Math.ceil(f / (p || f));
      }, s = function(f) {
        return Math.ceil(f / 2);
      }, d = e ? {
        rows: l(a, o[0]),
        cols: l(r, o[1])
      } : l(n ? r : a, o), c = this.d_numToleratedItems || (e ? [s(d.rows), s(d.cols)] : s(d));
      return {
        numItemsInViewport: d,
        numToleratedItems: c
      };
    },
    calculateOptions: function() {
      var e = this, n = this.isBoth(), o = this.first, i = this.calculateNumItems(), r = i.numItemsInViewport, a = i.numToleratedItems, l = function(c, u, f) {
        var p = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : !1;
        return e.getLast(c + u + (c < f ? 2 : 3) * f, p);
      }, s = n ? {
        rows: l(o.rows, r.rows, a[0]),
        cols: l(o.cols, r.cols, a[1], !0)
      } : l(o, r, a);
      this.last = s, this.numItemsInViewport = r, this.d_numToleratedItems = a, this.$emit("update:numToleratedItems", this.d_numToleratedItems), this.showLoader && (this.loaderArr = n ? Array.from({
        length: r.rows
      }).map(function() {
        return Array.from({
          length: r.cols
        });
      }) : Array.from({
        length: r
      })), this.lazy && Promise.resolve().then(function() {
        var d;
        e.lazyLoadState = {
          first: e.step ? n ? {
            rows: 0,
            cols: o.cols
          } : 0 : o,
          last: Math.min(e.step ? e.step : s, ((d = e.items) === null || d === void 0 ? void 0 : d.length) || 0)
        }, e.$emit("lazy-load", e.lazyLoadState);
      });
    },
    calculateAutoSize: function() {
      var e = this;
      this.autoSize && !this.d_loading && Promise.resolve().then(function() {
        if (e.content) {
          var n = e.isBoth(), o = e.isHorizontal(), i = e.isVertical();
          e.content.style.minHeight = e.content.style.minWidth = "auto", e.content.style.position = "relative", e.element.style.contain = "none";
          var r = [sn(e.element), jn(e.element)], a = r[0], l = r[1];
          (n || o) && (e.element.style.width = a < e.defaultWidth ? a + "px" : e.scrollWidth || e.defaultWidth + "px"), (n || i) && (e.element.style.height = l < e.defaultHeight ? l + "px" : e.scrollHeight || e.defaultHeight + "px"), e.content.style.minHeight = e.content.style.minWidth = "", e.content.style.position = "", e.element.style.contain = "";
        }
      });
    },
    getLast: function() {
      var e, n, o = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, i = arguments.length > 1 ? arguments[1] : void 0;
      return this.items ? Math.min(i ? ((e = this.columns || this.items[0]) === null || e === void 0 ? void 0 : e.length) || 0 : ((n = this.items) === null || n === void 0 ? void 0 : n.length) || 0, o) : 0;
    },
    getContentPosition: function() {
      if (this.content) {
        var e = getComputedStyle(this.content), n = parseFloat(e.paddingLeft) + Math.max(parseFloat(e.left) || 0, 0), o = parseFloat(e.paddingRight) + Math.max(parseFloat(e.right) || 0, 0), i = parseFloat(e.paddingTop) + Math.max(parseFloat(e.top) || 0, 0), r = parseFloat(e.paddingBottom) + Math.max(parseFloat(e.bottom) || 0, 0);
        return {
          left: n,
          right: o,
          top: i,
          bottom: r,
          x: n + o,
          y: i + r
        };
      }
      return {
        left: 0,
        right: 0,
        top: 0,
        bottom: 0,
        x: 0,
        y: 0
      };
    },
    setSize: function() {
      var e = this;
      if (this.element) {
        var n = this.isBoth(), o = this.isHorizontal(), i = this.element.parentElement, r = this.scrollWidth || "".concat(this.element.offsetWidth || i.offsetWidth, "px"), a = this.scrollHeight || "".concat(this.element.offsetHeight || i.offsetHeight, "px"), l = function(d, c) {
          return e.element.style[d] = c;
        };
        n || o ? (l("height", a), l("width", r)) : l("height", a);
      }
    },
    setSpacerSize: function() {
      var e = this, n = this.items;
      if (n) {
        var o = this.isBoth(), i = this.isHorizontal(), r = this.getContentPosition(), a = function(s, d, c) {
          var u = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
          return e.spacerStyle = Sr(Sr({}, e.spacerStyle), Em({}, "".concat(s), (d || []).length * c + u + "px"));
        };
        o ? (a("height", n, this.itemSize[0], r.y), a("width", this.columns || n[1], this.itemSize[1], r.x)) : i ? a("width", this.columns || n, this.itemSize, r.x) : a("height", n, this.itemSize, r.y);
      }
    },
    setContentPosition: function(e) {
      var n = this;
      if (this.content && !this.appendOnly) {
        var o = this.isBoth(), i = this.isHorizontal(), r = e ? e.first : this.first, a = function(c, u) {
          return c * u;
        }, l = function() {
          var c = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, u = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
          return n.contentStyle = Sr(Sr({}, n.contentStyle), {
            transform: "translate3d(".concat(c, "px, ").concat(u, "px, 0)")
          });
        };
        if (o)
          l(a(r.cols, this.itemSize[1]), a(r.rows, this.itemSize[0]));
        else {
          var s = a(r, this.itemSize);
          i ? l(s, 0) : l(0, s);
        }
      }
    },
    onScrollPositionChange: function(e) {
      var n = this, o = e.target, i = this.isBoth(), r = this.isHorizontal(), a = this.getContentPosition(), l = function(j, F) {
        return j ? j > F ? j - F : j : 0;
      }, s = function(j, F) {
        return Math.floor(j / (F || j));
      }, d = function(j, F, U, le, ie, ue) {
        return j <= ie ? ie : ue ? U - le - ie : F + ie - 1;
      }, c = function(j, F, U, le, ie, ue, de, Ce) {
        if (j <= ue) return 0;
        var Re = Math.max(0, de ? j < F ? U : j - ue : j > F ? U : j - 2 * ue), Ee = n.getLast(Re, Ce);
        return Re > Ee ? Ee - ie : Re;
      }, u = function(j, F, U, le, ie, ue) {
        var de = F + le + 2 * ie;
        return j >= ie && (de += ie + 1), n.getLast(de, ue);
      }, f = l(o.scrollTop, a.top), p = l(o.scrollLeft, a.left), h = i ? {
        rows: 0,
        cols: 0
      } : 0, g = this.last, b = !1, C = this.lastScrollPos;
      if (i) {
        var x = this.lastScrollPos.top <= f, R = this.lastScrollPos.left <= p;
        if (!this.appendOnly || this.appendOnly && (x || R)) {
          var w = {
            rows: s(f, this.itemSize[0]),
            cols: s(p, this.itemSize[1])
          }, T = {
            rows: d(w.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], x),
            cols: d(w.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], R)
          };
          h = {
            rows: c(w.rows, T.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], x),
            cols: c(w.cols, T.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], R, !0)
          }, g = {
            rows: u(w.rows, h.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),
            cols: u(w.cols, h.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], !0)
          }, b = h.rows !== this.first.rows || g.rows !== this.last.rows || h.cols !== this.first.cols || g.cols !== this.last.cols || this.isRangeChanged, C = {
            top: f,
            left: p
          };
        }
      } else {
        var S = r ? p : f, I = this.lastScrollPos <= S;
        if (!this.appendOnly || this.appendOnly && I) {
          var B = s(S, this.itemSize), H = d(B, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, I);
          h = c(B, H, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, I), g = u(B, h, this.last, this.numItemsInViewport, this.d_numToleratedItems), b = h !== this.first || g !== this.last || this.isRangeChanged, C = S;
        }
      }
      return {
        first: h,
        last: g,
        isRangeChanged: b,
        scrollPos: C
      };
    },
    onScrollChange: function(e) {
      var n = this.onScrollPositionChange(e), o = n.first, i = n.last, r = n.isRangeChanged, a = n.scrollPos;
      if (r) {
        var l = {
          first: o,
          last: i
        };
        if (this.setContentPosition(l), this.first = o, this.last = i, this.lastScrollPos = a, this.$emit("scroll-index-change", l), this.lazy && this.isPageChanged(o)) {
          var s, d, c = {
            first: this.step ? Math.min(this.getPageByFirst(o) * this.step, (((s = this.items) === null || s === void 0 ? void 0 : s.length) || 0) - this.step) : o,
            last: Math.min(this.step ? (this.getPageByFirst(o) + 1) * this.step : i, ((d = this.items) === null || d === void 0 ? void 0 : d.length) || 0)
          }, u = this.lazyLoadState.first !== c.first || this.lazyLoadState.last !== c.last;
          u && this.$emit("lazy-load", c), this.lazyLoadState = c;
        }
      }
    },
    onScroll: function(e) {
      var n = this;
      if (this.$emit("scroll", e), this.delay) {
        if (this.scrollTimeout && clearTimeout(this.scrollTimeout), this.isPageChanged()) {
          if (!this.d_loading && this.showLoader) {
            var o = this.onScrollPositionChange(e), i = o.isRangeChanged, r = i || (this.step ? this.isPageChanged() : !1);
            r && (this.d_loading = !0);
          }
          this.scrollTimeout = setTimeout(function() {
            n.onScrollChange(e), n.d_loading && n.showLoader && (!n.lazy || n.loading === void 0) && (n.d_loading = !1, n.page = n.getPageByFirst());
          }, this.delay);
        }
      } else
        this.onScrollChange(e);
    },
    onResize: function() {
      var e = this;
      this.resizeTimeout && clearTimeout(this.resizeTimeout), this.resizeTimeout = setTimeout(function() {
        if (Xa(e.element)) {
          var n = e.isBoth(), o = e.isVertical(), i = e.isHorizontal(), r = [sn(e.element), jn(e.element)], a = r[0], l = r[1], s = a !== e.defaultWidth, d = l !== e.defaultHeight, c = n ? s || d : i ? s : o ? d : !1;
          c && (e.d_numToleratedItems = e.numToleratedItems, e.defaultWidth = a, e.defaultHeight = l, e.defaultContentWidth = sn(e.content), e.defaultContentHeight = jn(e.content), e.init());
        }
      }, this.resizeDelay);
    },
    bindResizeListener: function() {
      var e = this;
      this.resizeListener || (this.resizeListener = this.onResize.bind(this), window.addEventListener("resize", this.resizeListener), window.addEventListener("orientationchange", this.resizeListener), this.resizeObserver = new ResizeObserver(function() {
        e.onResize();
      }), this.resizeObserver.observe(this.element));
    },
    unbindResizeListener: function() {
      this.resizeListener && (window.removeEventListener("resize", this.resizeListener), window.removeEventListener("orientationchange", this.resizeListener), this.resizeListener = null), this.resizeObserver && (this.resizeObserver.disconnect(), this.resizeObserver = null);
    },
    getOptions: function(e) {
      var n = (this.items || []).length, o = this.isBoth() ? this.first.rows + e : this.first + e;
      return {
        index: o,
        count: n,
        first: o === 0,
        last: o === n - 1,
        even: o % 2 === 0,
        odd: o % 2 !== 0
      };
    },
    getLoaderOptions: function(e, n) {
      var o = this.loaderArr.length;
      return Sr({
        index: e,
        count: o,
        first: e === 0,
        last: e === o - 1,
        even: e % 2 === 0,
        odd: e % 2 !== 0
      }, n);
    },
    getPageByFirst: function(e) {
      return Math.floor(((e ?? this.first) + this.d_numToleratedItems * 4) / (this.step || 1));
    },
    isPageChanged: function(e) {
      return this.step && !this.lazy ? this.page !== this.getPageByFirst(e ?? this.first) : !0;
    },
    setContentEl: function(e) {
      this.content = e || this.content || ft(this.element, '[data-pc-section="content"]');
    },
    elementRef: function(e) {
      this.element = e;
    },
    contentRef: function(e) {
      this.content = e;
    }
  },
  computed: {
    containerClass: function() {
      return ["p-virtualscroller", this.class, {
        "p-virtualscroller-inline": this.inline,
        "p-virtualscroller-both p-both-scroll": this.isBoth(),
        "p-virtualscroller-horizontal p-horizontal-scroll": this.isHorizontal()
      }];
    },
    contentClass: function() {
      return ["p-virtualscroller-content", {
        "p-virtualscroller-loading": this.d_loading
      }];
    },
    loaderClass: function() {
      return ["p-virtualscroller-loader", {
        "p-virtualscroller-loader-mask": !this.$slots.loader
      }];
    },
    loadedItems: function() {
      var e = this;
      return this.items && !this.d_loading ? this.isBoth() ? this.items.slice(this.appendOnly ? 0 : this.first.rows, this.last.rows).map(function(n) {
        return e.columns ? n : n.slice(e.appendOnly ? 0 : e.first.cols, e.last.cols);
      }) : this.isHorizontal() && this.columns ? this.items : this.items.slice(this.appendOnly ? 0 : this.first, this.last) : [];
    },
    loadedRows: function() {
      return this.d_loading ? this.loaderDisabled ? this.loaderArr : [] : this.loadedItems;
    },
    loadedColumns: function() {
      if (this.columns) {
        var e = this.isBoth(), n = this.isHorizontal();
        if (e || n)
          return this.d_loading && this.loaderDisabled ? e ? this.loaderArr[0] : this.loaderArr : this.columns.slice(e ? this.first.cols : this.first, e ? this.last.cols : this.last);
      }
      return this.columns;
    }
  },
  components: {
    SpinnerIcon: Mo
  }
}, G9 = ["tabindex"];
function q9(t, e, n, o, i, r) {
  var a = $("SpinnerIcon");
  return t.disabled ? (m(), y(_, {
    key: 1
  }, [L(t.$slots, "default"), L(t.$slots, "content", {
    items: t.items,
    rows: t.items,
    columns: r.loadedColumns
  })], 64)) : (m(), y("div", k({
    key: 0,
    ref: r.elementRef,
    class: r.containerClass,
    tabindex: t.tabindex,
    style: t.style,
    onScroll: e[0] || (e[0] = function() {
      return r.onScroll && r.onScroll.apply(r, arguments);
    })
  }, t.ptmi("root")), [L(t.$slots, "content", {
    styleClass: r.contentClass,
    items: r.loadedItems,
    getItemOptions: r.getOptions,
    loading: i.d_loading,
    getLoaderOptions: r.getLoaderOptions,
    itemSize: t.itemSize,
    rows: r.loadedRows,
    columns: r.loadedColumns,
    contentRef: r.contentRef,
    spacerStyle: i.spacerStyle,
    contentStyle: i.contentStyle,
    vertical: r.isVertical(),
    horizontal: r.isHorizontal(),
    both: r.isBoth()
  }, function() {
    return [v("div", k({
      ref: r.contentRef,
      class: r.contentClass,
      style: i.contentStyle
    }, t.ptm("content")), [(m(!0), y(_, null, fe(r.loadedItems, function(l, s) {
      return L(t.$slots, "item", {
        key: s,
        item: l,
        options: r.getOptions(s)
      });
    }), 128))], 16)];
  }), t.showSpacer ? (m(), y("div", k({
    key: 0,
    class: "p-virtualscroller-spacer",
    style: i.spacerStyle
  }, t.ptm("spacer")), null, 16)) : M("", !0), !t.loaderDisabled && t.showLoader && i.d_loading ? (m(), y("div", k({
    key: 1,
    class: r.loaderClass
  }, t.ptm("loader")), [t.$slots && t.$slots.loader ? (m(!0), y(_, {
    key: 0
  }, fe(i.loaderArr, function(l, s) {
    return L(t.$slots, "loader", {
      key: s,
      options: r.getLoaderOptions(s, r.isBoth() && {
        numCols: t.d_numItemsInViewport.cols
      })
    });
  }), 128)) : M("", !0), L(t.$slots, "loadingicon", {}, function() {
    return [P(a, k({
      spin: "",
      class: "p-virtualscroller-loading-icon"
    }, t.ptm("loadingIcon")), null, 16)];
  })], 16)) : M("", !0)], 16, G9));
}
kc.render = q9;
var J9 = `
    .p-select {
        display: inline-flex;
        cursor: pointer;
        position: relative;
        user-select: none;
        background: dt('select.background');
        border: 1px solid dt('select.border.color');
        transition:
            background dt('select.transition.duration'),
            color dt('select.transition.duration'),
            border-color dt('select.transition.duration'),
            outline-color dt('select.transition.duration'),
            box-shadow dt('select.transition.duration');
        border-radius: dt('select.border.radius');
        outline-color: transparent;
        box-shadow: dt('select.shadow');
    }

    .p-select:not(.p-disabled):hover {
        border-color: dt('select.hover.border.color');
    }

    .p-select:not(.p-disabled).p-focus {
        border-color: dt('select.focus.border.color');
        box-shadow: dt('select.focus.ring.shadow');
        outline: dt('select.focus.ring.width') dt('select.focus.ring.style') dt('select.focus.ring.color');
        outline-offset: dt('select.focus.ring.offset');
    }

    .p-select.p-variant-filled {
        background: dt('select.filled.background');
    }

    .p-select.p-variant-filled:not(.p-disabled):hover {
        background: dt('select.filled.hover.background');
    }

    .p-select.p-variant-filled:not(.p-disabled).p-focus {
        background: dt('select.filled.focus.background');
    }

    .p-select.p-invalid {
        border-color: dt('select.invalid.border.color');
    }

    .p-select.p-disabled {
        opacity: 1;
        background: dt('select.disabled.background');
    }

    .p-select-clear-icon {
        position: absolute;
        top: 50%;
        margin-top: -0.5rem;
        color: dt('select.clear.icon.color');
        inset-inline-end: dt('select.dropdown.width');
    }

    .p-select-dropdown {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        background: transparent;
        color: dt('select.dropdown.color');
        width: dt('select.dropdown.width');
        border-start-end-radius: dt('select.border.radius');
        border-end-end-radius: dt('select.border.radius');
    }

    .p-select-label {
        display: block;
        white-space: nowrap;
        overflow: hidden;
        flex: 1 1 auto;
        width: 1%;
        padding: dt('select.padding.y') dt('select.padding.x');
        text-overflow: ellipsis;
        cursor: pointer;
        color: dt('select.color');
        background: transparent;
        border: 0 none;
        outline: 0 none;
        font-size: 1rem;
    }

    .p-select-label.p-placeholder {
        color: dt('select.placeholder.color');
    }

    .p-select.p-invalid .p-select-label.p-placeholder {
        color: dt('select.invalid.placeholder.color');
    }

    .p-select:has(.p-select-clear-icon) .p-select-label {
        padding-inline-end: calc(1rem + dt('select.padding.x'));
    }

    .p-select.p-disabled .p-select-label {
        color: dt('select.disabled.color');
    }

    .p-select-label-empty {
        overflow: hidden;
        opacity: 0;
    }

    input.p-select-label {
        cursor: default;
    }

    .p-select-overlay {
        position: absolute;
        top: 0;
        left: 0;
        background: dt('select.overlay.background');
        color: dt('select.overlay.color');
        border: 1px solid dt('select.overlay.border.color');
        border-radius: dt('select.overlay.border.radius');
        box-shadow: dt('select.overlay.shadow');
        min-width: 100%;
    }

    .p-select-header {
        padding: dt('select.list.header.padding');
    }

    .p-select-filter {
        width: 100%;
    }

    .p-select-list-container {
        overflow: auto;
    }

    .p-select-option-group {
        cursor: auto;
        margin: 0;
        padding: dt('select.option.group.padding');
        background: dt('select.option.group.background');
        color: dt('select.option.group.color');
        font-weight: dt('select.option.group.font.weight');
    }

    .p-select-list {
        margin: 0;
        padding: 0;
        list-style-type: none;
        padding: dt('select.list.padding');
        gap: dt('select.list.gap');
        display: flex;
        flex-direction: column;
    }

    .p-select-option {
        cursor: pointer;
        font-weight: normal;
        white-space: nowrap;
        position: relative;
        overflow: hidden;
        display: flex;
        align-items: center;
        padding: dt('select.option.padding');
        border: 0 none;
        color: dt('select.option.color');
        background: transparent;
        transition:
            background dt('select.transition.duration'),
            color dt('select.transition.duration'),
            border-color dt('select.transition.duration'),
            box-shadow dt('select.transition.duration'),
            outline-color dt('select.transition.duration');
        border-radius: dt('select.option.border.radius');
    }

    .p-select-option:not(.p-select-option-selected):not(.p-disabled).p-focus {
        background: dt('select.option.focus.background');
        color: dt('select.option.focus.color');
    }

    .p-select-option.p-select-option-selected {
        background: dt('select.option.selected.background');
        color: dt('select.option.selected.color');
    }

    .p-select-option.p-select-option-selected.p-focus {
        background: dt('select.option.selected.focus.background');
        color: dt('select.option.selected.focus.color');
    }

    .p-select-option-blank-icon {
        flex-shrink: 0;
    }

    .p-select-option-check-icon {
        position: relative;
        flex-shrink: 0;
        margin-inline-start: dt('select.checkmark.gutter.start');
        margin-inline-end: dt('select.checkmark.gutter.end');
        color: dt('select.checkmark.color');
    }

    .p-select-empty-message {
        padding: dt('select.empty.message.padding');
    }

    .p-select-fluid {
        display: flex;
        width: 100%;
    }

    .p-select-sm .p-select-label {
        font-size: dt('select.sm.font.size');
        padding-block: dt('select.sm.padding.y');
        padding-inline: dt('select.sm.padding.x');
    }

    .p-select-sm .p-select-dropdown .p-icon {
        font-size: dt('select.sm.font.size');
        width: dt('select.sm.font.size');
        height: dt('select.sm.font.size');
    }

    .p-select-lg .p-select-label {
        font-size: dt('select.lg.font.size');
        padding-block: dt('select.lg.padding.y');
        padding-inline: dt('select.lg.padding.x');
    }

    .p-select-lg .p-select-dropdown .p-icon {
        font-size: dt('select.lg.font.size');
        width: dt('select.lg.font.size');
        height: dt('select.lg.font.size');
    }
`, Y9 = {
  root: function(e) {
    var n = e.instance, o = e.props, i = e.state;
    return ["p-select p-component p-inputwrapper", {
      "p-disabled": o.disabled,
      "p-invalid": n.$invalid,
      "p-variant-filled": n.$variant === "filled",
      "p-focus": i.focused,
      "p-inputwrapper-filled": n.$filled,
      "p-inputwrapper-focus": i.focused || i.overlayVisible,
      "p-select-open": i.overlayVisible,
      "p-select-fluid": n.$fluid,
      "p-select-sm p-inputfield-sm": o.size === "small",
      "p-select-lg p-inputfield-lg": o.size === "large"
    }];
  },
  label: function(e) {
    var n = e.instance, o = e.props;
    return ["p-select-label", {
      "p-placeholder": !o.editable && n.label === o.placeholder,
      "p-select-label-empty": !o.editable && !n.$slots.value && (n.label === "p-emptylabel" || n.label.length === 0)
    }];
  },
  clearIcon: "p-select-clear-icon",
  dropdown: "p-select-dropdown",
  loadingicon: "p-select-loading-icon",
  dropdownIcon: "p-select-dropdown-icon",
  overlay: "p-select-overlay p-component",
  header: "p-select-header",
  pcFilter: "p-select-filter",
  listContainer: "p-select-list-container",
  list: "p-select-list",
  optionGroup: "p-select-option-group",
  optionGroupLabel: "p-select-option-group-label",
  option: function(e) {
    var n = e.instance, o = e.props, i = e.state, r = e.option, a = e.focusedOption;
    return ["p-select-option", {
      "p-select-option-selected": n.isSelected(r) && o.highlightOnSelect,
      "p-focus": i.focusedOptionIndex === a,
      "p-disabled": n.isOptionDisabled(r)
    }];
  },
  optionLabel: "p-select-option-label",
  optionCheckIcon: "p-select-option-check-icon",
  optionBlankIcon: "p-select-option-blank-icon",
  emptyMessage: "p-select-empty-message"
}, X9 = te.extend({
  name: "select",
  style: J9,
  classes: Y9
}), Z9 = {
  name: "BaseSelect",
  extends: gr,
  props: {
    options: Array,
    optionLabel: [String, Function],
    optionValue: [String, Function],
    optionDisabled: [String, Function],
    optionGroupLabel: [String, Function],
    optionGroupChildren: [String, Function],
    scrollHeight: {
      type: String,
      default: "14rem"
    },
    filter: Boolean,
    filterPlaceholder: String,
    filterLocale: String,
    filterMatchMode: {
      type: String,
      default: "contains"
    },
    filterFields: {
      type: Array,
      default: null
    },
    editable: Boolean,
    placeholder: {
      type: String,
      default: null
    },
    dataKey: null,
    showClear: {
      type: Boolean,
      default: !1
    },
    inputId: {
      type: String,
      default: null
    },
    inputClass: {
      type: [String, Object],
      default: null
    },
    inputStyle: {
      type: Object,
      default: null
    },
    labelId: {
      type: String,
      default: null
    },
    labelClass: {
      type: [String, Object],
      default: null
    },
    labelStyle: {
      type: Object,
      default: null
    },
    panelClass: {
      type: [String, Object],
      default: null
    },
    overlayStyle: {
      type: Object,
      default: null
    },
    overlayClass: {
      type: [String, Object],
      default: null
    },
    panelStyle: {
      type: Object,
      default: null
    },
    appendTo: {
      type: [String, Object],
      default: "body"
    },
    loading: {
      type: Boolean,
      default: !1
    },
    clearIcon: {
      type: String,
      default: void 0
    },
    dropdownIcon: {
      type: String,
      default: void 0
    },
    filterIcon: {
      type: String,
      default: void 0
    },
    loadingIcon: {
      type: String,
      default: void 0
    },
    resetFilterOnHide: {
      type: Boolean,
      default: !1
    },
    resetFilterOnClear: {
      type: Boolean,
      default: !1
    },
    virtualScrollerOptions: {
      type: Object,
      default: null
    },
    autoOptionFocus: {
      type: Boolean,
      default: !1
    },
    autoFilterFocus: {
      type: Boolean,
      default: !1
    },
    selectOnFocus: {
      type: Boolean,
      default: !1
    },
    focusOnHover: {
      type: Boolean,
      default: !0
    },
    highlightOnSelect: {
      type: Boolean,
      default: !0
    },
    checkmark: {
      type: Boolean,
      default: !1
    },
    filterMessage: {
      type: String,
      default: null
    },
    selectionMessage: {
      type: String,
      default: null
    },
    emptySelectionMessage: {
      type: String,
      default: null
    },
    emptyFilterMessage: {
      type: String,
      default: null
    },
    emptyMessage: {
      type: String,
      default: null
    },
    tabindex: {
      type: Number,
      default: 0
    },
    ariaLabel: {
      type: String,
      default: null
    },
    ariaLabelledby: {
      type: String,
      default: null
    }
  },
  style: X9,
  provide: function() {
    return {
      $pcSelect: this,
      $parentInstance: this
    };
  }
};
function pi(t) {
  "@babel/helpers - typeof";
  return pi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, pi(t);
}
function Q9(t) {
  return oI(t) || nI(t) || tI(t) || eI();
}
function eI() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function tI(t, e) {
  if (t) {
    if (typeof t == "string") return Qs(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Qs(t, e) : void 0;
  }
}
function nI(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function oI(t) {
  if (Array.isArray(t)) return Qs(t);
}
function Qs(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function kp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function wp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? kp(Object(n), !0).forEach(function(o) {
      uo(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : kp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function uo(t, e, n) {
  return (e = rI(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function rI(t) {
  var e = iI(t, "string");
  return pi(e) == "symbol" ? e : e + "";
}
function iI(t, e) {
  if (pi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (pi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var la = {
  name: "Select",
  extends: Z9,
  inheritAttrs: !1,
  emits: ["change", "focus", "blur", "before-show", "before-hide", "show", "hide", "filter"],
  outsideClickListener: null,
  scrollHandler: null,
  resizeListener: null,
  labelClickListener: null,
  matchMediaOrientationListener: null,
  overlay: null,
  list: null,
  virtualScroller: null,
  searchTimeout: null,
  searchValue: null,
  isModelValueChanged: !1,
  data: function() {
    return {
      clicked: !1,
      focused: !1,
      focusedOptionIndex: -1,
      filterValue: null,
      overlayVisible: !1,
      queryOrientation: null
    };
  },
  watch: {
    modelValue: function() {
      this.isModelValueChanged = !0;
    },
    options: function() {
      this.autoUpdateModel();
    }
  },
  mounted: function() {
    this.autoUpdateModel(), this.bindLabelClickListener(), this.bindMatchMediaOrientationListener();
  },
  updated: function() {
    this.overlayVisible && this.isModelValueChanged && this.scrollInView(this.findSelectedOptionIndex()), this.isModelValueChanged = !1;
  },
  beforeUnmount: function() {
    this.unbindOutsideClickListener(), this.unbindResizeListener(), this.unbindLabelClickListener(), this.unbindMatchMediaOrientationListener(), this.scrollHandler && (this.scrollHandler.destroy(), this.scrollHandler = null), this.overlay && (Xe.clear(this.overlay), this.overlay = null);
  },
  methods: {
    getOptionIndex: function(e, n) {
      return this.virtualScrollerDisabled ? e : n && n(e).index;
    },
    getOptionLabel: function(e) {
      return this.optionLabel ? be(e, this.optionLabel) : e;
    },
    getOptionValue: function(e) {
      return this.optionValue ? be(e, this.optionValue) : e;
    },
    getOptionRenderKey: function(e, n) {
      return (this.dataKey ? be(e, this.dataKey) : this.getOptionLabel(e)) + "_" + n;
    },
    getPTItemOptions: function(e, n, o, i) {
      return this.ptm(i, {
        context: {
          option: e,
          index: o,
          selected: this.isSelected(e),
          focused: this.focusedOptionIndex === this.getOptionIndex(o, n),
          disabled: this.isOptionDisabled(e)
        }
      });
    },
    isOptionDisabled: function(e) {
      return this.optionDisabled ? be(e, this.optionDisabled) : !1;
    },
    isOptionGroup: function(e) {
      return this.optionGroupLabel && e.optionGroup && e.group;
    },
    getOptionGroupLabel: function(e) {
      return be(e, this.optionGroupLabel);
    },
    getOptionGroupChildren: function(e) {
      return be(e, this.optionGroupChildren);
    },
    getAriaPosInset: function(e) {
      var n = this;
      return (this.optionGroupLabel ? e - this.visibleOptions.slice(0, e).filter(function(o) {
        return n.isOptionGroup(o);
      }).length : e) + 1;
    },
    show: function(e) {
      this.$emit("before-show"), this.overlayVisible = !0, this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex(), e && Fe(this.$refs.focusInput);
    },
    hide: function(e) {
      var n = this, o = function() {
        n.$emit("before-hide"), n.overlayVisible = !1, n.clicked = !1, n.focusedOptionIndex = -1, n.searchValue = "", n.resetFilterOnHide && (n.filterValue = null), e && Fe(n.$refs.focusInput);
      };
      setTimeout(function() {
        o();
      }, 0);
    },
    onFocus: function(e) {
      this.disabled || (this.focused = !0, this.overlayVisible && (this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex(), this.scrollInView(this.focusedOptionIndex)), this.$emit("focus", e));
    },
    onBlur: function(e) {
      var n = this;
      setTimeout(function() {
        var o, i;
        n.focused = !1, n.focusedOptionIndex = -1, n.searchValue = "", n.$emit("blur", e), (o = (i = n.formField).onBlur) === null || o === void 0 || o.call(i, e);
      }, 100);
    },
    onKeyDown: function(e) {
      if (this.disabled) {
        e.preventDefault();
        return;
      }
      if (Sv())
        switch (e.code) {
          case "Backspace":
            this.onBackspaceKey(e, this.editable);
            break;
          case "Enter":
          case "NumpadDecimal":
            this.onEnterKey(e);
            break;
          default:
            e.preventDefault();
            return;
        }
      var n = e.metaKey || e.ctrlKey;
      switch (e.code) {
        case "ArrowDown":
          this.onArrowDownKey(e);
          break;
        case "ArrowUp":
          this.onArrowUpKey(e, this.editable);
          break;
        case "ArrowLeft":
        case "ArrowRight":
          this.onArrowLeftKey(e, this.editable);
          break;
        case "Home":
          this.onHomeKey(e, this.editable);
          break;
        case "End":
          this.onEndKey(e, this.editable);
          break;
        case "PageDown":
          this.onPageDownKey(e);
          break;
        case "PageUp":
          this.onPageUpKey(e);
          break;
        case "Space":
          this.onSpaceKey(e, this.editable);
          break;
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(e);
          break;
        case "Escape":
          this.onEscapeKey(e);
          break;
        case "Tab":
          this.onTabKey(e);
          break;
        case "Backspace":
          this.onBackspaceKey(e, this.editable);
          break;
        case "ShiftLeft":
        case "ShiftRight":
          break;
        default:
          !n && em(e.key) && (!this.overlayVisible && this.show(), !this.editable && this.searchOptions(e, e.key));
          break;
      }
      this.clicked = !1;
    },
    onEditableInput: function(e) {
      var n = e.target.value;
      this.searchValue = "";
      var o = this.searchOptions(e, n);
      !o && (this.focusedOptionIndex = -1), this.updateModel(e, n), !this.overlayVisible && ae(n) && this.show();
    },
    onContainerClick: function(e) {
      this.disabled || this.loading || e.target.tagName === "INPUT" || e.target.getAttribute("data-pc-section") === "clearicon" || e.target.closest('[data-pc-section="clearicon"]') || ((!this.overlay || !this.overlay.contains(e.target)) && (this.overlayVisible ? this.hide(!0) : this.show(!0)), this.clicked = !0);
    },
    onClearClick: function(e) {
      this.updateModel(e, null), this.resetFilterOnClear && (this.filterValue = null);
    },
    onFirstHiddenFocus: function(e) {
      var n = e.relatedTarget === this.$refs.focusInput ? fo(this.overlay, ':not([data-p-hidden-focusable="true"])') : this.$refs.focusInput;
      Fe(n);
    },
    onLastHiddenFocus: function(e) {
      var n = e.relatedTarget === this.$refs.focusInput ? qh(this.overlay, ':not([data-p-hidden-focusable="true"])') : this.$refs.focusInput;
      Fe(n);
    },
    onOptionSelect: function(e, n) {
      var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !0, i = this.getOptionValue(n);
      this.updateModel(e, i), o && this.hide(!0);
    },
    onOptionMouseMove: function(e, n) {
      this.focusOnHover && this.changeFocusedOptionIndex(e, n);
    },
    onFilterChange: function(e) {
      var n = e.target.value;
      this.filterValue = n, this.focusedOptionIndex = -1, this.$emit("filter", {
        originalEvent: e,
        value: n
      }), !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);
    },
    onFilterKeyDown: function(e) {
      if (!e.isComposing)
        switch (e.code) {
          case "ArrowDown":
            this.onArrowDownKey(e);
            break;
          case "ArrowUp":
            this.onArrowUpKey(e, !0);
            break;
          case "ArrowLeft":
          case "ArrowRight":
            this.onArrowLeftKey(e, !0);
            break;
          case "Home":
            this.onHomeKey(e, !0);
            break;
          case "End":
            this.onEndKey(e, !0);
            break;
          case "Enter":
          case "NumpadEnter":
            this.onEnterKey(e);
            break;
          case "Escape":
            this.onEscapeKey(e);
            break;
          case "Tab":
            this.onTabKey(e);
            break;
        }
    },
    onFilterBlur: function() {
      this.focusedOptionIndex = -1;
    },
    onFilterUpdated: function() {
      this.overlayVisible && this.alignOverlay();
    },
    onOverlayClick: function(e) {
      Hn.emit("overlay-click", {
        originalEvent: e,
        target: this.$el
      });
    },
    onOverlayKeyDown: function(e) {
      switch (e.code) {
        case "Escape":
          this.onEscapeKey(e);
          break;
      }
    },
    onArrowDownKey: function(e) {
      if (!this.overlayVisible)
        this.show(), this.editable && this.changeFocusedOptionIndex(e, this.findSelectedOptionIndex());
      else {
        var n = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();
        this.changeFocusedOptionIndex(e, n);
      }
      e.preventDefault();
    },
    onArrowUpKey: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      if (e.altKey && !n)
        this.focusedOptionIndex !== -1 && this.onOptionSelect(e, this.visibleOptions[this.focusedOptionIndex]), this.overlayVisible && this.hide(), e.preventDefault();
      else {
        var o = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();
        this.changeFocusedOptionIndex(e, o), !this.overlayVisible && this.show(), e.preventDefault();
      }
    },
    onArrowLeftKey: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      n && (this.focusedOptionIndex = -1);
    },
    onHomeKey: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      if (n) {
        var o = e.currentTarget;
        e.shiftKey ? o.setSelectionRange(0, e.target.selectionStart) : (o.setSelectionRange(0, 0), this.focusedOptionIndex = -1);
      } else
        this.changeFocusedOptionIndex(e, this.findFirstOptionIndex()), !this.overlayVisible && this.show();
      e.preventDefault();
    },
    onEndKey: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      if (n) {
        var o = e.currentTarget;
        if (e.shiftKey)
          o.setSelectionRange(e.target.selectionStart, o.value.length);
        else {
          var i = o.value.length;
          o.setSelectionRange(i, i), this.focusedOptionIndex = -1;
        }
      } else
        this.changeFocusedOptionIndex(e, this.findLastOptionIndex()), !this.overlayVisible && this.show();
      e.preventDefault();
    },
    onPageUpKey: function(e) {
      this.scrollInView(0), e.preventDefault();
    },
    onPageDownKey: function(e) {
      this.scrollInView(this.visibleOptions.length - 1), e.preventDefault();
    },
    onEnterKey: function(e) {
      this.overlayVisible ? (this.focusedOptionIndex !== -1 && this.onOptionSelect(e, this.visibleOptions[this.focusedOptionIndex]), this.hide(!0)) : (this.focusedOptionIndex = -1, this.onArrowDownKey(e)), e.preventDefault();
    },
    onSpaceKey: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      !n && this.onEnterKey(e);
    },
    onEscapeKey: function(e) {
      this.overlayVisible && this.hide(!0), e.preventDefault(), e.stopPropagation();
    },
    onTabKey: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      n || (this.overlayVisible && this.hasFocusableElements() ? (Fe(this.$refs.firstHiddenFocusableElementOnOverlay), e.preventDefault()) : (this.focusedOptionIndex !== -1 && this.onOptionSelect(e, this.visibleOptions[this.focusedOptionIndex]), this.overlayVisible && this.hide(this.filter)));
    },
    onBackspaceKey: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
      n && !this.overlayVisible && this.show();
    },
    onOverlayEnter: function(e) {
      var n = this;
      Xe.set("overlay", e, this.$primevue.config.zIndex.overlay), Hr(e, {
        position: "absolute",
        top: "0"
      }), this.alignOverlay(), this.scrollInView(), this.$attrSelector && e.setAttribute(this.$attrSelector, ""), setTimeout(function() {
        n.autoFilterFocus && n.filter && Fe(n.$refs.filterInput.$el), n.autoUpdateModel();
      }, 1);
    },
    onOverlayAfterEnter: function() {
      this.bindOutsideClickListener(), this.bindScrollListener(), this.bindResizeListener(), this.$emit("show");
    },
    onOverlayLeave: function() {
      var e = this;
      this.unbindOutsideClickListener(), this.unbindScrollListener(), this.unbindResizeListener(), this.autoFilterFocus && this.filter && !this.editable && this.$nextTick(function() {
        e.$refs.filterInput && Fe(e.$refs.filterInput.$el);
      }), this.$emit("hide"), this.overlay = null;
    },
    onOverlayAfterLeave: function(e) {
      Xe.clear(e);
    },
    alignOverlay: function() {
      this.appendTo === "self" ? yv(this.overlay, this.$el) : this.overlay && (this.overlay.style.minWidth = pt(this.$el) + "px", Uh(this.overlay, this.$el));
    },
    bindOutsideClickListener: function() {
      var e = this;
      this.outsideClickListener || (this.outsideClickListener = function(n) {
        var o = n.composedPath();
        e.overlayVisible && e.overlay && !o.includes(e.$el) && !o.includes(e.overlay) && e.hide();
      }, document.addEventListener("click", this.outsideClickListener, !0));
    },
    unbindOutsideClickListener: function() {
      this.outsideClickListener && (document.removeEventListener("click", this.outsideClickListener, !0), this.outsideClickListener = null);
    },
    bindScrollListener: function() {
      var e = this;
      this.scrollHandler || (this.scrollHandler = new Tm(this.$refs.container, function() {
        e.overlayVisible && e.hide();
      })), this.scrollHandler.bindScrollListener();
    },
    unbindScrollListener: function() {
      this.scrollHandler && this.scrollHandler.unbindScrollListener();
    },
    bindResizeListener: function() {
      var e = this;
      this.resizeListener || (this.resizeListener = function() {
        e.overlayVisible && !fc() && e.hide();
      }, window.addEventListener("resize", this.resizeListener));
    },
    unbindResizeListener: function() {
      this.resizeListener && (window.removeEventListener("resize", this.resizeListener), this.resizeListener = null);
    },
    bindLabelClickListener: function() {
      var e = this;
      if (!this.editable && !this.labelClickListener) {
        var n = document.querySelector('label[for="'.concat(this.labelId, '"]'));
        n && Xa(n) && (this.labelClickListener = function() {
          Fe(e.$refs.focusInput);
        }, n.addEventListener("click", this.labelClickListener));
      }
    },
    unbindLabelClickListener: function() {
      if (this.labelClickListener) {
        var e = document.querySelector('label[for="'.concat(this.labelId, '"]'));
        e && Xa(e) && e.removeEventListener("click", this.labelClickListener);
      }
    },
    bindMatchMediaOrientationListener: function() {
      var e = this;
      if (!this.matchMediaOrientationListener) {
        var n = matchMedia("(orientation: portrait)");
        this.queryOrientation = n, this.matchMediaOrientationListener = function() {
          e.alignOverlay();
        }, this.queryOrientation.addEventListener("change", this.matchMediaOrientationListener);
      }
    },
    unbindMatchMediaOrientationListener: function() {
      this.matchMediaOrientationListener && (this.queryOrientation.removeEventListener("change", this.matchMediaOrientationListener), this.queryOrientation = null, this.matchMediaOrientationListener = null);
    },
    hasFocusableElements: function() {
      return pc(this.overlay, ':not([data-p-hidden-focusable="true"])').length > 0;
    },
    isOptionExactMatched: function(e) {
      var n;
      return this.isValidOption(e) && typeof this.getOptionLabel(e) == "string" && ((n = this.getOptionLabel(e)) === null || n === void 0 ? void 0 : n.toLocaleLowerCase(this.filterLocale)) == this.searchValue.toLocaleLowerCase(this.filterLocale);
    },
    isOptionStartsWith: function(e) {
      var n;
      return this.isValidOption(e) && typeof this.getOptionLabel(e) == "string" && ((n = this.getOptionLabel(e)) === null || n === void 0 ? void 0 : n.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale)));
    },
    isValidOption: function(e) {
      return ae(e) && !(this.isOptionDisabled(e) || this.isOptionGroup(e));
    },
    isValidSelectedOption: function(e) {
      return this.isValidOption(e) && this.isSelected(e);
    },
    isSelected: function(e) {
      return Kt(this.d_value, this.getOptionValue(e), this.equalityKey);
    },
    findFirstOptionIndex: function() {
      var e = this;
      return this.visibleOptions.findIndex(function(n) {
        return e.isValidOption(n);
      });
    },
    findLastOptionIndex: function() {
      var e = this;
      return Za(this.visibleOptions, function(n) {
        return e.isValidOption(n);
      });
    },
    findNextOptionIndex: function(e) {
      var n = this, o = e < this.visibleOptions.length - 1 ? this.visibleOptions.slice(e + 1).findIndex(function(i) {
        return n.isValidOption(i);
      }) : -1;
      return o > -1 ? o + e + 1 : e;
    },
    findPrevOptionIndex: function(e) {
      var n = this, o = e > 0 ? Za(this.visibleOptions.slice(0, e), function(i) {
        return n.isValidOption(i);
      }) : -1;
      return o > -1 ? o : e;
    },
    findSelectedOptionIndex: function() {
      var e = this;
      return this.visibleOptions.findIndex(function(n) {
        return e.isValidSelectedOption(n);
      });
    },
    findFirstFocusedOptionIndex: function() {
      var e = this.findSelectedOptionIndex();
      return e < 0 ? this.findFirstOptionIndex() : e;
    },
    findLastFocusedOptionIndex: function() {
      var e = this.findSelectedOptionIndex();
      return e < 0 ? this.findLastOptionIndex() : e;
    },
    searchOptions: function(e, n) {
      var o = this;
      this.searchValue = (this.searchValue || "") + n;
      var i = -1, r = !1;
      return ae(this.searchValue) && (i = this.visibleOptions.findIndex(function(a) {
        return o.isOptionExactMatched(a);
      }), i === -1 && (i = this.visibleOptions.findIndex(function(a) {
        return o.isOptionStartsWith(a);
      })), i !== -1 && (r = !0), i === -1 && this.focusedOptionIndex === -1 && (i = this.findFirstFocusedOptionIndex()), i !== -1 && this.changeFocusedOptionIndex(e, i)), this.searchTimeout && clearTimeout(this.searchTimeout), this.searchTimeout = setTimeout(function() {
        o.searchValue = "", o.searchTimeout = null;
      }, 500), r;
    },
    changeFocusedOptionIndex: function(e, n) {
      this.focusedOptionIndex !== n && (this.focusedOptionIndex = n, this.scrollInView(), this.selectOnFocus && this.onOptionSelect(e, this.visibleOptions[n], !1));
    },
    scrollInView: function() {
      var e = this, n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : -1;
      this.$nextTick(function() {
        var o = n !== -1 ? "".concat(e.$id, "_").concat(n) : e.focusedOptionId, i = ft(e.list, 'li[id="'.concat(o, '"]'));
        i ? i.scrollIntoView && i.scrollIntoView({
          block: "nearest",
          inline: "nearest"
        }) : e.virtualScrollerDisabled || e.virtualScroller && e.virtualScroller.scrollToIndex(n !== -1 ? n : e.focusedOptionIndex);
      });
    },
    autoUpdateModel: function() {
      this.autoOptionFocus && (this.focusedOptionIndex = this.findFirstFocusedOptionIndex()), this.selectOnFocus && this.autoOptionFocus && !this.$filled && this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex], !1);
    },
    updateModel: function(e, n) {
      this.writeValue(n, e), this.$emit("change", {
        originalEvent: e,
        value: n
      });
    },
    flatOptions: function(e) {
      var n = this;
      return (e || []).reduce(function(o, i, r) {
        o.push({
          optionGroup: i,
          group: !0,
          index: r
        });
        var a = n.getOptionGroupChildren(i);
        return a && a.forEach(function(l) {
          return o.push(l);
        }), o;
      }, []);
    },
    overlayRef: function(e) {
      this.overlay = e;
    },
    listRef: function(e, n) {
      this.list = e, n && n(e);
    },
    virtualScrollerRef: function(e) {
      this.virtualScroller = e;
    }
  },
  computed: {
    visibleOptions: function() {
      var e = this, n = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];
      if (this.filterValue) {
        var o = Js.filter(n, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);
        if (this.optionGroupLabel) {
          var i = this.options || [], r = [];
          return i.forEach(function(a) {
            var l = e.getOptionGroupChildren(a), s = l.filter(function(d) {
              return o.includes(d);
            });
            s.length > 0 && r.push(wp(wp({}, a), {}, uo({}, typeof e.optionGroupChildren == "string" ? e.optionGroupChildren : "items", Q9(s))));
          }), this.flatOptions(r);
        }
        return o;
      }
      return n;
    },
    // @deprecated use $filled instead
    hasSelectedOption: function() {
      return this.$filled;
    },
    label: function() {
      var e = this.findSelectedOptionIndex();
      return e !== -1 ? this.getOptionLabel(this.visibleOptions[e]) : this.placeholder || "p-emptylabel";
    },
    editableInputValue: function() {
      var e = this.findSelectedOptionIndex();
      return e !== -1 ? this.getOptionLabel(this.visibleOptions[e]) : this.d_value || "";
    },
    equalityKey: function() {
      return this.optionValue ? null : this.dataKey;
    },
    searchFields: function() {
      return this.filterFields || [this.optionLabel];
    },
    filterResultMessageText: function() {
      return ae(this.visibleOptions) ? this.filterMessageText.replaceAll("{0}", this.visibleOptions.length) : this.emptyFilterMessageText;
    },
    filterMessageText: function() {
      return this.filterMessage || this.$primevue.config.locale.searchMessage || "";
    },
    emptyFilterMessageText: function() {
      return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || "";
    },
    emptyMessageText: function() {
      return this.emptyMessage || this.$primevue.config.locale.emptyMessage || "";
    },
    selectionMessageText: function() {
      return this.selectionMessage || this.$primevue.config.locale.selectionMessage || "";
    },
    emptySelectionMessageText: function() {
      return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || "";
    },
    selectedMessageText: function() {
      return this.$filled ? this.selectionMessageText.replaceAll("{0}", "1") : this.emptySelectionMessageText;
    },
    focusedOptionId: function() {
      return this.focusedOptionIndex !== -1 ? "".concat(this.$id, "_").concat(this.focusedOptionIndex) : null;
    },
    ariaSetSize: function() {
      var e = this;
      return this.visibleOptions.filter(function(n) {
        return !e.isOptionGroup(n);
      }).length;
    },
    isClearIconVisible: function() {
      return this.showClear && this.d_value != null && !this.disabled && !this.loading;
    },
    virtualScrollerDisabled: function() {
      return !this.virtualScrollerOptions;
    },
    containerDataP: function() {
      return Te(uo({
        invalid: this.$invalid,
        disabled: this.disabled,
        focus: this.focused,
        fluid: this.$fluid,
        filled: this.$variant === "filled"
      }, this.size, this.size));
    },
    labelDataP: function() {
      return Te(uo(uo({
        placeholder: !this.editable && this.label === this.placeholder,
        clearable: this.showClear,
        disabled: this.disabled,
        editable: this.editable
      }, this.size, this.size), "empty", !this.editable && !this.$slots.value && (this.label === "p-emptylabel" || this.label.length === 0)));
    },
    dropdownIconDataP: function() {
      return Te(uo({}, this.size, this.size));
    },
    overlayDataP: function() {
      return Te(uo({}, "portal-" + this.appendTo, "portal-" + this.appendTo));
    }
  },
  directives: {
    ripple: mt
  },
  components: {
    InputText: oa,
    VirtualScroller: kc,
    Portal: vr,
    InputIcon: wl,
    IconField: kl,
    TimesIcon: br,
    ChevronDownIcon: ra,
    SpinnerIcon: Mo,
    SearchIcon: mc,
    CheckIcon: Tn,
    BlankIcon: Bm
  }
}, aI = ["id", "data-p"], lI = ["name", "id", "value", "placeholder", "tabindex", "disabled", "aria-label", "aria-labelledby", "aria-expanded", "aria-controls", "aria-activedescendant", "aria-invalid", "data-p"], sI = ["name", "id", "tabindex", "aria-label", "aria-labelledby", "aria-expanded", "aria-controls", "aria-activedescendant", "aria-invalid", "aria-disabled", "data-p"], dI = ["data-p"], cI = ["id"], uI = ["id"], pI = ["id", "aria-label", "aria-selected", "aria-disabled", "aria-setsize", "aria-posinset", "onMousedown", "onMousemove", "data-p-selected", "data-p-focused", "data-p-disabled"];
function fI(t, e, n, o, i, r) {
  var a = $("SpinnerIcon"), l = $("InputText"), s = $("SearchIcon"), d = $("InputIcon"), c = $("IconField"), u = $("CheckIcon"), f = $("BlankIcon"), p = $("VirtualScroller"), h = $("Portal"), g = tt("ripple");
  return m(), y("div", k({
    ref: "container",
    id: t.$id,
    class: t.cx("root"),
    onClick: e[12] || (e[12] = function() {
      return r.onContainerClick && r.onContainerClick.apply(r, arguments);
    }),
    "data-p": r.containerDataP
  }, t.ptmi("root")), [t.editable ? (m(), y("input", k({
    key: 0,
    ref: "focusInput",
    name: t.name,
    id: t.labelId || t.inputId,
    type: "text",
    class: [t.cx("label"), t.inputClass, t.labelClass],
    style: [t.inputStyle, t.labelStyle],
    value: r.editableInputValue,
    placeholder: t.placeholder,
    tabindex: t.disabled ? -1 : t.tabindex,
    disabled: t.disabled,
    autocomplete: "off",
    role: "combobox",
    "aria-label": t.ariaLabel,
    "aria-labelledby": t.ariaLabelledby,
    "aria-haspopup": "listbox",
    "aria-expanded": i.overlayVisible,
    "aria-controls": t.$id + "_list",
    "aria-activedescendant": i.focused ? r.focusedOptionId : void 0,
    "aria-invalid": t.invalid || void 0,
    onFocus: e[0] || (e[0] = function() {
      return r.onFocus && r.onFocus.apply(r, arguments);
    }),
    onBlur: e[1] || (e[1] = function() {
      return r.onBlur && r.onBlur.apply(r, arguments);
    }),
    onKeydown: e[2] || (e[2] = function() {
      return r.onKeyDown && r.onKeyDown.apply(r, arguments);
    }),
    onInput: e[3] || (e[3] = function() {
      return r.onEditableInput && r.onEditableInput.apply(r, arguments);
    }),
    "data-p": r.labelDataP
  }, t.ptm("label")), null, 16, lI)) : (m(), y("span", k({
    key: 1,
    ref: "focusInput",
    name: t.name,
    id: t.labelId || t.inputId,
    class: [t.cx("label"), t.inputClass, t.labelClass],
    style: [t.inputStyle, t.labelStyle],
    tabindex: t.disabled ? -1 : t.tabindex,
    role: "combobox",
    "aria-label": t.ariaLabel || (r.label === "p-emptylabel" ? void 0 : r.label),
    "aria-labelledby": t.ariaLabelledby,
    "aria-haspopup": "listbox",
    "aria-expanded": i.overlayVisible,
    "aria-controls": t.$id + "_list",
    "aria-activedescendant": i.focused ? r.focusedOptionId : void 0,
    "aria-invalid": t.invalid || void 0,
    "aria-disabled": t.disabled,
    onFocus: e[4] || (e[4] = function() {
      return r.onFocus && r.onFocus.apply(r, arguments);
    }),
    onBlur: e[5] || (e[5] = function() {
      return r.onBlur && r.onBlur.apply(r, arguments);
    }),
    onKeydown: e[6] || (e[6] = function() {
      return r.onKeyDown && r.onKeyDown.apply(r, arguments);
    }),
    "data-p": r.labelDataP
  }, t.ptm("label")), [L(t.$slots, "value", {
    value: t.d_value,
    placeholder: t.placeholder
  }, function() {
    var b;
    return [ee(re(r.label === "p-emptylabel" ? " " : (b = r.label) !== null && b !== void 0 ? b : "empty"), 1)];
  })], 16, sI)), r.isClearIconVisible ? L(t.$slots, "clearicon", {
    key: 2,
    class: Y(t.cx("clearIcon")),
    clearCallback: r.onClearClick
  }, function() {
    return [(m(), O(q(t.clearIcon ? "i" : "TimesIcon"), k({
      ref: "clearIcon",
      class: [t.cx("clearIcon"), t.clearIcon],
      onClick: r.onClearClick
    }, t.ptm("clearIcon"), {
      "data-pc-section": "clearicon"
    }), null, 16, ["class", "onClick"]))];
  }) : M("", !0), v("div", k({
    class: t.cx("dropdown")
  }, t.ptm("dropdown")), [t.loading ? L(t.$slots, "loadingicon", {
    key: 0,
    class: Y(t.cx("loadingIcon"))
  }, function() {
    return [t.loadingIcon ? (m(), y("span", k({
      key: 0,
      class: [t.cx("loadingIcon"), "pi-spin", t.loadingIcon],
      "aria-hidden": "true"
    }, t.ptm("loadingIcon")), null, 16)) : (m(), O(a, k({
      key: 1,
      class: t.cx("loadingIcon"),
      spin: "",
      "aria-hidden": "true"
    }, t.ptm("loadingIcon")), null, 16, ["class"]))];
  }) : L(t.$slots, "dropdownicon", {
    key: 1,
    class: Y(t.cx("dropdownIcon"))
  }, function() {
    return [(m(), O(q(t.dropdownIcon ? "span" : "ChevronDownIcon"), k({
      class: [t.cx("dropdownIcon"), t.dropdownIcon],
      "aria-hidden": "true",
      "data-p": r.dropdownIconDataP
    }, t.ptm("dropdownIcon")), null, 16, ["class", "data-p"]))];
  })], 16), P(h, {
    appendTo: t.appendTo
  }, {
    default: E(function() {
      return [P(gl, k({
        name: "p-connected-overlay",
        onEnter: r.onOverlayEnter,
        onAfterEnter: r.onOverlayAfterEnter,
        onLeave: r.onOverlayLeave,
        onAfterLeave: r.onOverlayAfterLeave
      }, t.ptm("transition")), {
        default: E(function() {
          return [i.overlayVisible ? (m(), y("div", k({
            key: 0,
            ref: r.overlayRef,
            class: [t.cx("overlay"), t.panelClass, t.overlayClass],
            style: [t.panelStyle, t.overlayStyle],
            onClick: e[10] || (e[10] = function() {
              return r.onOverlayClick && r.onOverlayClick.apply(r, arguments);
            }),
            onKeydown: e[11] || (e[11] = function() {
              return r.onOverlayKeyDown && r.onOverlayKeyDown.apply(r, arguments);
            }),
            "data-p": r.overlayDataP
          }, t.ptm("overlay")), [v("span", k({
            ref: "firstHiddenFocusableElementOnOverlay",
            role: "presentation",
            "aria-hidden": "true",
            class: "p-hidden-accessible p-hidden-focusable",
            tabindex: 0,
            onFocus: e[7] || (e[7] = function() {
              return r.onFirstHiddenFocus && r.onFirstHiddenFocus.apply(r, arguments);
            })
          }, t.ptm("hiddenFirstFocusableEl"), {
            "data-p-hidden-accessible": !0,
            "data-p-hidden-focusable": !0
          }), null, 16), L(t.$slots, "header", {
            value: t.d_value,
            options: r.visibleOptions
          }), t.filter ? (m(), y("div", k({
            key: 0,
            class: t.cx("header")
          }, t.ptm("header")), [P(c, {
            unstyled: t.unstyled,
            pt: t.ptm("pcFilterContainer")
          }, {
            default: E(function() {
              return [P(l, {
                ref: "filterInput",
                type: "text",
                value: i.filterValue,
                onVnodeMounted: r.onFilterUpdated,
                onVnodeUpdated: r.onFilterUpdated,
                class: Y(t.cx("pcFilter")),
                placeholder: t.filterPlaceholder,
                variant: t.variant,
                unstyled: t.unstyled,
                role: "searchbox",
                autocomplete: "off",
                "aria-owns": t.$id + "_list",
                "aria-activedescendant": r.focusedOptionId,
                onKeydown: r.onFilterKeyDown,
                onBlur: r.onFilterBlur,
                onInput: r.onFilterChange,
                pt: t.ptm("pcFilter"),
                formControl: {
                  novalidate: !0
                }
              }, null, 8, ["value", "onVnodeMounted", "onVnodeUpdated", "class", "placeholder", "variant", "unstyled", "aria-owns", "aria-activedescendant", "onKeydown", "onBlur", "onInput", "pt"]), P(d, {
                unstyled: t.unstyled,
                pt: t.ptm("pcFilterIconContainer")
              }, {
                default: E(function() {
                  return [L(t.$slots, "filtericon", {}, function() {
                    return [t.filterIcon ? (m(), y("span", k({
                      key: 0,
                      class: t.filterIcon
                    }, t.ptm("filterIcon")), null, 16)) : (m(), O(s, mr(k({
                      key: 1
                    }, t.ptm("filterIcon"))), null, 16))];
                  })];
                }),
                _: 3
              }, 8, ["unstyled", "pt"])];
            }),
            _: 3
          }, 8, ["unstyled", "pt"]), v("span", k({
            role: "status",
            "aria-live": "polite",
            class: "p-hidden-accessible"
          }, t.ptm("hiddenFilterResult"), {
            "data-p-hidden-accessible": !0
          }), re(r.filterResultMessageText), 17)], 16)) : M("", !0), v("div", k({
            class: t.cx("listContainer"),
            style: {
              "max-height": r.virtualScrollerDisabled ? t.scrollHeight : ""
            }
          }, t.ptm("listContainer")), [P(p, k({
            ref: r.virtualScrollerRef
          }, t.virtualScrollerOptions, {
            items: r.visibleOptions,
            style: {
              height: t.scrollHeight
            },
            tabindex: -1,
            disabled: r.virtualScrollerDisabled,
            pt: t.ptm("virtualScroller")
          }), On({
            content: E(function(b) {
              var C = b.styleClass, x = b.contentRef, R = b.items, w = b.getItemOptions, T = b.contentStyle, S = b.itemSize;
              return [v("ul", k({
                ref: function(B) {
                  return r.listRef(B, x);
                },
                id: t.$id + "_list",
                class: [t.cx("list"), C],
                style: T,
                role: "listbox"
              }, t.ptm("list")), [(m(!0), y(_, null, fe(R, function(I, B) {
                return m(), y(_, {
                  key: r.getOptionRenderKey(I, r.getOptionIndex(B, w))
                }, [r.isOptionGroup(I) ? (m(), y("li", k({
                  key: 0,
                  id: t.$id + "_" + r.getOptionIndex(B, w),
                  style: {
                    height: S ? S + "px" : void 0
                  },
                  class: t.cx("optionGroup"),
                  role: "option"
                }, {
                  ref_for: !0
                }, t.ptm("optionGroup")), [L(t.$slots, "optiongroup", {
                  option: I.optionGroup,
                  index: r.getOptionIndex(B, w)
                }, function() {
                  return [v("span", k({
                    class: t.cx("optionGroupLabel")
                  }, {
                    ref_for: !0
                  }, t.ptm("optionGroupLabel")), re(r.getOptionGroupLabel(I.optionGroup)), 17)];
                })], 16, uI)) : We((m(), y("li", k({
                  key: 1,
                  id: t.$id + "_" + r.getOptionIndex(B, w),
                  class: t.cx("option", {
                    option: I,
                    focusedOption: r.getOptionIndex(B, w)
                  }),
                  style: {
                    height: S ? S + "px" : void 0
                  },
                  role: "option",
                  "aria-label": r.getOptionLabel(I),
                  "aria-selected": r.isSelected(I),
                  "aria-disabled": r.isOptionDisabled(I),
                  "aria-setsize": r.ariaSetSize,
                  "aria-posinset": r.getAriaPosInset(r.getOptionIndex(B, w)),
                  onMousedown: function(K) {
                    return r.onOptionSelect(K, I);
                  },
                  onMousemove: function(K) {
                    return r.onOptionMouseMove(K, r.getOptionIndex(B, w));
                  },
                  onClick: e[8] || (e[8] = Qi(function() {
                  }, ["stop"])),
                  "data-p-selected": !t.checkmark && r.isSelected(I),
                  "data-p-focused": i.focusedOptionIndex === r.getOptionIndex(B, w),
                  "data-p-disabled": r.isOptionDisabled(I)
                }, {
                  ref_for: !0
                }, r.getPTItemOptions(I, w, B, "option")), [t.checkmark ? (m(), y(_, {
                  key: 0
                }, [r.isSelected(I) ? (m(), O(u, k({
                  key: 0,
                  class: t.cx("optionCheckIcon")
                }, {
                  ref_for: !0
                }, t.ptm("optionCheckIcon")), null, 16, ["class"])) : (m(), O(f, k({
                  key: 1,
                  class: t.cx("optionBlankIcon")
                }, {
                  ref_for: !0
                }, t.ptm("optionBlankIcon")), null, 16, ["class"]))], 64)) : M("", !0), L(t.$slots, "option", {
                  option: I,
                  selected: r.isSelected(I),
                  index: r.getOptionIndex(B, w)
                }, function() {
                  return [v("span", k({
                    class: t.cx("optionLabel")
                  }, {
                    ref_for: !0
                  }, t.ptm("optionLabel")), re(r.getOptionLabel(I)), 17)];
                })], 16, pI)), [[g]])], 64);
              }), 128)), i.filterValue && (!R || R && R.length === 0) ? (m(), y("li", k({
                key: 0,
                class: t.cx("emptyMessage"),
                role: "option"
              }, t.ptm("emptyMessage"), {
                "data-p-hidden-accessible": !0
              }), [L(t.$slots, "emptyfilter", {}, function() {
                return [ee(re(r.emptyFilterMessageText), 1)];
              })], 16)) : !t.options || t.options && t.options.length === 0 ? (m(), y("li", k({
                key: 1,
                class: t.cx("emptyMessage"),
                role: "option"
              }, t.ptm("emptyMessage"), {
                "data-p-hidden-accessible": !0
              }), [L(t.$slots, "empty", {}, function() {
                return [ee(re(r.emptyMessageText), 1)];
              })], 16)) : M("", !0)], 16, cI)];
            }),
            _: 2
          }, [t.$slots.loader ? {
            name: "loader",
            fn: E(function(b) {
              var C = b.options;
              return [L(t.$slots, "loader", {
                options: C
              })];
            }),
            key: "0"
          } : void 0]), 1040, ["items", "style", "disabled", "pt"])], 16), L(t.$slots, "footer", {
            value: t.d_value,
            options: r.visibleOptions
          }), !t.options || t.options && t.options.length === 0 ? (m(), y("span", k({
            key: 1,
            role: "status",
            "aria-live": "polite",
            class: "p-hidden-accessible"
          }, t.ptm("hiddenEmptyMessage"), {
            "data-p-hidden-accessible": !0
          }), re(r.emptyMessageText), 17)) : M("", !0), v("span", k({
            role: "status",
            "aria-live": "polite",
            class: "p-hidden-accessible"
          }, t.ptm("hiddenSelectedMessage"), {
            "data-p-hidden-accessible": !0
          }), re(r.selectedMessageText), 17), v("span", k({
            ref: "lastHiddenFocusableElementOnOverlay",
            role: "presentation",
            "aria-hidden": "true",
            class: "p-hidden-accessible p-hidden-focusable",
            tabindex: 0,
            onFocus: e[9] || (e[9] = function() {
              return r.onLastHiddenFocus && r.onLastHiddenFocus.apply(r, arguments);
            })
          }, t.ptm("hiddenLastFocusableEl"), {
            "data-p-hidden-accessible": !0,
            "data-p-hidden-focusable": !0
          }), null, 16)], 16, dI)) : M("", !0)];
        }),
        _: 3
      }, 16, ["onEnter", "onAfterEnter", "onLeave", "onAfterLeave"])];
    }),
    _: 3
  }, 8, ["appendTo"])], 16, aI);
}
la.render = fI;
var Mm = {
  name: "WindowMaximizeIcon",
  extends: Ie
};
function hI(t) {
  return vI(t) || bI(t) || gI(t) || mI();
}
function mI() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function gI(t, e) {
  if (t) {
    if (typeof t == "string") return ed(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ed(t, e) : void 0;
  }
}
function bI(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function vI(t) {
  if (Array.isArray(t)) return ed(t);
}
function ed(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function yI(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), hI(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M7 14H11.8C12.3835 14 12.9431 13.7682 13.3556 13.3556C13.7682 12.9431 14 12.3835 14 11.8V2.2C14 1.61652 13.7682 1.05694 13.3556 0.644365C12.9431 0.231785 12.3835 0 11.8 0H2.2C1.61652 0 1.05694 0.231785 0.644365 0.644365C0.231785 1.05694 0 1.61652 0 2.2V7C0 7.15913 0.063214 7.31174 0.175736 7.42426C0.288258 7.53679 0.44087 7.6 0.6 7.6C0.75913 7.6 0.911742 7.53679 1.02426 7.42426C1.13679 7.31174 1.2 7.15913 1.2 7V2.2C1.2 1.93478 1.30536 1.68043 1.49289 1.49289C1.68043 1.30536 1.93478 1.2 2.2 1.2H11.8C12.0652 1.2 12.3196 1.30536 12.5071 1.49289C12.6946 1.68043 12.8 1.93478 12.8 2.2V11.8C12.8 12.0652 12.6946 12.3196 12.5071 12.5071C12.3196 12.6946 12.0652 12.8 11.8 12.8H7C6.84087 12.8 6.68826 12.8632 6.57574 12.9757C6.46321 13.0883 6.4 13.2409 6.4 13.4C6.4 13.5591 6.46321 13.7117 6.57574 13.8243C6.68826 13.9368 6.84087 14 7 14ZM9.77805 7.42192C9.89013 7.534 10.0415 7.59788 10.2 7.59995C10.3585 7.59788 10.5099 7.534 10.622 7.42192C10.7341 7.30985 10.798 7.15844 10.8 6.99995V3.94242C10.8066 3.90505 10.8096 3.86689 10.8089 3.82843C10.8079 3.77159 10.7988 3.7157 10.7824 3.6623C10.756 3.55552 10.701 3.45698 10.622 3.37798C10.5099 3.2659 10.3585 3.20202 10.2 3.19995H7.00002C6.84089 3.19995 6.68828 3.26317 6.57576 3.37569C6.46324 3.48821 6.40002 3.64082 6.40002 3.79995C6.40002 3.95908 6.46324 4.11169 6.57576 4.22422C6.68828 4.33674 6.84089 4.39995 7.00002 4.39995H8.80006L6.19997 7.00005C6.10158 7.11005 6.04718 7.25246 6.04718 7.40005C6.04718 7.54763 6.10158 7.69004 6.19997 7.80005C6.30202 7.91645 6.44561 7.98824 6.59997 8.00005C6.75432 7.98824 6.89791 7.91645 6.99997 7.80005L9.60002 5.26841V6.99995C9.6021 7.15844 9.66598 7.30985 9.77805 7.42192ZM1.4 14H3.8C4.17066 13.9979 4.52553 13.8498 4.78763 13.5877C5.04973 13.3256 5.1979 12.9707 5.2 12.6V10.2C5.1979 9.82939 5.04973 9.47452 4.78763 9.21242C4.52553 8.95032 4.17066 8.80215 3.8 8.80005H1.4C1.02934 8.80215 0.674468 8.95032 0.412371 9.21242C0.150274 9.47452 0.00210008 9.82939 0 10.2V12.6C0.00210008 12.9707 0.150274 13.3256 0.412371 13.5877C0.674468 13.8498 1.02934 13.9979 1.4 14ZM1.25858 10.0586C1.29609 10.0211 1.34696 10 1.4 10H3.8C3.85304 10 3.90391 10.0211 3.94142 10.0586C3.97893 10.0961 4 10.147 4 10.2V12.6C4 12.6531 3.97893 12.704 3.94142 12.7415C3.90391 12.779 3.85304 12.8 3.8 12.8H1.4C1.34696 12.8 1.29609 12.779 1.25858 12.7415C1.22107 12.704 1.2 12.6531 1.2 12.6V10.2C1.2 10.147 1.22107 10.0961 1.25858 10.0586Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Mm.render = yI;
var Am = {
  name: "WindowMinimizeIcon",
  extends: Ie
};
function kI(t) {
  return SI(t) || xI(t) || CI(t) || wI();
}
function wI() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function CI(t, e) {
  if (t) {
    if (typeof t == "string") return td(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? td(t, e) : void 0;
  }
}
function xI(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function SI(t) {
  if (Array.isArray(t)) return td(t);
}
function td(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function II(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), kI(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M11.8 0H2.2C1.61652 0 1.05694 0.231785 0.644365 0.644365C0.231785 1.05694 0 1.61652 0 2.2V7C0 7.15913 0.063214 7.31174 0.175736 7.42426C0.288258 7.53679 0.44087 7.6 0.6 7.6C0.75913 7.6 0.911742 7.53679 1.02426 7.42426C1.13679 7.31174 1.2 7.15913 1.2 7V2.2C1.2 1.93478 1.30536 1.68043 1.49289 1.49289C1.68043 1.30536 1.93478 1.2 2.2 1.2H11.8C12.0652 1.2 12.3196 1.30536 12.5071 1.49289C12.6946 1.68043 12.8 1.93478 12.8 2.2V11.8C12.8 12.0652 12.6946 12.3196 12.5071 12.5071C12.3196 12.6946 12.0652 12.8 11.8 12.8H7C6.84087 12.8 6.68826 12.8632 6.57574 12.9757C6.46321 13.0883 6.4 13.2409 6.4 13.4C6.4 13.5591 6.46321 13.7117 6.57574 13.8243C6.68826 13.9368 6.84087 14 7 14H11.8C12.3835 14 12.9431 13.7682 13.3556 13.3556C13.7682 12.9431 14 12.3835 14 11.8V2.2C14 1.61652 13.7682 1.05694 13.3556 0.644365C12.9431 0.231785 12.3835 0 11.8 0ZM6.368 7.952C6.44137 7.98326 6.52025 7.99958 6.6 8H9.8C9.95913 8 10.1117 7.93678 10.2243 7.82426C10.3368 7.71174 10.4 7.55913 10.4 7.4C10.4 7.24087 10.3368 7.08826 10.2243 6.97574C10.1117 6.86321 9.95913 6.8 9.8 6.8H8.048L10.624 4.224C10.73 4.11026 10.7877 3.95982 10.7849 3.80438C10.7822 3.64894 10.7192 3.50063 10.6093 3.3907C10.4994 3.28077 10.3511 3.2178 10.1956 3.21506C10.0402 3.21232 9.88974 3.27002 9.776 3.376L7.2 5.952V4.2C7.2 4.04087 7.13679 3.88826 7.02426 3.77574C6.91174 3.66321 6.75913 3.6 6.6 3.6C6.44087 3.6 6.28826 3.66321 6.17574 3.77574C6.06321 3.88826 6 4.04087 6 4.2V7.4C6.00042 7.47975 6.01674 7.55862 6.048 7.632C6.07656 7.70442 6.11971 7.7702 6.17475 7.82524C6.2298 7.88029 6.29558 7.92344 6.368 7.952ZM1.4 8.80005H3.8C4.17066 8.80215 4.52553 8.95032 4.78763 9.21242C5.04973 9.47452 5.1979 9.82939 5.2 10.2V12.6C5.1979 12.9707 5.04973 13.3256 4.78763 13.5877C4.52553 13.8498 4.17066 13.9979 3.8 14H1.4C1.02934 13.9979 0.674468 13.8498 0.412371 13.5877C0.150274 13.3256 0.00210008 12.9707 0 12.6V10.2C0.00210008 9.82939 0.150274 9.47452 0.412371 9.21242C0.674468 8.95032 1.02934 8.80215 1.4 8.80005ZM3.94142 12.7415C3.97893 12.704 4 12.6531 4 12.6V10.2C4 10.147 3.97893 10.0961 3.94142 10.0586C3.90391 10.0211 3.85304 10 3.8 10H1.4C1.34696 10 1.29609 10.0211 1.25858 10.0586C1.22107 10.0961 1.2 10.147 1.2 10.2V12.6C1.2 12.6531 1.22107 12.704 1.25858 12.7415C1.29609 12.779 1.34696 12.8 1.4 12.8H3.8C3.85304 12.8 3.90391 12.779 3.94142 12.7415Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Am.render = II;
var OI = te.extend({
  name: "focustrap-directive"
}), PI = ge.extend({
  style: OI
});
function fi(t) {
  "@babel/helpers - typeof";
  return fi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, fi(t);
}
function Cp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function xp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Cp(Object(n), !0).forEach(function(o) {
      $I(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Cp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function $I(t, e, n) {
  return (e = TI(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function TI(t) {
  var e = RI(t, "string");
  return fi(e) == "symbol" ? e : e + "";
}
function RI(t, e) {
  if (fi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (fi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var wc = PI.extend("focustrap", {
  mounted: function(e, n) {
    var o = n.value || {}, i = o.disabled;
    i || (this.createHiddenFocusableElements(e, n), this.bind(e, n), this.autoElementFocus(e, n)), e.setAttribute("data-pd-focustrap", !0), this.$el = e;
  },
  updated: function(e, n) {
    var o = n.value || {}, i = o.disabled;
    i && this.unbind(e);
  },
  unmounted: function(e) {
    this.unbind(e);
  },
  methods: {
    getComputedSelector: function(e) {
      return ':not(.p-hidden-focusable):not([data-p-hidden-focusable="true"])'.concat(e ?? "");
    },
    bind: function(e, n) {
      var o = this, i = n.value || {}, r = i.onFocusIn, a = i.onFocusOut;
      e.$_pfocustrap_mutationobserver = new MutationObserver(function(l) {
        l.forEach(function(s) {
          if (s.type === "childList" && !e.contains(document.activeElement)) {
            var d = function(u) {
              var f = mu(u) ? mu(u, o.getComputedSelector(e.$_pfocustrap_focusableselector)) ? u : fo(e, o.getComputedSelector(e.$_pfocustrap_focusableselector)) : fo(u);
              return ae(f) ? f : u.nextSibling && d(u.nextSibling);
            };
            Fe(d(s.nextSibling));
          }
        });
      }), e.$_pfocustrap_mutationobserver.disconnect(), e.$_pfocustrap_mutationobserver.observe(e, {
        childList: !0
      }), e.$_pfocustrap_focusinlistener = function(l) {
        return r && r(l);
      }, e.$_pfocustrap_focusoutlistener = function(l) {
        return a && a(l);
      }, e.addEventListener("focusin", e.$_pfocustrap_focusinlistener), e.addEventListener("focusout", e.$_pfocustrap_focusoutlistener);
    },
    unbind: function(e) {
      e.$_pfocustrap_mutationobserver && e.$_pfocustrap_mutationobserver.disconnect(), e.$_pfocustrap_focusinlistener && e.removeEventListener("focusin", e.$_pfocustrap_focusinlistener) && (e.$_pfocustrap_focusinlistener = null), e.$_pfocustrap_focusoutlistener && e.removeEventListener("focusout", e.$_pfocustrap_focusoutlistener) && (e.$_pfocustrap_focusoutlistener = null);
    },
    autoFocus: function(e) {
      this.autoElementFocus(this.$el, {
        value: xp(xp({}, e), {}, {
          autoFocus: !0
        })
      });
    },
    autoElementFocus: function(e, n) {
      var o = n.value || {}, i = o.autoFocusSelector, r = i === void 0 ? "" : i, a = o.firstFocusableSelector, l = a === void 0 ? "" : a, s = o.autoFocus, d = s === void 0 ? !1 : s, c = fo(e, "[autofocus]".concat(this.getComputedSelector(r)));
      d && !c && (c = fo(e, this.getComputedSelector(l))), Fe(c);
    },
    onFirstHiddenElementFocus: function(e) {
      var n, o = e.currentTarget, i = e.relatedTarget, r = i === o.$_pfocustrap_lasthiddenfocusableelement || !((n = this.$el) !== null && n !== void 0 && n.contains(i)) ? fo(o.parentElement, this.getComputedSelector(o.$_pfocustrap_focusableselector)) : o.$_pfocustrap_lasthiddenfocusableelement;
      Fe(r);
    },
    onLastHiddenElementFocus: function(e) {
      var n, o = e.currentTarget, i = e.relatedTarget, r = i === o.$_pfocustrap_firsthiddenfocusableelement || !((n = this.$el) !== null && n !== void 0 && n.contains(i)) ? qh(o.parentElement, this.getComputedSelector(o.$_pfocustrap_focusableselector)) : o.$_pfocustrap_firsthiddenfocusableelement;
      Fe(r);
    },
    createHiddenFocusableElements: function(e, n) {
      var o = this, i = n.value || {}, r = i.tabIndex, a = r === void 0 ? 0 : r, l = i.firstFocusableSelector, s = l === void 0 ? "" : l, d = i.lastFocusableSelector, c = d === void 0 ? "" : d, u = function(g) {
        return Gh("span", {
          class: "p-hidden-accessible p-hidden-focusable",
          tabIndex: a,
          role: "presentation",
          "aria-hidden": !0,
          "data-p-hidden-accessible": !0,
          "data-p-hidden-focusable": !0,
          onFocus: g == null ? void 0 : g.bind(o)
        });
      }, f = u(this.onFirstHiddenElementFocus), p = u(this.onLastHiddenElementFocus);
      f.$_pfocustrap_lasthiddenfocusableelement = p, f.$_pfocustrap_focusableselector = s, f.setAttribute("data-pc-section", "firstfocusableelement"), p.$_pfocustrap_firsthiddenfocusableelement = f, p.$_pfocustrap_focusableselector = c, p.setAttribute("data-pc-section", "lastfocusableelement"), e.prepend(f), e.append(p);
    }
  }
});
function nd() {
  fv({
    variableName: dm("scrollbar.width").name
  });
}
function od() {
  gv({
    variableName: dm("scrollbar.width").name
  });
}
var BI = `
    .p-dialog {
        max-height: 90%;
        transform: scale(1);
        border-radius: dt('dialog.border.radius');
        box-shadow: dt('dialog.shadow');
        background: dt('dialog.background');
        border: 1px solid dt('dialog.border.color');
        color: dt('dialog.color');
    }

    .p-dialog-content {
        overflow-y: auto;
        padding: dt('dialog.content.padding');
    }

    .p-dialog-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-shrink: 0;
        padding: dt('dialog.header.padding');
    }

    .p-dialog-title {
        font-weight: dt('dialog.title.font.weight');
        font-size: dt('dialog.title.font.size');
    }

    .p-dialog-footer {
        flex-shrink: 0;
        padding: dt('dialog.footer.padding');
        display: flex;
        justify-content: flex-end;
        gap: dt('dialog.footer.gap');
    }

    .p-dialog-header-actions {
        display: flex;
        align-items: center;
        gap: dt('dialog.header.gap');
    }

    .p-dialog-enter-active {
        transition: all 150ms cubic-bezier(0, 0, 0.2, 1);
    }

    .p-dialog-leave-active {
        transition: all 150ms cubic-bezier(0.4, 0, 0.2, 1);
    }

    .p-dialog-enter-from,
    .p-dialog-leave-to {
        opacity: 0;
        transform: scale(0.7);
    }

    .p-dialog-top .p-dialog,
    .p-dialog-bottom .p-dialog,
    .p-dialog-left .p-dialog,
    .p-dialog-right .p-dialog,
    .p-dialog-topleft .p-dialog,
    .p-dialog-topright .p-dialog,
    .p-dialog-bottomleft .p-dialog,
    .p-dialog-bottomright .p-dialog {
        margin: 0.75rem;
        transform: translate3d(0px, 0px, 0px);
    }

    .p-dialog-top .p-dialog-enter-active,
    .p-dialog-top .p-dialog-leave-active,
    .p-dialog-bottom .p-dialog-enter-active,
    .p-dialog-bottom .p-dialog-leave-active,
    .p-dialog-left .p-dialog-enter-active,
    .p-dialog-left .p-dialog-leave-active,
    .p-dialog-right .p-dialog-enter-active,
    .p-dialog-right .p-dialog-leave-active,
    .p-dialog-topleft .p-dialog-enter-active,
    .p-dialog-topleft .p-dialog-leave-active,
    .p-dialog-topright .p-dialog-enter-active,
    .p-dialog-topright .p-dialog-leave-active,
    .p-dialog-bottomleft .p-dialog-enter-active,
    .p-dialog-bottomleft .p-dialog-leave-active,
    .p-dialog-bottomright .p-dialog-enter-active,
    .p-dialog-bottomright .p-dialog-leave-active {
        transition: all 0.3s ease-out;
    }

    .p-dialog-top .p-dialog-enter-from,
    .p-dialog-top .p-dialog-leave-to {
        transform: translate3d(0px, -100%, 0px);
    }

    .p-dialog-bottom .p-dialog-enter-from,
    .p-dialog-bottom .p-dialog-leave-to {
        transform: translate3d(0px, 100%, 0px);
    }

    .p-dialog-left .p-dialog-enter-from,
    .p-dialog-left .p-dialog-leave-to,
    .p-dialog-topleft .p-dialog-enter-from,
    .p-dialog-topleft .p-dialog-leave-to,
    .p-dialog-bottomleft .p-dialog-enter-from,
    .p-dialog-bottomleft .p-dialog-leave-to {
        transform: translate3d(-100%, 0px, 0px);
    }

    .p-dialog-right .p-dialog-enter-from,
    .p-dialog-right .p-dialog-leave-to,
    .p-dialog-topright .p-dialog-enter-from,
    .p-dialog-topright .p-dialog-leave-to,
    .p-dialog-bottomright .p-dialog-enter-from,
    .p-dialog-bottomright .p-dialog-leave-to {
        transform: translate3d(100%, 0px, 0px);
    }

    .p-dialog-left:dir(rtl) .p-dialog-enter-from,
    .p-dialog-left:dir(rtl) .p-dialog-leave-to,
    .p-dialog-topleft:dir(rtl) .p-dialog-enter-from,
    .p-dialog-topleft:dir(rtl) .p-dialog-leave-to,
    .p-dialog-bottomleft:dir(rtl) .p-dialog-enter-from,
    .p-dialog-bottomleft:dir(rtl) .p-dialog-leave-to {
        transform: translate3d(100%, 0px, 0px);
    }

    .p-dialog-right:dir(rtl) .p-dialog-enter-from,
    .p-dialog-right:dir(rtl) .p-dialog-leave-to,
    .p-dialog-topright:dir(rtl) .p-dialog-enter-from,
    .p-dialog-topright:dir(rtl) .p-dialog-leave-to,
    .p-dialog-bottomright:dir(rtl) .p-dialog-enter-from,
    .p-dialog-bottomright:dir(rtl) .p-dialog-leave-to {
        transform: translate3d(-100%, 0px, 0px);
    }

    .p-dialog-maximized {
        width: 100vw !important;
        height: 100vh !important;
        top: 0px !important;
        left: 0px !important;
        max-height: 100%;
        height: 100%;
        border-radius: 0;
    }

    .p-dialog-maximized .p-dialog-content {
        flex-grow: 1;
    }

    .p-dialog .p-resizable-handle {
        position: absolute;
        font-size: 0.1px;
        display: block;
        cursor: se-resize;
        width: 12px;
        height: 12px;
        right: 1px;
        bottom: 1px;
    }
`, EI = {
  mask: function(e) {
    var n = e.position, o = e.modal;
    return {
      position: "fixed",
      height: "100%",
      width: "100%",
      left: 0,
      top: 0,
      display: "flex",
      justifyContent: n === "left" || n === "topleft" || n === "bottomleft" ? "flex-start" : n === "right" || n === "topright" || n === "bottomright" ? "flex-end" : "center",
      alignItems: n === "top" || n === "topleft" || n === "topright" ? "flex-start" : n === "bottom" || n === "bottomleft" || n === "bottomright" ? "flex-end" : "center",
      pointerEvents: o ? "auto" : "none"
    };
  },
  root: {
    display: "flex",
    flexDirection: "column",
    pointerEvents: "auto"
  }
}, MI = {
  mask: function(e) {
    var n = e.props, o = ["left", "right", "top", "topleft", "topright", "bottom", "bottomleft", "bottomright"], i = o.find(function(r) {
      return r === n.position;
    });
    return ["p-dialog-mask", {
      "p-overlay-mask p-overlay-mask-enter": n.modal
    }, i ? "p-dialog-".concat(i) : ""];
  },
  root: function(e) {
    var n = e.props, o = e.instance;
    return ["p-dialog p-component", {
      "p-dialog-maximized": n.maximizable && o.maximized
    }];
  },
  header: "p-dialog-header",
  title: "p-dialog-title",
  headerActions: "p-dialog-header-actions",
  pcMaximizeButton: "p-dialog-maximize-button",
  pcCloseButton: "p-dialog-close-button",
  content: "p-dialog-content",
  footer: "p-dialog-footer"
}, AI = te.extend({
  name: "dialog",
  style: BI,
  classes: MI,
  inlineStyles: EI
}), DI = {
  name: "BaseDialog",
  extends: ne,
  props: {
    header: {
      type: null,
      default: null
    },
    footer: {
      type: null,
      default: null
    },
    visible: {
      type: Boolean,
      default: !1
    },
    modal: {
      type: Boolean,
      default: null
    },
    contentStyle: {
      type: null,
      default: null
    },
    contentClass: {
      type: String,
      default: null
    },
    contentProps: {
      type: null,
      default: null
    },
    maximizable: {
      type: Boolean,
      default: !1
    },
    dismissableMask: {
      type: Boolean,
      default: !1
    },
    closable: {
      type: Boolean,
      default: !0
    },
    closeOnEscape: {
      type: Boolean,
      default: !0
    },
    showHeader: {
      type: Boolean,
      default: !0
    },
    blockScroll: {
      type: Boolean,
      default: !1
    },
    baseZIndex: {
      type: Number,
      default: 0
    },
    autoZIndex: {
      type: Boolean,
      default: !0
    },
    position: {
      type: String,
      default: "center"
    },
    breakpoints: {
      type: Object,
      default: null
    },
    draggable: {
      type: Boolean,
      default: !0
    },
    keepInViewport: {
      type: Boolean,
      default: !0
    },
    minX: {
      type: Number,
      default: 0
    },
    minY: {
      type: Number,
      default: 0
    },
    appendTo: {
      type: [String, Object],
      default: "body"
    },
    closeIcon: {
      type: String,
      default: void 0
    },
    maximizeIcon: {
      type: String,
      default: void 0
    },
    minimizeIcon: {
      type: String,
      default: void 0
    },
    closeButtonProps: {
      type: Object,
      default: function() {
        return {
          severity: "secondary",
          text: !0,
          rounded: !0
        };
      }
    },
    maximizeButtonProps: {
      type: Object,
      default: function() {
        return {
          severity: "secondary",
          text: !0,
          rounded: !0
        };
      }
    },
    _instance: null
  },
  style: AI,
  provide: function() {
    return {
      $pcDialog: this,
      $parentInstance: this
    };
  }
}, Cc = {
  name: "Dialog",
  extends: DI,
  inheritAttrs: !1,
  emits: ["update:visible", "show", "hide", "after-hide", "maximize", "unmaximize", "dragstart", "dragend"],
  provide: function() {
    var e = this;
    return {
      dialogRef: vt(function() {
        return e._instance;
      })
    };
  },
  data: function() {
    return {
      containerVisible: this.visible,
      maximized: !1,
      focusableMax: null,
      focusableClose: null,
      target: null
    };
  },
  documentKeydownListener: null,
  container: null,
  mask: null,
  content: null,
  headerContainer: null,
  footerContainer: null,
  maximizableButton: null,
  closeButton: null,
  styleElement: null,
  dragging: null,
  documentDragListener: null,
  documentDragEndListener: null,
  lastPageX: null,
  lastPageY: null,
  maskMouseDownTarget: null,
  updated: function() {
    this.visible && (this.containerVisible = this.visible);
  },
  beforeUnmount: function() {
    this.unbindDocumentState(), this.unbindGlobalListeners(), this.destroyStyle(), this.mask && this.autoZIndex && Xe.clear(this.mask), this.container = null, this.mask = null;
  },
  mounted: function() {
    this.breakpoints && this.createStyle();
  },
  methods: {
    close: function() {
      this.$emit("update:visible", !1);
    },
    onEnter: function() {
      this.$emit("show"), this.target = document.activeElement, this.enableDocumentSettings(), this.bindGlobalListeners(), this.autoZIndex && Xe.set("modal", this.mask, this.baseZIndex + this.$primevue.config.zIndex.modal);
    },
    onAfterEnter: function() {
      this.focus();
    },
    onBeforeLeave: function() {
      this.modal && !this.isUnstyled && xn(this.mask, "p-overlay-mask-leave"), this.dragging && this.documentDragEndListener && this.documentDragEndListener();
    },
    onLeave: function() {
      this.$emit("hide"), Fe(this.target), this.target = null, this.focusableClose = null, this.focusableMax = null;
    },
    onAfterLeave: function() {
      this.autoZIndex && Xe.clear(this.mask), this.containerVisible = !1, this.unbindDocumentState(), this.unbindGlobalListeners(), this.$emit("after-hide");
    },
    onMaskMouseDown: function(e) {
      this.maskMouseDownTarget = e.target;
    },
    onMaskMouseUp: function() {
      this.dismissableMask && this.modal && this.mask === this.maskMouseDownTarget && this.close();
    },
    focus: function() {
      var e = function(i) {
        return i && i.querySelector("[autofocus]");
      }, n = this.$slots.footer && e(this.footerContainer);
      n || (n = this.$slots.header && e(this.headerContainer), n || (n = this.$slots.default && e(this.content), n || (this.maximizable ? (this.focusableMax = !0, n = this.maximizableButton) : (this.focusableClose = !0, n = this.closeButton)))), n && Fe(n, {
        focusVisible: !0
      });
    },
    maximize: function(e) {
      this.maximized ? (this.maximized = !1, this.$emit("unmaximize", e)) : (this.maximized = !0, this.$emit("maximize", e)), this.modal || (this.maximized ? nd() : od());
    },
    enableDocumentSettings: function() {
      (this.modal || !this.modal && this.blockScroll || this.maximizable && this.maximized) && nd();
    },
    unbindDocumentState: function() {
      (this.modal || !this.modal && this.blockScroll || this.maximizable && this.maximized) && od();
    },
    onKeyDown: function(e) {
      e.code === "Escape" && this.closeOnEscape && this.close();
    },
    bindDocumentKeyDownListener: function() {
      this.documentKeydownListener || (this.documentKeydownListener = this.onKeyDown.bind(this), window.document.addEventListener("keydown", this.documentKeydownListener));
    },
    unbindDocumentKeyDownListener: function() {
      this.documentKeydownListener && (window.document.removeEventListener("keydown", this.documentKeydownListener), this.documentKeydownListener = null);
    },
    containerRef: function(e) {
      this.container = e;
    },
    maskRef: function(e) {
      this.mask = e;
    },
    contentRef: function(e) {
      this.content = e;
    },
    headerContainerRef: function(e) {
      this.headerContainer = e;
    },
    footerContainerRef: function(e) {
      this.footerContainer = e;
    },
    maximizableRef: function(e) {
      this.maximizableButton = e ? e.$el : void 0;
    },
    closeButtonRef: function(e) {
      this.closeButton = e ? e.$el : void 0;
    },
    createStyle: function() {
      if (!this.styleElement && !this.isUnstyled) {
        var e;
        this.styleElement = document.createElement("style"), this.styleElement.type = "text/css", ea(this.styleElement, "nonce", (e = this.$primevue) === null || e === void 0 || (e = e.config) === null || e === void 0 || (e = e.csp) === null || e === void 0 ? void 0 : e.nonce), document.head.appendChild(this.styleElement);
        var n = "";
        for (var o in this.breakpoints)
          n += `
                        @media screen and (max-width: `.concat(o, `) {
                            .p-dialog[`).concat(this.$attrSelector, `] {
                                width: `).concat(this.breakpoints[o], ` !important;
                            }
                        }
                    `);
        this.styleElement.innerHTML = n;
      }
    },
    destroyStyle: function() {
      this.styleElement && (document.head.removeChild(this.styleElement), this.styleElement = null);
    },
    initDrag: function(e) {
      e.target.closest("div").getAttribute("data-pc-section") !== "headeractions" && this.draggable && (this.dragging = !0, this.lastPageX = e.pageX, this.lastPageY = e.pageY, this.container.style.margin = "0", document.body.setAttribute("data-p-unselectable-text", "true"), !this.isUnstyled && Hr(document.body, {
        "user-select": "none"
      }), this.$emit("dragstart", e));
    },
    bindGlobalListeners: function() {
      this.draggable && (this.bindDocumentDragListener(), this.bindDocumentDragEndListener()), this.closeOnEscape && this.bindDocumentKeyDownListener();
    },
    unbindGlobalListeners: function() {
      this.unbindDocumentDragListener(), this.unbindDocumentDragEndListener(), this.unbindDocumentKeyDownListener();
    },
    bindDocumentDragListener: function() {
      var e = this;
      this.documentDragListener = function(n) {
        if (e.dragging) {
          var o = pt(e.container), i = er(e.container), r = n.pageX - e.lastPageX, a = n.pageY - e.lastPageY, l = e.container.getBoundingClientRect(), s = l.left + r, d = l.top + a, c = cc(), u = getComputedStyle(e.container), f = parseFloat(u.marginLeft), p = parseFloat(u.marginTop);
          e.container.style.position = "fixed", e.keepInViewport ? (s >= e.minX && s + o < c.width && (e.lastPageX = n.pageX, e.container.style.left = s - f + "px"), d >= e.minY && d + i < c.height && (e.lastPageY = n.pageY, e.container.style.top = d - p + "px")) : (e.lastPageX = n.pageX, e.container.style.left = s - f + "px", e.lastPageY = n.pageY, e.container.style.top = d - p + "px");
        }
      }, window.document.addEventListener("mousemove", this.documentDragListener);
    },
    unbindDocumentDragListener: function() {
      this.documentDragListener && (window.document.removeEventListener("mousemove", this.documentDragListener), this.documentDragListener = null);
    },
    bindDocumentDragEndListener: function() {
      var e = this;
      this.documentDragEndListener = function(n) {
        e.dragging && (e.dragging = !1, document.body.removeAttribute("data-p-unselectable-text"), !e.isUnstyled && (document.body.style["user-select"] = ""), e.$emit("dragend", n));
      }, window.document.addEventListener("mouseup", this.documentDragEndListener);
    },
    unbindDocumentDragEndListener: function() {
      this.documentDragEndListener && (window.document.removeEventListener("mouseup", this.documentDragEndListener), this.documentDragEndListener = null);
    }
  },
  computed: {
    maximizeIconComponent: function() {
      return this.maximized ? this.minimizeIcon ? "span" : "WindowMinimizeIcon" : this.maximizeIcon ? "span" : "WindowMaximizeIcon";
    },
    ariaLabelledById: function() {
      return this.header != null || this.$attrs["aria-labelledby"] !== null ? this.$id + "_header" : null;
    },
    closeAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.close : void 0;
    },
    dataP: function() {
      return Te({
        maximized: this.maximized,
        modal: this.modal
      });
    }
  },
  directives: {
    ripple: mt,
    focustrap: wc
  },
  components: {
    Button: Ao,
    Portal: vr,
    WindowMinimizeIcon: Am,
    WindowMaximizeIcon: Mm,
    TimesIcon: br
  }
};
function hi(t) {
  "@babel/helpers - typeof";
  return hi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, hi(t);
}
function Sp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Ip(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Sp(Object(n), !0).forEach(function(o) {
      LI(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Sp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function LI(t, e, n) {
  return (e = zI(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function zI(t) {
  var e = FI(t, "string");
  return hi(e) == "symbol" ? e : e + "";
}
function FI(t, e) {
  if (hi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (hi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var NI = ["data-p"], jI = ["aria-labelledby", "aria-modal", "data-p"], VI = ["id"], _I = ["data-p"];
function KI(t, e, n, o, i, r) {
  var a = $("Button"), l = $("Portal"), s = tt("focustrap");
  return m(), O(l, {
    appendTo: t.appendTo
  }, {
    default: E(function() {
      return [i.containerVisible ? (m(), y("div", k({
        key: 0,
        ref: r.maskRef,
        class: t.cx("mask"),
        style: t.sx("mask", !0, {
          position: t.position,
          modal: t.modal
        }),
        onMousedown: e[1] || (e[1] = function() {
          return r.onMaskMouseDown && r.onMaskMouseDown.apply(r, arguments);
        }),
        onMouseup: e[2] || (e[2] = function() {
          return r.onMaskMouseUp && r.onMaskMouseUp.apply(r, arguments);
        }),
        "data-p": r.dataP
      }, t.ptm("mask")), [P(gl, k({
        name: "p-dialog",
        onEnter: r.onEnter,
        onAfterEnter: r.onAfterEnter,
        onBeforeLeave: r.onBeforeLeave,
        onLeave: r.onLeave,
        onAfterLeave: r.onAfterLeave,
        appear: ""
      }, t.ptm("transition")), {
        default: E(function() {
          return [t.visible ? We((m(), y("div", k({
            key: 0,
            ref: r.containerRef,
            class: t.cx("root"),
            style: t.sx("root"),
            role: "dialog",
            "aria-labelledby": r.ariaLabelledById,
            "aria-modal": t.modal,
            "data-p": r.dataP
          }, t.ptmi("root")), [t.$slots.container ? L(t.$slots, "container", {
            key: 0,
            closeCallback: r.close,
            maximizeCallback: function(c) {
              return r.maximize(c);
            },
            initDragCallback: r.initDrag
          }) : (m(), y(_, {
            key: 1
          }, [t.showHeader ? (m(), y("div", k({
            key: 0,
            ref: r.headerContainerRef,
            class: t.cx("header"),
            onMousedown: e[0] || (e[0] = function() {
              return r.initDrag && r.initDrag.apply(r, arguments);
            })
          }, t.ptm("header")), [L(t.$slots, "header", {
            class: Y(t.cx("title"))
          }, function() {
            return [t.header ? (m(), y("span", k({
              key: 0,
              id: r.ariaLabelledById,
              class: t.cx("title")
            }, t.ptm("title")), re(t.header), 17, VI)) : M("", !0)];
          }), v("div", k({
            class: t.cx("headerActions")
          }, t.ptm("headerActions")), [t.maximizable ? L(t.$slots, "maximizebutton", {
            key: 0,
            maximized: i.maximized,
            maximizeCallback: function(c) {
              return r.maximize(c);
            }
          }, function() {
            return [P(a, k({
              ref: r.maximizableRef,
              autofocus: i.focusableMax,
              class: t.cx("pcMaximizeButton"),
              onClick: r.maximize,
              tabindex: t.maximizable ? "0" : "-1",
              unstyled: t.unstyled
            }, t.maximizeButtonProps, {
              pt: t.ptm("pcMaximizeButton"),
              "data-pc-group-section": "headericon"
            }), {
              icon: E(function(d) {
                return [L(t.$slots, "maximizeicon", {
                  maximized: i.maximized
                }, function() {
                  return [(m(), O(q(r.maximizeIconComponent), k({
                    class: [d.class, i.maximized ? t.minimizeIcon : t.maximizeIcon]
                  }, t.ptm("pcMaximizeButton").icon), null, 16, ["class"]))];
                })];
              }),
              _: 3
            }, 16, ["autofocus", "class", "onClick", "tabindex", "unstyled", "pt"])];
          }) : M("", !0), t.closable ? L(t.$slots, "closebutton", {
            key: 1,
            closeCallback: r.close
          }, function() {
            return [P(a, k({
              ref: r.closeButtonRef,
              autofocus: i.focusableClose,
              class: t.cx("pcCloseButton"),
              onClick: r.close,
              "aria-label": r.closeAriaLabel,
              unstyled: t.unstyled
            }, t.closeButtonProps, {
              pt: t.ptm("pcCloseButton"),
              "data-pc-group-section": "headericon"
            }), {
              icon: E(function(d) {
                return [L(t.$slots, "closeicon", {}, function() {
                  return [(m(), O(q(t.closeIcon ? "span" : "TimesIcon"), k({
                    class: [t.closeIcon, d.class]
                  }, t.ptm("pcCloseButton").icon), null, 16, ["class"]))];
                })];
              }),
              _: 3
            }, 16, ["autofocus", "class", "onClick", "aria-label", "unstyled", "pt"])];
          }) : M("", !0)], 16)], 16)) : M("", !0), v("div", k({
            ref: r.contentRef,
            class: [t.cx("content"), t.contentClass],
            style: t.contentStyle,
            "data-p": r.dataP
          }, Ip(Ip({}, t.contentProps), t.ptm("content"))), [L(t.$slots, "default")], 16, _I), t.footer || t.$slots.footer ? (m(), y("div", k({
            key: 1,
            ref: r.footerContainerRef,
            class: t.cx("footer")
          }, t.ptm("footer")), [L(t.$slots, "footer", {}, function() {
            return [ee(re(t.footer), 1)];
          })], 16)) : M("", !0)], 64))], 16, jI)), [[s, {
            disabled: !t.modal
          }]]) : M("", !0)];
        }),
        _: 3
      }, 16, ["onEnter", "onAfterEnter", "onBeforeLeave", "onLeave", "onAfterLeave"])], 16, NI)) : M("", !0)];
    }),
    _: 3
  }, 8, ["appendTo"]);
}
Cc.render = KI;
var xc = {
  name: "BarsIcon",
  extends: Ie
};
function HI(t) {
  return qI(t) || GI(t) || UI(t) || WI();
}
function WI() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function UI(t, e) {
  if (t) {
    if (typeof t == "string") return rd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? rd(t, e) : void 0;
  }
}
function GI(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function qI(t) {
  if (Array.isArray(t)) return rd(t);
}
function rd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function JI(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), HI(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M13.3226 3.6129H0.677419C0.497757 3.6129 0.325452 3.54152 0.198411 3.41448C0.0713707 3.28744 0 3.11514 0 2.93548C0 2.75581 0.0713707 2.58351 0.198411 2.45647C0.325452 2.32943 0.497757 2.25806 0.677419 2.25806H13.3226C13.5022 2.25806 13.6745 2.32943 13.8016 2.45647C13.9286 2.58351 14 2.75581 14 2.93548C14 3.11514 13.9286 3.28744 13.8016 3.41448C13.6745 3.54152 13.5022 3.6129 13.3226 3.6129ZM13.3226 7.67741H0.677419C0.497757 7.67741 0.325452 7.60604 0.198411 7.479C0.0713707 7.35196 0 7.17965 0 6.99999C0 6.82033 0.0713707 6.64802 0.198411 6.52098C0.325452 6.39394 0.497757 6.32257 0.677419 6.32257H13.3226C13.5022 6.32257 13.6745 6.39394 13.8016 6.52098C13.9286 6.64802 14 6.82033 14 6.99999C14 7.17965 13.9286 7.35196 13.8016 7.479C13.6745 7.60604 13.5022 7.67741 13.3226 7.67741ZM0.677419 11.7419H13.3226C13.5022 11.7419 13.6745 11.6706 13.8016 11.5435C13.9286 11.4165 14 11.2442 14 11.0645C14 10.8848 13.9286 10.7125 13.8016 10.5855C13.6745 10.4585 13.5022 10.3871 13.3226 10.3871H0.677419C0.497757 10.3871 0.325452 10.4585 0.198411 10.5855C0.0713707 10.7125 0 10.8848 0 11.0645C0 11.2442 0.0713707 11.4165 0.198411 11.5435C0.325452 11.6706 0.497757 11.7419 0.677419 11.7419Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
xc.render = JI;
var YI = `
    .p-menubar {
        display: flex;
        align-items: center;
        background: dt('menubar.background');
        border: 1px solid dt('menubar.border.color');
        border-radius: dt('menubar.border.radius');
        color: dt('menubar.color');
        padding: dt('menubar.padding');
        gap: dt('menubar.gap');
    }

    .p-menubar-start,
    .p-megamenu-end {
        display: flex;
        align-items: center;
    }

    .p-menubar-root-list,
    .p-menubar-submenu {
        display: flex;
        margin: 0;
        padding: 0;
        list-style: none;
        outline: 0 none;
    }

    .p-menubar-root-list {
        align-items: center;
        flex-wrap: wrap;
        gap: dt('menubar.gap');
    }

    .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content {
        border-radius: dt('menubar.base.item.border.radius');
    }

    .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content > .p-menubar-item-link {
        padding: dt('menubar.base.item.padding');
    }

    .p-menubar-item-content {
        transition:
            background dt('menubar.transition.duration'),
            color dt('menubar.transition.duration');
        border-radius: dt('menubar.item.border.radius');
        color: dt('menubar.item.color');
    }

    .p-menubar-item-link {
        cursor: pointer;
        display: flex;
        align-items: center;
        text-decoration: none;
        overflow: hidden;
        position: relative;
        color: inherit;
        padding: dt('menubar.item.padding');
        gap: dt('menubar.item.gap');
        user-select: none;
        outline: 0 none;
    }

    .p-menubar-item-label {
        line-height: 1;
    }

    .p-menubar-item-icon {
        color: dt('menubar.item.icon.color');
    }

    .p-menubar-submenu-icon {
        color: dt('menubar.submenu.icon.color');
        margin-left: auto;
        font-size: dt('menubar.submenu.icon.size');
        width: dt('menubar.submenu.icon.size');
        height: dt('menubar.submenu.icon.size');
    }

    .p-menubar-submenu .p-menubar-submenu-icon:dir(rtl) {
        margin-left: 0;
        margin-right: auto;
    }

    .p-menubar-item.p-focus > .p-menubar-item-content {
        color: dt('menubar.item.focus.color');
        background: dt('menubar.item.focus.background');
    }

    .p-menubar-item.p-focus > .p-menubar-item-content .p-menubar-item-icon {
        color: dt('menubar.item.icon.focus.color');
    }

    .p-menubar-item.p-focus > .p-menubar-item-content .p-menubar-submenu-icon {
        color: dt('menubar.submenu.icon.focus.color');
    }

    .p-menubar-item:not(.p-disabled) > .p-menubar-item-content:hover {
        color: dt('menubar.item.focus.color');
        background: dt('menubar.item.focus.background');
    }

    .p-menubar-item:not(.p-disabled) > .p-menubar-item-content:hover .p-menubar-item-icon {
        color: dt('menubar.item.icon.focus.color');
    }

    .p-menubar-item:not(.p-disabled) > .p-menubar-item-content:hover .p-menubar-submenu-icon {
        color: dt('menubar.submenu.icon.focus.color');
    }

    .p-menubar-item-active > .p-menubar-item-content {
        color: dt('menubar.item.active.color');
        background: dt('menubar.item.active.background');
    }

    .p-menubar-item-active > .p-menubar-item-content .p-menubar-item-icon {
        color: dt('menubar.item.icon.active.color');
    }

    .p-menubar-item-active > .p-menubar-item-content .p-menubar-submenu-icon {
        color: dt('menubar.submenu.icon.active.color');
    }

    .p-menubar-submenu {
        display: none;
        position: absolute;
        min-width: 12.5rem;
        z-index: 1;
        background: dt('menubar.submenu.background');
        border: 1px solid dt('menubar.submenu.border.color');
        border-radius: dt('menubar.submenu.border.radius');
        box-shadow: dt('menubar.submenu.shadow');
        color: dt('menubar.submenu.color');
        flex-direction: column;
        padding: dt('menubar.submenu.padding');
        gap: dt('menubar.submenu.gap');
    }

    .p-menubar-submenu .p-menubar-separator {
        border-block-start: 1px solid dt('menubar.separator.border.color');
    }

    .p-menubar-submenu .p-menubar-item {
        position: relative;
    }

    .p-menubar-submenu > .p-menubar-item-active > .p-menubar-submenu {
        display: block;
        left: 100%;
        top: 0;
    }

    .p-menubar-end {
        margin-left: auto;
        align-self: center;
    }

    .p-menubar-end:dir(rtl) {
        margin-left: 0;
        margin-right: auto;
    }

    .p-menubar-button {
        display: none;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        width: dt('menubar.mobile.button.size');
        height: dt('menubar.mobile.button.size');
        position: relative;
        color: dt('menubar.mobile.button.color');
        border: 0 none;
        background: transparent;
        border-radius: dt('menubar.mobile.button.border.radius');
        transition:
            background dt('menubar.transition.duration'),
            color dt('menubar.transition.duration'),
            outline-color dt('menubar.transition.duration');
        outline-color: transparent;
    }

    .p-menubar-button:hover {
        color: dt('menubar.mobile.button.hover.color');
        background: dt('menubar.mobile.button.hover.background');
    }

    .p-menubar-button:focus-visible {
        box-shadow: dt('menubar.mobile.button.focus.ring.shadow');
        outline: dt('menubar.mobile.button.focus.ring.width') dt('menubar.mobile.button.focus.ring.style') dt('menubar.mobile.button.focus.ring.color');
        outline-offset: dt('menubar.mobile.button.focus.ring.offset');
    }

    .p-menubar-mobile {
        position: relative;
    }

    .p-menubar-mobile .p-menubar-button {
        display: flex;
    }

    .p-menubar-mobile .p-menubar-root-list {
        position: absolute;
        display: none;
        width: 100%;
        flex-direction: column;
        top: 100%;
        left: 0;
        z-index: 1;
        padding: dt('menubar.submenu.padding');
        background: dt('menubar.submenu.background');
        border: 1px solid dt('menubar.submenu.border.color');
        box-shadow: dt('menubar.submenu.shadow');
        border-radius: dt('menubar.submenu.border.radius');
        gap: dt('menubar.submenu.gap');
    }

    .p-menubar-mobile .p-menubar-root-list:dir(rtl) {
        left: auto;
        right: 0;
    }

    .p-menubar-mobile .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content > .p-menubar-item-link {
        padding: dt('menubar.item.padding');
    }

    .p-menubar-mobile-active .p-menubar-root-list {
        display: flex;
    }

    .p-menubar-mobile .p-menubar-root-list .p-menubar-item {
        width: 100%;
        position: static;
    }

    .p-menubar-mobile .p-menubar-root-list .p-menubar-separator {
        border-block-start: 1px solid dt('menubar.separator.border.color');
    }

    .p-menubar-mobile .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content .p-menubar-submenu-icon {
        margin-left: auto;
        transition: transform 0.2s;
    }

    .p-menubar-mobile .p-menubar-root-list > .p-menubar-item > .p-menubar-item-content .p-menubar-submenu-icon:dir(rtl),
    .p-menubar-mobile .p-menubar-submenu-icon:dir(rtl) {
        margin-left: 0;
        margin-right: auto;
    }

    .p-menubar-mobile .p-menubar-root-list > .p-menubar-item-active > .p-menubar-item-content .p-menubar-submenu-icon {
        transform: rotate(-180deg);
    }

    .p-menubar-mobile .p-menubar-submenu .p-menubar-submenu-icon {
        transition: transform 0.2s;
        transform: rotate(90deg);
    }

    .p-menubar-mobile .p-menubar-item-active > .p-menubar-item-content .p-menubar-submenu-icon {
        transform: rotate(-90deg);
    }

    .p-menubar-mobile .p-menubar-submenu {
        width: 100%;
        position: static;
        box-shadow: none;
        border: 0 none;
        padding-inline-start: dt('menubar.submenu.mobile.indent');
        padding-inline-end: 0;
    }
`, XI = {
  submenu: function(e) {
    var n = e.instance, o = e.processedItem;
    return {
      display: n.isItemActive(o) ? "flex" : "none"
    };
  }
}, ZI = {
  root: function(e) {
    var n = e.instance;
    return ["p-menubar p-component", {
      "p-menubar-mobile": n.queryMatches,
      "p-menubar-mobile-active": n.mobileActive
    }];
  },
  start: "p-menubar-start",
  button: "p-menubar-button",
  rootList: "p-menubar-root-list",
  item: function(e) {
    var n = e.instance, o = e.processedItem;
    return ["p-menubar-item", {
      "p-menubar-item-active": n.isItemActive(o),
      "p-focus": n.isItemFocused(o),
      "p-disabled": n.isItemDisabled(o)
    }];
  },
  itemContent: "p-menubar-item-content",
  itemLink: "p-menubar-item-link",
  itemIcon: "p-menubar-item-icon",
  itemLabel: "p-menubar-item-label",
  submenuIcon: "p-menubar-submenu-icon",
  submenu: "p-menubar-submenu",
  separator: "p-menubar-separator",
  end: "p-menubar-end"
}, QI = te.extend({
  name: "menubar",
  style: YI,
  classes: ZI,
  inlineStyles: XI
}), Sc = {
  name: "AngleDownIcon",
  extends: Ie
};
function eO(t) {
  return rO(t) || oO(t) || nO(t) || tO();
}
function tO() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function nO(t, e) {
  if (t) {
    if (typeof t == "string") return id(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? id(t, e) : void 0;
  }
}
function oO(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function rO(t) {
  if (Array.isArray(t)) return id(t);
}
function id(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function iO(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), eO(e[0] || (e[0] = [v("path", {
    d: "M3.58659 4.5007C3.68513 4.50023 3.78277 4.51945 3.87379 4.55723C3.9648 4.59501 4.04735 4.65058 4.11659 4.7207L7.11659 7.7207L10.1166 4.7207C10.2619 4.65055 10.4259 4.62911 10.5843 4.65956C10.7427 4.69002 10.8871 4.77074 10.996 4.88976C11.1049 5.00877 11.1726 5.15973 11.1889 5.32022C11.2052 5.48072 11.1693 5.6422 11.0866 5.7807L7.58659 9.2807C7.44597 9.42115 7.25534 9.50004 7.05659 9.50004C6.85784 9.50004 6.66722 9.42115 6.52659 9.2807L3.02659 5.7807C2.88614 5.64007 2.80725 5.44945 2.80725 5.2507C2.80725 5.05195 2.88614 4.86132 3.02659 4.7207C3.09932 4.64685 3.18675 4.58911 3.28322 4.55121C3.37969 4.51331 3.48305 4.4961 3.58659 4.5007Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Sc.render = iO;
var Ic = {
  name: "AngleRightIcon",
  extends: Ie
};
function aO(t) {
  return cO(t) || dO(t) || sO(t) || lO();
}
function lO() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function sO(t, e) {
  if (t) {
    if (typeof t == "string") return ad(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ad(t, e) : void 0;
  }
}
function dO(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function cO(t) {
  if (Array.isArray(t)) return ad(t);
}
function ad(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function uO(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), aO(e[0] || (e[0] = [v("path", {
    d: "M5.25 11.1728C5.14929 11.1694 5.05033 11.1455 4.9592 11.1025C4.86806 11.0595 4.78666 10.9984 4.72 10.9228C4.57955 10.7822 4.50066 10.5916 4.50066 10.3928C4.50066 10.1941 4.57955 10.0035 4.72 9.86283L7.72 6.86283L4.72 3.86283C4.66067 3.71882 4.64765 3.55991 4.68275 3.40816C4.71785 3.25642 4.79932 3.11936 4.91585 3.01602C5.03238 2.91268 5.17819 2.84819 5.33305 2.83149C5.4879 2.81479 5.64411 2.84671 5.78 2.92283L9.28 6.42283C9.42045 6.56346 9.49934 6.75408 9.49934 6.95283C9.49934 7.15158 9.42045 7.34221 9.28 7.48283L5.78 10.9228C5.71333 10.9984 5.63193 11.0595 5.5408 11.1025C5.44966 11.1455 5.35071 11.1694 5.25 11.1728Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Ic.render = uO;
var pO = {
  name: "BaseMenubar",
  extends: ne,
  props: {
    model: {
      type: Array,
      default: null
    },
    buttonProps: {
      type: null,
      default: null
    },
    breakpoint: {
      type: String,
      default: "960px"
    },
    ariaLabelledby: {
      type: String,
      default: null
    },
    ariaLabel: {
      type: String,
      default: null
    }
  },
  style: QI,
  provide: function() {
    return {
      $pcMenubar: this,
      $parentInstance: this
    };
  }
}, Dm = {
  name: "MenubarSub",
  hostName: "Menubar",
  extends: ne,
  emits: ["item-mouseenter", "item-click", "item-mousemove"],
  props: {
    items: {
      type: Array,
      default: null
    },
    root: {
      type: Boolean,
      default: !1
    },
    popup: {
      type: Boolean,
      default: !1
    },
    mobileActive: {
      type: Boolean,
      default: !1
    },
    templates: {
      type: Object,
      default: null
    },
    level: {
      type: Number,
      default: 0
    },
    menuId: {
      type: String,
      default: null
    },
    focusedItemId: {
      type: String,
      default: null
    },
    activeItemPath: {
      type: Object,
      default: null
    }
  },
  list: null,
  methods: {
    getItemId: function(e) {
      return "".concat(this.menuId, "_").concat(e.key);
    },
    getItemKey: function(e) {
      return this.getItemId(e);
    },
    getItemProp: function(e, n, o) {
      return e && e.item ? yt(e.item[n], o) : void 0;
    },
    getItemLabel: function(e) {
      return this.getItemProp(e, "label");
    },
    getItemLabelId: function(e) {
      return "".concat(this.menuId, "_").concat(e.key, "_label");
    },
    getPTOptions: function(e, n, o) {
      return this.ptm(o, {
        context: {
          item: e.item,
          index: n,
          active: this.isItemActive(e),
          focused: this.isItemFocused(e),
          disabled: this.isItemDisabled(e),
          level: this.level
        }
      });
    },
    isItemActive: function(e) {
      return this.activeItemPath.some(function(n) {
        return n.key === e.key;
      });
    },
    isItemVisible: function(e) {
      return this.getItemProp(e, "visible") !== !1;
    },
    isItemDisabled: function(e) {
      return this.getItemProp(e, "disabled");
    },
    isItemFocused: function(e) {
      return this.focusedItemId === this.getItemId(e);
    },
    isItemGroup: function(e) {
      return ae(e.items);
    },
    onItemClick: function(e, n) {
      this.getItemProp(n, "command", {
        originalEvent: e,
        item: n.item
      }), this.$emit("item-click", {
        originalEvent: e,
        processedItem: n,
        isFocus: !0
      });
    },
    onItemMouseEnter: function(e, n) {
      this.$emit("item-mouseenter", {
        originalEvent: e,
        processedItem: n
      });
    },
    onItemMouseMove: function(e, n) {
      this.$emit("item-mousemove", {
        originalEvent: e,
        processedItem: n
      });
    },
    getAriaPosInset: function(e) {
      return e - this.calculateAriaSetSize.slice(0, e).length + 1;
    },
    getMenuItemProps: function(e, n) {
      return {
        action: k({
          class: this.cx("itemLink"),
          tabindex: -1
        }, this.getPTOptions(e, n, "itemLink")),
        icon: k({
          class: [this.cx("itemIcon"), this.getItemProp(e, "icon")]
        }, this.getPTOptions(e, n, "itemIcon")),
        label: k({
          class: this.cx("itemLabel")
        }, this.getPTOptions(e, n, "itemLabel")),
        submenuicon: k({
          class: this.cx("submenuIcon")
        }, this.getPTOptions(e, n, "submenuIcon"))
      };
    }
  },
  computed: {
    calculateAriaSetSize: function() {
      var e = this;
      return this.items.filter(function(n) {
        return e.isItemVisible(n) && e.getItemProp(n, "separator");
      });
    },
    getAriaSetSize: function() {
      var e = this;
      return this.items.filter(function(n) {
        return e.isItemVisible(n) && !e.getItemProp(n, "separator");
      }).length;
    }
  },
  components: {
    AngleRightIcon: Ic,
    AngleDownIcon: Sc
  },
  directives: {
    ripple: mt
  }
}, fO = ["id", "aria-label", "aria-disabled", "aria-expanded", "aria-haspopup", "aria-setsize", "aria-posinset", "data-p-active", "data-p-focused", "data-p-disabled"], hO = ["onClick", "onMouseenter", "onMousemove"], mO = ["href", "target"], gO = ["id"], bO = ["id"];
function vO(t, e, n, o, i, r) {
  var a = $("MenubarSub", !0), l = tt("ripple");
  return m(), y("ul", k({
    class: n.level === 0 ? t.cx("rootList") : t.cx("submenu")
  }, n.level === 0 ? t.ptm("rootList") : t.ptm("submenu")), [(m(!0), y(_, null, fe(n.items, function(s, d) {
    return m(), y(_, {
      key: r.getItemKey(s)
    }, [r.isItemVisible(s) && !r.getItemProp(s, "separator") ? (m(), y("li", k({
      key: 0,
      id: r.getItemId(s),
      style: r.getItemProp(s, "style"),
      class: [t.cx("item", {
        processedItem: s
      }), r.getItemProp(s, "class")],
      role: "menuitem",
      "aria-label": r.getItemLabel(s),
      "aria-disabled": r.isItemDisabled(s) || void 0,
      "aria-expanded": r.isItemGroup(s) ? r.isItemActive(s) : void 0,
      "aria-haspopup": r.isItemGroup(s) && !r.getItemProp(s, "to") ? "menu" : void 0,
      "aria-setsize": r.getAriaSetSize,
      "aria-posinset": r.getAriaPosInset(d)
    }, {
      ref_for: !0
    }, r.getPTOptions(s, d, "item"), {
      "data-p-active": r.isItemActive(s),
      "data-p-focused": r.isItemFocused(s),
      "data-p-disabled": r.isItemDisabled(s)
    }), [v("div", k({
      class: t.cx("itemContent"),
      onClick: function(u) {
        return r.onItemClick(u, s);
      },
      onMouseenter: function(u) {
        return r.onItemMouseEnter(u, s);
      },
      onMousemove: function(u) {
        return r.onItemMouseMove(u, s);
      }
    }, {
      ref_for: !0
    }, r.getPTOptions(s, d, "itemContent")), [n.templates.item ? (m(), O(q(n.templates.item), {
      key: 1,
      item: s.item,
      root: n.root,
      hasSubmenu: r.getItemProp(s, "items"),
      label: r.getItemLabel(s),
      props: r.getMenuItemProps(s, d)
    }, null, 8, ["item", "root", "hasSubmenu", "label", "props"])) : We((m(), y("a", k({
      key: 0,
      href: r.getItemProp(s, "url"),
      class: t.cx("itemLink"),
      target: r.getItemProp(s, "target"),
      tabindex: "-1"
    }, {
      ref_for: !0
    }, r.getPTOptions(s, d, "itemLink")), [n.templates.itemicon ? (m(), O(q(n.templates.itemicon), {
      key: 0,
      item: s.item,
      class: Y(t.cx("itemIcon"))
    }, null, 8, ["item", "class"])) : r.getItemProp(s, "icon") ? (m(), y("span", k({
      key: 1,
      class: [t.cx("itemIcon"), r.getItemProp(s, "icon")]
    }, {
      ref_for: !0
    }, r.getPTOptions(s, d, "itemIcon")), null, 16)) : M("", !0), v("span", k({
      id: r.getItemLabelId(s),
      class: t.cx("itemLabel")
    }, {
      ref_for: !0
    }, r.getPTOptions(s, d, "itemLabel")), re(r.getItemLabel(s)), 17, gO), r.getItemProp(s, "items") ? (m(), y(_, {
      key: 2
    }, [n.templates.submenuicon ? (m(), O(q(n.templates.submenuicon), {
      key: 0,
      root: n.root,
      active: r.isItemActive(s),
      class: Y(t.cx("submenuIcon"))
    }, null, 8, ["root", "active", "class"])) : (m(), O(q(n.root ? "AngleDownIcon" : "AngleRightIcon"), k({
      key: 1,
      class: t.cx("submenuIcon")
    }, {
      ref_for: !0
    }, r.getPTOptions(s, d, "submenuIcon")), null, 16, ["class"]))], 64)) : M("", !0)], 16, mO)), [[l]])], 16, hO), r.isItemVisible(s) && r.isItemGroup(s) ? (m(), O(a, {
      key: 0,
      id: r.getItemId(s) + "_list",
      menuId: n.menuId,
      role: "menu",
      style: dc(t.sx("submenu", !0, {
        processedItem: s
      })),
      focusedItemId: n.focusedItemId,
      items: s.items,
      mobileActive: n.mobileActive,
      activeItemPath: n.activeItemPath,
      templates: n.templates,
      level: n.level + 1,
      "aria-labelledby": r.getItemLabelId(s),
      pt: t.pt,
      unstyled: t.unstyled,
      onItemClick: e[0] || (e[0] = function(c) {
        return t.$emit("item-click", c);
      }),
      onItemMouseenter: e[1] || (e[1] = function(c) {
        return t.$emit("item-mouseenter", c);
      }),
      onItemMousemove: e[2] || (e[2] = function(c) {
        return t.$emit("item-mousemove", c);
      })
    }, null, 8, ["id", "menuId", "style", "focusedItemId", "items", "mobileActive", "activeItemPath", "templates", "level", "aria-labelledby", "pt", "unstyled"])) : M("", !0)], 16, fO)) : M("", !0), r.isItemVisible(s) && r.getItemProp(s, "separator") ? (m(), y("li", k({
      key: 1,
      id: r.getItemId(s),
      class: [t.cx("separator"), r.getItemProp(s, "class")],
      style: r.getItemProp(s, "style"),
      role: "separator"
    }, {
      ref_for: !0
    }, t.ptm("separator")), null, 16, bO)) : M("", !0)], 64);
  }), 128))], 16);
}
Dm.render = vO;
var Lm = {
  name: "Menubar",
  extends: pO,
  inheritAttrs: !1,
  emits: ["focus", "blur"],
  matchMediaListener: null,
  data: function() {
    return {
      mobileActive: !1,
      focused: !1,
      focusedItemInfo: {
        index: -1,
        level: 0,
        parentKey: ""
      },
      activeItemPath: [],
      dirty: !1,
      query: null,
      queryMatches: !1
    };
  },
  watch: {
    activeItemPath: function(e) {
      ae(e) ? (this.bindOutsideClickListener(), this.bindResizeListener()) : (this.unbindOutsideClickListener(), this.unbindResizeListener());
    }
  },
  outsideClickListener: null,
  container: null,
  menubar: null,
  mounted: function() {
    this.bindMatchMediaListener();
  },
  beforeUnmount: function() {
    this.mobileActive = !1, this.unbindOutsideClickListener(), this.unbindResizeListener(), this.unbindMatchMediaListener(), this.container && Xe.clear(this.container), this.container = null;
  },
  methods: {
    getItemProp: function(e, n) {
      return e ? yt(e[n]) : void 0;
    },
    getItemLabel: function(e) {
      return this.getItemProp(e, "label");
    },
    isItemDisabled: function(e) {
      return this.getItemProp(e, "disabled");
    },
    isItemVisible: function(e) {
      return this.getItemProp(e, "visible") !== !1;
    },
    isItemGroup: function(e) {
      return ae(this.getItemProp(e, "items"));
    },
    isItemSeparator: function(e) {
      return this.getItemProp(e, "separator");
    },
    getProccessedItemLabel: function(e) {
      return e ? this.getItemLabel(e.item) : void 0;
    },
    isProccessedItemGroup: function(e) {
      return e && ae(e.items);
    },
    toggle: function(e) {
      var n = this;
      this.mobileActive ? (this.mobileActive = !1, Xe.clear(this.menubar), this.hide()) : (this.mobileActive = !0, Xe.set("menu", this.menubar, this.$primevue.config.zIndex.menu), setTimeout(function() {
        n.show();
      }, 1)), this.bindOutsideClickListener(), e.preventDefault();
    },
    show: function() {
      Fe(this.menubar);
    },
    hide: function(e, n) {
      var o = this;
      this.mobileActive && (this.mobileActive = !1, setTimeout(function() {
        Fe(o.$refs.menubutton);
      }, 0)), this.activeItemPath = [], this.focusedItemInfo = {
        index: -1,
        level: 0,
        parentKey: ""
      }, n && Fe(this.menubar), this.dirty = !1;
    },
    onFocus: function(e) {
      this.focused = !0, this.focusedItemInfo = this.focusedItemInfo.index !== -1 ? this.focusedItemInfo : {
        index: this.findFirstFocusedItemIndex(),
        level: 0,
        parentKey: ""
      }, this.$emit("focus", e);
    },
    onBlur: function(e) {
      this.focused = !1, this.focusedItemInfo = {
        index: -1,
        level: 0,
        parentKey: ""
      }, this.searchValue = "", this.dirty = !1, this.$emit("blur", e);
    },
    onKeyDown: function(e) {
      var n = e.metaKey || e.ctrlKey;
      switch (e.code) {
        case "ArrowDown":
          this.onArrowDownKey(e);
          break;
        case "ArrowUp":
          this.onArrowUpKey(e);
          break;
        case "ArrowLeft":
          this.onArrowLeftKey(e);
          break;
        case "ArrowRight":
          this.onArrowRightKey(e);
          break;
        case "Home":
          this.onHomeKey(e);
          break;
        case "End":
          this.onEndKey(e);
          break;
        case "Space":
          this.onSpaceKey(e);
          break;
        case "Enter":
        case "NumpadEnter":
          this.onEnterKey(e);
          break;
        case "Escape":
          this.onEscapeKey(e);
          break;
        case "Tab":
          this.onTabKey(e);
          break;
        case "PageDown":
        case "PageUp":
        case "Backspace":
        case "ShiftLeft":
        case "ShiftRight":
          break;
        default:
          !n && em(e.key) && this.searchItems(e, e.key);
          break;
      }
    },
    onItemChange: function(e, n) {
      var o = e.processedItem, i = e.isFocus;
      if (!lt(o)) {
        var r = o.index, a = o.key, l = o.level, s = o.parentKey, d = o.items, c = ae(d), u = this.activeItemPath.filter(function(f) {
          return f.parentKey !== s && f.parentKey !== a;
        });
        c && u.push(o), this.focusedItemInfo = {
          index: r,
          level: l,
          parentKey: s
        }, c && (this.dirty = !0), i && Fe(this.menubar), !(n === "hover" && this.queryMatches) && (this.activeItemPath = u);
      }
    },
    onItemClick: function(e) {
      var n = e.originalEvent, o = e.processedItem, i = this.isProccessedItemGroup(o), r = lt(o.parent), a = this.isSelected(o);
      if (a) {
        var l = o.index, s = o.key, d = o.level, c = o.parentKey;
        this.activeItemPath = this.activeItemPath.filter(function(f) {
          return s !== f.key && s.startsWith(f.key);
        }), this.focusedItemInfo = {
          index: l,
          level: d,
          parentKey: c
        }, this.dirty = !r, Fe(this.menubar);
      } else if (i)
        this.onItemChange(e);
      else {
        var u = r ? o : this.activeItemPath.find(function(f) {
          return f.parentKey === "";
        });
        this.hide(n), this.changeFocusedItemIndex(n, u ? u.index : -1), this.mobileActive = !1, Fe(this.menubar);
      }
    },
    onItemMouseEnter: function(e) {
      this.dirty && this.onItemChange(e, "hover");
    },
    onItemMouseMove: function(e) {
      this.focused && this.changeFocusedItemIndex(e, e.processedItem.index);
    },
    menuButtonClick: function(e) {
      this.toggle(e);
    },
    menuButtonKeydown: function(e) {
      (e.code === "Enter" || e.code === "NumpadEnter" || e.code === "Space") && this.menuButtonClick(e);
    },
    onArrowDownKey: function(e) {
      var n = this.visibleItems[this.focusedItemInfo.index], o = n ? lt(n.parent) : null;
      if (o) {
        var i = this.isProccessedItemGroup(n);
        i && (this.onItemChange({
          originalEvent: e,
          processedItem: n
        }), this.focusedItemInfo = {
          index: -1,
          parentKey: n.key
        }, this.onArrowRightKey(e));
      } else {
        var r = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();
        this.changeFocusedItemIndex(e, r);
      }
      e.preventDefault();
    },
    onArrowUpKey: function(e) {
      var n = this, o = this.visibleItems[this.focusedItemInfo.index], i = lt(o.parent);
      if (i) {
        var r = this.isProccessedItemGroup(o);
        if (r) {
          this.onItemChange({
            originalEvent: e,
            processedItem: o
          }), this.focusedItemInfo = {
            index: -1,
            parentKey: o.key
          };
          var a = this.findLastItemIndex();
          this.changeFocusedItemIndex(e, a);
        }
      } else {
        var l = this.activeItemPath.find(function(d) {
          return d.key === o.parentKey;
        });
        if (this.focusedItemInfo.index === 0)
          this.focusedItemInfo = {
            index: -1,
            parentKey: l ? l.parentKey : ""
          }, this.searchValue = "", this.onArrowLeftKey(e), this.activeItemPath = this.activeItemPath.filter(function(d) {
            return d.parentKey !== n.focusedItemInfo.parentKey;
          });
        else {
          var s = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();
          this.changeFocusedItemIndex(e, s);
        }
      }
      e.preventDefault();
    },
    onArrowLeftKey: function(e) {
      var n = this, o = this.visibleItems[this.focusedItemInfo.index], i = o ? this.activeItemPath.find(function(a) {
        return a.key === o.parentKey;
      }) : null;
      if (i)
        this.onItemChange({
          originalEvent: e,
          processedItem: i
        }), this.activeItemPath = this.activeItemPath.filter(function(a) {
          return a.parentKey !== n.focusedItemInfo.parentKey;
        }), e.preventDefault();
      else {
        var r = this.focusedItemInfo.index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo.index) : this.findLastFocusedItemIndex();
        this.changeFocusedItemIndex(e, r), e.preventDefault();
      }
    },
    onArrowRightKey: function(e) {
      var n = this.visibleItems[this.focusedItemInfo.index], o = n ? this.activeItemPath.find(function(a) {
        return a.key === n.parentKey;
      }) : null;
      if (o) {
        var i = this.isProccessedItemGroup(n);
        i && (this.onItemChange({
          originalEvent: e,
          processedItem: n
        }), this.focusedItemInfo = {
          index: -1,
          parentKey: n.key
        }, this.onArrowDownKey(e));
      } else {
        var r = this.focusedItemInfo.index !== -1 ? this.findNextItemIndex(this.focusedItemInfo.index) : this.findFirstFocusedItemIndex();
        this.changeFocusedItemIndex(e, r), e.preventDefault();
      }
    },
    onHomeKey: function(e) {
      this.changeFocusedItemIndex(e, this.findFirstItemIndex()), e.preventDefault();
    },
    onEndKey: function(e) {
      this.changeFocusedItemIndex(e, this.findLastItemIndex()), e.preventDefault();
    },
    onEnterKey: function(e) {
      if (this.focusedItemInfo.index !== -1) {
        var n = ft(this.menubar, 'li[id="'.concat("".concat(this.focusedItemId), '"]')), o = n && ft(n, 'a[data-pc-section="itemlink"]');
        o ? o.click() : n && n.click();
        var i = this.visibleItems[this.focusedItemInfo.index], r = this.isProccessedItemGroup(i);
        !r && (this.focusedItemInfo.index = this.findFirstFocusedItemIndex());
      }
      e.preventDefault();
    },
    onSpaceKey: function(e) {
      this.onEnterKey(e);
    },
    onEscapeKey: function(e) {
      if (this.focusedItemInfo.level !== 0) {
        var n = this.focusedItemInfo;
        this.hide(e, !1), this.focusedItemInfo = {
          index: Number(n.parentKey.split("_")[0]),
          level: 0,
          parentKey: ""
        };
      }
      e.preventDefault();
    },
    onTabKey: function(e) {
      if (this.focusedItemInfo.index !== -1) {
        var n = this.visibleItems[this.focusedItemInfo.index], o = this.isProccessedItemGroup(n);
        !o && this.onItemChange({
          originalEvent: e,
          processedItem: n
        });
      }
      this.hide();
    },
    bindOutsideClickListener: function() {
      var e = this;
      this.outsideClickListener || (this.outsideClickListener = function(n) {
        var o = e.container && !e.container.contains(n.target), i = !(e.target && (e.target === n.target || e.target.contains(n.target)));
        o && i && e.hide();
      }, document.addEventListener("click", this.outsideClickListener, !0));
    },
    unbindOutsideClickListener: function() {
      this.outsideClickListener && (document.removeEventListener("click", this.outsideClickListener, !0), this.outsideClickListener = null);
    },
    bindResizeListener: function() {
      var e = this;
      this.resizeListener || (this.resizeListener = function(n) {
        fc() || e.hide(n, !0), e.mobileActive = !1;
      }, window.addEventListener("resize", this.resizeListener));
    },
    unbindResizeListener: function() {
      this.resizeListener && (window.removeEventListener("resize", this.resizeListener), this.resizeListener = null);
    },
    bindMatchMediaListener: function() {
      var e = this;
      if (!this.matchMediaListener) {
        var n = matchMedia("(max-width: ".concat(this.breakpoint, ")"));
        this.query = n, this.queryMatches = n.matches, this.matchMediaListener = function() {
          e.queryMatches = n.matches, e.mobileActive = !1;
        }, this.query.addEventListener("change", this.matchMediaListener);
      }
    },
    unbindMatchMediaListener: function() {
      this.matchMediaListener && (this.query.removeEventListener("change", this.matchMediaListener), this.matchMediaListener = null);
    },
    isItemMatched: function(e) {
      var n;
      return this.isValidItem(e) && ((n = this.getProccessedItemLabel(e)) === null || n === void 0 ? void 0 : n.toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase()));
    },
    isValidItem: function(e) {
      return !!e && !this.isItemDisabled(e.item) && !this.isItemSeparator(e.item) && this.isItemVisible(e.item);
    },
    isValidSelectedItem: function(e) {
      return this.isValidItem(e) && this.isSelected(e);
    },
    isSelected: function(e) {
      return this.activeItemPath.some(function(n) {
        return n.key === e.key;
      });
    },
    findFirstItemIndex: function() {
      var e = this;
      return this.visibleItems.findIndex(function(n) {
        return e.isValidItem(n);
      });
    },
    findLastItemIndex: function() {
      var e = this;
      return Za(this.visibleItems, function(n) {
        return e.isValidItem(n);
      });
    },
    findNextItemIndex: function(e) {
      var n = this, o = e < this.visibleItems.length - 1 ? this.visibleItems.slice(e + 1).findIndex(function(i) {
        return n.isValidItem(i);
      }) : -1;
      return o > -1 ? o + e + 1 : e;
    },
    findPrevItemIndex: function(e) {
      var n = this, o = e > 0 ? Za(this.visibleItems.slice(0, e), function(i) {
        return n.isValidItem(i);
      }) : -1;
      return o > -1 ? o : e;
    },
    findSelectedItemIndex: function() {
      var e = this;
      return this.visibleItems.findIndex(function(n) {
        return e.isValidSelectedItem(n);
      });
    },
    findFirstFocusedItemIndex: function() {
      var e = this.findSelectedItemIndex();
      return e < 0 ? this.findFirstItemIndex() : e;
    },
    findLastFocusedItemIndex: function() {
      var e = this.findSelectedItemIndex();
      return e < 0 ? this.findLastItemIndex() : e;
    },
    searchItems: function(e, n) {
      var o = this;
      this.searchValue = (this.searchValue || "") + n;
      var i = -1, r = !1;
      return this.focusedItemInfo.index !== -1 ? (i = this.visibleItems.slice(this.focusedItemInfo.index).findIndex(function(a) {
        return o.isItemMatched(a);
      }), i = i === -1 ? this.visibleItems.slice(0, this.focusedItemInfo.index).findIndex(function(a) {
        return o.isItemMatched(a);
      }) : i + this.focusedItemInfo.index) : i = this.visibleItems.findIndex(function(a) {
        return o.isItemMatched(a);
      }), i !== -1 && (r = !0), i === -1 && this.focusedItemInfo.index === -1 && (i = this.findFirstFocusedItemIndex()), i !== -1 && this.changeFocusedItemIndex(e, i), this.searchTimeout && clearTimeout(this.searchTimeout), this.searchTimeout = setTimeout(function() {
        o.searchValue = "", o.searchTimeout = null;
      }, 500), r;
    },
    changeFocusedItemIndex: function(e, n) {
      this.focusedItemInfo.index !== n && (this.focusedItemInfo.index = n, this.scrollInView());
    },
    scrollInView: function() {
      var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : -1, n = e !== -1 ? "".concat(this.$id, "_").concat(e) : this.focusedItemId, o = ft(this.menubar, 'li[id="'.concat(n, '"]'));
      o && o.scrollIntoView && o.scrollIntoView({
        block: "nearest",
        inline: "start"
      });
    },
    createProcessedItems: function(e) {
      var n = this, o = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, i = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "", a = [];
      return e && e.forEach(function(l, s) {
        var d = (r !== "" ? r + "_" : "") + s, c = {
          item: l,
          index: s,
          level: o,
          key: d,
          parent: i,
          parentKey: r
        };
        c.items = n.createProcessedItems(l.items, o + 1, c, d), a.push(c);
      }), a;
    },
    containerRef: function(e) {
      this.container = e;
    },
    menubarRef: function(e) {
      this.menubar = e ? e.$el : void 0;
    }
  },
  computed: {
    processedItems: function() {
      return this.createProcessedItems(this.model || []);
    },
    visibleItems: function() {
      var e = this, n = this.activeItemPath.find(function(o) {
        return o.key === e.focusedItemInfo.parentKey;
      });
      return n ? n.items : this.processedItems;
    },
    focusedItemId: function() {
      return this.focusedItemInfo.index !== -1 ? "".concat(this.$id).concat(ae(this.focusedItemInfo.parentKey) ? "_" + this.focusedItemInfo.parentKey : "", "_").concat(this.focusedItemInfo.index) : null;
    }
  },
  components: {
    MenubarSub: Dm,
    BarsIcon: xc
  }
};
function mi(t) {
  "@babel/helpers - typeof";
  return mi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, mi(t);
}
function Op(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Pp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Op(Object(n), !0).forEach(function(o) {
      yO(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Op(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function yO(t, e, n) {
  return (e = kO(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function kO(t) {
  var e = wO(t, "string");
  return mi(e) == "symbol" ? e : e + "";
}
function wO(t, e) {
  if (mi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (mi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var CO = ["aria-haspopup", "aria-expanded", "aria-controls", "aria-label"];
function xO(t, e, n, o, i, r) {
  var a = $("BarsIcon"), l = $("MenubarSub");
  return m(), y("div", k({
    ref: r.containerRef,
    class: t.cx("root")
  }, t.ptmi("root")), [t.$slots.start ? (m(), y("div", k({
    key: 0,
    class: t.cx("start")
  }, t.ptm("start")), [L(t.$slots, "start")], 16)) : M("", !0), L(t.$slots, t.$slots.button ? "button" : "menubutton", {
    id: t.$id,
    class: Y(t.cx("button")),
    toggleCallback: function(d) {
      return r.menuButtonClick(d);
    }
  }, function() {
    var s;
    return [t.model && t.model.length > 0 ? (m(), y("a", k({
      key: 0,
      ref: "menubutton",
      role: "button",
      tabindex: "0",
      class: t.cx("button"),
      "aria-haspopup": !!(t.model.length && t.model.length > 0),
      "aria-expanded": i.mobileActive,
      "aria-controls": t.$id,
      "aria-label": (s = t.$primevue.config.locale.aria) === null || s === void 0 ? void 0 : s.navigation,
      onClick: e[0] || (e[0] = function(d) {
        return r.menuButtonClick(d);
      }),
      onKeydown: e[1] || (e[1] = function(d) {
        return r.menuButtonKeydown(d);
      })
    }, Pp(Pp({}, t.buttonProps), t.ptm("button"))), [L(t.$slots, t.$slots.buttonicon ? "buttonicon" : "menubuttonicon", {}, function() {
      return [P(a, mr(rv(t.ptm("buttonicon"))), null, 16)];
    })], 16, CO)) : M("", !0)];
  }), P(l, {
    ref: r.menubarRef,
    id: t.$id + "_list",
    role: "menubar",
    items: r.processedItems,
    templates: t.$slots,
    root: !0,
    mobileActive: i.mobileActive,
    tabindex: "0",
    "aria-activedescendant": i.focused ? r.focusedItemId : void 0,
    menuId: t.$id,
    focusedItemId: i.focused ? r.focusedItemId : void 0,
    activeItemPath: i.activeItemPath,
    level: 0,
    "aria-labelledby": t.ariaLabelledby,
    "aria-label": t.ariaLabel,
    pt: t.pt,
    unstyled: t.unstyled,
    onFocus: r.onFocus,
    onBlur: r.onBlur,
    onKeydown: r.onKeyDown,
    onItemClick: r.onItemClick,
    onItemMouseenter: r.onItemMouseEnter,
    onItemMousemove: r.onItemMouseMove
  }, null, 8, ["id", "items", "templates", "mobileActive", "aria-activedescendant", "menuId", "focusedItemId", "activeItemPath", "aria-labelledby", "aria-label", "pt", "unstyled", "onFocus", "onBlur", "onKeydown", "onItemClick", "onItemMouseenter", "onItemMousemove"]), t.$slots.end ? (m(), y("div", k({
    key: 1,
    class: t.cx("end")
  }, t.ptm("end")), [L(t.$slots, "end")], 16)) : M("", !0)], 16);
}
Lm.render = xO;
var SO = `
    .p-avatar {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: dt('avatar.width');
        height: dt('avatar.height');
        font-size: dt('avatar.font.size');
        background: dt('avatar.background');
        color: dt('avatar.color');
        border-radius: dt('avatar.border.radius');
    }

    .p-avatar-image {
        background: transparent;
    }

    .p-avatar-circle {
        border-radius: 50%;
    }

    .p-avatar-circle img {
        border-radius: 50%;
    }

    .p-avatar-icon {
        font-size: dt('avatar.icon.size');
        width: dt('avatar.icon.size');
        height: dt('avatar.icon.size');
    }

    .p-avatar img {
        width: 100%;
        height: 100%;
    }

    .p-avatar-lg {
        width: dt('avatar.lg.width');
        height: dt('avatar.lg.width');
        font-size: dt('avatar.lg.font.size');
    }

    .p-avatar-lg .p-avatar-icon {
        font-size: dt('avatar.lg.icon.size');
        width: dt('avatar.lg.icon.size');
        height: dt('avatar.lg.icon.size');
    }

    .p-avatar-xl {
        width: dt('avatar.xl.width');
        height: dt('avatar.xl.width');
        font-size: dt('avatar.xl.font.size');
    }

    .p-avatar-xl .p-avatar-icon {
        font-size: dt('avatar.xl.icon.size');
        width: dt('avatar.xl.icon.size');
        height: dt('avatar.xl.icon.size');
    }

    .p-avatar-group {
        display: flex;
        align-items: center;
    }

    .p-avatar-group .p-avatar + .p-avatar {
        margin-inline-start: dt('avatar.group.offset');
    }

    .p-avatar-group .p-avatar {
        border: 2px solid dt('avatar.group.border.color');
    }

    .p-avatar-group .p-avatar-lg + .p-avatar-lg {
        margin-inline-start: dt('avatar.lg.group.offset');
    }

    .p-avatar-group .p-avatar-xl + .p-avatar-xl {
        margin-inline-start: dt('avatar.xl.group.offset');
    }
`, IO = {
  root: function(e) {
    var n = e.props;
    return ["p-avatar p-component", {
      "p-avatar-image": n.image != null,
      "p-avatar-circle": n.shape === "circle",
      "p-avatar-lg": n.size === "large",
      "p-avatar-xl": n.size === "xlarge"
    }];
  },
  label: "p-avatar-label",
  icon: "p-avatar-icon"
}, OO = te.extend({
  name: "avatar",
  style: SO,
  classes: IO
}), PO = {
  name: "BaseAvatar",
  extends: ne,
  props: {
    label: {
      type: String,
      default: null
    },
    icon: {
      type: String,
      default: null
    },
    image: {
      type: String,
      default: null
    },
    size: {
      type: String,
      default: "normal"
    },
    shape: {
      type: String,
      default: "square"
    },
    ariaLabelledby: {
      type: String,
      default: null
    },
    ariaLabel: {
      type: String,
      default: null
    }
  },
  style: OO,
  provide: function() {
    return {
      $pcAvatar: this,
      $parentInstance: this
    };
  }
};
function gi(t) {
  "@babel/helpers - typeof";
  return gi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, gi(t);
}
function $p(t, e, n) {
  return (e = $O(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function $O(t) {
  var e = TO(t, "string");
  return gi(e) == "symbol" ? e : e + "";
}
function TO(t, e) {
  if (gi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (gi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var zm = {
  name: "Avatar",
  extends: PO,
  inheritAttrs: !1,
  emits: ["error"],
  methods: {
    onError: function(e) {
      this.$emit("error", e);
    }
  },
  computed: {
    dataP: function() {
      return Te($p($p({}, this.shape, this.shape), this.size, this.size));
    }
  }
}, RO = ["aria-labelledby", "aria-label", "data-p"], BO = ["data-p"], EO = ["data-p"], MO = ["src", "alt", "data-p"];
function AO(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root"),
    "aria-labelledby": t.ariaLabelledby,
    "aria-label": t.ariaLabel
  }, t.ptmi("root"), {
    "data-p": r.dataP
  }), [L(t.$slots, "default", {}, function() {
    return [t.label ? (m(), y("span", k({
      key: 0,
      class: t.cx("label")
    }, t.ptm("label"), {
      "data-p": r.dataP
    }), re(t.label), 17, BO)) : t.$slots.icon ? (m(), O(q(t.$slots.icon), {
      key: 1,
      class: Y(t.cx("icon"))
    }, null, 8, ["class"])) : t.icon ? (m(), y("span", k({
      key: 2,
      class: [t.cx("icon"), t.icon]
    }, t.ptm("icon"), {
      "data-p": r.dataP
    }), null, 16, EO)) : t.image ? (m(), y("img", k({
      key: 3,
      src: t.image,
      alt: t.ariaLabel,
      onError: e[0] || (e[0] = function() {
        return r.onError && r.onError.apply(r, arguments);
      })
    }, t.ptm("image"), {
      "data-p": r.dataP
    }), null, 16, MO)) : M("", !0)];
  })], 16, RO);
}
zm.render = AO;
var DO = `
    .p-drawer {
        display: flex;
        flex-direction: column;
        transform: translate3d(0px, 0px, 0px);
        position: relative;
        transition: transform 0.3s;
        background: dt('drawer.background');
        color: dt('drawer.color');
        border: 1px solid dt('drawer.border.color');
        box-shadow: dt('drawer.shadow');
    }

    .p-drawer-content {
        overflow-y: auto;
        flex-grow: 1;
        padding: dt('drawer.content.padding');
    }

    .p-drawer-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-shrink: 0;
        padding: dt('drawer.header.padding');
    }

    .p-drawer-footer {
        padding: dt('drawer.footer.padding');
    }

    .p-drawer-title {
        font-weight: dt('drawer.title.font.weight');
        font-size: dt('drawer.title.font.size');
    }

    .p-drawer-full .p-drawer {
        transition: none;
        transform: none;
        width: 100vw !important;
        height: 100vh !important;
        max-height: 100%;
        top: 0px !important;
        left: 0px !important;
        border-width: 1px;
    }

    .p-drawer-left .p-drawer-enter-from,
    .p-drawer-left .p-drawer-leave-to {
        transform: translateX(-100%);
    }

    .p-drawer-right .p-drawer-enter-from,
    .p-drawer-right .p-drawer-leave-to {
        transform: translateX(100%);
    }

    .p-drawer-top .p-drawer-enter-from,
    .p-drawer-top .p-drawer-leave-to {
        transform: translateY(-100%);
    }

    .p-drawer-bottom .p-drawer-enter-from,
    .p-drawer-bottom .p-drawer-leave-to {
        transform: translateY(100%);
    }

    .p-drawer-full .p-drawer-enter-from,
    .p-drawer-full .p-drawer-leave-to {
        opacity: 0;
    }

    .p-drawer-full .p-drawer-enter-active,
    .p-drawer-full .p-drawer-leave-active {
        transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    .p-drawer-left .p-drawer {
        width: 20rem;
        height: 100%;
        border-inline-end-width: 1px;
    }

    .p-drawer-right .p-drawer {
        width: 20rem;
        height: 100%;
        border-inline-start-width: 1px;
    }

    .p-drawer-top .p-drawer {
        height: 10rem;
        width: 100%;
        border-block-end-width: 1px;
    }

    .p-drawer-bottom .p-drawer {
        height: 10rem;
        width: 100%;
        border-block-start-width: 1px;
    }

    .p-drawer-left .p-drawer-content,
    .p-drawer-right .p-drawer-content,
    .p-drawer-top .p-drawer-content,
    .p-drawer-bottom .p-drawer-content {
        width: 100%;
        height: 100%;
    }

    .p-drawer-open {
        display: flex;
    }

    .p-drawer-mask:dir(rtl) {
        flex-direction: row-reverse;
    }
`, LO = {
  mask: function(e) {
    var n = e.position, o = e.modal;
    return {
      position: "fixed",
      height: "100%",
      width: "100%",
      left: 0,
      top: 0,
      display: "flex",
      justifyContent: n === "left" ? "flex-start" : n === "right" ? "flex-end" : "center",
      alignItems: n === "top" ? "flex-start" : n === "bottom" ? "flex-end" : "center",
      pointerEvents: o ? "auto" : "none"
    };
  },
  root: {
    pointerEvents: "auto"
  }
}, zO = {
  mask: function(e) {
    var n = e.instance, o = e.props, i = ["left", "right", "top", "bottom"], r = i.find(function(a) {
      return a === o.position;
    });
    return ["p-drawer-mask", {
      "p-overlay-mask p-overlay-mask-enter": o.modal,
      "p-drawer-open": n.containerVisible,
      "p-drawer-full": n.fullScreen
    }, r ? "p-drawer-".concat(r) : ""];
  },
  root: function(e) {
    var n = e.instance;
    return ["p-drawer p-component", {
      "p-drawer-full": n.fullScreen
    }];
  },
  header: "p-drawer-header",
  title: "p-drawer-title",
  pcCloseButton: "p-drawer-close-button",
  content: "p-drawer-content",
  footer: "p-drawer-footer"
}, FO = te.extend({
  name: "drawer",
  style: DO,
  classes: zO,
  inlineStyles: LO
}), NO = {
  name: "BaseDrawer",
  extends: ne,
  props: {
    visible: {
      type: Boolean,
      default: !1
    },
    position: {
      type: String,
      default: "left"
    },
    header: {
      type: null,
      default: null
    },
    baseZIndex: {
      type: Number,
      default: 0
    },
    autoZIndex: {
      type: Boolean,
      default: !0
    },
    dismissable: {
      type: Boolean,
      default: !0
    },
    showCloseIcon: {
      type: Boolean,
      default: !0
    },
    closeButtonProps: {
      type: Object,
      default: function() {
        return {
          severity: "secondary",
          text: !0,
          rounded: !0
        };
      }
    },
    closeIcon: {
      type: String,
      default: void 0
    },
    modal: {
      type: Boolean,
      default: !0
    },
    blockScroll: {
      type: Boolean,
      default: !1
    }
  },
  style: FO,
  provide: function() {
    return {
      $pcDrawer: this,
      $parentInstance: this
    };
  }
};
function bi(t) {
  "@babel/helpers - typeof";
  return bi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, bi(t);
}
function rs(t, e, n) {
  return (e = jO(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function jO(t) {
  var e = VO(t, "string");
  return bi(e) == "symbol" ? e : e + "";
}
function VO(t, e) {
  if (bi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (bi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Fm = {
  name: "Drawer",
  extends: NO,
  inheritAttrs: !1,
  emits: ["update:visible", "show", "after-show", "hide", "after-hide", "before-hide"],
  data: function() {
    return {
      containerVisible: this.visible
    };
  },
  container: null,
  mask: null,
  content: null,
  headerContainer: null,
  footerContainer: null,
  closeButton: null,
  outsideClickListener: null,
  documentKeydownListener: null,
  watch: {
    dismissable: function(e) {
      e ? this.enableDocumentSettings() : this.disableDocumentSettings();
    }
  },
  updated: function() {
    this.visible && (this.containerVisible = this.visible);
  },
  beforeUnmount: function() {
    this.disableDocumentSettings(), this.mask && this.autoZIndex && Xe.clear(this.mask), this.container = null, this.mask = null;
  },
  methods: {
    hide: function() {
      this.$emit("update:visible", !1);
    },
    onEnter: function() {
      this.$emit("show"), this.focus(), this.bindDocumentKeyDownListener(), this.autoZIndex && Xe.set("modal", this.mask, this.baseZIndex || this.$primevue.config.zIndex.modal);
    },
    onAfterEnter: function() {
      this.enableDocumentSettings(), this.$emit("after-show");
    },
    onBeforeLeave: function() {
      this.modal && !this.isUnstyled && xn(this.mask, "p-overlay-mask-leave"), this.$emit("before-hide");
    },
    onLeave: function() {
      this.$emit("hide");
    },
    onAfterLeave: function() {
      this.autoZIndex && Xe.clear(this.mask), this.unbindDocumentKeyDownListener(), this.containerVisible = !1, this.disableDocumentSettings(), this.$emit("after-hide");
    },
    onMaskClick: function(e) {
      this.dismissable && this.modal && this.mask === e.target && this.hide();
    },
    focus: function() {
      var e = function(i) {
        return i && i.querySelector("[autofocus]");
      }, n = this.$slots.header && e(this.headerContainer);
      n || (n = this.$slots.default && e(this.container), n || (n = this.$slots.footer && e(this.footerContainer), n || (n = this.closeButton))), n && Fe(n);
    },
    enableDocumentSettings: function() {
      this.dismissable && !this.modal && this.bindOutsideClickListener(), this.blockScroll && nd();
    },
    disableDocumentSettings: function() {
      this.unbindOutsideClickListener(), this.blockScroll && od();
    },
    onKeydown: function(e) {
      e.code === "Escape" && this.hide();
    },
    containerRef: function(e) {
      this.container = e;
    },
    maskRef: function(e) {
      this.mask = e;
    },
    contentRef: function(e) {
      this.content = e;
    },
    headerContainerRef: function(e) {
      this.headerContainer = e;
    },
    footerContainerRef: function(e) {
      this.footerContainer = e;
    },
    closeButtonRef: function(e) {
      this.closeButton = e ? e.$el : void 0;
    },
    bindDocumentKeyDownListener: function() {
      this.documentKeydownListener || (this.documentKeydownListener = this.onKeydown, document.addEventListener("keydown", this.documentKeydownListener));
    },
    unbindDocumentKeyDownListener: function() {
      this.documentKeydownListener && (document.removeEventListener("keydown", this.documentKeydownListener), this.documentKeydownListener = null);
    },
    bindOutsideClickListener: function() {
      var e = this;
      this.outsideClickListener || (this.outsideClickListener = function(n) {
        e.isOutsideClicked(n) && e.hide();
      }, document.addEventListener("click", this.outsideClickListener, !0));
    },
    unbindOutsideClickListener: function() {
      this.outsideClickListener && (document.removeEventListener("click", this.outsideClickListener, !0), this.outsideClickListener = null);
    },
    isOutsideClicked: function(e) {
      return this.container && !this.container.contains(e.target);
    }
  },
  computed: {
    fullScreen: function() {
      return this.position === "full";
    },
    closeAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.close : void 0;
    },
    dataP: function() {
      return Te(rs(rs(rs({
        "full-screen": this.position === "full"
      }, this.position, this.position), "open", this.containerVisible), "modal", this.modal));
    }
  },
  directives: {
    focustrap: wc
  },
  components: {
    Button: Ao,
    Portal: vr,
    TimesIcon: br
  }
}, _O = ["data-p"], KO = ["aria-modal", "data-p"];
function HO(t, e, n, o, i, r) {
  var a = $("Button"), l = $("Portal"), s = tt("focustrap");
  return m(), O(l, null, {
    default: E(function() {
      return [i.containerVisible ? (m(), y("div", k({
        key: 0,
        ref: r.maskRef,
        onMousedown: e[0] || (e[0] = function() {
          return r.onMaskClick && r.onMaskClick.apply(r, arguments);
        }),
        class: t.cx("mask"),
        style: t.sx("mask", !0, {
          position: t.position,
          modal: t.modal
        }),
        "data-p": r.dataP
      }, t.ptm("mask")), [P(gl, k({
        name: "p-drawer",
        onEnter: r.onEnter,
        onAfterEnter: r.onAfterEnter,
        onBeforeLeave: r.onBeforeLeave,
        onLeave: r.onLeave,
        onAfterLeave: r.onAfterLeave,
        appear: ""
      }, t.ptm("transition")), {
        default: E(function() {
          return [t.visible ? We((m(), y("div", k({
            key: 0,
            ref: r.containerRef,
            class: t.cx("root"),
            style: t.sx("root"),
            role: "complementary",
            "aria-modal": t.modal,
            "data-p": r.dataP
          }, t.ptmi("root")), [t.$slots.container ? L(t.$slots, "container", {
            key: 0,
            closeCallback: r.hide
          }) : (m(), y(_, {
            key: 1
          }, [v("div", k({
            ref: r.headerContainerRef,
            class: t.cx("header")
          }, t.ptm("header")), [L(t.$slots, "header", {
            class: Y(t.cx("title"))
          }, function() {
            return [t.header ? (m(), y("div", k({
              key: 0,
              class: t.cx("title")
            }, t.ptm("title")), re(t.header), 17)) : M("", !0)];
          }), t.showCloseIcon ? L(t.$slots, "closebutton", {
            key: 0,
            closeCallback: r.hide
          }, function() {
            return [P(a, k({
              ref: r.closeButtonRef,
              type: "button",
              class: t.cx("pcCloseButton"),
              "aria-label": r.closeAriaLabel,
              unstyled: t.unstyled,
              onClick: r.hide
            }, t.closeButtonProps, {
              pt: t.ptm("pcCloseButton"),
              "data-pc-group-section": "iconcontainer"
            }), {
              icon: E(function(d) {
                return [L(t.$slots, "closeicon", {}, function() {
                  return [(m(), O(q(t.closeIcon ? "span" : "TimesIcon"), k({
                    class: [t.closeIcon, d.class]
                  }, t.ptm("pcCloseButton").icon), null, 16, ["class"]))];
                })];
              }),
              _: 3
            }, 16, ["class", "aria-label", "unstyled", "onClick", "pt"])];
          }) : M("", !0)], 16), v("div", k({
            ref: r.contentRef,
            class: t.cx("content")
          }, t.ptm("content")), [L(t.$slots, "default")], 16), t.$slots.footer ? (m(), y("div", k({
            key: 0,
            ref: r.footerContainerRef,
            class: t.cx("footer")
          }, t.ptm("footer")), [L(t.$slots, "footer")], 16)) : M("", !0)], 64))], 16, KO)), [[s]]) : M("", !0)];
        }),
        _: 3
      }, 16, ["onEnter", "onAfterEnter", "onBeforeLeave", "onLeave", "onAfterLeave"])], 16, _O)) : M("", !0)];
    }),
    _: 3
  });
}
Fm.render = HO;
var Nt = ta(), WO = `
    .p-toast {
        width: dt('toast.width');
        white-space: pre-line;
        word-break: break-word;
    }

    .p-toast-message {
        margin: 0 0 1rem 0;
    }

    .p-toast-message-icon {
        flex-shrink: 0;
        font-size: dt('toast.icon.size');
        width: dt('toast.icon.size');
        height: dt('toast.icon.size');
    }

    .p-toast-message-content {
        display: flex;
        align-items: flex-start;
        padding: dt('toast.content.padding');
        gap: dt('toast.content.gap');
    }

    .p-toast-message-text {
        flex: 1 1 auto;
        display: flex;
        flex-direction: column;
        gap: dt('toast.text.gap');
    }

    .p-toast-summary {
        font-weight: dt('toast.summary.font.weight');
        font-size: dt('toast.summary.font.size');
    }

    .p-toast-detail {
        font-weight: dt('toast.detail.font.weight');
        font-size: dt('toast.detail.font.size');
    }

    .p-toast-close-button {
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
        cursor: pointer;
        background: transparent;
        transition:
            background dt('toast.transition.duration'),
            color dt('toast.transition.duration'),
            outline-color dt('toast.transition.duration'),
            box-shadow dt('toast.transition.duration');
        outline-color: transparent;
        color: inherit;
        width: dt('toast.close.button.width');
        height: dt('toast.close.button.height');
        border-radius: dt('toast.close.button.border.radius');
        margin: -25% 0 0 0;
        right: -25%;
        padding: 0;
        border: none;
        user-select: none;
    }

    .p-toast-close-button:dir(rtl) {
        margin: -25% 0 0 auto;
        left: -25%;
        right: auto;
    }

    .p-toast-message-info,
    .p-toast-message-success,
    .p-toast-message-warn,
    .p-toast-message-error,
    .p-toast-message-secondary,
    .p-toast-message-contrast {
        border-width: dt('toast.border.width');
        border-style: solid;
        backdrop-filter: blur(dt('toast.blur'));
        border-radius: dt('toast.border.radius');
    }

    .p-toast-close-icon {
        font-size: dt('toast.close.icon.size');
        width: dt('toast.close.icon.size');
        height: dt('toast.close.icon.size');
    }

    .p-toast-close-button:focus-visible {
        outline-width: dt('focus.ring.width');
        outline-style: dt('focus.ring.style');
        outline-offset: dt('focus.ring.offset');
    }

    .p-toast-message-info {
        background: dt('toast.info.background');
        border-color: dt('toast.info.border.color');
        color: dt('toast.info.color');
        box-shadow: dt('toast.info.shadow');
    }

    .p-toast-message-info .p-toast-detail {
        color: dt('toast.info.detail.color');
    }

    .p-toast-message-info .p-toast-close-button:focus-visible {
        outline-color: dt('toast.info.close.button.focus.ring.color');
        box-shadow: dt('toast.info.close.button.focus.ring.shadow');
    }

    .p-toast-message-info .p-toast-close-button:hover {
        background: dt('toast.info.close.button.hover.background');
    }

    .p-toast-message-success {
        background: dt('toast.success.background');
        border-color: dt('toast.success.border.color');
        color: dt('toast.success.color');
        box-shadow: dt('toast.success.shadow');
    }

    .p-toast-message-success .p-toast-detail {
        color: dt('toast.success.detail.color');
    }

    .p-toast-message-success .p-toast-close-button:focus-visible {
        outline-color: dt('toast.success.close.button.focus.ring.color');
        box-shadow: dt('toast.success.close.button.focus.ring.shadow');
    }

    .p-toast-message-success .p-toast-close-button:hover {
        background: dt('toast.success.close.button.hover.background');
    }

    .p-toast-message-warn {
        background: dt('toast.warn.background');
        border-color: dt('toast.warn.border.color');
        color: dt('toast.warn.color');
        box-shadow: dt('toast.warn.shadow');
    }

    .p-toast-message-warn .p-toast-detail {
        color: dt('toast.warn.detail.color');
    }

    .p-toast-message-warn .p-toast-close-button:focus-visible {
        outline-color: dt('toast.warn.close.button.focus.ring.color');
        box-shadow: dt('toast.warn.close.button.focus.ring.shadow');
    }

    .p-toast-message-warn .p-toast-close-button:hover {
        background: dt('toast.warn.close.button.hover.background');
    }

    .p-toast-message-error {
        background: dt('toast.error.background');
        border-color: dt('toast.error.border.color');
        color: dt('toast.error.color');
        box-shadow: dt('toast.error.shadow');
    }

    .p-toast-message-error .p-toast-detail {
        color: dt('toast.error.detail.color');
    }

    .p-toast-message-error .p-toast-close-button:focus-visible {
        outline-color: dt('toast.error.close.button.focus.ring.color');
        box-shadow: dt('toast.error.close.button.focus.ring.shadow');
    }

    .p-toast-message-error .p-toast-close-button:hover {
        background: dt('toast.error.close.button.hover.background');
    }

    .p-toast-message-secondary {
        background: dt('toast.secondary.background');
        border-color: dt('toast.secondary.border.color');
        color: dt('toast.secondary.color');
        box-shadow: dt('toast.secondary.shadow');
    }

    .p-toast-message-secondary .p-toast-detail {
        color: dt('toast.secondary.detail.color');
    }

    .p-toast-message-secondary .p-toast-close-button:focus-visible {
        outline-color: dt('toast.secondary.close.button.focus.ring.color');
        box-shadow: dt('toast.secondary.close.button.focus.ring.shadow');
    }

    .p-toast-message-secondary .p-toast-close-button:hover {
        background: dt('toast.secondary.close.button.hover.background');
    }

    .p-toast-message-contrast {
        background: dt('toast.contrast.background');
        border-color: dt('toast.contrast.border.color');
        color: dt('toast.contrast.color');
        box-shadow: dt('toast.contrast.shadow');
    }

    .p-toast-message-contrast .p-toast-detail {
        color: dt('toast.contrast.detail.color');
    }

    .p-toast-message-contrast .p-toast-close-button:focus-visible {
        outline-color: dt('toast.contrast.close.button.focus.ring.color');
        box-shadow: dt('toast.contrast.close.button.focus.ring.shadow');
    }

    .p-toast-message-contrast .p-toast-close-button:hover {
        background: dt('toast.contrast.close.button.hover.background');
    }

    .p-toast-top-center {
        transform: translateX(-50%);
    }

    .p-toast-bottom-center {
        transform: translateX(-50%);
    }

    .p-toast-center {
        min-width: 20vw;
        transform: translate(-50%, -50%);
    }

    .p-toast-message-enter-from {
        opacity: 0;
        transform: translateY(50%);
    }

    .p-toast-message-leave-from {
        max-height: 1000px;
    }

    .p-toast .p-toast-message.p-toast-message-leave-to {
        max-height: 0;
        opacity: 0;
        margin-bottom: 0;
        overflow: hidden;
    }

    .p-toast-message-enter-active {
        transition:
            transform 0.3s,
            opacity 0.3s;
    }

    .p-toast-message-leave-active {
        transition:
            max-height 0.45s cubic-bezier(0, 1, 0, 1),
            opacity 0.3s,
            margin-bottom 0.3s;
    }
`;
function vi(t) {
  "@babel/helpers - typeof";
  return vi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, vi(t);
}
function Sa(t, e, n) {
  return (e = UO(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function UO(t) {
  var e = GO(t, "string");
  return vi(e) == "symbol" ? e : e + "";
}
function GO(t, e) {
  if (vi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (vi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var qO = {
  root: function(e) {
    var n = e.position;
    return {
      position: "fixed",
      top: n === "top-right" || n === "top-left" || n === "top-center" ? "20px" : n === "center" ? "50%" : null,
      right: (n === "top-right" || n === "bottom-right") && "20px",
      bottom: (n === "bottom-left" || n === "bottom-right" || n === "bottom-center") && "20px",
      left: n === "top-left" || n === "bottom-left" ? "20px" : n === "center" || n === "top-center" || n === "bottom-center" ? "50%" : null
    };
  }
}, JO = {
  root: function(e) {
    var n = e.props;
    return ["p-toast p-component p-toast-" + n.position];
  },
  message: function(e) {
    var n = e.props;
    return ["p-toast-message", {
      "p-toast-message-info": n.message.severity === "info" || n.message.severity === void 0,
      "p-toast-message-warn": n.message.severity === "warn",
      "p-toast-message-error": n.message.severity === "error",
      "p-toast-message-success": n.message.severity === "success",
      "p-toast-message-secondary": n.message.severity === "secondary",
      "p-toast-message-contrast": n.message.severity === "contrast"
    }];
  },
  messageContent: "p-toast-message-content",
  messageIcon: function(e) {
    var n = e.props;
    return ["p-toast-message-icon", Sa(Sa(Sa(Sa({}, n.infoIcon, n.message.severity === "info"), n.warnIcon, n.message.severity === "warn"), n.errorIcon, n.message.severity === "error"), n.successIcon, n.message.severity === "success")];
  },
  messageText: "p-toast-message-text",
  summary: "p-toast-summary",
  detail: "p-toast-detail",
  closeButton: "p-toast-close-button",
  closeIcon: "p-toast-close-icon"
}, YO = te.extend({
  name: "toast",
  style: WO,
  classes: JO,
  inlineStyles: qO
}), ld = {
  name: "ExclamationTriangleIcon",
  extends: Ie
};
function XO(t) {
  return tP(t) || eP(t) || QO(t) || ZO();
}
function ZO() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function QO(t, e) {
  if (t) {
    if (typeof t == "string") return sd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? sd(t, e) : void 0;
  }
}
function eP(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function tP(t) {
  if (Array.isArray(t)) return sd(t);
}
function sd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function nP(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), XO(e[0] || (e[0] = [v("path", {
    d: "M13.4018 13.1893H0.598161C0.49329 13.189 0.390283 13.1615 0.299143 13.1097C0.208003 13.0578 0.131826 12.9832 0.0780112 12.8932C0.0268539 12.8015 0 12.6982 0 12.5931C0 12.4881 0.0268539 12.3848 0.0780112 12.293L6.47985 1.08982C6.53679 1.00399 6.61408 0.933574 6.70484 0.884867C6.7956 0.836159 6.897 0.810669 7 0.810669C7.103 0.810669 7.2044 0.836159 7.29516 0.884867C7.38592 0.933574 7.46321 1.00399 7.52015 1.08982L13.922 12.293C13.9731 12.3848 14 12.4881 14 12.5931C14 12.6982 13.9731 12.8015 13.922 12.8932C13.8682 12.9832 13.792 13.0578 13.7009 13.1097C13.6097 13.1615 13.5067 13.189 13.4018 13.1893ZM1.63046 11.989H12.3695L7 2.59425L1.63046 11.989Z",
    fill: "currentColor"
  }, null, -1), v("path", {
    d: "M6.99996 8.78801C6.84143 8.78594 6.68997 8.72204 6.57787 8.60993C6.46576 8.49782 6.40186 8.34637 6.39979 8.18784V5.38703C6.39979 5.22786 6.46302 5.0752 6.57557 4.96265C6.68813 4.85009 6.84078 4.78686 6.99996 4.78686C7.15914 4.78686 7.31179 4.85009 7.42435 4.96265C7.5369 5.0752 7.60013 5.22786 7.60013 5.38703V8.18784C7.59806 8.34637 7.53416 8.49782 7.42205 8.60993C7.30995 8.72204 7.15849 8.78594 6.99996 8.78801Z",
    fill: "currentColor"
  }, null, -1), v("path", {
    d: "M6.99996 11.1887C6.84143 11.1866 6.68997 11.1227 6.57787 11.0106C6.46576 10.8985 6.40186 10.7471 6.39979 10.5885V10.1884C6.39979 10.0292 6.46302 9.87658 6.57557 9.76403C6.68813 9.65147 6.84078 9.58824 6.99996 9.58824C7.15914 9.58824 7.31179 9.65147 7.42435 9.76403C7.5369 9.87658 7.60013 10.0292 7.60013 10.1884V10.5885C7.59806 10.7471 7.53416 10.8985 7.42205 11.0106C7.30995 11.1227 7.15849 11.1866 6.99996 11.1887Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
ld.render = nP;
var dd = {
  name: "InfoCircleIcon",
  extends: Ie
};
function oP(t) {
  return lP(t) || aP(t) || iP(t) || rP();
}
function rP() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function iP(t, e) {
  if (t) {
    if (typeof t == "string") return cd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? cd(t, e) : void 0;
  }
}
function aP(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function lP(t) {
  if (Array.isArray(t)) return cd(t);
}
function cd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function sP(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), oP(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M3.11101 12.8203C4.26215 13.5895 5.61553 14 7 14C8.85652 14 10.637 13.2625 11.9497 11.9497C13.2625 10.637 14 8.85652 14 7C14 5.61553 13.5895 4.26215 12.8203 3.11101C12.0511 1.95987 10.9579 1.06266 9.67879 0.532846C8.3997 0.00303296 6.99224 -0.13559 5.63437 0.134506C4.2765 0.404603 3.02922 1.07129 2.05026 2.05026C1.07129 3.02922 0.404603 4.2765 0.134506 5.63437C-0.13559 6.99224 0.00303296 8.3997 0.532846 9.67879C1.06266 10.9579 1.95987 12.0511 3.11101 12.8203ZM3.75918 2.14976C4.71846 1.50879 5.84628 1.16667 7 1.16667C8.5471 1.16667 10.0308 1.78125 11.1248 2.87521C12.2188 3.96918 12.8333 5.45291 12.8333 7C12.8333 8.15373 12.4912 9.28154 11.8502 10.2408C11.2093 11.2001 10.2982 11.9478 9.23232 12.3893C8.16642 12.8308 6.99353 12.9463 5.86198 12.7212C4.73042 12.4962 3.69102 11.9406 2.87521 11.1248C2.05941 10.309 1.50384 9.26958 1.27876 8.13803C1.05367 7.00647 1.16919 5.83358 1.61071 4.76768C2.05222 3.70178 2.79989 2.79074 3.75918 2.14976ZM7.00002 4.8611C6.84594 4.85908 6.69873 4.79698 6.58977 4.68801C6.48081 4.57905 6.4187 4.43185 6.41669 4.27776V3.88888C6.41669 3.73417 6.47815 3.58579 6.58754 3.4764C6.69694 3.367 6.84531 3.30554 7.00002 3.30554C7.15473 3.30554 7.3031 3.367 7.4125 3.4764C7.52189 3.58579 7.58335 3.73417 7.58335 3.88888V4.27776C7.58134 4.43185 7.51923 4.57905 7.41027 4.68801C7.30131 4.79698 7.1541 4.85908 7.00002 4.8611ZM7.00002 10.6945C6.84594 10.6925 6.69873 10.6304 6.58977 10.5214C6.48081 10.4124 6.4187 10.2652 6.41669 10.1111V6.22225C6.41669 6.06754 6.47815 5.91917 6.58754 5.80977C6.69694 5.70037 6.84531 5.63892 7.00002 5.63892C7.15473 5.63892 7.3031 5.70037 7.4125 5.80977C7.52189 5.91917 7.58335 6.06754 7.58335 6.22225V10.1111C7.58134 10.2652 7.51923 10.4124 7.41027 10.5214C7.30131 10.6304 7.1541 10.6925 7.00002 10.6945Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
dd.render = sP;
var el = {
  name: "TimesCircleIcon",
  extends: Ie
};
function dP(t) {
  return fP(t) || pP(t) || uP(t) || cP();
}
function cP() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function uP(t, e) {
  if (t) {
    if (typeof t == "string") return ud(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ud(t, e) : void 0;
  }
}
function pP(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function fP(t) {
  if (Array.isArray(t)) return ud(t);
}
function ud(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function hP(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), dP(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M7 14C5.61553 14 4.26215 13.5895 3.11101 12.8203C1.95987 12.0511 1.06266 10.9579 0.532846 9.67879C0.00303296 8.3997 -0.13559 6.99224 0.134506 5.63437C0.404603 4.2765 1.07129 3.02922 2.05026 2.05026C3.02922 1.07129 4.2765 0.404603 5.63437 0.134506C6.99224 -0.13559 8.3997 0.00303296 9.67879 0.532846C10.9579 1.06266 12.0511 1.95987 12.8203 3.11101C13.5895 4.26215 14 5.61553 14 7C14 8.85652 13.2625 10.637 11.9497 11.9497C10.637 13.2625 8.85652 14 7 14ZM7 1.16667C5.84628 1.16667 4.71846 1.50879 3.75918 2.14976C2.79989 2.79074 2.05222 3.70178 1.61071 4.76768C1.16919 5.83358 1.05367 7.00647 1.27876 8.13803C1.50384 9.26958 2.05941 10.309 2.87521 11.1248C3.69102 11.9406 4.73042 12.4962 5.86198 12.7212C6.99353 12.9463 8.16642 12.8308 9.23232 12.3893C10.2982 11.9478 11.2093 11.2001 11.8502 10.2408C12.4912 9.28154 12.8333 8.15373 12.8333 7C12.8333 5.45291 12.2188 3.96918 11.1248 2.87521C10.0308 1.78125 8.5471 1.16667 7 1.16667ZM4.66662 9.91668C4.58998 9.91704 4.51404 9.90209 4.44325 9.87271C4.37246 9.84333 4.30826 9.8001 4.2544 9.74557C4.14516 9.6362 4.0838 9.48793 4.0838 9.33335C4.0838 9.17876 4.14516 9.0305 4.2544 8.92113L6.17553 7L4.25443 5.07891C4.15139 4.96832 4.09529 4.82207 4.09796 4.67094C4.10063 4.51982 4.16185 4.37563 4.26872 4.26876C4.3756 4.16188 4.51979 4.10066 4.67091 4.09799C4.82204 4.09532 4.96829 4.15142 5.07887 4.25446L6.99997 6.17556L8.92106 4.25446C9.03164 4.15142 9.1779 4.09532 9.32903 4.09799C9.48015 4.10066 9.62434 4.16188 9.73121 4.26876C9.83809 4.37563 9.89931 4.51982 9.90198 4.67094C9.90464 4.82207 9.84855 4.96832 9.74551 5.07891L7.82441 7L9.74554 8.92113C9.85478 9.0305 9.91614 9.17876 9.91614 9.33335C9.91614 9.48793 9.85478 9.6362 9.74554 9.74557C9.69168 9.8001 9.62748 9.84333 9.55669 9.87271C9.4859 9.90209 9.40996 9.91704 9.33332 9.91668C9.25668 9.91704 9.18073 9.90209 9.10995 9.87271C9.03916 9.84333 8.97495 9.8001 8.9211 9.74557L6.99997 7.82444L5.07884 9.74557C5.02499 9.8001 4.96078 9.84333 4.88999 9.87271C4.81921 9.90209 4.74326 9.91704 4.66662 9.91668Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
el.render = hP;
var mP = {
  name: "BaseToast",
  extends: ne,
  props: {
    group: {
      type: String,
      default: null
    },
    position: {
      type: String,
      default: "top-right"
    },
    autoZIndex: {
      type: Boolean,
      default: !0
    },
    baseZIndex: {
      type: Number,
      default: 0
    },
    breakpoints: {
      type: Object,
      default: null
    },
    closeIcon: {
      type: String,
      default: void 0
    },
    infoIcon: {
      type: String,
      default: void 0
    },
    warnIcon: {
      type: String,
      default: void 0
    },
    errorIcon: {
      type: String,
      default: void 0
    },
    successIcon: {
      type: String,
      default: void 0
    },
    closeButtonProps: {
      type: null,
      default: null
    },
    onMouseEnter: {
      type: Function,
      default: void 0
    },
    onMouseLeave: {
      type: Function,
      default: void 0
    },
    onClick: {
      type: Function,
      default: void 0
    }
  },
  style: YO,
  provide: function() {
    return {
      $pcToast: this,
      $parentInstance: this
    };
  }
};
function yi(t) {
  "@babel/helpers - typeof";
  return yi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, yi(t);
}
function gP(t, e, n) {
  return (e = bP(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function bP(t) {
  var e = vP(t, "string");
  return yi(e) == "symbol" ? e : e + "";
}
function vP(t, e) {
  if (yi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (yi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Nm = {
  name: "ToastMessage",
  hostName: "Toast",
  extends: ne,
  emits: ["close"],
  closeTimeout: null,
  createdAt: null,
  lifeRemaining: null,
  props: {
    message: {
      type: null,
      default: null
    },
    templates: {
      type: Object,
      default: null
    },
    closeIcon: {
      type: String,
      default: null
    },
    infoIcon: {
      type: String,
      default: null
    },
    warnIcon: {
      type: String,
      default: null
    },
    errorIcon: {
      type: String,
      default: null
    },
    successIcon: {
      type: String,
      default: null
    },
    closeButtonProps: {
      type: null,
      default: null
    },
    onMouseEnter: {
      type: Function,
      default: void 0
    },
    onMouseLeave: {
      type: Function,
      default: void 0
    },
    onClick: {
      type: Function,
      default: void 0
    }
  },
  mounted: function() {
    this.message.life && (this.lifeRemaining = this.message.life, this.startTimeout());
  },
  beforeUnmount: function() {
    this.clearCloseTimeout();
  },
  methods: {
    startTimeout: function() {
      var e = this;
      this.createdAt = (/* @__PURE__ */ new Date()).valueOf(), this.closeTimeout = setTimeout(function() {
        e.close({
          message: e.message,
          type: "life-end"
        });
      }, this.lifeRemaining);
    },
    close: function(e) {
      this.$emit("close", e);
    },
    onCloseClick: function() {
      this.clearCloseTimeout(), this.close({
        message: this.message,
        type: "close"
      });
    },
    clearCloseTimeout: function() {
      this.closeTimeout && (clearTimeout(this.closeTimeout), this.closeTimeout = null);
    },
    onMessageClick: function(e) {
      var n;
      (n = this.onClick) === null || n === void 0 || n.call(this, {
        originalEvent: e,
        message: this.message
      });
    },
    handleMouseEnter: function(e) {
      if (this.onMouseEnter) {
        if (this.onMouseEnter({
          originalEvent: e,
          message: this.message
        }), e.defaultPrevented)
          return;
        this.message.life && (this.lifeRemaining = this.createdAt + this.lifeRemaining - (/* @__PURE__ */ new Date()).valueOf(), this.createdAt = null, this.clearCloseTimeout());
      }
    },
    handleMouseLeave: function(e) {
      if (this.onMouseLeave) {
        if (this.onMouseLeave({
          originalEvent: e,
          message: this.message
        }), e.defaultPrevented)
          return;
        this.message.life && this.startTimeout();
      }
    }
  },
  computed: {
    iconComponent: function() {
      return {
        info: !this.infoIcon && dd,
        success: !this.successIcon && Tn,
        warn: !this.warnIcon && ld,
        error: !this.errorIcon && el
      }[this.message.severity];
    },
    closeAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.close : void 0;
    },
    dataP: function() {
      return Te(gP({}, this.message.severity, this.message.severity));
    }
  },
  components: {
    TimesIcon: br,
    InfoCircleIcon: dd,
    CheckIcon: Tn,
    ExclamationTriangleIcon: ld,
    TimesCircleIcon: el
  },
  directives: {
    ripple: mt
  }
};
function ki(t) {
  "@babel/helpers - typeof";
  return ki = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ki(t);
}
function Tp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Rp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Tp(Object(n), !0).forEach(function(o) {
      yP(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Tp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function yP(t, e, n) {
  return (e = kP(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function kP(t) {
  var e = wP(t, "string");
  return ki(e) == "symbol" ? e : e + "";
}
function wP(t, e) {
  if (ki(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ki(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var CP = ["data-p"], xP = ["data-p"], SP = ["data-p"], IP = ["data-p"], OP = ["aria-label", "data-p"];
function PP(t, e, n, o, i, r) {
  var a = tt("ripple");
  return m(), y("div", k({
    class: [t.cx("message"), n.message.styleClass],
    role: "alert",
    "aria-live": "assertive",
    "aria-atomic": "true",
    "data-p": r.dataP
  }, t.ptm("message"), {
    onClick: e[1] || (e[1] = function() {
      return r.onMessageClick && r.onMessageClick.apply(r, arguments);
    }),
    onMouseenter: e[2] || (e[2] = function() {
      return r.handleMouseEnter && r.handleMouseEnter.apply(r, arguments);
    }),
    onMouseleave: e[3] || (e[3] = function() {
      return r.handleMouseLeave && r.handleMouseLeave.apply(r, arguments);
    })
  }), [n.templates.container ? (m(), O(q(n.templates.container), {
    key: 0,
    message: n.message,
    closeCallback: r.onCloseClick
  }, null, 8, ["message", "closeCallback"])) : (m(), y("div", k({
    key: 1,
    class: [t.cx("messageContent"), n.message.contentStyleClass]
  }, t.ptm("messageContent")), [n.templates.message ? (m(), O(q(n.templates.message), {
    key: 1,
    message: n.message
  }, null, 8, ["message"])) : (m(), y(_, {
    key: 0
  }, [(m(), O(q(n.templates.messageicon ? n.templates.messageicon : n.templates.icon ? n.templates.icon : r.iconComponent && r.iconComponent.name ? r.iconComponent : "span"), k({
    class: t.cx("messageIcon")
  }, t.ptm("messageIcon")), null, 16, ["class"])), v("div", k({
    class: t.cx("messageText"),
    "data-p": r.dataP
  }, t.ptm("messageText")), [v("span", k({
    class: t.cx("summary"),
    "data-p": r.dataP
  }, t.ptm("summary")), re(n.message.summary), 17, SP), n.message.detail ? (m(), y("div", k({
    key: 0,
    class: t.cx("detail"),
    "data-p": r.dataP
  }, t.ptm("detail")), re(n.message.detail), 17, IP)) : M("", !0)], 16, xP)], 64)), n.message.closable !== !1 ? (m(), y("div", mr(k({
    key: 2
  }, t.ptm("buttonContainer"))), [We((m(), y("button", k({
    class: t.cx("closeButton"),
    type: "button",
    "aria-label": r.closeAriaLabel,
    onClick: e[0] || (e[0] = function() {
      return r.onCloseClick && r.onCloseClick.apply(r, arguments);
    }),
    autofocus: "",
    "data-p": r.dataP
  }, Rp(Rp({}, n.closeButtonProps), t.ptm("closeButton"))), [(m(), O(q(n.templates.closeicon || "TimesIcon"), k({
    class: [t.cx("closeIcon"), n.closeIcon]
  }, t.ptm("closeIcon")), null, 16, ["class"]))], 16, OP)), [[a]])], 16)) : M("", !0)], 16))], 16, CP);
}
Nm.render = PP;
function wi(t) {
  "@babel/helpers - typeof";
  return wi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, wi(t);
}
function $P(t, e, n) {
  return (e = TP(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function TP(t) {
  var e = RP(t, "string");
  return wi(e) == "symbol" ? e : e + "";
}
function RP(t, e) {
  if (wi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (wi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function BP(t) {
  return DP(t) || AP(t) || MP(t) || EP();
}
function EP() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function MP(t, e) {
  if (t) {
    if (typeof t == "string") return pd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? pd(t, e) : void 0;
  }
}
function AP(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function DP(t) {
  if (Array.isArray(t)) return pd(t);
}
function pd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var LP = 0, jm = {
  name: "Toast",
  extends: mP,
  inheritAttrs: !1,
  emits: ["close", "life-end"],
  data: function() {
    return {
      messages: []
    };
  },
  styleElement: null,
  mounted: function() {
    Nt.on("add", this.onAdd), Nt.on("remove", this.onRemove), Nt.on("remove-group", this.onRemoveGroup), Nt.on("remove-all-groups", this.onRemoveAllGroups), this.breakpoints && this.createStyle();
  },
  beforeUnmount: function() {
    this.destroyStyle(), this.$refs.container && this.autoZIndex && Xe.clear(this.$refs.container), Nt.off("add", this.onAdd), Nt.off("remove", this.onRemove), Nt.off("remove-group", this.onRemoveGroup), Nt.off("remove-all-groups", this.onRemoveAllGroups);
  },
  methods: {
    add: function(e) {
      e.id == null && (e.id = LP++), this.messages = [].concat(BP(this.messages), [e]);
    },
    remove: function(e) {
      var n = this.messages.findIndex(function(o) {
        return o.id === e.message.id;
      });
      n !== -1 && (this.messages.splice(n, 1), this.$emit(e.type, {
        message: e.message
      }));
    },
    onAdd: function(e) {
      this.group == e.group && this.add(e);
    },
    onRemove: function(e) {
      this.remove({
        message: e,
        type: "close"
      });
    },
    onRemoveGroup: function(e) {
      this.group === e && (this.messages = []);
    },
    onRemoveAllGroups: function() {
      var e = this;
      this.messages.forEach(function(n) {
        return e.$emit("close", {
          message: n
        });
      }), this.messages = [];
    },
    onEnter: function() {
      this.autoZIndex && Xe.set("modal", this.$refs.container, this.baseZIndex || this.$primevue.config.zIndex.modal);
    },
    onLeave: function() {
      var e = this;
      this.$refs.container && this.autoZIndex && lt(this.messages) && setTimeout(function() {
        Xe.clear(e.$refs.container);
      }, 200);
    },
    createStyle: function() {
      if (!this.styleElement && !this.isUnstyled) {
        var e;
        this.styleElement = document.createElement("style"), this.styleElement.type = "text/css", ea(this.styleElement, "nonce", (e = this.$primevue) === null || e === void 0 || (e = e.config) === null || e === void 0 || (e = e.csp) === null || e === void 0 ? void 0 : e.nonce), document.head.appendChild(this.styleElement);
        var n = "";
        for (var o in this.breakpoints) {
          var i = "";
          for (var r in this.breakpoints[o])
            i += r + ":" + this.breakpoints[o][r] + "!important;";
          n += `
                        @media screen and (max-width: `.concat(o, `) {
                            .p-toast[`).concat(this.$attrSelector, `] {
                                `).concat(i, `
                            }
                        }
                    `);
        }
        this.styleElement.innerHTML = n;
      }
    },
    destroyStyle: function() {
      this.styleElement && (document.head.removeChild(this.styleElement), this.styleElement = null);
    }
  },
  computed: {
    dataP: function() {
      return Te($P({}, this.position, this.position));
    }
  },
  components: {
    ToastMessage: Nm,
    Portal: vr
  }
};
function Ci(t) {
  "@babel/helpers - typeof";
  return Ci = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ci(t);
}
function Bp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function zP(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Bp(Object(n), !0).forEach(function(o) {
      FP(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Bp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function FP(t, e, n) {
  return (e = NP(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function NP(t) {
  var e = jP(t, "string");
  return Ci(e) == "symbol" ? e : e + "";
}
function jP(t, e) {
  if (Ci(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ci(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var VP = ["data-p"];
function _P(t, e, n, o, i, r) {
  var a = $("ToastMessage"), l = $("Portal");
  return m(), O(l, null, {
    default: E(function() {
      return [v("div", k({
        ref: "container",
        class: t.cx("root"),
        style: t.sx("root", !0, {
          position: t.position
        }),
        "data-p": r.dataP
      }, t.ptmi("root")), [P(iv, k({
        name: "p-toast-message",
        tag: "div",
        onEnter: r.onEnter,
        onLeave: r.onLeave
      }, zP({}, t.ptm("transition"))), {
        default: E(function() {
          return [(m(!0), y(_, null, fe(i.messages, function(s) {
            return m(), O(a, {
              key: s.id,
              message: s,
              templates: t.$slots,
              closeIcon: t.closeIcon,
              infoIcon: t.infoIcon,
              warnIcon: t.warnIcon,
              errorIcon: t.errorIcon,
              successIcon: t.successIcon,
              closeButtonProps: t.closeButtonProps,
              onMouseEnter: t.onMouseEnter,
              onMouseLeave: t.onMouseLeave,
              onClick: t.onClick,
              unstyled: t.unstyled,
              onClose: e[0] || (e[0] = function(d) {
                return r.remove(d);
              }),
              pt: t.pt
            }, null, 8, ["message", "templates", "closeIcon", "infoIcon", "warnIcon", "errorIcon", "successIcon", "closeButtonProps", "onMouseEnter", "onMouseLeave", "onClick", "unstyled", "pt"]);
          }), 128))];
        }),
        _: 1
      }, 16, ["onEnter", "onLeave"])], 16, VP)];
    }),
    _: 1
  });
}
jm.render = _P;
var Jo = ta(), KP = `
    .p-confirmdialog .p-dialog-content {
        display: flex;
        align-items: center;
        gap: dt('confirmdialog.content.gap');
    }

    .p-confirmdialog-icon {
        color: dt('confirmdialog.icon.color');
        font-size: dt('confirmdialog.icon.size');
        width: dt('confirmdialog.icon.size');
        height: dt('confirmdialog.icon.size');
    }
`, HP = {
  root: "p-confirmdialog",
  icon: "p-confirmdialog-icon",
  message: "p-confirmdialog-message",
  pcRejectButton: "p-confirmdialog-reject-button",
  pcAcceptButton: "p-confirmdialog-accept-button"
}, WP = te.extend({
  name: "confirmdialog",
  style: KP,
  classes: HP
}), UP = {
  name: "BaseConfirmDialog",
  extends: ne,
  props: {
    group: String,
    breakpoints: {
      type: Object,
      default: null
    },
    draggable: {
      type: Boolean,
      default: !0
    }
  },
  style: WP,
  provide: function() {
    return {
      $pcConfirmDialog: this,
      $parentInstance: this
    };
  }
}, Vm = {
  name: "ConfirmDialog",
  extends: UP,
  confirmListener: null,
  closeListener: null,
  data: function() {
    return {
      visible: !1,
      confirmation: null
    };
  },
  mounted: function() {
    var e = this;
    this.confirmListener = function(n) {
      n && n.group === e.group && (e.confirmation = n, e.confirmation.onShow && e.confirmation.onShow(), e.visible = !0);
    }, this.closeListener = function() {
      e.visible = !1, e.confirmation = null;
    }, Jo.on("confirm", this.confirmListener), Jo.on("close", this.closeListener);
  },
  beforeUnmount: function() {
    Jo.off("confirm", this.confirmListener), Jo.off("close", this.closeListener);
  },
  methods: {
    accept: function() {
      this.confirmation.accept && this.confirmation.accept(), this.visible = !1;
    },
    reject: function() {
      this.confirmation.reject && this.confirmation.reject(), this.visible = !1;
    },
    onHide: function() {
      this.confirmation.onHide && this.confirmation.onHide(), this.visible = !1;
    }
  },
  computed: {
    appendTo: function() {
      return this.confirmation ? this.confirmation.appendTo : "body";
    },
    target: function() {
      return this.confirmation ? this.confirmation.target : null;
    },
    modal: function() {
      return this.confirmation ? this.confirmation.modal == null ? !0 : this.confirmation.modal : !0;
    },
    header: function() {
      return this.confirmation ? this.confirmation.header : null;
    },
    message: function() {
      return this.confirmation ? this.confirmation.message : null;
    },
    blockScroll: function() {
      return this.confirmation ? this.confirmation.blockScroll : !0;
    },
    position: function() {
      return this.confirmation ? this.confirmation.position : null;
    },
    acceptLabel: function() {
      if (this.confirmation) {
        var e, n = this.confirmation;
        return n.acceptLabel || ((e = n.acceptProps) === null || e === void 0 ? void 0 : e.label) || this.$primevue.config.locale.accept;
      }
      return this.$primevue.config.locale.accept;
    },
    rejectLabel: function() {
      if (this.confirmation) {
        var e, n = this.confirmation;
        return n.rejectLabel || ((e = n.rejectProps) === null || e === void 0 ? void 0 : e.label) || this.$primevue.config.locale.reject;
      }
      return this.$primevue.config.locale.reject;
    },
    acceptIcon: function() {
      var e;
      return this.confirmation ? this.confirmation.acceptIcon : (e = this.confirmation) !== null && e !== void 0 && e.acceptProps ? this.confirmation.acceptProps.icon : null;
    },
    rejectIcon: function() {
      var e;
      return this.confirmation ? this.confirmation.rejectIcon : (e = this.confirmation) !== null && e !== void 0 && e.rejectProps ? this.confirmation.rejectProps.icon : null;
    },
    autoFocusAccept: function() {
      return this.confirmation.defaultFocus === void 0 || this.confirmation.defaultFocus === "accept";
    },
    autoFocusReject: function() {
      return this.confirmation.defaultFocus === "reject";
    },
    closeOnEscape: function() {
      return this.confirmation ? this.confirmation.closeOnEscape : !0;
    }
  },
  components: {
    Dialog: Cc,
    Button: Ao
  }
};
function GP(t, e, n, o, i, r) {
  var a = $("Button"), l = $("Dialog");
  return m(), O(l, {
    visible: i.visible,
    "onUpdate:visible": [e[2] || (e[2] = function(s) {
      return i.visible = s;
    }), r.onHide],
    role: "alertdialog",
    class: Y(t.cx("root")),
    modal: r.modal,
    header: r.header,
    blockScroll: r.blockScroll,
    appendTo: r.appendTo,
    position: r.position,
    breakpoints: t.breakpoints,
    closeOnEscape: r.closeOnEscape,
    draggable: t.draggable,
    pt: t.pt,
    unstyled: t.unstyled
  }, On({
    default: E(function() {
      return [t.$slots.container ? M("", !0) : (m(), y(_, {
        key: 0
      }, [t.$slots.message ? (m(), O(q(t.$slots.message), {
        key: 1,
        message: i.confirmation
      }, null, 8, ["message"])) : (m(), y(_, {
        key: 0
      }, [L(t.$slots, "icon", {}, function() {
        return [t.$slots.icon ? (m(), O(q(t.$slots.icon), {
          key: 0,
          class: Y(t.cx("icon"))
        }, null, 8, ["class"])) : i.confirmation.icon ? (m(), y("span", k({
          key: 1,
          class: [i.confirmation.icon, t.cx("icon")]
        }, t.ptm("icon")), null, 16)) : M("", !0)];
      }), v("span", k({
        class: t.cx("message")
      }, t.ptm("message")), re(r.message), 17)], 64))], 64))];
    }),
    _: 2
  }, [t.$slots.container ? {
    name: "container",
    fn: E(function(s) {
      return [L(t.$slots, "container", {
        message: i.confirmation,
        closeCallback: s.onclose,
        acceptCallback: r.accept,
        rejectCallback: r.reject
      })];
    }),
    key: "0"
  } : void 0, t.$slots.container ? void 0 : {
    name: "footer",
    fn: E(function() {
      var s;
      return [P(a, k({
        class: [t.cx("pcRejectButton"), i.confirmation.rejectClass],
        autofocus: r.autoFocusReject,
        unstyled: t.unstyled,
        text: ((s = i.confirmation.rejectProps) === null || s === void 0 ? void 0 : s.text) || !1,
        onClick: e[0] || (e[0] = function(d) {
          return r.reject();
        })
      }, i.confirmation.rejectProps, {
        label: r.rejectLabel,
        pt: t.ptm("pcRejectButton")
      }), On({
        _: 2
      }, [r.rejectIcon || t.$slots.rejecticon ? {
        name: "icon",
        fn: E(function(d) {
          return [L(t.$slots, "rejecticon", {}, function() {
            return [v("span", k({
              class: [r.rejectIcon, d.class]
            }, t.ptm("pcRejectButton").icon, {
              "data-pc-section": "rejectbuttonicon"
            }), null, 16)];
          })];
        }),
        key: "0"
      } : void 0]), 1040, ["class", "autofocus", "unstyled", "text", "label", "pt"]), P(a, k({
        label: r.acceptLabel,
        class: [t.cx("pcAcceptButton"), i.confirmation.acceptClass],
        autofocus: r.autoFocusAccept,
        unstyled: t.unstyled,
        onClick: e[1] || (e[1] = function(d) {
          return r.accept();
        })
      }, i.confirmation.acceptProps, {
        pt: t.ptm("pcAcceptButton")
      }), On({
        _: 2
      }, [r.acceptIcon || t.$slots.accepticon ? {
        name: "icon",
        fn: E(function(d) {
          return [L(t.$slots, "accepticon", {}, function() {
            return [v("span", k({
              class: [r.acceptIcon, d.class]
            }, t.ptm("pcAcceptButton").icon, {
              "data-pc-section": "acceptbuttonicon"
            }), null, 16)];
          })];
        }),
        key: "0"
      } : void 0]), 1040, ["label", "class", "autofocus", "unstyled", "pt"])];
    }),
    key: "1"
  }]), 1032, ["visible", "class", "modal", "header", "blockScroll", "appendTo", "position", "breakpoints", "closeOnEscape", "draggable", "onUpdate:visible", "pt", "unstyled"]);
}
Vm.render = GP;
var qP = `
    .p-inputgroup,
    .p-inputgroup .p-iconfield,
    .p-inputgroup .p-floatlabel,
    .p-inputgroup .p-iftalabel {
        display: flex;
        align-items: stretch;
        width: 100%;
    }

    .p-inputgroup .p-inputtext,
    .p-inputgroup .p-inputwrapper {
        flex: 1 1 auto;
        width: 1%;
    }

    .p-inputgroupaddon {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: dt('inputgroup.addon.padding');
        background: dt('inputgroup.addon.background');
        color: dt('inputgroup.addon.color');
        border-block-start: 1px solid dt('inputgroup.addon.border.color');
        border-block-end: 1px solid dt('inputgroup.addon.border.color');
        min-width: dt('inputgroup.addon.min.width');
    }

    .p-inputgroupaddon:first-child,
    .p-inputgroupaddon + .p-inputgroupaddon {
        border-inline-start: 1px solid dt('inputgroup.addon.border.color');
    }

    .p-inputgroupaddon:last-child {
        border-inline-end: 1px solid dt('inputgroup.addon.border.color');
    }

    .p-inputgroupaddon:has(.p-button) {
        padding: 0;
        overflow: hidden;
    }

    .p-inputgroupaddon .p-button {
        border-radius: 0;
    }

    .p-inputgroup > .p-component,
    .p-inputgroup > .p-inputwrapper > .p-component,
    .p-inputgroup > .p-iconfield > .p-component,
    .p-inputgroup > .p-floatlabel > .p-component,
    .p-inputgroup > .p-floatlabel > .p-inputwrapper > .p-component,
    .p-inputgroup > .p-iftalabel > .p-component,
    .p-inputgroup > .p-iftalabel > .p-inputwrapper > .p-component {
        border-radius: 0;
        margin: 0;
    }

    .p-inputgroupaddon:first-child,
    .p-inputgroup > .p-component:first-child,
    .p-inputgroup > .p-inputwrapper:first-child > .p-component,
    .p-inputgroup > .p-iconfield:first-child > .p-component,
    .p-inputgroup > .p-floatlabel:first-child > .p-component,
    .p-inputgroup > .p-floatlabel:first-child > .p-inputwrapper > .p-component,
    .p-inputgroup > .p-iftalabel:first-child > .p-component,
    .p-inputgroup > .p-iftalabel:first-child > .p-inputwrapper > .p-component {
        border-start-start-radius: dt('inputgroup.addon.border.radius');
        border-end-start-radius: dt('inputgroup.addon.border.radius');
    }

    .p-inputgroupaddon:last-child,
    .p-inputgroup > .p-component:last-child,
    .p-inputgroup > .p-inputwrapper:last-child > .p-component,
    .p-inputgroup > .p-iconfield:last-child > .p-component,
    .p-inputgroup > .p-floatlabel:last-child > .p-component,
    .p-inputgroup > .p-floatlabel:last-child > .p-inputwrapper > .p-component,
    .p-inputgroup > .p-iftalabel:last-child > .p-component,
    .p-inputgroup > .p-iftalabel:last-child > .p-inputwrapper > .p-component {
        border-start-end-radius: dt('inputgroup.addon.border.radius');
        border-end-end-radius: dt('inputgroup.addon.border.radius');
    }

    .p-inputgroup .p-component:focus,
    .p-inputgroup .p-component.p-focus,
    .p-inputgroup .p-inputwrapper-focus,
    .p-inputgroup .p-component:focus ~ label,
    .p-inputgroup .p-component.p-focus ~ label,
    .p-inputgroup .p-inputwrapper-focus ~ label {
        z-index: 1;
    }

    .p-inputgroup > .p-button:not(.p-button-icon-only) {
        width: auto;
    }

    .p-inputgroup .p-iconfield + .p-iconfield .p-inputtext {
        border-inline-start: 0;
    }
`, JP = {
  root: "p-inputgroup"
}, YP = te.extend({
  name: "inputgroup",
  style: qP,
  classes: JP
}), XP = {
  name: "BaseInputGroup",
  extends: ne,
  style: YP,
  provide: function() {
    return {
      $pcInputGroup: this,
      $parentInstance: this
    };
  }
}, _m = {
  name: "InputGroup",
  extends: XP,
  inheritAttrs: !1
};
function ZP(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root")
  }, t.ptmi("root")), [L(t.$slots, "default")], 16);
}
_m.render = ZP;
var QP = {
  root: "p-inputgroupaddon"
}, e$ = te.extend({
  name: "inputgroupaddon",
  classes: QP
}), t$ = {
  name: "BaseInputGroupAddon",
  extends: ne,
  style: e$,
  provide: function() {
    return {
      $pcInputGroupAddon: this,
      $parentInstance: this
    };
  }
}, Km = {
  name: "InputGroupAddon",
  extends: t$,
  inheritAttrs: !1
};
function n$(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root")
  }, t.ptmi("root")), [L(t.$slots, "default")], 16);
}
Km.render = n$;
var Hm = {
  name: "ArrowDownIcon",
  extends: Ie
};
function o$(t) {
  return l$(t) || a$(t) || i$(t) || r$();
}
function r$() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function i$(t, e) {
  if (t) {
    if (typeof t == "string") return fd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? fd(t, e) : void 0;
  }
}
function a$(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function l$(t) {
  if (Array.isArray(t)) return fd(t);
}
function fd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function s$(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), o$(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M6.99994 14C6.91097 14.0004 6.82281 13.983 6.74064 13.9489C6.65843 13.9148 6.58387 13.8646 6.52133 13.8013L1.10198 8.38193C0.982318 8.25351 0.917175 8.08367 0.920272 7.90817C0.923368 7.73267 0.994462 7.56523 1.11858 7.44111C1.24269 7.317 1.41014 7.2459 1.58563 7.2428C1.76113 7.23971 1.93098 7.30485 2.0594 7.42451L6.32263 11.6877V0.677419C6.32263 0.497756 6.394 0.325452 6.52104 0.198411C6.64808 0.0713706 6.82039 0 7.00005 0C7.17971 0 7.35202 0.0713706 7.47906 0.198411C7.6061 0.325452 7.67747 0.497756 7.67747 0.677419V11.6877L11.9407 7.42451C12.0691 7.30485 12.2389 7.23971 12.4144 7.2428C12.5899 7.2459 12.7574 7.317 12.8815 7.44111C13.0056 7.56523 13.0767 7.73267 13.0798 7.90817C13.0829 8.08367 13.0178 8.25351 12.8981 8.38193L7.47875 13.8013C7.41621 13.8646 7.34164 13.9148 7.25944 13.9489C7.17727 13.983 7.08912 14.0004 7.00015 14C7.00012 14 7.00009 14 7.00005 14C7.00001 14 6.99998 14 6.99994 14Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Hm.render = s$;
var Wm = {
  name: "ArrowUpIcon",
  extends: Ie
};
function d$(t) {
  return f$(t) || p$(t) || u$(t) || c$();
}
function c$() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function u$(t, e) {
  if (t) {
    if (typeof t == "string") return hd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? hd(t, e) : void 0;
  }
}
function p$(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function f$(t) {
  if (Array.isArray(t)) return hd(t);
}
function hd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function h$(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), d$(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M6.51551 13.799C6.64205 13.9255 6.813 13.9977 6.99193 14C7.17087 13.9977 7.34182 13.9255 7.46835 13.799C7.59489 13.6725 7.66701 13.5015 7.66935 13.3226V2.31233L11.9326 6.57554C11.9951 6.63887 12.0697 6.68907 12.1519 6.72319C12.2341 6.75731 12.3223 6.77467 12.4113 6.77425C12.5003 6.77467 12.5885 6.75731 12.6707 6.72319C12.7529 6.68907 12.8274 6.63887 12.89 6.57554C13.0168 6.44853 13.0881 6.27635 13.0881 6.09683C13.0881 5.91732 13.0168 5.74514 12.89 5.61812L7.48846 0.216594C7.48274 0.210436 7.4769 0.204374 7.47094 0.198411C7.3439 0.0713707 7.1716 0 6.99193 0C6.81227 0 6.63997 0.0713707 6.51293 0.198411C6.50704 0.204296 6.50128 0.210278 6.49563 0.216354L1.09386 5.61812C0.974201 5.74654 0.909057 5.91639 0.912154 6.09189C0.91525 6.26738 0.986345 6.43483 1.11046 6.55894C1.23457 6.68306 1.40202 6.75415 1.57752 6.75725C1.75302 6.76035 1.92286 6.6952 2.05128 6.57554L6.31451 2.31231V13.3226C6.31685 13.5015 6.38898 13.6725 6.51551 13.799Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Wm.render = h$;
var m$ = `
    .p-paginator {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-wrap: wrap;
        background: dt('paginator.background');
        color: dt('paginator.color');
        padding: dt('paginator.padding');
        border-radius: dt('paginator.border.radius');
        gap: dt('paginator.gap');
    }

    .p-paginator-content {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-wrap: wrap;
        gap: dt('paginator.gap');
    }

    .p-paginator-content-start {
        margin-inline-end: auto;
    }

    .p-paginator-content-end {
        margin-inline-start: auto;
    }

    .p-paginator-page,
    .p-paginator-next,
    .p-paginator-last,
    .p-paginator-first,
    .p-paginator-prev {
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        line-height: 1;
        user-select: none;
        overflow: hidden;
        position: relative;
        background: dt('paginator.nav.button.background');
        border: 0 none;
        color: dt('paginator.nav.button.color');
        min-width: dt('paginator.nav.button.width');
        height: dt('paginator.nav.button.height');
        transition:
            background dt('paginator.transition.duration'),
            color dt('paginator.transition.duration'),
            outline-color dt('paginator.transition.duration'),
            box-shadow dt('paginator.transition.duration');
        border-radius: dt('paginator.nav.button.border.radius');
        padding: 0;
        margin: 0;
    }

    .p-paginator-page:focus-visible,
    .p-paginator-next:focus-visible,
    .p-paginator-last:focus-visible,
    .p-paginator-first:focus-visible,
    .p-paginator-prev:focus-visible {
        box-shadow: dt('paginator.nav.button.focus.ring.shadow');
        outline: dt('paginator.nav.button.focus.ring.width') dt('paginator.nav.button.focus.ring.style') dt('paginator.nav.button.focus.ring.color');
        outline-offset: dt('paginator.nav.button.focus.ring.offset');
    }

    .p-paginator-page:not(.p-disabled):not(.p-paginator-page-selected):hover,
    .p-paginator-first:not(.p-disabled):hover,
    .p-paginator-prev:not(.p-disabled):hover,
    .p-paginator-next:not(.p-disabled):hover,
    .p-paginator-last:not(.p-disabled):hover {
        background: dt('paginator.nav.button.hover.background');
        color: dt('paginator.nav.button.hover.color');
    }

    .p-paginator-page.p-paginator-page-selected {
        background: dt('paginator.nav.button.selected.background');
        color: dt('paginator.nav.button.selected.color');
    }

    .p-paginator-current {
        color: dt('paginator.current.page.report.color');
    }

    .p-paginator-pages {
        display: flex;
        align-items: center;
        gap: dt('paginator.gap');
    }

    .p-paginator-jtp-input .p-inputtext {
        max-width: dt('paginator.jump.to.page.input.max.width');
    }

    .p-paginator-first:dir(rtl),
    .p-paginator-prev:dir(rtl),
    .p-paginator-next:dir(rtl),
    .p-paginator-last:dir(rtl) {
        transform: rotate(180deg);
    }
`;
function xi(t) {
  "@babel/helpers - typeof";
  return xi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, xi(t);
}
function g$(t, e, n) {
  return (e = b$(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function b$(t) {
  var e = v$(t, "string");
  return xi(e) == "symbol" ? e : e + "";
}
function v$(t, e) {
  if (xi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (xi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var y$ = {
  paginator: function(e) {
    var n = e.instance, o = e.key;
    return ["p-paginator p-component", g$({
      "p-paginator-default": !n.hasBreakpoints()
    }, "p-paginator-".concat(o), n.hasBreakpoints())];
  },
  content: "p-paginator-content",
  contentStart: "p-paginator-content-start",
  contentEnd: "p-paginator-content-end",
  first: function(e) {
    var n = e.instance;
    return ["p-paginator-first", {
      "p-disabled": n.$attrs.disabled
    }];
  },
  firstIcon: "p-paginator-first-icon",
  prev: function(e) {
    var n = e.instance;
    return ["p-paginator-prev", {
      "p-disabled": n.$attrs.disabled
    }];
  },
  prevIcon: "p-paginator-prev-icon",
  next: function(e) {
    var n = e.instance;
    return ["p-paginator-next", {
      "p-disabled": n.$attrs.disabled
    }];
  },
  nextIcon: "p-paginator-next-icon",
  last: function(e) {
    var n = e.instance;
    return ["p-paginator-last", {
      "p-disabled": n.$attrs.disabled
    }];
  },
  lastIcon: "p-paginator-last-icon",
  pages: "p-paginator-pages",
  page: function(e) {
    var n = e.props, o = e.pageLink;
    return ["p-paginator-page", {
      "p-paginator-page-selected": o - 1 === n.page
    }];
  },
  current: "p-paginator-current",
  pcRowPerPageDropdown: "p-paginator-rpp-dropdown",
  pcJumpToPageDropdown: "p-paginator-jtp-dropdown",
  pcJumpToPageInputText: "p-paginator-jtp-input"
}, k$ = te.extend({
  name: "paginator",
  style: m$,
  classes: y$
}), Um = {
  name: "AngleDoubleLeftIcon",
  extends: Ie
};
function w$(t) {
  return I$(t) || S$(t) || x$(t) || C$();
}
function C$() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function x$(t, e) {
  if (t) {
    if (typeof t == "string") return md(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? md(t, e) : void 0;
  }
}
function S$(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function I$(t) {
  if (Array.isArray(t)) return md(t);
}
function md(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function O$(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), w$(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M5.71602 11.164C5.80782 11.2021 5.9063 11.2215 6.00569 11.221C6.20216 11.2301 6.39427 11.1612 6.54025 11.0294C6.68191 10.8875 6.76148 10.6953 6.76148 10.4948C6.76148 10.2943 6.68191 10.1021 6.54025 9.96024L3.51441 6.9344L6.54025 3.90855C6.624 3.76126 6.65587 3.59011 6.63076 3.42254C6.60564 3.25498 6.525 3.10069 6.40175 2.98442C6.2785 2.86815 6.11978 2.79662 5.95104 2.7813C5.78229 2.76598 5.61329 2.80776 5.47112 2.89994L1.97123 6.39983C1.82957 6.54167 1.75 6.73393 1.75 6.9344C1.75 7.13486 1.82957 7.32712 1.97123 7.46896L5.47112 10.9991C5.54096 11.0698 5.62422 11.1259 5.71602 11.164ZM11.0488 10.9689C11.1775 11.1156 11.3585 11.2061 11.5531 11.221C11.7477 11.2061 11.9288 11.1156 12.0574 10.9689C12.1815 10.8302 12.25 10.6506 12.25 10.4645C12.25 10.2785 12.1815 10.0989 12.0574 9.96024L9.03158 6.93439L12.0574 3.90855C12.1248 3.76739 12.1468 3.60881 12.1204 3.45463C12.0939 3.30045 12.0203 3.15826 11.9097 3.04765C11.7991 2.93703 11.6569 2.86343 11.5027 2.83698C11.3486 2.81053 11.19 2.83252 11.0488 2.89994L7.51865 6.36957C7.37699 6.51141 7.29742 6.70367 7.29742 6.90414C7.29742 7.1046 7.37699 7.29686 7.51865 7.4387L11.0488 10.9689Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Um.render = O$;
var Gm = {
  name: "AngleUpIcon",
  extends: Ie
};
function P$(t) {
  return B$(t) || R$(t) || T$(t) || $$();
}
function $$() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function T$(t, e) {
  if (t) {
    if (typeof t == "string") return gd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? gd(t, e) : void 0;
  }
}
function R$(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function B$(t) {
  if (Array.isArray(t)) return gd(t);
}
function gd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function E$(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), P$(e[0] || (e[0] = [v("path", {
    d: "M10.4134 9.49931C10.3148 9.49977 10.2172 9.48055 10.1262 9.44278C10.0352 9.405 9.95263 9.34942 9.88338 9.27931L6.88338 6.27931L3.88338 9.27931C3.73811 9.34946 3.57409 9.3709 3.41567 9.34044C3.25724 9.30999 3.11286 9.22926 3.00395 9.11025C2.89504 8.99124 2.82741 8.84028 2.8111 8.67978C2.79478 8.51928 2.83065 8.35781 2.91338 8.21931L6.41338 4.71931C6.55401 4.57886 6.74463 4.49997 6.94338 4.49997C7.14213 4.49997 7.33276 4.57886 7.47338 4.71931L10.9734 8.21931C11.1138 8.35994 11.1927 8.55056 11.1927 8.74931C11.1927 8.94806 11.1138 9.13868 10.9734 9.27931C10.9007 9.35315 10.8132 9.41089 10.7168 9.44879C10.6203 9.48669 10.5169 9.5039 10.4134 9.49931Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Gm.render = E$;
var M$ = `
    .p-inputnumber {
        display: inline-flex;
        position: relative;
    }

    .p-inputnumber-button {
        display: flex;
        align-items: center;
        justify-content: center;
        flex: 0 0 auto;
        cursor: pointer;
        background: dt('inputnumber.button.background');
        color: dt('inputnumber.button.color');
        width: dt('inputnumber.button.width');
        transition:
            background dt('inputnumber.transition.duration'),
            color dt('inputnumber.transition.duration'),
            border-color dt('inputnumber.transition.duration'),
            outline-color dt('inputnumber.transition.duration');
    }

    .p-inputnumber-button:disabled {
        cursor: auto;
    }

    .p-inputnumber-button:not(:disabled):hover {
        background: dt('inputnumber.button.hover.background');
        color: dt('inputnumber.button.hover.color');
    }

    .p-inputnumber-button:not(:disabled):active {
        background: dt('inputnumber.button.active.background');
        color: dt('inputnumber.button.active.color');
    }

    .p-inputnumber-stacked .p-inputnumber-button {
        position: relative;
        flex: 1 1 auto;
        border: 0 none;
    }

    .p-inputnumber-stacked .p-inputnumber-button-group {
        display: flex;
        flex-direction: column;
        position: absolute;
        inset-block-start: 1px;
        inset-inline-end: 1px;
        height: calc(100% - 2px);
        z-index: 1;
    }

    .p-inputnumber-stacked .p-inputnumber-increment-button {
        padding: 0;
        border-start-end-radius: calc(dt('inputnumber.button.border.radius') - 1px);
    }

    .p-inputnumber-stacked .p-inputnumber-decrement-button {
        padding: 0;
        border-end-end-radius: calc(dt('inputnumber.button.border.radius') - 1px);
    }

    .p-inputnumber-horizontal .p-inputnumber-button {
        border: 1px solid dt('inputnumber.button.border.color');
    }

    .p-inputnumber-horizontal .p-inputnumber-button:hover {
        border-color: dt('inputnumber.button.hover.border.color');
    }

    .p-inputnumber-horizontal .p-inputnumber-button:active {
        border-color: dt('inputnumber.button.active.border.color');
    }

    .p-inputnumber-horizontal .p-inputnumber-increment-button {
        order: 3;
        border-start-end-radius: dt('inputnumber.button.border.radius');
        border-end-end-radius: dt('inputnumber.button.border.radius');
        border-inline-start: 0 none;
    }

    .p-inputnumber-horizontal .p-inputnumber-input {
        order: 2;
        border-radius: 0;
    }

    .p-inputnumber-horizontal .p-inputnumber-decrement-button {
        order: 1;
        border-start-start-radius: dt('inputnumber.button.border.radius');
        border-end-start-radius: dt('inputnumber.button.border.radius');
        border-inline-end: 0 none;
    }

    .p-floatlabel:has(.p-inputnumber-horizontal) label {
        margin-inline-start: dt('inputnumber.button.width');
    }

    .p-inputnumber-vertical {
        flex-direction: column;
    }

    .p-inputnumber-vertical .p-inputnumber-button {
        border: 1px solid dt('inputnumber.button.border.color');
        padding: dt('inputnumber.button.vertical.padding');
    }

    .p-inputnumber-vertical .p-inputnumber-button:hover {
        border-color: dt('inputnumber.button.hover.border.color');
    }

    .p-inputnumber-vertical .p-inputnumber-button:active {
        border-color: dt('inputnumber.button.active.border.color');
    }

    .p-inputnumber-vertical .p-inputnumber-increment-button {
        order: 1;
        border-start-start-radius: dt('inputnumber.button.border.radius');
        border-start-end-radius: dt('inputnumber.button.border.radius');
        width: 100%;
        border-block-end: 0 none;
    }

    .p-inputnumber-vertical .p-inputnumber-input {
        order: 2;
        border-radius: 0;
        text-align: center;
    }

    .p-inputnumber-vertical .p-inputnumber-decrement-button {
        order: 3;
        border-end-start-radius: dt('inputnumber.button.border.radius');
        border-end-end-radius: dt('inputnumber.button.border.radius');
        width: 100%;
        border-block-start: 0 none;
    }

    .p-inputnumber-input {
        flex: 1 1 auto;
    }

    .p-inputnumber-fluid {
        width: 100%;
    }

    .p-inputnumber-fluid .p-inputnumber-input {
        width: 1%;
    }

    .p-inputnumber-fluid.p-inputnumber-vertical .p-inputnumber-input {
        width: 100%;
    }

    .p-inputnumber:has(.p-inputtext-sm) .p-inputnumber-button .p-icon {
        font-size: dt('form.field.sm.font.size');
        width: dt('form.field.sm.font.size');
        height: dt('form.field.sm.font.size');
    }

    .p-inputnumber:has(.p-inputtext-lg) .p-inputnumber-button .p-icon {
        font-size: dt('form.field.lg.font.size');
        width: dt('form.field.lg.font.size');
        height: dt('form.field.lg.font.size');
    }

    .p-inputnumber-clear-icon {
        position: absolute;
        top: 50%;
        margin-top: -0.5rem;
        cursor: pointer;
        inset-inline-end: dt('form.field.padding.x');
        color: dt('form.field.icon.color');
    }

    .p-inputnumber-stacked .p-inputnumber-clear-icon, 
    .p-inputnumber-horizontal .p-inputnumber-clear-icon {
        inset-inline-end: calc(dt('inputnumber.button.width') + dt('form.field.padding.x'));
    }
`, A$ = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-inputnumber p-component p-inputwrapper", {
      "p-invalid": n.$invalid,
      "p-inputwrapper-filled": n.$filled || o.allowEmpty === !1,
      "p-inputwrapper-focus": n.focused,
      "p-inputnumber-stacked": o.showButtons && o.buttonLayout === "stacked",
      "p-inputnumber-horizontal": o.showButtons && o.buttonLayout === "horizontal",
      "p-inputnumber-vertical": o.showButtons && o.buttonLayout === "vertical",
      "p-inputnumber-fluid": n.$fluid
    }];
  },
  pcInputText: "p-inputnumber-input",
  buttonGroup: "p-inputnumber-button-group",
  incrementButton: function(e) {
    var n = e.instance, o = e.props;
    return ["p-inputnumber-button p-inputnumber-increment-button", {
      "p-disabled": o.showButtons && o.max !== null && n.maxBoundry()
    }];
  },
  decrementButton: function(e) {
    var n = e.instance, o = e.props;
    return ["p-inputnumber-button p-inputnumber-decrement-button", {
      "p-disabled": o.showButtons && o.min !== null && n.minBoundry()
    }];
  }
}, D$ = te.extend({
  name: "inputnumber",
  style: M$,
  classes: A$
}), L$ = {
  name: "BaseInputNumber",
  extends: gr,
  props: {
    format: {
      type: Boolean,
      default: !0
    },
    showButtons: {
      type: Boolean,
      default: !1
    },
    buttonLayout: {
      type: String,
      default: "stacked"
    },
    incrementButtonClass: {
      type: String,
      default: null
    },
    decrementButtonClass: {
      type: String,
      default: null
    },
    incrementButtonIcon: {
      type: String,
      default: void 0
    },
    incrementIcon: {
      type: String,
      default: void 0
    },
    decrementButtonIcon: {
      type: String,
      default: void 0
    },
    decrementIcon: {
      type: String,
      default: void 0
    },
    locale: {
      type: String,
      default: void 0
    },
    localeMatcher: {
      type: String,
      default: void 0
    },
    mode: {
      type: String,
      default: "decimal"
    },
    prefix: {
      type: String,
      default: null
    },
    suffix: {
      type: String,
      default: null
    },
    currency: {
      type: String,
      default: void 0
    },
    currencyDisplay: {
      type: String,
      default: void 0
    },
    useGrouping: {
      type: Boolean,
      default: !0
    },
    minFractionDigits: {
      type: Number,
      default: void 0
    },
    maxFractionDigits: {
      type: Number,
      default: void 0
    },
    roundingMode: {
      type: String,
      default: "halfExpand",
      validator: function(e) {
        return ["ceil", "floor", "expand", "trunc", "halfCeil", "halfFloor", "halfExpand", "halfTrunc", "halfEven"].includes(e);
      }
    },
    min: {
      type: Number,
      default: null
    },
    max: {
      type: Number,
      default: null
    },
    step: {
      type: Number,
      default: 1
    },
    allowEmpty: {
      type: Boolean,
      default: !0
    },
    highlightOnFocus: {
      type: Boolean,
      default: !1
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    placeholder: {
      type: String,
      default: null
    },
    inputId: {
      type: String,
      default: null
    },
    inputClass: {
      type: [String, Object],
      default: null
    },
    inputStyle: {
      type: Object,
      default: null
    },
    ariaLabelledby: {
      type: String,
      default: null
    },
    ariaLabel: {
      type: String,
      default: null
    },
    required: {
      type: Boolean,
      default: !1
    }
  },
  style: D$,
  provide: function() {
    return {
      $pcInputNumber: this,
      $parentInstance: this
    };
  }
};
function Si(t) {
  "@babel/helpers - typeof";
  return Si = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Si(t);
}
function Ep(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Mp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Ep(Object(n), !0).forEach(function(o) {
      bd(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Ep(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function bd(t, e, n) {
  return (e = z$(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function z$(t) {
  var e = F$(t, "string");
  return Si(e) == "symbol" ? e : e + "";
}
function F$(t, e) {
  if (Si(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Si(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function N$(t) {
  return K$(t) || _$(t) || V$(t) || j$();
}
function j$() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function V$(t, e) {
  if (t) {
    if (typeof t == "string") return vd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? vd(t, e) : void 0;
  }
}
function _$(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function K$(t) {
  if (Array.isArray(t)) return vd(t);
}
function vd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var Oc = {
  name: "InputNumber",
  extends: L$,
  inheritAttrs: !1,
  emits: ["input", "focus", "blur"],
  inject: {
    $pcFluid: {
      default: null
    }
  },
  numberFormat: null,
  _numeral: null,
  _decimal: null,
  _group: null,
  _minusSign: null,
  _currency: null,
  _suffix: null,
  _prefix: null,
  _index: null,
  groupChar: "",
  isSpecialChar: null,
  prefixChar: null,
  suffixChar: null,
  timer: null,
  data: function() {
    return {
      // @deprecated
      d_modelValue: this.d_value,
      focused: !1
    };
  },
  watch: {
    d_value: function(e) {
      this.d_modelValue = e;
    },
    locale: function(e, n) {
      this.updateConstructParser(e, n);
    },
    localeMatcher: function(e, n) {
      this.updateConstructParser(e, n);
    },
    mode: function(e, n) {
      this.updateConstructParser(e, n);
    },
    currency: function(e, n) {
      this.updateConstructParser(e, n);
    },
    currencyDisplay: function(e, n) {
      this.updateConstructParser(e, n);
    },
    useGrouping: function(e, n) {
      this.updateConstructParser(e, n);
    },
    minFractionDigits: function(e, n) {
      this.updateConstructParser(e, n);
    },
    maxFractionDigits: function(e, n) {
      this.updateConstructParser(e, n);
    },
    suffix: function(e, n) {
      this.updateConstructParser(e, n);
    },
    prefix: function(e, n) {
      this.updateConstructParser(e, n);
    }
  },
  created: function() {
    this.constructParser();
  },
  methods: {
    getOptions: function() {
      return {
        localeMatcher: this.localeMatcher,
        style: this.mode,
        currency: this.currency,
        currencyDisplay: this.currencyDisplay,
        useGrouping: this.useGrouping,
        minimumFractionDigits: this.minFractionDigits,
        maximumFractionDigits: this.maxFractionDigits,
        roundingMode: this.roundingMode
      };
    },
    constructParser: function() {
      this.numberFormat = new Intl.NumberFormat(this.locale, this.getOptions());
      var e = N$(new Intl.NumberFormat(this.locale, {
        useGrouping: !1
      }).format(9876543210)).reverse(), n = new Map(e.map(function(o, i) {
        return [o, i];
      }));
      this._numeral = new RegExp("[".concat(e.join(""), "]"), "g"), this._group = this.getGroupingExpression(), this._minusSign = this.getMinusSignExpression(), this._currency = this.getCurrencyExpression(), this._decimal = this.getDecimalExpression(), this._suffix = this.getSuffixExpression(), this._prefix = this.getPrefixExpression(), this._index = function(o) {
        return n.get(o);
      };
    },
    updateConstructParser: function(e, n) {
      e !== n && this.constructParser();
    },
    escapeRegExp: function(e) {
      return e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
    },
    getDecimalExpression: function() {
      var e = new Intl.NumberFormat(this.locale, Mp(Mp({}, this.getOptions()), {}, {
        useGrouping: !1
      }));
      return new RegExp("[".concat(e.format(1.1).replace(this._currency, "").trim().replace(this._numeral, ""), "]"), "g");
    },
    getGroupingExpression: function() {
      var e = new Intl.NumberFormat(this.locale, {
        useGrouping: !0
      });
      return this.groupChar = e.format(1e6).trim().replace(this._numeral, "").charAt(0), new RegExp("[".concat(this.groupChar, "]"), "g");
    },
    getMinusSignExpression: function() {
      var e = new Intl.NumberFormat(this.locale, {
        useGrouping: !1
      });
      return new RegExp("[".concat(e.format(-1).trim().replace(this._numeral, ""), "]"), "g");
    },
    getCurrencyExpression: function() {
      if (this.currency) {
        var e = new Intl.NumberFormat(this.locale, {
          style: "currency",
          currency: this.currency,
          currencyDisplay: this.currencyDisplay,
          minimumFractionDigits: 0,
          maximumFractionDigits: 0,
          roundingMode: this.roundingMode
        });
        return new RegExp("[".concat(e.format(1).replace(/\s/g, "").replace(this._numeral, "").replace(this._group, ""), "]"), "g");
      }
      return new RegExp("[]", "g");
    },
    getPrefixExpression: function() {
      if (this.prefix)
        this.prefixChar = this.prefix;
      else {
        var e = new Intl.NumberFormat(this.locale, {
          style: this.mode,
          currency: this.currency,
          currencyDisplay: this.currencyDisplay
        });
        this.prefixChar = e.format(1).split("1")[0];
      }
      return new RegExp("".concat(this.escapeRegExp(this.prefixChar || "")), "g");
    },
    getSuffixExpression: function() {
      if (this.suffix)
        this.suffixChar = this.suffix;
      else {
        var e = new Intl.NumberFormat(this.locale, {
          style: this.mode,
          currency: this.currency,
          currencyDisplay: this.currencyDisplay,
          minimumFractionDigits: 0,
          maximumFractionDigits: 0,
          roundingMode: this.roundingMode
        });
        this.suffixChar = e.format(1).split("1")[1];
      }
      return new RegExp("".concat(this.escapeRegExp(this.suffixChar || "")), "g");
    },
    formatValue: function(e) {
      if (e != null) {
        if (e === "-")
          return e;
        if (this.format) {
          var n = new Intl.NumberFormat(this.locale, this.getOptions()), o = n.format(e);
          return this.prefix && (o = this.prefix + o), this.suffix && (o = o + this.suffix), o;
        }
        return e.toString();
      }
      return "";
    },
    parseValue: function(e) {
      var n = e.replace(this._suffix, "").replace(this._prefix, "").trim().replace(/\s/g, "").replace(this._currency, "").replace(this._group, "").replace(this._minusSign, "-").replace(this._decimal, ".").replace(this._numeral, this._index);
      if (n) {
        if (n === "-")
          return n;
        var o = +n;
        return isNaN(o) ? null : o;
      }
      return null;
    },
    repeat: function(e, n, o) {
      var i = this;
      if (!this.readonly) {
        var r = n || 500;
        this.clearTimer(), this.timer = setTimeout(function() {
          i.repeat(e, 40, o);
        }, r), this.spin(e, o);
      }
    },
    addWithPrecision: function(e, n) {
      var o = e.toString(), i = n.toString(), r = o.includes(".") ? o.split(".")[1].length : 0, a = i.includes(".") ? i.split(".")[1].length : 0, l = Math.max(r, a), s = Math.pow(10, l);
      return Math.round((e + n) * s) / s;
    },
    spin: function(e, n) {
      if (this.$refs.input) {
        var o = this.step * n, i = this.parseValue(this.$refs.input.$el.value) || 0, r = this.validateValue(this.addWithPrecision(i, o));
        this.updateInput(r, null, "spin"), this.updateModel(e, r), this.handleOnInput(e, i, r);
      }
    },
    onUpButtonMouseDown: function(e) {
      this.disabled || (this.$refs.input.$el.focus(), this.repeat(e, null, 1), e.preventDefault());
    },
    onUpButtonMouseUp: function() {
      this.disabled || this.clearTimer();
    },
    onUpButtonMouseLeave: function() {
      this.disabled || this.clearTimer();
    },
    onUpButtonKeyUp: function() {
      this.disabled || this.clearTimer();
    },
    onUpButtonKeyDown: function(e) {
      (e.code === "Space" || e.code === "Enter" || e.code === "NumpadEnter") && this.repeat(e, null, 1);
    },
    onDownButtonMouseDown: function(e) {
      this.disabled || (this.$refs.input.$el.focus(), this.repeat(e, null, -1), e.preventDefault());
    },
    onDownButtonMouseUp: function() {
      this.disabled || this.clearTimer();
    },
    onDownButtonMouseLeave: function() {
      this.disabled || this.clearTimer();
    },
    onDownButtonKeyUp: function() {
      this.disabled || this.clearTimer();
    },
    onDownButtonKeyDown: function(e) {
      (e.code === "Space" || e.code === "Enter" || e.code === "NumpadEnter") && this.repeat(e, null, -1);
    },
    onUserInput: function() {
      this.isSpecialChar && (this.$refs.input.$el.value = this.lastValue), this.isSpecialChar = !1;
    },
    onInputKeyDown: function(e) {
      if (!this.readonly && !e.isComposing) {
        if (e.altKey || e.ctrlKey || e.metaKey) {
          this.isSpecialChar = !0, this.lastValue = this.$refs.input.$el.value;
          return;
        }
        this.lastValue = e.target.value;
        var n = e.target.selectionStart, o = e.target.selectionEnd, i = o - n, r = e.target.value, a = null, l = e.code || e.key;
        switch (l) {
          case "ArrowUp":
            this.spin(e, 1), e.preventDefault();
            break;
          case "ArrowDown":
            this.spin(e, -1), e.preventDefault();
            break;
          case "ArrowLeft":
            if (i > 1) {
              var s = this.isNumeralChar(r.charAt(n)) ? n + 1 : n + 2;
              this.$refs.input.$el.setSelectionRange(s, s);
            } else this.isNumeralChar(r.charAt(n - 1)) || e.preventDefault();
            break;
          case "ArrowRight":
            if (i > 1) {
              var d = o - 1;
              this.$refs.input.$el.setSelectionRange(d, d);
            } else this.isNumeralChar(r.charAt(n)) || e.preventDefault();
            break;
          case "Tab":
          case "Enter":
          case "NumpadEnter":
            a = this.validateValue(this.parseValue(r)), this.$refs.input.$el.value = this.formatValue(a), this.$refs.input.$el.setAttribute("aria-valuenow", a), this.updateModel(e, a);
            break;
          case "Backspace": {
            if (e.preventDefault(), n === o) {
              n >= r.length && this.suffixChar !== null && (n = r.length - this.suffixChar.length, this.$refs.input.$el.setSelectionRange(n, n));
              var c = r.charAt(n - 1), u = this.getDecimalCharIndexes(r), f = u.decimalCharIndex, p = u.decimalCharIndexWithoutPrefix;
              if (this.isNumeralChar(c)) {
                var h = this.getDecimalLength(r);
                if (this._group.test(c))
                  this._group.lastIndex = 0, a = r.slice(0, n - 2) + r.slice(n - 1);
                else if (this._decimal.test(c))
                  this._decimal.lastIndex = 0, h ? this.$refs.input.$el.setSelectionRange(n - 1, n - 1) : a = r.slice(0, n - 1) + r.slice(n);
                else if (f > 0 && n > f) {
                  var g = this.isDecimalMode() && (this.minFractionDigits || 0) < h ? "" : "0";
                  a = r.slice(0, n - 1) + g + r.slice(n);
                } else p === 1 ? (a = r.slice(0, n - 1) + "0" + r.slice(n), a = this.parseValue(a) > 0 ? a : "") : a = r.slice(0, n - 1) + r.slice(n);
              }
              this.updateValue(e, a, null, "delete-single");
            } else
              a = this.deleteRange(r, n, o), this.updateValue(e, a, null, "delete-range");
            break;
          }
          case "Delete":
            if (e.preventDefault(), n === o) {
              var b = r.charAt(n), C = this.getDecimalCharIndexes(r), x = C.decimalCharIndex, R = C.decimalCharIndexWithoutPrefix;
              if (this.isNumeralChar(b)) {
                var w = this.getDecimalLength(r);
                if (this._group.test(b))
                  this._group.lastIndex = 0, a = r.slice(0, n) + r.slice(n + 2);
                else if (this._decimal.test(b))
                  this._decimal.lastIndex = 0, w ? this.$refs.input.$el.setSelectionRange(n + 1, n + 1) : a = r.slice(0, n) + r.slice(n + 1);
                else if (x > 0 && n > x) {
                  var T = this.isDecimalMode() && (this.minFractionDigits || 0) < w ? "" : "0";
                  a = r.slice(0, n) + T + r.slice(n + 1);
                } else R === 1 ? (a = r.slice(0, n) + "0" + r.slice(n + 1), a = this.parseValue(a) > 0 ? a : "") : a = r.slice(0, n) + r.slice(n + 1);
              }
              this.updateValue(e, a, null, "delete-back-single");
            } else
              a = this.deleteRange(r, n, o), this.updateValue(e, a, null, "delete-range");
            break;
          case "Home":
            e.preventDefault(), ae(this.min) && this.updateModel(e, this.min);
            break;
          case "End":
            e.preventDefault(), ae(this.max) && this.updateModel(e, this.max);
            break;
        }
      }
    },
    onInputKeyPress: function(e) {
      if (!this.readonly) {
        var n = e.key, o = this.isDecimalSign(n), i = this.isMinusSign(n);
        e.code !== "Enter" && e.preventDefault(), (Number(n) >= 0 && Number(n) <= 9 || i || o) && this.insert(e, n, {
          isDecimalSign: o,
          isMinusSign: i
        });
      }
    },
    onPaste: function(e) {
      if (!this.readonly) {
        e.preventDefault();
        var n = (e.clipboardData || window.clipboardData).getData("Text");
        if (!(this.inputId === "integeronly" && /[^\d-]/.test(n)) && n) {
          var o = this.parseValue(n);
          o != null && this.insert(e, o.toString());
        }
      }
    },
    allowMinusSign: function() {
      return this.min === null || this.min < 0;
    },
    isMinusSign: function(e) {
      return this._minusSign.test(e) || e === "-" ? (this._minusSign.lastIndex = 0, !0) : !1;
    },
    isDecimalSign: function(e) {
      var n;
      return (n = this.locale) !== null && n !== void 0 && n.includes("fr") && [".", ","].includes(e) || this._decimal.test(e) ? (this._decimal.lastIndex = 0, !0) : !1;
    },
    isDecimalMode: function() {
      return this.mode === "decimal";
    },
    getDecimalCharIndexes: function(e) {
      var n = e.search(this._decimal);
      this._decimal.lastIndex = 0;
      var o = e.replace(this._prefix, "").trim().replace(/\s/g, "").replace(this._currency, ""), i = o.search(this._decimal);
      return this._decimal.lastIndex = 0, {
        decimalCharIndex: n,
        decimalCharIndexWithoutPrefix: i
      };
    },
    getCharIndexes: function(e) {
      var n = e.search(this._decimal);
      this._decimal.lastIndex = 0;
      var o = e.search(this._minusSign);
      this._minusSign.lastIndex = 0;
      var i = e.search(this._suffix);
      this._suffix.lastIndex = 0;
      var r = e.search(this._currency);
      return this._currency.lastIndex = 0, {
        decimalCharIndex: n,
        minusCharIndex: o,
        suffixCharIndex: i,
        currencyCharIndex: r
      };
    },
    insert: function(e, n) {
      var o = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
        isDecimalSign: !1,
        isMinusSign: !1
      }, i = n.search(this._minusSign);
      if (this._minusSign.lastIndex = 0, !(!this.allowMinusSign() && i !== -1)) {
        var r = this.$refs.input.$el.selectionStart, a = this.$refs.input.$el.selectionEnd, l = this.$refs.input.$el.value.trim(), s = this.getCharIndexes(l), d = s.decimalCharIndex, c = s.minusCharIndex, u = s.suffixCharIndex, f = s.currencyCharIndex, p;
        if (o.isMinusSign) {
          var h = c === -1;
          (r === 0 || r === f + 1) && (p = l, (h || a !== 0) && (p = this.insertText(l, n, 0, a)), this.updateValue(e, p, n, "insert"));
        } else if (o.isDecimalSign)
          d > 0 && r === d ? this.updateValue(e, l, n, "insert") : d > r && d < a ? (p = this.insertText(l, n, r, a), this.updateValue(e, p, n, "insert")) : d === -1 && this.maxFractionDigits && (p = this.insertText(l, n, r, a), this.updateValue(e, p, n, "insert"));
        else {
          var g = this.numberFormat.resolvedOptions().maximumFractionDigits, b = r !== a ? "range-insert" : "insert";
          if (d > 0 && r > d) {
            if (r + n.length - (d + 1) <= g) {
              var C = f >= r ? f - 1 : u >= r ? u : l.length;
              p = l.slice(0, r) + n + l.slice(r + n.length, C) + l.slice(C), this.updateValue(e, p, n, b);
            }
          } else
            p = this.insertText(l, n, r, a), this.updateValue(e, p, n, b);
        }
      }
    },
    insertText: function(e, n, o, i) {
      var r = n === "." ? n : n.split(".");
      if (r.length === 2) {
        var a = e.slice(o, i).search(this._decimal);
        return this._decimal.lastIndex = 0, a > 0 ? e.slice(0, o) + this.formatValue(n) + e.slice(i) : this.formatValue(n) || e;
      } else return i - o === e.length ? this.formatValue(n) : o === 0 ? n + e.slice(i) : i === e.length ? e.slice(0, o) + n : e.slice(0, o) + n + e.slice(i);
    },
    deleteRange: function(e, n, o) {
      var i;
      return o - n === e.length ? i = "" : n === 0 ? i = e.slice(o) : o === e.length ? i = e.slice(0, n) : i = e.slice(0, n) + e.slice(o), i;
    },
    initCursor: function() {
      var e = this.$refs.input.$el.selectionStart, n = this.$refs.input.$el.value, o = n.length, i = null, r = (this.prefixChar || "").length;
      n = n.replace(this._prefix, ""), e = e - r;
      var a = n.charAt(e);
      if (this.isNumeralChar(a))
        return e + r;
      for (var l = e - 1; l >= 0; )
        if (a = n.charAt(l), this.isNumeralChar(a)) {
          i = l + r;
          break;
        } else
          l--;
      if (i !== null)
        this.$refs.input.$el.setSelectionRange(i + 1, i + 1);
      else {
        for (l = e; l < o; )
          if (a = n.charAt(l), this.isNumeralChar(a)) {
            i = l + r;
            break;
          } else
            l++;
        i !== null && this.$refs.input.$el.setSelectionRange(i, i);
      }
      return i || 0;
    },
    onInputClick: function() {
      var e = this.$refs.input.$el.value;
      !this.readonly && e !== fu() && this.initCursor();
    },
    isNumeralChar: function(e) {
      return e.length === 1 && (this._numeral.test(e) || this._decimal.test(e) || this._group.test(e) || this._minusSign.test(e)) ? (this.resetRegex(), !0) : !1;
    },
    resetRegex: function() {
      this._numeral.lastIndex = 0, this._decimal.lastIndex = 0, this._group.lastIndex = 0, this._minusSign.lastIndex = 0;
    },
    updateValue: function(e, n, o, i) {
      var r = this.$refs.input.$el.value, a = null;
      n != null && (a = this.parseValue(n), a = !a && !this.allowEmpty ? 0 : a, this.updateInput(a, o, i, n), this.handleOnInput(e, r, a));
    },
    handleOnInput: function(e, n, o) {
      if (this.isValueChanged(n, o)) {
        var i, r;
        this.$emit("input", {
          originalEvent: e,
          value: o,
          formattedValue: n
        }), (i = (r = this.formField).onInput) === null || i === void 0 || i.call(r, {
          originalEvent: e,
          value: o
        });
      }
    },
    isValueChanged: function(e, n) {
      if (n === null && e !== null)
        return !0;
      if (n != null) {
        var o = typeof e == "string" ? this.parseValue(e) : e;
        return n !== o;
      }
      return !1;
    },
    validateValue: function(e) {
      return e === "-" || e == null ? null : this.min != null && e < this.min ? this.min : this.max != null && e > this.max ? this.max : e;
    },
    updateInput: function(e, n, o, i) {
      n = n || "";
      var r = this.$refs.input.$el.value, a = this.formatValue(e), l = r.length;
      if (a !== i && (a = this.concatValues(a, i)), l === 0) {
        this.$refs.input.$el.value = a, this.$refs.input.$el.setSelectionRange(0, 0);
        var s = this.initCursor(), d = s + n.length;
        this.$refs.input.$el.setSelectionRange(d, d);
      } else {
        var c = this.$refs.input.$el.selectionStart, u = this.$refs.input.$el.selectionEnd;
        this.$refs.input.$el.value = a;
        var f = a.length;
        if (o === "range-insert") {
          var p = this.parseValue((r || "").slice(0, c)), h = p !== null ? p.toString() : "", g = h.split("").join("(".concat(this.groupChar, ")?")), b = new RegExp(g, "g");
          b.test(a);
          var C = n.split("").join("(".concat(this.groupChar, ")?")), x = new RegExp(C, "g");
          x.test(a.slice(b.lastIndex)), u = b.lastIndex + x.lastIndex, this.$refs.input.$el.setSelectionRange(u, u);
        } else if (f === l)
          o === "insert" || o === "delete-back-single" ? this.$refs.input.$el.setSelectionRange(u + 1, u + 1) : o === "delete-single" ? this.$refs.input.$el.setSelectionRange(u - 1, u - 1) : (o === "delete-range" || o === "spin") && this.$refs.input.$el.setSelectionRange(u, u);
        else if (o === "delete-back-single") {
          var R = r.charAt(u - 1), w = r.charAt(u), T = l - f, S = this._group.test(w);
          S && T === 1 ? u += 1 : !S && this.isNumeralChar(R) && (u += -1 * T + 1), this._group.lastIndex = 0, this.$refs.input.$el.setSelectionRange(u, u);
        } else if (r === "-" && o === "insert") {
          this.$refs.input.$el.setSelectionRange(0, 0);
          var I = this.initCursor(), B = I + n.length + 1;
          this.$refs.input.$el.setSelectionRange(B, B);
        } else
          u = u + (f - l), this.$refs.input.$el.setSelectionRange(u, u);
      }
      this.$refs.input.$el.setAttribute("aria-valuenow", e);
    },
    concatValues: function(e, n) {
      if (e && n) {
        var o = n.search(this._decimal);
        return this._decimal.lastIndex = 0, this.suffixChar ? o !== -1 ? e.replace(this.suffixChar, "").split(this._decimal)[0] + n.replace(this.suffixChar, "").slice(o) + this.suffixChar : e : o !== -1 ? e.split(this._decimal)[0] + n.slice(o) : e;
      }
      return e;
    },
    getDecimalLength: function(e) {
      if (e) {
        var n = e.split(this._decimal);
        if (n.length === 2)
          return n[1].replace(this._suffix, "").trim().replace(/\s/g, "").replace(this._currency, "").length;
      }
      return 0;
    },
    updateModel: function(e, n) {
      this.writeValue(n, e);
    },
    onInputFocus: function(e) {
      this.focused = !0, !this.disabled && !this.readonly && this.$refs.input.$el.value !== fu() && this.highlightOnFocus && e.target.select(), this.$emit("focus", e);
    },
    onInputBlur: function(e) {
      var n, o;
      this.focused = !1;
      var i = e.target, r = this.validateValue(this.parseValue(i.value));
      this.$emit("blur", {
        originalEvent: e,
        value: i.value
      }), (n = (o = this.formField).onBlur) === null || n === void 0 || n.call(o, e), i.value = this.formatValue(r), i.setAttribute("aria-valuenow", r), this.updateModel(e, r), !this.disabled && !this.readonly && this.highlightOnFocus && Va();
    },
    clearTimer: function() {
      this.timer && clearTimeout(this.timer);
    },
    maxBoundry: function() {
      return this.d_value >= this.max;
    },
    minBoundry: function() {
      return this.d_value <= this.min;
    }
  },
  computed: {
    upButtonListeners: function() {
      var e = this;
      return {
        mousedown: function(o) {
          return e.onUpButtonMouseDown(o);
        },
        mouseup: function(o) {
          return e.onUpButtonMouseUp(o);
        },
        mouseleave: function(o) {
          return e.onUpButtonMouseLeave(o);
        },
        keydown: function(o) {
          return e.onUpButtonKeyDown(o);
        },
        keyup: function(o) {
          return e.onUpButtonKeyUp(o);
        }
      };
    },
    downButtonListeners: function() {
      var e = this;
      return {
        mousedown: function(o) {
          return e.onDownButtonMouseDown(o);
        },
        mouseup: function(o) {
          return e.onDownButtonMouseUp(o);
        },
        mouseleave: function(o) {
          return e.onDownButtonMouseLeave(o);
        },
        keydown: function(o) {
          return e.onDownButtonKeyDown(o);
        },
        keyup: function(o) {
          return e.onDownButtonKeyUp(o);
        }
      };
    },
    formattedValue: function() {
      var e = !this.d_value && !this.allowEmpty ? 0 : this.d_value;
      return this.formatValue(e);
    },
    getFormatter: function() {
      return this.numberFormat;
    },
    dataP: function() {
      return Te(bd(bd({
        invalid: this.$invalid,
        fluid: this.$fluid,
        filled: this.$variant === "filled"
      }, this.size, this.size), this.buttonLayout, this.showButtons && this.buttonLayout));
    }
  },
  components: {
    InputText: oa,
    AngleUpIcon: Gm,
    AngleDownIcon: Sc
  }
}, H$ = ["data-p"], W$ = ["data-p"], U$ = ["disabled", "data-p"], G$ = ["disabled", "data-p"], q$ = ["disabled", "data-p"], J$ = ["disabled", "data-p"];
function Y$(t, e, n, o, i, r) {
  var a = $("InputText");
  return m(), y("span", k({
    class: t.cx("root")
  }, t.ptmi("root"), {
    "data-p": r.dataP
  }), [P(a, {
    ref: "input",
    id: t.inputId,
    name: t.$formName,
    role: "spinbutton",
    class: Y([t.cx("pcInputText"), t.inputClass]),
    style: dc(t.inputStyle),
    defaultValue: r.formattedValue,
    "aria-valuemin": t.min,
    "aria-valuemax": t.max,
    "aria-valuenow": t.d_value,
    inputmode: t.mode === "decimal" && !t.minFractionDigits ? "numeric" : "decimal",
    disabled: t.disabled,
    readonly: t.readonly,
    placeholder: t.placeholder,
    "aria-labelledby": t.ariaLabelledby,
    "aria-label": t.ariaLabel,
    required: t.required,
    size: t.size,
    invalid: t.invalid,
    variant: t.variant,
    onInput: r.onUserInput,
    onKeydown: r.onInputKeyDown,
    onKeypress: r.onInputKeyPress,
    onPaste: r.onPaste,
    onClick: r.onInputClick,
    onFocus: r.onInputFocus,
    onBlur: r.onInputBlur,
    pt: t.ptm("pcInputText"),
    unstyled: t.unstyled,
    "data-p": r.dataP
  }, null, 8, ["id", "name", "class", "style", "defaultValue", "aria-valuemin", "aria-valuemax", "aria-valuenow", "inputmode", "disabled", "readonly", "placeholder", "aria-labelledby", "aria-label", "required", "size", "invalid", "variant", "onInput", "onKeydown", "onKeypress", "onPaste", "onClick", "onFocus", "onBlur", "pt", "unstyled", "data-p"]), t.showButtons && t.buttonLayout === "stacked" ? (m(), y("span", k({
    key: 0,
    class: t.cx("buttonGroup")
  }, t.ptm("buttonGroup"), {
    "data-p": r.dataP
  }), [L(t.$slots, "incrementbutton", {
    listeners: r.upButtonListeners
  }, function() {
    return [v("button", k({
      class: [t.cx("incrementButton"), t.incrementButtonClass]
    }, ya(r.upButtonListeners, !0), {
      disabled: t.disabled,
      tabindex: -1,
      "aria-hidden": "true",
      type: "button"
    }, t.ptm("incrementButton"), {
      "data-p": r.dataP
    }), [L(t.$slots, t.$slots.incrementicon ? "incrementicon" : "incrementbuttonicon", {}, function() {
      return [(m(), O(q(t.incrementIcon || t.incrementButtonIcon ? "span" : "AngleUpIcon"), k({
        class: [t.incrementIcon, t.incrementButtonIcon]
      }, t.ptm("incrementIcon"), {
        "data-pc-section": "incrementicon"
      }), null, 16, ["class"]))];
    })], 16, U$)];
  }), L(t.$slots, "decrementbutton", {
    listeners: r.downButtonListeners
  }, function() {
    return [v("button", k({
      class: [t.cx("decrementButton"), t.decrementButtonClass]
    }, ya(r.downButtonListeners, !0), {
      disabled: t.disabled,
      tabindex: -1,
      "aria-hidden": "true",
      type: "button"
    }, t.ptm("decrementButton"), {
      "data-p": r.dataP
    }), [L(t.$slots, t.$slots.decrementicon ? "decrementicon" : "decrementbuttonicon", {}, function() {
      return [(m(), O(q(t.decrementIcon || t.decrementButtonIcon ? "span" : "AngleDownIcon"), k({
        class: [t.decrementIcon, t.decrementButtonIcon]
      }, t.ptm("decrementIcon"), {
        "data-pc-section": "decrementicon"
      }), null, 16, ["class"]))];
    })], 16, G$)];
  })], 16, W$)) : M("", !0), L(t.$slots, "incrementbutton", {
    listeners: r.upButtonListeners
  }, function() {
    return [t.showButtons && t.buttonLayout !== "stacked" ? (m(), y("button", k({
      key: 0,
      class: [t.cx("incrementButton"), t.incrementButtonClass]
    }, ya(r.upButtonListeners, !0), {
      disabled: t.disabled,
      tabindex: -1,
      "aria-hidden": "true",
      type: "button"
    }, t.ptm("incrementButton"), {
      "data-p": r.dataP
    }), [L(t.$slots, t.$slots.incrementicon ? "incrementicon" : "incrementbuttonicon", {}, function() {
      return [(m(), O(q(t.incrementIcon || t.incrementButtonIcon ? "span" : "AngleUpIcon"), k({
        class: [t.incrementIcon, t.incrementButtonIcon]
      }, t.ptm("incrementIcon"), {
        "data-pc-section": "incrementicon"
      }), null, 16, ["class"]))];
    })], 16, q$)) : M("", !0)];
  }), L(t.$slots, "decrementbutton", {
    listeners: r.downButtonListeners
  }, function() {
    return [t.showButtons && t.buttonLayout !== "stacked" ? (m(), y("button", k({
      key: 0,
      class: [t.cx("decrementButton"), t.decrementButtonClass]
    }, ya(r.downButtonListeners, !0), {
      disabled: t.disabled,
      tabindex: -1,
      "aria-hidden": "true",
      type: "button"
    }, t.ptm("decrementButton"), {
      "data-p": r.dataP
    }), [L(t.$slots, t.$slots.decrementicon ? "decrementicon" : "decrementbuttonicon", {}, function() {
      return [(m(), O(q(t.decrementIcon || t.decrementButtonIcon ? "span" : "AngleDownIcon"), k({
        class: [t.decrementIcon, t.decrementButtonIcon]
      }, t.ptm("decrementIcon"), {
        "data-pc-section": "decrementicon"
      }), null, 16, ["class"]))];
    })], 16, J$)) : M("", !0)];
  })], 16, H$);
}
Oc.render = Y$;
var qm = {
  name: "AngleDoubleRightIcon",
  extends: Ie
};
function X$(t) {
  return tT(t) || eT(t) || Q$(t) || Z$();
}
function Z$() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Q$(t, e) {
  if (t) {
    if (typeof t == "string") return yd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? yd(t, e) : void 0;
  }
}
function eT(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function tT(t) {
  if (Array.isArray(t)) return yd(t);
}
function yd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function nT(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), X$(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M7.68757 11.1451C7.7791 11.1831 7.8773 11.2024 7.9764 11.2019C8.07769 11.1985 8.17721 11.1745 8.26886 11.1312C8.36052 11.088 8.44238 11.0265 8.50943 10.9505L12.0294 7.49085C12.1707 7.34942 12.25 7.15771 12.25 6.95782C12.25 6.75794 12.1707 6.56622 12.0294 6.42479L8.50943 2.90479C8.37014 2.82159 8.20774 2.78551 8.04633 2.80192C7.88491 2.81833 7.73309 2.88635 7.6134 2.99588C7.4937 3.10541 7.41252 3.25061 7.38189 3.40994C7.35126 3.56927 7.37282 3.73423 7.44337 3.88033L10.4605 6.89748L7.44337 9.91463C7.30212 10.0561 7.22278 10.2478 7.22278 10.4477C7.22278 10.6475 7.30212 10.8393 7.44337 10.9807C7.51301 11.0512 7.59603 11.1071 7.68757 11.1451ZM1.94207 10.9505C2.07037 11.0968 2.25089 11.1871 2.44493 11.2019C2.63898 11.1871 2.81949 11.0968 2.94779 10.9505L6.46779 7.49085C6.60905 7.34942 6.68839 7.15771 6.68839 6.95782C6.68839 6.75793 6.60905 6.56622 6.46779 6.42479L2.94779 2.90479C2.80704 2.83757 2.6489 2.81563 2.49517 2.84201C2.34143 2.86839 2.19965 2.94178 2.08936 3.05207C1.97906 3.16237 1.90567 3.30415 1.8793 3.45788C1.85292 3.61162 1.87485 3.76975 1.94207 3.9105L4.95922 6.92765L1.94207 9.9448C1.81838 10.0831 1.75 10.2621 1.75 10.4477C1.75 10.6332 1.81838 10.8122 1.94207 10.9505Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
qm.render = nT;
var Jm = {
  name: "AngleLeftIcon",
  extends: Ie
};
function oT(t) {
  return lT(t) || aT(t) || iT(t) || rT();
}
function rT() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function iT(t, e) {
  if (t) {
    if (typeof t == "string") return kd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? kd(t, e) : void 0;
  }
}
function aT(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function lT(t) {
  if (Array.isArray(t)) return kd(t);
}
function kd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function sT(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), oT(e[0] || (e[0] = [v("path", {
    d: "M8.75 11.185C8.65146 11.1854 8.55381 11.1662 8.4628 11.1284C8.37179 11.0906 8.28924 11.0351 8.22 10.965L4.72 7.46496C4.57955 7.32433 4.50066 7.13371 4.50066 6.93496C4.50066 6.73621 4.57955 6.54558 4.72 6.40496L8.22 2.93496C8.36095 2.84357 8.52851 2.80215 8.69582 2.81733C8.86312 2.83252 9.02048 2.90344 9.14268 3.01872C9.26487 3.134 9.34483 3.28696 9.36973 3.4531C9.39463 3.61924 9.36303 3.78892 9.28 3.93496L6.28 6.93496L9.28 9.93496C9.42045 10.0756 9.49934 10.2662 9.49934 10.465C9.49934 10.6637 9.42045 10.8543 9.28 10.995C9.13526 11.1257 8.9448 11.1939 8.75 11.185Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Jm.render = sT;
var dT = {
  name: "BasePaginator",
  extends: ne,
  props: {
    totalRecords: {
      type: Number,
      default: 0
    },
    rows: {
      type: Number,
      default: 0
    },
    first: {
      type: Number,
      default: 0
    },
    pageLinkSize: {
      type: Number,
      default: 5
    },
    rowsPerPageOptions: {
      type: Array,
      default: null
    },
    template: {
      type: [Object, String],
      default: "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown"
    },
    currentPageReportTemplate: {
      type: null,
      default: "({currentPage} of {totalPages})"
    },
    alwaysShow: {
      type: Boolean,
      default: !0
    }
  },
  style: k$,
  provide: function() {
    return {
      $pcPaginator: this,
      $parentInstance: this
    };
  }
}, Ym = {
  name: "CurrentPageReport",
  hostName: "Paginator",
  extends: ne,
  props: {
    pageCount: {
      type: Number,
      default: 0
    },
    currentPage: {
      type: Number,
      default: 0
    },
    page: {
      type: Number,
      default: 0
    },
    first: {
      type: Number,
      default: 0
    },
    rows: {
      type: Number,
      default: 0
    },
    totalRecords: {
      type: Number,
      default: 0
    },
    template: {
      type: String,
      default: "({currentPage} of {totalPages})"
    }
  },
  computed: {
    text: function() {
      var e = this.template.replace("{currentPage}", this.currentPage).replace("{totalPages}", this.pageCount).replace("{first}", this.pageCount > 0 ? this.first + 1 : 0).replace("{last}", Math.min(this.first + this.rows, this.totalRecords)).replace("{rows}", this.rows).replace("{totalRecords}", this.totalRecords);
      return e;
    }
  }
};
function cT(t, e, n, o, i, r) {
  return m(), y("span", k({
    class: t.cx("current")
  }, t.ptm("current")), re(r.text), 17);
}
Ym.render = cT;
var Xm = {
  name: "FirstPageLink",
  hostName: "Paginator",
  extends: ne,
  props: {
    template: {
      type: Function,
      default: null
    }
  },
  methods: {
    getPTOptions: function(e) {
      return this.ptm(e, {
        context: {
          disabled: this.$attrs.disabled
        }
      });
    }
  },
  components: {
    AngleDoubleLeftIcon: Um
  },
  directives: {
    ripple: mt
  }
};
function uT(t, e, n, o, i, r) {
  var a = tt("ripple");
  return We((m(), y("button", k({
    class: t.cx("first"),
    type: "button"
  }, r.getPTOptions("first"), {
    "data-pc-group-section": "pagebutton"
  }), [(m(), O(q(n.template || "AngleDoubleLeftIcon"), k({
    class: t.cx("firstIcon")
  }, r.getPTOptions("firstIcon")), null, 16, ["class"]))], 16)), [[a]]);
}
Xm.render = uT;
var Zm = {
  name: "JumpToPageDropdown",
  hostName: "Paginator",
  extends: ne,
  emits: ["page-change"],
  props: {
    page: Number,
    pageCount: Number,
    disabled: Boolean,
    templates: null
  },
  methods: {
    onChange: function(e) {
      this.$emit("page-change", e);
    }
  },
  computed: {
    pageOptions: function() {
      for (var e = [], n = 0; n < this.pageCount; n++)
        e.push({
          label: String(n + 1),
          value: n
        });
      return e;
    }
  },
  components: {
    JTPSelect: la
  }
};
function pT(t, e, n, o, i, r) {
  var a = $("JTPSelect");
  return m(), O(a, {
    modelValue: n.page,
    options: r.pageOptions,
    optionLabel: "label",
    optionValue: "value",
    "onUpdate:modelValue": e[0] || (e[0] = function(l) {
      return r.onChange(l);
    }),
    class: Y(t.cx("pcJumpToPageDropdown")),
    disabled: n.disabled,
    unstyled: t.unstyled,
    pt: t.ptm("pcJumpToPageDropdown"),
    "data-pc-group-section": "pagedropdown"
  }, On({
    _: 2
  }, [n.templates.jumptopagedropdownicon ? {
    name: "dropdownicon",
    fn: E(function(l) {
      return [(m(), O(q(n.templates.jumptopagedropdownicon), {
        class: Y(l.class)
      }, null, 8, ["class"]))];
    }),
    key: "0"
  } : void 0]), 1032, ["modelValue", "options", "class", "disabled", "unstyled", "pt"]);
}
Zm.render = pT;
var Qm = {
  name: "JumpToPageInput",
  hostName: "Paginator",
  extends: ne,
  inheritAttrs: !1,
  emits: ["page-change"],
  props: {
    page: Number,
    pageCount: Number,
    disabled: Boolean
  },
  data: function() {
    return {
      d_page: this.page
    };
  },
  watch: {
    page: function(e) {
      this.d_page = e;
    }
  },
  methods: {
    onChange: function(e) {
      e !== this.page && (this.d_page = e, this.$emit("page-change", e - 1));
    }
  },
  computed: {
    inputArialabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.jumpToPageInputLabel : void 0;
    }
  },
  components: {
    JTPInput: Oc
  }
};
function fT(t, e, n, o, i, r) {
  var a = $("JTPInput");
  return m(), O(a, {
    ref: "jtpInput",
    modelValue: i.d_page,
    class: Y(t.cx("pcJumpToPageInputText")),
    "aria-label": r.inputArialabel,
    disabled: n.disabled,
    "onUpdate:modelValue": r.onChange,
    unstyled: t.unstyled,
    pt: t.ptm("pcJumpToPageInputText")
  }, null, 8, ["modelValue", "class", "aria-label", "disabled", "onUpdate:modelValue", "unstyled", "pt"]);
}
Qm.render = fT;
var eg = {
  name: "LastPageLink",
  hostName: "Paginator",
  extends: ne,
  props: {
    template: {
      type: Function,
      default: null
    }
  },
  methods: {
    getPTOptions: function(e) {
      return this.ptm(e, {
        context: {
          disabled: this.$attrs.disabled
        }
      });
    }
  },
  components: {
    AngleDoubleRightIcon: qm
  },
  directives: {
    ripple: mt
  }
};
function hT(t, e, n, o, i, r) {
  var a = tt("ripple");
  return We((m(), y("button", k({
    class: t.cx("last"),
    type: "button"
  }, r.getPTOptions("last"), {
    "data-pc-group-section": "pagebutton"
  }), [(m(), O(q(n.template || "AngleDoubleRightIcon"), k({
    class: t.cx("lastIcon")
  }, r.getPTOptions("lastIcon")), null, 16, ["class"]))], 16)), [[a]]);
}
eg.render = hT;
var tg = {
  name: "NextPageLink",
  hostName: "Paginator",
  extends: ne,
  props: {
    template: {
      type: Function,
      default: null
    }
  },
  methods: {
    getPTOptions: function(e) {
      return this.ptm(e, {
        context: {
          disabled: this.$attrs.disabled
        }
      });
    }
  },
  components: {
    AngleRightIcon: Ic
  },
  directives: {
    ripple: mt
  }
};
function mT(t, e, n, o, i, r) {
  var a = tt("ripple");
  return We((m(), y("button", k({
    class: t.cx("next"),
    type: "button"
  }, r.getPTOptions("next"), {
    "data-pc-group-section": "pagebutton"
  }), [(m(), O(q(n.template || "AngleRightIcon"), k({
    class: t.cx("nextIcon")
  }, r.getPTOptions("nextIcon")), null, 16, ["class"]))], 16)), [[a]]);
}
tg.render = mT;
var ng = {
  name: "PageLinks",
  hostName: "Paginator",
  extends: ne,
  inheritAttrs: !1,
  emits: ["click"],
  props: {
    value: Array,
    page: Number
  },
  methods: {
    getPTOptions: function(e, n) {
      return this.ptm(n, {
        context: {
          active: e === this.page
        }
      });
    },
    onPageLinkClick: function(e, n) {
      this.$emit("click", {
        originalEvent: e,
        value: n
      });
    },
    ariaPageLabel: function(e) {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.pageLabel.replace(/{page}/g, e) : void 0;
    }
  },
  directives: {
    ripple: mt
  }
}, gT = ["aria-label", "aria-current", "onClick", "data-p-active"];
function bT(t, e, n, o, i, r) {
  var a = tt("ripple");
  return m(), y("span", k({
    class: t.cx("pages")
  }, t.ptm("pages")), [(m(!0), y(_, null, fe(n.value, function(l) {
    return We((m(), y("button", k({
      key: l,
      class: t.cx("page", {
        pageLink: l
      }),
      type: "button",
      "aria-label": r.ariaPageLabel(l),
      "aria-current": l - 1 === n.page ? "page" : void 0,
      onClick: function(d) {
        return r.onPageLinkClick(d, l);
      }
    }, {
      ref_for: !0
    }, r.getPTOptions(l - 1, "page"), {
      "data-p-active": l - 1 === n.page
    }), [ee(re(l), 1)], 16, gT)), [[a]]);
  }), 128))], 16);
}
ng.render = bT;
var og = {
  name: "PrevPageLink",
  hostName: "Paginator",
  extends: ne,
  props: {
    template: {
      type: Function,
      default: null
    }
  },
  methods: {
    getPTOptions: function(e) {
      return this.ptm(e, {
        context: {
          disabled: this.$attrs.disabled
        }
      });
    }
  },
  components: {
    AngleLeftIcon: Jm
  },
  directives: {
    ripple: mt
  }
};
function vT(t, e, n, o, i, r) {
  var a = tt("ripple");
  return We((m(), y("button", k({
    class: t.cx("prev"),
    type: "button"
  }, r.getPTOptions("prev"), {
    "data-pc-group-section": "pagebutton"
  }), [(m(), O(q(n.template || "AngleLeftIcon"), k({
    class: t.cx("prevIcon")
  }, r.getPTOptions("prevIcon")), null, 16, ["class"]))], 16)), [[a]]);
}
og.render = vT;
var rg = {
  name: "RowsPerPageDropdown",
  hostName: "Paginator",
  extends: ne,
  emits: ["rows-change"],
  props: {
    options: Array,
    rows: Number,
    disabled: Boolean,
    templates: null
  },
  methods: {
    onChange: function(e) {
      this.$emit("rows-change", e);
    }
  },
  computed: {
    rowsOptions: function() {
      var e = [];
      if (this.options)
        for (var n = 0; n < this.options.length; n++)
          e.push({
            label: String(this.options[n]),
            value: this.options[n]
          });
      return e;
    }
  },
  components: {
    RPPSelect: la
  }
};
function yT(t, e, n, o, i, r) {
  var a = $("RPPSelect");
  return m(), O(a, {
    modelValue: n.rows,
    options: r.rowsOptions,
    optionLabel: "label",
    optionValue: "value",
    "onUpdate:modelValue": e[0] || (e[0] = function(l) {
      return r.onChange(l);
    }),
    class: Y(t.cx("pcRowPerPageDropdown")),
    disabled: n.disabled,
    unstyled: t.unstyled,
    pt: t.ptm("pcRowPerPageDropdown"),
    "data-pc-group-section": "pagedropdown"
  }, On({
    _: 2
  }, [n.templates.rowsperpagedropdownicon ? {
    name: "dropdownicon",
    fn: E(function(l) {
      return [(m(), O(q(n.templates.rowsperpagedropdownicon), {
        class: Y(l.class)
      }, null, 8, ["class"]))];
    }),
    key: "0"
  } : void 0]), 1032, ["modelValue", "options", "class", "disabled", "unstyled", "pt"]);
}
rg.render = yT;
function wd(t) {
  "@babel/helpers - typeof";
  return wd = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, wd(t);
}
function Ap(t, e) {
  return xT(t) || CT(t, e) || wT(t, e) || kT();
}
function kT() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function wT(t, e) {
  if (t) {
    if (typeof t == "string") return Dp(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Dp(t, e) : void 0;
  }
}
function Dp(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function CT(t, e) {
  var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (n != null) {
    var o, i, r, a, l = [], s = !0, d = !1;
    try {
      if (r = (n = n.call(t)).next, e === 0) {
        if (Object(n) !== n) return;
        s = !1;
      } else for (; !(s = (o = r.call(n)).done) && (l.push(o.value), l.length !== e); s = !0) ;
    } catch (c) {
      d = !0, i = c;
    } finally {
      try {
        if (!s && n.return != null && (a = n.return(), Object(a) !== a)) return;
      } finally {
        if (d) throw i;
      }
    }
    return l;
  }
}
function xT(t) {
  if (Array.isArray(t)) return t;
}
var ig = {
  name: "Paginator",
  extends: dT,
  inheritAttrs: !1,
  emits: ["update:first", "update:rows", "page"],
  data: function() {
    return {
      d_first: this.first,
      d_rows: this.rows
    };
  },
  watch: {
    first: function(e) {
      this.d_first = e;
    },
    rows: function(e) {
      this.d_rows = e;
    },
    totalRecords: function(e) {
      this.page > 0 && e && this.d_first >= e && this.changePage(this.pageCount - 1);
    }
  },
  mounted: function() {
    this.createStyle();
  },
  methods: {
    changePage: function(e) {
      var n = this.pageCount;
      if (e >= 0 && e < n) {
        this.d_first = this.d_rows * e;
        var o = {
          page: e,
          first: this.d_first,
          rows: this.d_rows,
          pageCount: n
        };
        this.$emit("update:first", this.d_first), this.$emit("update:rows", this.d_rows), this.$emit("page", o);
      }
    },
    changePageToFirst: function(e) {
      this.isFirstPage || this.changePage(0), e.preventDefault();
    },
    changePageToPrev: function(e) {
      this.changePage(this.page - 1), e.preventDefault();
    },
    changePageLink: function(e) {
      this.changePage(e.value - 1), e.originalEvent.preventDefault();
    },
    changePageToNext: function(e) {
      this.changePage(this.page + 1), e.preventDefault();
    },
    changePageToLast: function(e) {
      this.isLastPage || this.changePage(this.pageCount - 1), e.preventDefault();
    },
    onRowChange: function(e) {
      this.d_rows = e, this.changePage(this.page);
    },
    createStyle: function() {
      var e = this;
      if (this.hasBreakpoints() && !this.isUnstyled) {
        var n;
        this.styleElement = document.createElement("style"), this.styleElement.type = "text/css", ea(this.styleElement, "nonce", (n = this.$primevue) === null || n === void 0 || (n = n.config) === null || n === void 0 || (n = n.csp) === null || n === void 0 ? void 0 : n.nonce), document.body.appendChild(this.styleElement);
        var o = "", i = Object.keys(this.template), r = {};
        i.sort(function(h, g) {
          return parseInt(h) - parseInt(g);
        }).forEach(function(h) {
          r[h] = e.template[h];
        });
        for (var a = 0, l = Object.entries(Object.entries(r)); a < l.length; a++) {
          var s = Ap(l[a], 2), d = s[0], c = Ap(s[1], 1), u = c[0], f = void 0, p = void 0;
          u !== "default" && typeof Object.keys(r)[d - 1] == "string" ? p = Number(Object.keys(r)[d - 1].slice(0, -2)) + 1 + "px" : p = Object.keys(r)[d - 1], f = Object.entries(r)[d - 1] ? "and (min-width:".concat(p, ")") : "", u === "default" ? o += `
                            @media screen `.concat(f, ` {
                                .p-paginator[`).concat(this.$attrSelector, `],
                                    display: flex;
                                }
                            }
                        `) : o += `
.p-paginator-`.concat(u, ` {
    display: none;
}
@media screen `).concat(f, " and (max-width: ").concat(u, `) {
    .p-paginator-`).concat(u, ` {
        display: flex;
    }

    .p-paginator-default{
        display: none;
    }
}
                    `);
        }
        this.styleElement.innerHTML = o;
      }
    },
    hasBreakpoints: function() {
      return wd(this.template) === "object";
    },
    getAriaLabel: function(e) {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria[e] : void 0;
    }
  },
  computed: {
    templateItems: function() {
      var e = {};
      if (this.hasBreakpoints()) {
        e = this.template, e.default || (e.default = "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown");
        for (var n in e)
          e[n] = this.template[n].split(" ").map(function(o) {
            return o.trim();
          });
        return e;
      }
      return e.default = this.template.split(" ").map(function(o) {
        return o.trim();
      }), e;
    },
    page: function() {
      return Math.floor(this.d_first / this.d_rows);
    },
    pageCount: function() {
      return Math.ceil(this.totalRecords / this.d_rows);
    },
    isFirstPage: function() {
      return this.page === 0;
    },
    isLastPage: function() {
      return this.page === this.pageCount - 1;
    },
    calculatePageLinkBoundaries: function() {
      var e = this.pageCount, n = Math.min(this.pageLinkSize, e), o = Math.max(0, Math.ceil(this.page - n / 2)), i = Math.min(e - 1, o + n - 1), r = this.pageLinkSize - (i - o + 1);
      return o = Math.max(0, o - r), [o, i];
    },
    pageLinks: function() {
      for (var e = [], n = this.calculatePageLinkBoundaries, o = n[0], i = n[1], r = o; r <= i; r++)
        e.push(r + 1);
      return e;
    },
    currentState: function() {
      return {
        page: this.page,
        first: this.d_first,
        rows: this.d_rows
      };
    },
    empty: function() {
      return this.pageCount === 0;
    },
    currentPage: function() {
      return this.pageCount > 0 ? this.page + 1 : 0;
    },
    last: function() {
      return Math.min(this.d_first + this.rows, this.totalRecords);
    }
  },
  components: {
    CurrentPageReport: Ym,
    FirstPageLink: Xm,
    LastPageLink: eg,
    NextPageLink: tg,
    PageLinks: ng,
    PrevPageLink: og,
    RowsPerPageDropdown: rg,
    JumpToPageDropdown: Zm,
    JumpToPageInput: Qm
  }
};
function ST(t, e, n, o, i, r) {
  var a = $("FirstPageLink"), l = $("PrevPageLink"), s = $("NextPageLink"), d = $("LastPageLink"), c = $("PageLinks"), u = $("CurrentPageReport"), f = $("RowsPerPageDropdown"), p = $("JumpToPageDropdown"), h = $("JumpToPageInput");
  return t.alwaysShow || r.pageLinks && r.pageLinks.length > 1 ? (m(), y("nav", mr(k({
    key: 0
  }, t.ptmi("paginatorContainer"))), [(m(!0), y(_, null, fe(r.templateItems, function(g, b) {
    return m(), y("div", k({
      key: b,
      ref_for: !0,
      ref: "paginator",
      class: t.cx("paginator", {
        key: b
      })
    }, {
      ref_for: !0
    }, t.ptm("root")), [t.$slots.container ? L(t.$slots, "container", {
      key: 0,
      first: i.d_first + 1,
      last: r.last,
      rows: i.d_rows,
      page: r.page,
      pageCount: r.pageCount,
      pageLinks: r.pageLinks,
      totalRecords: t.totalRecords,
      firstPageCallback: r.changePageToFirst,
      lastPageCallback: r.changePageToLast,
      prevPageCallback: r.changePageToPrev,
      nextPageCallback: r.changePageToNext,
      rowChangeCallback: r.onRowChange,
      changePageCallback: r.changePage
    }) : (m(), y(_, {
      key: 1
    }, [t.$slots.start ? (m(), y("div", k({
      key: 0,
      class: t.cx("contentStart")
    }, {
      ref_for: !0
    }, t.ptm("contentStart")), [L(t.$slots, "start", {
      state: r.currentState
    })], 16)) : M("", !0), v("div", k({
      class: t.cx("content")
    }, {
      ref_for: !0
    }, t.ptm("content")), [(m(!0), y(_, null, fe(g, function(C) {
      return m(), y(_, {
        key: C
      }, [C === "FirstPageLink" ? (m(), O(a, {
        key: 0,
        "aria-label": r.getAriaLabel("firstPageLabel"),
        template: t.$slots.firsticon || t.$slots.firstpagelinkicon,
        onClick: e[0] || (e[0] = function(x) {
          return r.changePageToFirst(x);
        }),
        disabled: r.isFirstPage || r.empty,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["aria-label", "template", "disabled", "unstyled", "pt"])) : C === "PrevPageLink" ? (m(), O(l, {
        key: 1,
        "aria-label": r.getAriaLabel("prevPageLabel"),
        template: t.$slots.previcon || t.$slots.prevpagelinkicon,
        onClick: e[1] || (e[1] = function(x) {
          return r.changePageToPrev(x);
        }),
        disabled: r.isFirstPage || r.empty,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["aria-label", "template", "disabled", "unstyled", "pt"])) : C === "NextPageLink" ? (m(), O(s, {
        key: 2,
        "aria-label": r.getAriaLabel("nextPageLabel"),
        template: t.$slots.nexticon || t.$slots.nextpagelinkicon,
        onClick: e[2] || (e[2] = function(x) {
          return r.changePageToNext(x);
        }),
        disabled: r.isLastPage || r.empty,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["aria-label", "template", "disabled", "unstyled", "pt"])) : C === "LastPageLink" ? (m(), O(d, {
        key: 3,
        "aria-label": r.getAriaLabel("lastPageLabel"),
        template: t.$slots.lasticon || t.$slots.lastpagelinkicon,
        onClick: e[3] || (e[3] = function(x) {
          return r.changePageToLast(x);
        }),
        disabled: r.isLastPage || r.empty,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["aria-label", "template", "disabled", "unstyled", "pt"])) : C === "PageLinks" ? (m(), O(c, {
        key: 4,
        "aria-label": r.getAriaLabel("pageLabel"),
        value: r.pageLinks,
        page: r.page,
        onClick: e[4] || (e[4] = function(x) {
          return r.changePageLink(x);
        }),
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["aria-label", "value", "page", "unstyled", "pt"])) : C === "CurrentPageReport" ? (m(), O(u, {
        key: 5,
        "aria-live": "polite",
        template: t.currentPageReportTemplate,
        currentPage: r.currentPage,
        page: r.page,
        pageCount: r.pageCount,
        first: i.d_first,
        rows: i.d_rows,
        totalRecords: t.totalRecords,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["template", "currentPage", "page", "pageCount", "first", "rows", "totalRecords", "unstyled", "pt"])) : C === "RowsPerPageDropdown" && t.rowsPerPageOptions ? (m(), O(f, {
        key: 6,
        "aria-label": r.getAriaLabel("rowsPerPageLabel"),
        rows: i.d_rows,
        options: t.rowsPerPageOptions,
        onRowsChange: e[5] || (e[5] = function(x) {
          return r.onRowChange(x);
        }),
        disabled: r.empty,
        templates: t.$slots,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["aria-label", "rows", "options", "disabled", "templates", "unstyled", "pt"])) : C === "JumpToPageDropdown" ? (m(), O(p, {
        key: 7,
        "aria-label": r.getAriaLabel("jumpToPageDropdownLabel"),
        page: r.page,
        pageCount: r.pageCount,
        onPageChange: e[6] || (e[6] = function(x) {
          return r.changePage(x);
        }),
        disabled: r.empty,
        templates: t.$slots,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["aria-label", "page", "pageCount", "disabled", "templates", "unstyled", "pt"])) : C === "JumpToPageInput" ? (m(), O(h, {
        key: 8,
        page: r.currentPage,
        onPageChange: e[7] || (e[7] = function(x) {
          return r.changePage(x);
        }),
        disabled: r.empty,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["page", "disabled", "unstyled", "pt"])) : M("", !0)], 64);
    }), 128))], 16), t.$slots.end ? (m(), y("div", k({
      key: 1,
      class: t.cx("contentEnd")
    }, {
      ref_for: !0
    }, t.ptm("contentEnd")), [L(t.$slots, "end", {
      state: r.currentState
    })], 16)) : M("", !0)], 64))], 16);
  }), 128))], 16)) : M("", !0);
}
ig.render = ST;
var IT = `
    .p-datatable {
        position: relative;
    }

    .p-datatable-table {
        border-spacing: 0;
        border-collapse: separate;
        width: 100%;
    }

    .p-datatable-scrollable > .p-datatable-table-container {
        position: relative;
    }

    .p-datatable-scrollable-table > .p-datatable-thead {
        inset-block-start: 0;
        z-index: 1;
    }

    .p-datatable-scrollable-table > .p-datatable-frozen-tbody {
        position: sticky;
        z-index: 1;
    }

    .p-datatable-scrollable-table > .p-datatable-tfoot {
        inset-block-end: 0;
        z-index: 1;
    }

    .p-datatable-scrollable .p-datatable-frozen-column {
        position: sticky;
        background: dt('datatable.header.cell.background');
    }

    .p-datatable-scrollable th.p-datatable-frozen-column {
        z-index: 1;
    }

    .p-datatable-scrollable > .p-datatable-table-container > .p-datatable-table > .p-datatable-thead,
    .p-datatable-scrollable > .p-datatable-table-container > .p-virtualscroller > .p-datatable-table > .p-datatable-thead {
        background: dt('datatable.header.cell.background');
    }

    .p-datatable-scrollable > .p-datatable-table-container > .p-datatable-table > .p-datatable-tfoot,
    .p-datatable-scrollable > .p-datatable-table-container > .p-virtualscroller > .p-datatable-table > .p-datatable-tfoot {
        background: dt('datatable.footer.cell.background');
    }

    .p-datatable-flex-scrollable {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .p-datatable-flex-scrollable > .p-datatable-table-container {
        display: flex;
        flex-direction: column;
        flex: 1;
        height: 100%;
    }

    .p-datatable-scrollable-table > .p-datatable-tbody > .p-datatable-row-group-header {
        position: sticky;
        z-index: 1;
    }

    .p-datatable-resizable-table > .p-datatable-thead > tr > th,
    .p-datatable-resizable-table > .p-datatable-tfoot > tr > td,
    .p-datatable-resizable-table > .p-datatable-tbody > tr > td {
        overflow: hidden;
        white-space: nowrap;
    }

    .p-datatable-resizable-table > .p-datatable-thead > tr > th.p-datatable-resizable-column:not(.p-datatable-frozen-column) {
        background-clip: padding-box;
        position: relative;
    }

    .p-datatable-resizable-table-fit > .p-datatable-thead > tr > th.p-datatable-resizable-column:last-child .p-datatable-column-resizer {
        display: none;
    }

    .p-datatable-column-resizer {
        display: block;
        position: absolute;
        inset-block-start: 0;
        inset-inline-end: 0;
        margin: 0;
        width: dt('datatable.column.resizer.width');
        height: 100%;
        padding: 0;
        cursor: col-resize;
        border: 1px solid transparent;
    }

    .p-datatable-column-header-content {
        display: flex;
        align-items: center;
        gap: dt('datatable.header.cell.gap');
    }

    .p-datatable-column-resize-indicator {
        width: dt('datatable.resize.indicator.width');
        position: absolute;
        z-index: 10;
        display: none;
        background: dt('datatable.resize.indicator.color');
    }

    .p-datatable-row-reorder-indicator-up,
    .p-datatable-row-reorder-indicator-down {
        position: absolute;
        display: none;
    }

    .p-datatable-reorderable-column,
    .p-datatable-reorderable-row-handle {
        cursor: move;
    }

    .p-datatable-mask {
        position: absolute;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2;
    }

    .p-datatable-inline-filter {
        display: flex;
        align-items: center;
        width: 100%;
        gap: dt('datatable.filter.inline.gap');
    }

    .p-datatable-inline-filter .p-datatable-filter-element-container {
        flex: 1 1 auto;
        width: 1%;
    }

    .p-datatable-filter-overlay {
        background: dt('datatable.filter.overlay.select.background');
        color: dt('datatable.filter.overlay.select.color');
        border: 1px solid dt('datatable.filter.overlay.select.border.color');
        border-radius: dt('datatable.filter.overlay.select.border.radius');
        box-shadow: dt('datatable.filter.overlay.select.shadow');
        min-width: 12.5rem;
    }

    .p-datatable-filter-constraint-list {
        margin: 0;
        list-style: none;
        display: flex;
        flex-direction: column;
        padding: dt('datatable.filter.constraint.list.padding');
        gap: dt('datatable.filter.constraint.list.gap');
    }

    .p-datatable-filter-constraint {
        padding: dt('datatable.filter.constraint.padding');
        color: dt('datatable.filter.constraint.color');
        border-radius: dt('datatable.filter.constraint.border.radius');
        cursor: pointer;
        transition:
            background dt('datatable.transition.duration'),
            color dt('datatable.transition.duration'),
            border-color dt('datatable.transition.duration'),
            box-shadow dt('datatable.transition.duration');
    }

    .p-datatable-filter-constraint-selected {
        background: dt('datatable.filter.constraint.selected.background');
        color: dt('datatable.filter.constraint.selected.color');
    }

    .p-datatable-filter-constraint:not(.p-datatable-filter-constraint-selected):not(.p-disabled):hover {
        background: dt('datatable.filter.constraint.focus.background');
        color: dt('datatable.filter.constraint.focus.color');
    }

    .p-datatable-filter-constraint:focus-visible {
        outline: 0 none;
        background: dt('datatable.filter.constraint.focus.background');
        color: dt('datatable.filter.constraint.focus.color');
    }

    .p-datatable-filter-constraint-selected:focus-visible {
        outline: 0 none;
        background: dt('datatable.filter.constraint.selected.focus.background');
        color: dt('datatable.filter.constraint.selected.focus.color');
    }

    .p-datatable-filter-constraint-separator {
        border-block-start: 1px solid dt('datatable.filter.constraint.separator.border.color');
    }

    .p-datatable-popover-filter {
        display: inline-flex;
        margin-inline-start: auto;
    }

    .p-datatable-filter-overlay-popover {
        background: dt('datatable.filter.overlay.popover.background');
        color: dt('datatable.filter.overlay.popover.color');
        border: 1px solid dt('datatable.filter.overlay.popover.border.color');
        border-radius: dt('datatable.filter.overlay.popover.border.radius');
        box-shadow: dt('datatable.filter.overlay.popover.shadow');
        min-width: 12.5rem;
        padding: dt('datatable.filter.overlay.popover.padding');
        display: flex;
        flex-direction: column;
        gap: dt('datatable.filter.overlay.popover.gap');
    }

    .p-datatable-filter-operator-dropdown {
        width: 100%;
    }

    .p-datatable-filter-rule-list,
    .p-datatable-filter-rule {
        display: flex;
        flex-direction: column;
        gap: dt('datatable.filter.overlay.popover.gap');
    }

    .p-datatable-filter-rule {
        border-block-end: 1px solid dt('datatable.filter.rule.border.color');
        padding-bottom: dt('datatable.filter.overlay.popover.gap');
    }

    .p-datatable-filter-rule:last-child {
        border-block-end: 0 none;
        padding-bottom: 0;
    }

    .p-datatable-filter-add-rule-button {
        width: 100%;
    }

    .p-datatable-filter-remove-rule-button {
        width: 100%;
    }

    .p-datatable-filter-buttonbar {
        padding: 0;
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .p-datatable-virtualscroller-spacer {
        display: flex;
    }

    .p-datatable .p-virtualscroller .p-virtualscroller-loading {
        transform: none !important;
        min-height: 0;
        position: sticky;
        inset-block-start: 0;
        inset-inline-start: 0;
    }

    .p-datatable-paginator-top {
        border-color: dt('datatable.paginator.top.border.color');
        border-style: solid;
        border-width: dt('datatable.paginator.top.border.width');
    }

    .p-datatable-paginator-bottom {
        border-color: dt('datatable.paginator.bottom.border.color');
        border-style: solid;
        border-width: dt('datatable.paginator.bottom.border.width');
    }

    .p-datatable-header {
        background: dt('datatable.header.background');
        color: dt('datatable.header.color');
        border-color: dt('datatable.header.border.color');
        border-style: solid;
        border-width: dt('datatable.header.border.width');
        padding: dt('datatable.header.padding');
    }

    .p-datatable-footer {
        background: dt('datatable.footer.background');
        color: dt('datatable.footer.color');
        border-color: dt('datatable.footer.border.color');
        border-style: solid;
        border-width: dt('datatable.footer.border.width');
        padding: dt('datatable.footer.padding');
    }

    .p-datatable-header-cell {
        padding: dt('datatable.header.cell.padding');
        background: dt('datatable.header.cell.background');
        border-color: dt('datatable.header.cell.border.color');
        border-style: solid;
        border-width: 0 0 1px 0;
        color: dt('datatable.header.cell.color');
        font-weight: normal;
        text-align: start;
        transition:
            background dt('datatable.transition.duration'),
            color dt('datatable.transition.duration'),
            border-color dt('datatable.transition.duration'),
            outline-color dt('datatable.transition.duration'),
            box-shadow dt('datatable.transition.duration');
    }

    .p-datatable-column-title {
        font-weight: dt('datatable.column.title.font.weight');
    }

    .p-datatable-tbody > tr {
        outline-color: transparent;
        background: dt('datatable.row.background');
        color: dt('datatable.row.color');
        transition:
            background dt('datatable.transition.duration'),
            color dt('datatable.transition.duration'),
            border-color dt('datatable.transition.duration'),
            outline-color dt('datatable.transition.duration'),
            box-shadow dt('datatable.transition.duration');
    }

    .p-datatable-tbody > tr > td {
        text-align: start;
        border-color: dt('datatable.body.cell.border.color');
        border-style: solid;
        border-width: 0 0 1px 0;
        padding: dt('datatable.body.cell.padding');
    }

    .p-datatable-hoverable .p-datatable-tbody > tr:not(.p-datatable-row-selected):hover {
        background: dt('datatable.row.hover.background');
        color: dt('datatable.row.hover.color');
    }

    .p-datatable-tbody > tr.p-datatable-row-selected {
        background: dt('datatable.row.selected.background');
        color: dt('datatable.row.selected.color');
    }

    .p-datatable-tbody > tr:has(+ .p-datatable-row-selected) > td {
        border-block-end-color: dt('datatable.body.cell.selected.border.color');
    }

    .p-datatable-tbody > tr.p-datatable-row-selected > td {
        border-block-end-color: dt('datatable.body.cell.selected.border.color');
    }

    .p-datatable-tbody > tr:focus-visible,
    .p-datatable-tbody > tr.p-datatable-contextmenu-row-selected {
        box-shadow: dt('datatable.row.focus.ring.shadow');
        outline: dt('datatable.row.focus.ring.width') dt('datatable.row.focus.ring.style') dt('datatable.row.focus.ring.color');
        outline-offset: dt('datatable.row.focus.ring.offset');
    }

    .p-datatable-tfoot > tr > td {
        text-align: start;
        padding: dt('datatable.footer.cell.padding');
        border-color: dt('datatable.footer.cell.border.color');
        border-style: solid;
        border-width: 0 0 1px 0;
        color: dt('datatable.footer.cell.color');
        background: dt('datatable.footer.cell.background');
    }

    .p-datatable-column-footer {
        font-weight: dt('datatable.column.footer.font.weight');
    }

    .p-datatable-sortable-column {
        cursor: pointer;
        user-select: none;
        outline-color: transparent;
    }

    .p-datatable-column-title,
    .p-datatable-sort-icon,
    .p-datatable-sort-badge {
        vertical-align: middle;
    }

    .p-datatable-sort-icon {
        color: dt('datatable.sort.icon.color');
        font-size: dt('datatable.sort.icon.size');
        width: dt('datatable.sort.icon.size');
        height: dt('datatable.sort.icon.size');
        transition: color dt('datatable.transition.duration');
    }

    .p-datatable-sortable-column:not(.p-datatable-column-sorted):hover {
        background: dt('datatable.header.cell.hover.background');
        color: dt('datatable.header.cell.hover.color');
    }

    .p-datatable-sortable-column:not(.p-datatable-column-sorted):hover .p-datatable-sort-icon {
        color: dt('datatable.sort.icon.hover.color');
    }

    .p-datatable-column-sorted {
        background: dt('datatable.header.cell.selected.background');
        color: dt('datatable.header.cell.selected.color');
    }

    .p-datatable-column-sorted .p-datatable-sort-icon {
        color: dt('datatable.header.cell.selected.color');
    }

    .p-datatable-sortable-column:focus-visible {
        box-shadow: dt('datatable.header.cell.focus.ring.shadow');
        outline: dt('datatable.header.cell.focus.ring.width') dt('datatable.header.cell.focus.ring.style') dt('datatable.header.cell.focus.ring.color');
        outline-offset: dt('datatable.header.cell.focus.ring.offset');
    }

    .p-datatable-hoverable .p-datatable-selectable-row {
        cursor: pointer;
    }

    .p-datatable-tbody > tr.p-datatable-dragpoint-top > td {
        box-shadow: inset 0 2px 0 0 dt('datatable.drop.point.color');
    }

    .p-datatable-tbody > tr.p-datatable-dragpoint-bottom > td {
        box-shadow: inset 0 -2px 0 0 dt('datatable.drop.point.color');
    }

    .p-datatable-loading-icon {
        font-size: dt('datatable.loading.icon.size');
        width: dt('datatable.loading.icon.size');
        height: dt('datatable.loading.icon.size');
    }

    .p-datatable-gridlines .p-datatable-header {
        border-width: 1px 1px 0 1px;
    }

    .p-datatable-gridlines .p-datatable-footer {
        border-width: 0 1px 1px 1px;
    }

    .p-datatable-gridlines .p-datatable-paginator-top {
        border-width: 1px 1px 0 1px;
    }

    .p-datatable-gridlines .p-datatable-paginator-bottom {
        border-width: 0 1px 1px 1px;
    }

    .p-datatable-gridlines .p-datatable-thead > tr > th {
        border-width: 1px 0 1px 1px;
    }

    .p-datatable-gridlines .p-datatable-thead > tr > th:last-child {
        border-width: 1px;
    }

    .p-datatable-gridlines .p-datatable-tbody > tr > td {
        border-width: 1px 0 0 1px;
    }

    .p-datatable-gridlines .p-datatable-tbody > tr > td:last-child {
        border-width: 1px 1px 0 1px;
    }

    .p-datatable-gridlines .p-datatable-tbody > tr:last-child > td {
        border-width: 1px 0 1px 1px;
    }

    .p-datatable-gridlines .p-datatable-tbody > tr:last-child > td:last-child {
        border-width: 1px;
    }

    .p-datatable-gridlines .p-datatable-tfoot > tr > td {
        border-width: 1px 0 1px 1px;
    }

    .p-datatable-gridlines .p-datatable-tfoot > tr > td:last-child {
        border-width: 1px 1px 1px 1px;
    }

    .p-datatable.p-datatable-gridlines .p-datatable-thead + .p-datatable-tfoot > tr > td {
        border-width: 0 0 1px 1px;
    }

    .p-datatable.p-datatable-gridlines .p-datatable-thead + .p-datatable-tfoot > tr > td:last-child {
        border-width: 0 1px 1px 1px;
    }

    .p-datatable.p-datatable-gridlines:has(.p-datatable-thead):has(.p-datatable-tbody) .p-datatable-tbody > tr > td {
        border-width: 0 0 1px 1px;
    }

    .p-datatable.p-datatable-gridlines:has(.p-datatable-thead):has(.p-datatable-tbody) .p-datatable-tbody > tr > td:last-child {
        border-width: 0 1px 1px 1px;
    }

    .p-datatable.p-datatable-gridlines:has(.p-datatable-tbody):has(.p-datatable-tfoot) .p-datatable-tbody > tr:last-child > td {
        border-width: 0 0 0 1px;
    }

    .p-datatable.p-datatable-gridlines:has(.p-datatable-tbody):has(.p-datatable-tfoot) .p-datatable-tbody > tr:last-child > td:last-child {
        border-width: 0 1px 0 1px;
    }

    .p-datatable.p-datatable-striped .p-datatable-tbody > tr.p-row-odd {
        background: dt('datatable.row.striped.background');
    }

    .p-datatable.p-datatable-striped .p-datatable-tbody > tr.p-row-odd.p-datatable-row-selected {
        background: dt('datatable.row.selected.background');
        color: dt('datatable.row.selected.color');
    }

    .p-datatable-striped.p-datatable-hoverable .p-datatable-tbody > tr:not(.p-datatable-row-selected):hover {
        background: dt('datatable.row.hover.background');
        color: dt('datatable.row.hover.color');
    }

    .p-datatable.p-datatable-sm .p-datatable-header {
        padding: dt('datatable.header.sm.padding');
    }

    .p-datatable.p-datatable-sm .p-datatable-thead > tr > th {
        padding: dt('datatable.header.cell.sm.padding');
    }

    .p-datatable.p-datatable-sm .p-datatable-tbody > tr > td {
        padding: dt('datatable.body.cell.sm.padding');
    }

    .p-datatable.p-datatable-sm .p-datatable-tfoot > tr > td {
        padding: dt('datatable.footer.cell.sm.padding');
    }

    .p-datatable.p-datatable-sm .p-datatable-footer {
        padding: dt('datatable.footer.sm.padding');
    }

    .p-datatable.p-datatable-lg .p-datatable-header {
        padding: dt('datatable.header.lg.padding');
    }

    .p-datatable.p-datatable-lg .p-datatable-thead > tr > th {
        padding: dt('datatable.header.cell.lg.padding');
    }

    .p-datatable.p-datatable-lg .p-datatable-tbody > tr > td {
        padding: dt('datatable.body.cell.lg.padding');
    }

    .p-datatable.p-datatable-lg .p-datatable-tfoot > tr > td {
        padding: dt('datatable.footer.cell.lg.padding');
    }

    .p-datatable.p-datatable-lg .p-datatable-footer {
        padding: dt('datatable.footer.lg.padding');
    }

    .p-datatable-row-toggle-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        position: relative;
        width: dt('datatable.row.toggle.button.size');
        height: dt('datatable.row.toggle.button.size');
        color: dt('datatable.row.toggle.button.color');
        border: 0 none;
        background: transparent;
        cursor: pointer;
        border-radius: dt('datatable.row.toggle.button.border.radius');
        transition:
            background dt('datatable.transition.duration'),
            color dt('datatable.transition.duration'),
            border-color dt('datatable.transition.duration'),
            outline-color dt('datatable.transition.duration'),
            box-shadow dt('datatable.transition.duration');
        outline-color: transparent;
        user-select: none;
    }

    .p-datatable-row-toggle-button:enabled:hover {
        color: dt('datatable.row.toggle.button.hover.color');
        background: dt('datatable.row.toggle.button.hover.background');
    }

    .p-datatable-tbody > tr.p-datatable-row-selected .p-datatable-row-toggle-button:hover {
        background: dt('datatable.row.toggle.button.selected.hover.background');
        color: dt('datatable.row.toggle.button.selected.hover.color');
    }

    .p-datatable-row-toggle-button:focus-visible {
        box-shadow: dt('datatable.row.toggle.button.focus.ring.shadow');
        outline: dt('datatable.row.toggle.button.focus.ring.width') dt('datatable.row.toggle.button.focus.ring.style') dt('datatable.row.toggle.button.focus.ring.color');
        outline-offset: dt('datatable.row.toggle.button.focus.ring.offset');
    }

    .p-datatable-row-toggle-icon:dir(rtl) {
        transform: rotate(180deg);
    }
`, OT = {
  root: function(e) {
    var n = e.props;
    return ["p-datatable p-component", {
      "p-datatable-hoverable": n.rowHover || n.selectionMode,
      "p-datatable-resizable": n.resizableColumns,
      "p-datatable-resizable-fit": n.resizableColumns && n.columnResizeMode === "fit",
      "p-datatable-scrollable": n.scrollable,
      "p-datatable-flex-scrollable": n.scrollable && n.scrollHeight === "flex",
      "p-datatable-striped": n.stripedRows,
      "p-datatable-gridlines": n.showGridlines,
      "p-datatable-sm": n.size === "small",
      "p-datatable-lg": n.size === "large"
    }];
  },
  mask: "p-datatable-mask p-overlay-mask",
  loadingIcon: "p-datatable-loading-icon",
  header: "p-datatable-header",
  pcPaginator: function(e) {
    var n = e.position;
    return "p-datatable-paginator-" + n;
  },
  tableContainer: "p-datatable-table-container",
  table: function(e) {
    var n = e.props;
    return ["p-datatable-table", {
      "p-datatable-scrollable-table": n.scrollable,
      "p-datatable-resizable-table": n.resizableColumns,
      "p-datatable-resizable-table-fit": n.resizableColumns && n.columnResizeMode === "fit"
    }];
  },
  thead: "p-datatable-thead",
  headerCell: function(e) {
    var n = e.instance, o = e.props, i = e.column;
    return i && !n.columnProp("hidden") && (o.rowGroupMode !== "subheader" || o.groupRowsBy !== n.columnProp(i, "field")) ? ["p-datatable-header-cell", {
      "p-datatable-frozen-column": n.columnProp("frozen")
    }] : ["p-datatable-header-cell", {
      "p-datatable-sortable-column": n.columnProp("sortable"),
      "p-datatable-resizable-column": n.resizableColumns,
      "p-datatable-column-sorted": n.isColumnSorted(),
      "p-datatable-frozen-column": n.columnProp("frozen"),
      "p-datatable-reorderable-column": o.reorderableColumns
    }];
  },
  columnResizer: "p-datatable-column-resizer",
  columnHeaderContent: "p-datatable-column-header-content",
  columnTitle: "p-datatable-column-title",
  columnFooter: "p-datatable-column-footer",
  sortIcon: "p-datatable-sort-icon",
  pcSortBadge: "p-datatable-sort-badge",
  filter: function(e) {
    var n = e.props;
    return ["p-datatable-filter", {
      "p-datatable-inline-filter": n.display === "row",
      "p-datatable-popover-filter": n.display === "menu"
    }];
  },
  filterElementContainer: "p-datatable-filter-element-container",
  pcColumnFilterButton: "p-datatable-column-filter-button",
  pcColumnFilterClearButton: "p-datatable-column-filter-clear-button",
  filterOverlay: function(e) {
    var n = e.props;
    return ["p-datatable-filter-overlay p-component", {
      "p-datatable-filter-overlay-popover": n.display === "menu"
    }];
  },
  filterConstraintList: "p-datatable-filter-constraint-list",
  filterConstraint: function(e) {
    var n = e.instance, o = e.matchMode;
    return ["p-datatable-filter-constraint", {
      "p-datatable-filter-constraint-selected": o && n.isRowMatchModeSelected(o.value)
    }];
  },
  filterConstraintSeparator: "p-datatable-filter-constraint-separator",
  filterOperator: "p-datatable-filter-operator",
  pcFilterOperatorDropdown: "p-datatable-filter-operator-dropdown",
  filterRuleList: "p-datatable-filter-rule-list",
  filterRule: "p-datatable-filter-rule",
  pcFilterConstraintDropdown: "p-datatable-filter-constraint-dropdown",
  pcFilterRemoveRuleButton: "p-datatable-filter-remove-rule-button",
  pcFilterAddRuleButton: "p-datatable-filter-add-rule-button",
  filterButtonbar: "p-datatable-filter-buttonbar",
  pcFilterClearButton: "p-datatable-filter-clear-button",
  pcFilterApplyButton: "p-datatable-filter-apply-button",
  tbody: function(e) {
    var n = e.props;
    return n.frozenRow ? "p-datatable-tbody p-datatable-frozen-tbody" : "p-datatable-tbody";
  },
  rowGroupHeader: "p-datatable-row-group-header",
  rowToggleButton: "p-datatable-row-toggle-button",
  rowToggleIcon: "p-datatable-row-toggle-icon",
  row: function(e) {
    var n = e.instance, o = e.props, i = e.index, r = e.columnSelectionMode, a = [];
    return o.selectionMode && a.push("p-datatable-selectable-row"), o.selection && a.push({
      "p-datatable-row-selected": r ? n.isSelected && n.$parentInstance.$parentInstance.highlightOnSelect : n.isSelected
    }), o.contextMenuSelection && a.push({
      "p-datatable-contextmenu-row-selected": n.isSelectedWithContextMenu
    }), a.push(i % 2 === 0 ? "p-row-even" : "p-row-odd"), a;
  },
  rowExpansion: "p-datatable-row-expansion",
  rowGroupFooter: "p-datatable-row-group-footer",
  emptyMessage: "p-datatable-empty-message",
  bodyCell: function(e) {
    var n = e.instance;
    return [{
      "p-datatable-frozen-column": n.columnProp("frozen")
    }];
  },
  reorderableRowHandle: "p-datatable-reorderable-row-handle",
  pcRowEditorInit: "p-datatable-row-editor-init",
  pcRowEditorSave: "p-datatable-row-editor-save",
  pcRowEditorCancel: "p-datatable-row-editor-cancel",
  tfoot: "p-datatable-tfoot",
  footerCell: function(e) {
    var n = e.instance;
    return [{
      "p-datatable-frozen-column": n.columnProp("frozen")
    }];
  },
  virtualScrollerSpacer: "p-datatable-virtualscroller-spacer",
  footer: "p-datatable-footer",
  columnResizeIndicator: "p-datatable-column-resize-indicator",
  rowReorderIndicatorUp: "p-datatable-row-reorder-indicator-up",
  rowReorderIndicatorDown: "p-datatable-row-reorder-indicator-down"
}, PT = {
  tableContainer: {
    overflow: "auto"
  },
  thead: {
    position: "sticky"
  },
  tfoot: {
    position: "sticky"
  }
}, $T = te.extend({
  name: "datatable",
  style: IT,
  classes: OT,
  inlineStyles: PT
}), ag = {
  name: "PencilIcon",
  extends: Ie
};
function TT(t) {
  return MT(t) || ET(t) || BT(t) || RT();
}
function RT() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function BT(t, e) {
  if (t) {
    if (typeof t == "string") return Cd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Cd(t, e) : void 0;
  }
}
function ET(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function MT(t) {
  if (Array.isArray(t)) return Cd(t);
}
function Cd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function AT(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), TT(e[0] || (e[0] = [v("path", {
    d: "M0.609628 13.959C0.530658 13.9599 0.452305 13.9451 0.379077 13.9156C0.305849 13.8861 0.239191 13.8424 0.18294 13.787C0.118447 13.7234 0.0688234 13.6464 0.0376166 13.5614C0.00640987 13.4765 -0.00560954 13.3857 0.00241768 13.2956L0.25679 10.1501C0.267698 10.0041 0.331934 9.86709 0.437312 9.76516L9.51265 0.705715C10.0183 0.233014 10.6911 -0.0203041 11.3835 0.00127367C12.0714 0.00660201 12.7315 0.27311 13.2298 0.746671C13.7076 1.23651 13.9824 1.88848 13.9992 2.57201C14.0159 3.25554 13.7733 3.92015 13.32 4.4327L4.23648 13.5331C4.13482 13.6342 4.0017 13.6978 3.85903 13.7133L0.667067 14L0.609628 13.959ZM1.43018 10.4696L1.25787 12.714L3.50619 12.5092L12.4502 3.56444C12.6246 3.35841 12.7361 3.10674 12.7714 2.83933C12.8067 2.57193 12.7644 2.30002 12.6495 2.05591C12.5346 1.8118 12.3519 1.60575 12.1231 1.46224C11.8943 1.31873 11.6291 1.2438 11.3589 1.24633C11.1813 1.23508 11.0033 1.25975 10.8355 1.31887C10.6677 1.37798 10.5136 1.47033 10.3824 1.59036L1.43018 10.4696Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
ag.render = AT;
var DT = `
    .p-radiobutton {
        position: relative;
        display: inline-flex;
        user-select: none;
        vertical-align: bottom;
        width: dt('radiobutton.width');
        height: dt('radiobutton.height');
    }

    .p-radiobutton-input {
        cursor: pointer;
        appearance: none;
        position: absolute;
        top: 0;
        inset-inline-start: 0;
        width: 100%;
        height: 100%;
        padding: 0;
        margin: 0;
        opacity: 0;
        z-index: 1;
        outline: 0 none;
        border: 1px solid transparent;
        border-radius: 50%;
    }

    .p-radiobutton-box {
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 50%;
        border: 1px solid dt('radiobutton.border.color');
        background: dt('radiobutton.background');
        width: dt('radiobutton.width');
        height: dt('radiobutton.height');
        transition:
            background dt('radiobutton.transition.duration'),
            color dt('radiobutton.transition.duration'),
            border-color dt('radiobutton.transition.duration'),
            box-shadow dt('radiobutton.transition.duration'),
            outline-color dt('radiobutton.transition.duration');
        outline-color: transparent;
        box-shadow: dt('radiobutton.shadow');
    }

    .p-radiobutton-icon {
        transition-duration: dt('radiobutton.transition.duration');
        background: transparent;
        font-size: dt('radiobutton.icon.size');
        width: dt('radiobutton.icon.size');
        height: dt('radiobutton.icon.size');
        border-radius: 50%;
        backface-visibility: hidden;
        transform: translateZ(0) scale(0.1);
    }

    .p-radiobutton:not(.p-disabled):has(.p-radiobutton-input:hover) .p-radiobutton-box {
        border-color: dt('radiobutton.hover.border.color');
    }

    .p-radiobutton-checked .p-radiobutton-box {
        border-color: dt('radiobutton.checked.border.color');
        background: dt('radiobutton.checked.background');
    }

    .p-radiobutton-checked .p-radiobutton-box .p-radiobutton-icon {
        background: dt('radiobutton.icon.checked.color');
        transform: translateZ(0) scale(1, 1);
        visibility: visible;
    }

    .p-radiobutton-checked:not(.p-disabled):has(.p-radiobutton-input:hover) .p-radiobutton-box {
        border-color: dt('radiobutton.checked.hover.border.color');
        background: dt('radiobutton.checked.hover.background');
    }

    .p-radiobutton:not(.p-disabled):has(.p-radiobutton-input:hover).p-radiobutton-checked .p-radiobutton-box .p-radiobutton-icon {
        background: dt('radiobutton.icon.checked.hover.color');
    }

    .p-radiobutton:not(.p-disabled):has(.p-radiobutton-input:focus-visible) .p-radiobutton-box {
        border-color: dt('radiobutton.focus.border.color');
        box-shadow: dt('radiobutton.focus.ring.shadow');
        outline: dt('radiobutton.focus.ring.width') dt('radiobutton.focus.ring.style') dt('radiobutton.focus.ring.color');
        outline-offset: dt('radiobutton.focus.ring.offset');
    }

    .p-radiobutton-checked:not(.p-disabled):has(.p-radiobutton-input:focus-visible) .p-radiobutton-box {
        border-color: dt('radiobutton.checked.focus.border.color');
    }

    .p-radiobutton.p-invalid > .p-radiobutton-box {
        border-color: dt('radiobutton.invalid.border.color');
    }

    .p-radiobutton.p-variant-filled .p-radiobutton-box {
        background: dt('radiobutton.filled.background');
    }

    .p-radiobutton.p-variant-filled.p-radiobutton-checked .p-radiobutton-box {
        background: dt('radiobutton.checked.background');
    }

    .p-radiobutton.p-variant-filled:not(.p-disabled):has(.p-radiobutton-input:hover).p-radiobutton-checked .p-radiobutton-box {
        background: dt('radiobutton.checked.hover.background');
    }

    .p-radiobutton.p-disabled {
        opacity: 1;
    }

    .p-radiobutton.p-disabled .p-radiobutton-box {
        background: dt('radiobutton.disabled.background');
        border-color: dt('radiobutton.checked.disabled.border.color');
    }

    .p-radiobutton-checked.p-disabled .p-radiobutton-box .p-radiobutton-icon {
        background: dt('radiobutton.icon.disabled.color');
    }

    .p-radiobutton-sm,
    .p-radiobutton-sm .p-radiobutton-box {
        width: dt('radiobutton.sm.width');
        height: dt('radiobutton.sm.height');
    }

    .p-radiobutton-sm .p-radiobutton-icon {
        font-size: dt('radiobutton.icon.sm.size');
        width: dt('radiobutton.icon.sm.size');
        height: dt('radiobutton.icon.sm.size');
    }

    .p-radiobutton-lg,
    .p-radiobutton-lg .p-radiobutton-box {
        width: dt('radiobutton.lg.width');
        height: dt('radiobutton.lg.height');
    }

    .p-radiobutton-lg .p-radiobutton-icon {
        font-size: dt('radiobutton.icon.lg.size');
        width: dt('radiobutton.icon.lg.size');
        height: dt('radiobutton.icon.lg.size');
    }
`, LT = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-radiobutton p-component", {
      "p-radiobutton-checked": n.checked,
      "p-disabled": o.disabled,
      "p-invalid": n.$pcRadioButtonGroup ? n.$pcRadioButtonGroup.$invalid : n.$invalid,
      "p-variant-filled": n.$variant === "filled",
      "p-radiobutton-sm p-inputfield-sm": o.size === "small",
      "p-radiobutton-lg p-inputfield-lg": o.size === "large"
    }];
  },
  box: "p-radiobutton-box",
  input: "p-radiobutton-input",
  icon: "p-radiobutton-icon"
}, zT = te.extend({
  name: "radiobutton",
  style: DT,
  classes: LT
}), FT = {
  name: "BaseRadioButton",
  extends: gr,
  props: {
    value: null,
    binary: Boolean,
    readonly: {
      type: Boolean,
      default: !1
    },
    tabindex: {
      type: Number,
      default: null
    },
    inputId: {
      type: String,
      default: null
    },
    inputClass: {
      type: [String, Object],
      default: null
    },
    inputStyle: {
      type: Object,
      default: null
    },
    ariaLabelledby: {
      type: String,
      default: null
    },
    ariaLabel: {
      type: String,
      default: null
    }
  },
  style: zT,
  provide: function() {
    return {
      $pcRadioButton: this,
      $parentInstance: this
    };
  }
};
function Ii(t) {
  "@babel/helpers - typeof";
  return Ii = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ii(t);
}
function NT(t, e, n) {
  return (e = jT(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function jT(t) {
  var e = VT(t, "string");
  return Ii(e) == "symbol" ? e : e + "";
}
function VT(t, e) {
  if (Ii(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ii(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var lg = {
  name: "RadioButton",
  extends: FT,
  inheritAttrs: !1,
  emits: ["change", "focus", "blur"],
  inject: {
    $pcRadioButtonGroup: {
      default: void 0
    }
  },
  methods: {
    getPTOptions: function(e) {
      var n = e === "root" ? this.ptmi : this.ptm;
      return n(e, {
        context: {
          checked: this.checked,
          disabled: this.disabled
        }
      });
    },
    onChange: function(e) {
      if (!this.disabled && !this.readonly) {
        var n = this.binary ? !this.checked : this.value;
        this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.writeValue(n, e) : this.writeValue(n, e), this.$emit("change", e);
      }
    },
    onFocus: function(e) {
      this.$emit("focus", e);
    },
    onBlur: function(e) {
      var n, o;
      this.$emit("blur", e), (n = (o = this.formField).onBlur) === null || n === void 0 || n.call(o, e);
    }
  },
  computed: {
    groupName: function() {
      return this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.groupName : this.$formName;
    },
    checked: function() {
      var e = this.$pcRadioButtonGroup ? this.$pcRadioButtonGroup.d_value : this.d_value;
      return e != null && (this.binary ? !!e : Kt(e, this.value));
    },
    dataP: function() {
      return Te(NT({
        invalid: this.$invalid,
        checked: this.checked,
        disabled: this.disabled,
        filled: this.$variant === "filled"
      }, this.size, this.size));
    }
  }
}, _T = ["data-p-checked", "data-p-disabled", "data-p"], KT = ["id", "value", "name", "checked", "tabindex", "disabled", "readonly", "aria-labelledby", "aria-label", "aria-invalid"], HT = ["data-p"], WT = ["data-p"];
function UT(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root")
  }, r.getPTOptions("root"), {
    "data-p-checked": r.checked,
    "data-p-disabled": t.disabled,
    "data-p": r.dataP
  }), [v("input", k({
    id: t.inputId,
    type: "radio",
    class: [t.cx("input"), t.inputClass],
    style: t.inputStyle,
    value: t.value,
    name: r.groupName,
    checked: r.checked,
    tabindex: t.tabindex,
    disabled: t.disabled,
    readonly: t.readonly,
    "aria-labelledby": t.ariaLabelledby,
    "aria-label": t.ariaLabel,
    "aria-invalid": t.invalid || void 0,
    onFocus: e[0] || (e[0] = function() {
      return r.onFocus && r.onFocus.apply(r, arguments);
    }),
    onBlur: e[1] || (e[1] = function() {
      return r.onBlur && r.onBlur.apply(r, arguments);
    }),
    onChange: e[2] || (e[2] = function() {
      return r.onChange && r.onChange.apply(r, arguments);
    })
  }, r.getPTOptions("input")), null, 16, KT), v("div", k({
    class: t.cx("box")
  }, r.getPTOptions("box"), {
    "data-p": r.dataP
  }), [v("div", k({
    class: t.cx("icon")
  }, r.getPTOptions("icon"), {
    "data-p": r.dataP
  }), null, 16, WT)], 16, HT)], 16, _T);
}
lg.render = UT;
var sg = {
  name: "FilterIcon",
  extends: Ie
};
function GT(t) {
  return XT(t) || YT(t) || JT(t) || qT();
}
function qT() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function JT(t, e) {
  if (t) {
    if (typeof t == "string") return xd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? xd(t, e) : void 0;
  }
}
function YT(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function XT(t) {
  if (Array.isArray(t)) return xd(t);
}
function xd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function ZT(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), GT(e[0] || (e[0] = [v("path", {
    d: "M8.64708 14H5.35296C5.18981 13.9979 5.03395 13.9321 4.91858 13.8167C4.8032 13.7014 4.73745 13.5455 4.73531 13.3824V7L0.329431 0.98C0.259794 0.889466 0.217389 0.780968 0.20718 0.667208C0.19697 0.553448 0.219379 0.439133 0.271783 0.337647C0.324282 0.236453 0.403423 0.151519 0.500663 0.0920138C0.597903 0.0325088 0.709548 0.000692754 0.823548 0H13.1765C13.2905 0.000692754 13.4021 0.0325088 13.4994 0.0920138C13.5966 0.151519 13.6758 0.236453 13.7283 0.337647C13.7807 0.439133 13.8031 0.553448 13.7929 0.667208C13.7826 0.780968 13.7402 0.889466 13.6706 0.98L9.26472 7V13.3824C9.26259 13.5455 9.19683 13.7014 9.08146 13.8167C8.96609 13.9321 8.81022 13.9979 8.64708 14ZM5.97061 12.7647H8.02943V6.79412C8.02878 6.66289 8.07229 6.53527 8.15296 6.43177L11.9412 1.23529H2.05884L5.86355 6.43177C5.94422 6.53527 5.98773 6.66289 5.98708 6.79412L5.97061 12.7647Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
sg.render = ZT;
var dg = {
  name: "FilterFillIcon",
  extends: Ie
};
function QT(t) {
  return oR(t) || nR(t) || tR(t) || eR();
}
function eR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function tR(t, e) {
  if (t) {
    if (typeof t == "string") return Sd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Sd(t, e) : void 0;
  }
}
function nR(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function oR(t) {
  if (Array.isArray(t)) return Sd(t);
}
function Sd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function rR(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), QT(e[0] || (e[0] = [v("path", {
    d: "M13.7274 0.33847C13.6228 0.130941 13.4095 0 13.1764 0H0.82351C0.590451 0 0.377157 0.130941 0.272568 0.33847C0.167157 0.545999 0.187746 0.795529 0.325275 0.98247L4.73527 6.99588V13.3824C4.73527 13.7233 5.01198 14 5.35292 14H8.64704C8.98798 14 9.26469 13.7233 9.26469 13.3824V6.99588L13.6747 0.98247C13.8122 0.795529 13.8328 0.545999 13.7274 0.33847Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
dg.render = rR;
var cg = {
  name: "FilterSlashIcon",
  extends: Ie
};
function iR(t) {
  return dR(t) || sR(t) || lR(t) || aR();
}
function aR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function lR(t, e) {
  if (t) {
    if (typeof t == "string") return Id(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Id(t, e) : void 0;
  }
}
function sR(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function dR(t) {
  if (Array.isArray(t)) return Id(t);
}
function Id(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function cR(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), iR(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M13.4994 0.0920138C13.5967 0.151519 13.6758 0.236453 13.7283 0.337647C13.7807 0.439133 13.8031 0.553448 13.7929 0.667208C13.7827 0.780968 13.7403 0.889466 13.6707 0.98L11.406 4.06823C11.3099 4.19928 11.1656 4.28679 11.005 4.3115C10.8444 4.33621 10.6805 4.2961 10.5495 4.2C10.4184 4.1039 10.3309 3.95967 10.3062 3.79905C10.2815 3.63843 10.3216 3.47458 10.4177 3.34353L11.9412 1.23529H7.41184C7.24803 1.23529 7.09093 1.17022 6.97509 1.05439C6.85926 0.938558 6.79419 0.781457 6.79419 0.617647C6.79419 0.453837 6.85926 0.296736 6.97509 0.180905C7.09093 0.0650733 7.24803 0 7.41184 0H13.1765C13.2905 0.000692754 13.4022 0.0325088 13.4994 0.0920138ZM4.20008 0.181168H4.24126L13.2013 9.03411C13.3169 9.14992 13.3819 9.3069 13.3819 9.47058C13.3819 9.63426 13.3169 9.79124 13.2013 9.90705C13.1445 9.96517 13.0766 10.0112 13.0016 10.0423C12.9266 10.0735 12.846 10.0891 12.7648 10.0882C12.6836 10.0886 12.6032 10.0728 12.5283 10.0417C12.4533 10.0106 12.3853 9.96479 12.3283 9.90705L9.3142 6.92587L9.26479 6.99999V13.3823C9.26265 13.5455 9.19689 13.7014 9.08152 13.8167C8.96615 13.9321 8.81029 13.9979 8.64714 14H5.35302C5.18987 13.9979 5.03401 13.9321 4.91864 13.8167C4.80327 13.7014 4.73751 13.5455 4.73537 13.3823V6.99999L0.329492 1.02117C0.259855 0.930634 0.21745 0.822137 0.207241 0.708376C0.197031 0.594616 0.21944 0.480301 0.271844 0.378815C0.324343 0.277621 0.403484 0.192687 0.500724 0.133182C0.597964 0.073677 0.709609 0.041861 0.823609 0.0411682H3.86243C3.92448 0.0461551 3.9855 0.060022 4.04361 0.0823446C4.10037 0.10735 4.15311 0.140655 4.20008 0.181168ZM8.02949 6.79411C8.02884 6.66289 8.07235 6.53526 8.15302 6.43176L8.42478 6.05293L3.55773 1.23529H2.0589L5.84714 6.43176C5.92781 6.53526 5.97132 6.66289 5.97067 6.79411V12.7647H8.02949V6.79411Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
cg.render = cR;
var ug = {
  name: "PlusIcon",
  extends: Ie
};
function uR(t) {
  return mR(t) || hR(t) || fR(t) || pR();
}
function pR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function fR(t, e) {
  if (t) {
    if (typeof t == "string") return Od(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Od(t, e) : void 0;
  }
}
function hR(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function mR(t) {
  if (Array.isArray(t)) return Od(t);
}
function Od(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function gR(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), uR(e[0] || (e[0] = [v("path", {
    d: "M7.67742 6.32258V0.677419C7.67742 0.497757 7.60605 0.325452 7.47901 0.198411C7.35197 0.0713707 7.17966 0 7 0C6.82034 0 6.64803 0.0713707 6.52099 0.198411C6.39395 0.325452 6.32258 0.497757 6.32258 0.677419V6.32258H0.677419C0.497757 6.32258 0.325452 6.39395 0.198411 6.52099C0.0713707 6.64803 0 6.82034 0 7C0 7.17966 0.0713707 7.35197 0.198411 7.47901C0.325452 7.60605 0.497757 7.67742 0.677419 7.67742H6.32258V13.3226C6.32492 13.5015 6.39704 13.6725 6.52358 13.799C6.65012 13.9255 6.82106 13.9977 7 14C7.17966 14 7.35197 13.9286 7.47901 13.8016C7.60605 13.6745 7.67742 13.5022 7.67742 13.3226V7.67742H13.3226C13.5022 7.67742 13.6745 7.60605 13.8016 7.47901C13.9286 7.35197 14 7.17966 14 7C13.9977 6.82106 13.9255 6.65012 13.799 6.52358C13.6725 6.39704 13.5015 6.32492 13.3226 6.32258H7.67742Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
ug.render = gR;
var pg = {
  name: "TrashIcon",
  extends: Ie
};
function bR(t) {
  return wR(t) || kR(t) || yR(t) || vR();
}
function vR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function yR(t, e) {
  if (t) {
    if (typeof t == "string") return Pd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Pd(t, e) : void 0;
  }
}
function kR(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function wR(t) {
  if (Array.isArray(t)) return Pd(t);
}
function Pd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function CR(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), bR(e[0] || (e[0] = [v("path", {
    "fill-rule": "evenodd",
    "clip-rule": "evenodd",
    d: "M3.44802 13.9955H10.552C10.8056 14.0129 11.06 13.9797 11.3006 13.898C11.5412 13.8163 11.7632 13.6877 11.9537 13.5196C12.1442 13.3515 12.2995 13.1473 12.4104 12.9188C12.5213 12.6903 12.5858 12.442 12.6 12.1884V4.36041H13.4C13.5591 4.36041 13.7117 4.29722 13.8243 4.18476C13.9368 4.07229 14 3.91976 14 3.76071C14 3.60166 13.9368 3.44912 13.8243 3.33666C13.7117 3.22419 13.5591 3.16101 13.4 3.16101H12.0537C12.0203 3.1557 11.9863 3.15299 11.952 3.15299C11.9178 3.15299 11.8838 3.1557 11.8503 3.16101H11.2285C11.2421 3.10893 11.2487 3.05513 11.248 3.00106V1.80966C11.2171 1.30262 10.9871 0.828306 10.608 0.48989C10.229 0.151475 9.73159 -0.0236625 9.22402 0.00257442H4.77602C4.27251 -0.0171866 3.78126 0.160868 3.40746 0.498617C3.03365 0.836366 2.807 1.30697 2.77602 1.80966V3.00106C2.77602 3.0556 2.78346 3.10936 2.79776 3.16101H0.6C0.521207 3.16101 0.443185 3.17652 0.37039 3.20666C0.297595 3.2368 0.231451 3.28097 0.175736 3.33666C0.120021 3.39235 0.0758251 3.45846 0.0456722 3.53121C0.0155194 3.60397 0 3.68196 0 3.76071C0 3.83946 0.0155194 3.91744 0.0456722 3.9902C0.0758251 4.06296 0.120021 4.12907 0.175736 4.18476C0.231451 4.24045 0.297595 4.28462 0.37039 4.31476C0.443185 4.3449 0.521207 4.36041 0.6 4.36041H1.40002V12.1884C1.41426 12.442 1.47871 12.6903 1.58965 12.9188C1.7006 13.1473 1.85582 13.3515 2.04633 13.5196C2.23683 13.6877 2.45882 13.8163 2.69944 13.898C2.94005 13.9797 3.1945 14.0129 3.44802 13.9955ZM2.60002 4.36041H11.304V12.1884C11.304 12.5163 10.952 12.7961 10.504 12.7961H3.40002C2.97602 12.7961 2.60002 12.5163 2.60002 12.1884V4.36041ZM3.95429 3.16101C3.96859 3.10936 3.97602 3.0556 3.97602 3.00106V1.80966C3.97602 1.48183 4.33602 1.20197 4.77602 1.20197H9.24802C9.66403 1.20197 10.048 1.48183 10.048 1.80966V3.00106C10.0473 3.05515 10.054 3.10896 10.0678 3.16101H3.95429ZM5.57571 10.997C5.41731 10.995 5.26597 10.9311 5.15395 10.8191C5.04193 10.7071 4.97808 10.5558 4.97601 10.3973V6.77517C4.97601 6.61612 5.0392 6.46359 5.15166 6.35112C5.26413 6.23866 5.41666 6.17548 5.57571 6.17548C5.73476 6.17548 5.8873 6.23866 5.99976 6.35112C6.11223 6.46359 6.17541 6.61612 6.17541 6.77517V10.3894C6.17647 10.4688 6.16174 10.5476 6.13208 10.6213C6.10241 10.695 6.05841 10.762 6.00261 10.8186C5.94682 10.8751 5.88035 10.92 5.80707 10.9506C5.73378 10.9813 5.65514 10.9971 5.57571 10.997ZM7.99968 10.8214C8.11215 10.9339 8.26468 10.997 8.42373 10.997C8.58351 10.9949 8.73604 10.93 8.84828 10.8163C8.96052 10.7025 9.02345 10.5491 9.02343 10.3894V6.77517C9.02343 6.61612 8.96025 6.46359 8.84778 6.35112C8.73532 6.23866 8.58278 6.17548 8.42373 6.17548C8.26468 6.17548 8.11215 6.23866 7.99968 6.35112C7.88722 6.46359 7.82404 6.61612 7.82404 6.77517V10.3973C7.82404 10.5564 7.88722 10.7089 7.99968 10.8214Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
pg.render = CR;
var $d = {
  name: "SortAltIcon",
  extends: Ie
};
function xR(t) {
  return PR(t) || OR(t) || IR(t) || SR();
}
function SR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function IR(t, e) {
  if (t) {
    if (typeof t == "string") return Td(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Td(t, e) : void 0;
  }
}
function OR(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function PR(t) {
  if (Array.isArray(t)) return Td(t);
}
function Td(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function $R(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), xR(e[0] || (e[0] = [v("path", {
    d: "M5.64515 3.61291C5.47353 3.61291 5.30192 3.54968 5.16644 3.4142L3.38708 1.63484L1.60773 3.4142C1.34579 3.67613 0.912244 3.67613 0.650309 3.4142C0.388374 3.15226 0.388374 2.71871 0.650309 2.45678L2.90837 0.198712C3.17031 -0.0632236 3.60386 -0.0632236 3.86579 0.198712L6.12386 2.45678C6.38579 2.71871 6.38579 3.15226 6.12386 3.4142C5.98837 3.54968 5.81676 3.61291 5.64515 3.61291Z",
    fill: "currentColor"
  }, null, -1), v("path", {
    d: "M3.38714 14C3.01681 14 2.70972 13.6929 2.70972 13.3226V0.677419C2.70972 0.307097 3.01681 0 3.38714 0C3.75746 0 4.06456 0.307097 4.06456 0.677419V13.3226C4.06456 13.6929 3.75746 14 3.38714 14Z",
    fill: "currentColor"
  }, null, -1), v("path", {
    d: "M10.6129 14C10.4413 14 10.2697 13.9368 10.1342 13.8013L7.87611 11.5432C7.61418 11.2813 7.61418 10.8477 7.87611 10.5858C8.13805 10.3239 8.5716 10.3239 8.83353 10.5858L10.6129 12.3652L12.3922 10.5858C12.6542 10.3239 13.0877 10.3239 13.3497 10.5858C13.6116 10.8477 13.6116 11.2813 13.3497 11.5432L11.0916 13.8013C10.9561 13.9368 10.7845 14 10.6129 14Z",
    fill: "currentColor"
  }, null, -1), v("path", {
    d: "M10.6129 14C10.2426 14 9.93552 13.6929 9.93552 13.3226V0.677419C9.93552 0.307097 10.2426 0 10.6129 0C10.9833 0 11.2904 0.307097 11.2904 0.677419V13.3226C11.2904 13.6929 10.9832 14 10.6129 14Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
$d.render = $R;
var Rd = {
  name: "SortAmountDownIcon",
  extends: Ie
};
function TR(t) {
  return MR(t) || ER(t) || BR(t) || RR();
}
function RR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function BR(t, e) {
  if (t) {
    if (typeof t == "string") return Bd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Bd(t, e) : void 0;
  }
}
function ER(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function MR(t) {
  if (Array.isArray(t)) return Bd(t);
}
function Bd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function AR(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), TR(e[0] || (e[0] = [v("path", {
    d: "M4.93953 10.5858L3.83759 11.6877V0.677419C3.83759 0.307097 3.53049 0 3.16017 0C2.78985 0 2.48275 0.307097 2.48275 0.677419V11.6877L1.38082 10.5858C1.11888 10.3239 0.685331 10.3239 0.423396 10.5858C0.16146 10.8477 0.16146 11.2813 0.423396 11.5432L2.68146 13.8013C2.74469 13.8645 2.81694 13.9097 2.89823 13.9458C2.97952 13.9819 3.06985 14 3.16017 14C3.25049 14 3.33178 13.9819 3.42211 13.9458C3.5034 13.9097 3.57565 13.8645 3.63888 13.8013L5.89694 11.5432C6.15888 11.2813 6.15888 10.8477 5.89694 10.5858C5.63501 10.3239 5.20146 10.3239 4.93953 10.5858ZM13.0957 0H7.22468C6.85436 0 6.54726 0.307097 6.54726 0.677419C6.54726 1.04774 6.85436 1.35484 7.22468 1.35484H13.0957C13.466 1.35484 13.7731 1.04774 13.7731 0.677419C13.7731 0.307097 13.466 0 13.0957 0ZM7.22468 5.41935H9.48275C9.85307 5.41935 10.1602 5.72645 10.1602 6.09677C10.1602 6.4671 9.85307 6.77419 9.48275 6.77419H7.22468C6.85436 6.77419 6.54726 6.4671 6.54726 6.09677C6.54726 5.72645 6.85436 5.41935 7.22468 5.41935ZM7.6763 8.12903H7.22468C6.85436 8.12903 6.54726 8.43613 6.54726 8.80645C6.54726 9.17677 6.85436 9.48387 7.22468 9.48387H7.6763C8.04662 9.48387 8.35372 9.17677 8.35372 8.80645C8.35372 8.43613 8.04662 8.12903 7.6763 8.12903ZM7.22468 2.70968H11.2892C11.6595 2.70968 11.9666 3.01677 11.9666 3.3871C11.9666 3.75742 11.6595 4.06452 11.2892 4.06452H7.22468C6.85436 4.06452 6.54726 3.75742 6.54726 3.3871C6.54726 3.01677 6.85436 2.70968 7.22468 2.70968Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Rd.render = AR;
var Ed = {
  name: "SortAmountUpAltIcon",
  extends: Ie
};
function DR(t) {
  return NR(t) || FR(t) || zR(t) || LR();
}
function LR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function zR(t, e) {
  if (t) {
    if (typeof t == "string") return Md(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Md(t, e) : void 0;
  }
}
function FR(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function NR(t) {
  if (Array.isArray(t)) return Md(t);
}
function Md(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function jR(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), DR(e[0] || (e[0] = [v("path", {
    d: "M3.63435 0.19871C3.57113 0.135484 3.49887 0.0903226 3.41758 0.0541935C3.255 -0.0180645 3.06532 -0.0180645 2.90274 0.0541935C2.82145 0.0903226 2.74919 0.135484 2.68597 0.19871L0.427901 2.45677C0.165965 2.71871 0.165965 3.15226 0.427901 3.41419C0.689836 3.67613 1.12338 3.67613 1.38532 3.41419L2.48726 2.31226V13.3226C2.48726 13.6929 2.79435 14 3.16467 14C3.535 14 3.84209 13.6929 3.84209 13.3226V2.31226L4.94403 3.41419C5.07951 3.54968 5.25113 3.6129 5.42274 3.6129C5.59435 3.6129 5.76597 3.54968 5.90145 3.41419C6.16338 3.15226 6.16338 2.71871 5.90145 2.45677L3.64338 0.19871H3.63435ZM13.7685 13.3226C13.7685 12.9523 13.4615 12.6452 13.0911 12.6452H7.22016C6.84984 12.6452 6.54274 12.9523 6.54274 13.3226C6.54274 13.6929 6.84984 14 7.22016 14H13.0911C13.4615 14 13.7685 13.6929 13.7685 13.3226ZM7.22016 8.58064C6.84984 8.58064 6.54274 8.27355 6.54274 7.90323C6.54274 7.5329 6.84984 7.22581 7.22016 7.22581H9.47823C9.84855 7.22581 10.1556 7.5329 10.1556 7.90323C10.1556 8.27355 9.84855 8.58064 9.47823 8.58064H7.22016ZM7.22016 5.87097H7.67177C8.0421 5.87097 8.34919 5.56387 8.34919 5.19355C8.34919 4.82323 8.0421 4.51613 7.67177 4.51613H7.22016C6.84984 4.51613 6.54274 4.82323 6.54274 5.19355C6.54274 5.56387 6.84984 5.87097 7.22016 5.87097ZM11.2847 11.2903H7.22016C6.84984 11.2903 6.54274 10.9832 6.54274 10.6129C6.54274 10.2426 6.84984 9.93548 7.22016 9.93548H11.2847C11.655 9.93548 11.9621 10.2426 11.9621 10.6129C11.9621 10.9832 11.655 11.2903 11.2847 11.2903Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Ed.render = jR;
var VR = {
  name: "BaseDataTable",
  extends: ne,
  props: {
    value: {
      type: Array,
      default: null
    },
    dataKey: {
      type: [String, Function],
      default: null
    },
    rows: {
      type: Number,
      default: 0
    },
    first: {
      type: Number,
      default: 0
    },
    totalRecords: {
      type: Number,
      default: 0
    },
    paginator: {
      type: Boolean,
      default: !1
    },
    paginatorPosition: {
      type: String,
      default: "bottom"
    },
    alwaysShowPaginator: {
      type: Boolean,
      default: !0
    },
    paginatorTemplate: {
      type: [Object, String],
      default: "FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown"
    },
    pageLinkSize: {
      type: Number,
      default: 5
    },
    rowsPerPageOptions: {
      type: Array,
      default: null
    },
    currentPageReportTemplate: {
      type: String,
      default: "({currentPage} of {totalPages})"
    },
    lazy: {
      type: Boolean,
      default: !1
    },
    loading: {
      type: Boolean,
      default: !1
    },
    loadingIcon: {
      type: String,
      default: void 0
    },
    sortField: {
      type: [String, Function],
      default: null
    },
    sortOrder: {
      type: Number,
      default: null
    },
    defaultSortOrder: {
      type: Number,
      default: 1
    },
    nullSortOrder: {
      type: Number,
      default: 1
    },
    multiSortMeta: {
      type: Array,
      default: null
    },
    sortMode: {
      type: String,
      default: "single"
    },
    removableSort: {
      type: Boolean,
      default: !1
    },
    filters: {
      type: Object,
      default: null
    },
    filterDisplay: {
      type: String,
      default: null
    },
    globalFilterFields: {
      type: Array,
      default: null
    },
    filterLocale: {
      type: String,
      default: void 0
    },
    selection: {
      type: [Array, Object],
      default: null
    },
    selectionMode: {
      type: String,
      default: null
    },
    compareSelectionBy: {
      type: String,
      default: "deepEquals"
    },
    metaKeySelection: {
      type: Boolean,
      default: !1
    },
    contextMenu: {
      type: Boolean,
      default: !1
    },
    contextMenuSelection: {
      type: Object,
      default: null
    },
    selectAll: {
      type: Boolean,
      default: null
    },
    rowHover: {
      type: Boolean,
      default: !1
    },
    csvSeparator: {
      type: String,
      default: ","
    },
    exportFilename: {
      type: String,
      default: "download"
    },
    exportFunction: {
      type: Function,
      default: null
    },
    resizableColumns: {
      type: Boolean,
      default: !1
    },
    columnResizeMode: {
      type: String,
      default: "fit"
    },
    reorderableColumns: {
      type: Boolean,
      default: !1
    },
    expandedRows: {
      type: [Array, Object],
      default: null
    },
    expandedRowIcon: {
      type: String,
      default: void 0
    },
    collapsedRowIcon: {
      type: String,
      default: void 0
    },
    rowGroupMode: {
      type: String,
      default: null
    },
    groupRowsBy: {
      type: [Array, String, Function],
      default: null
    },
    expandableRowGroups: {
      type: Boolean,
      default: !1
    },
    expandedRowGroups: {
      type: Array,
      default: null
    },
    stateStorage: {
      type: String,
      default: "session"
    },
    stateKey: {
      type: String,
      default: null
    },
    editMode: {
      type: String,
      default: null
    },
    editingRows: {
      type: Array,
      default: null
    },
    rowClass: {
      type: Function,
      default: null
    },
    rowStyle: {
      type: Function,
      default: null
    },
    scrollable: {
      type: Boolean,
      default: !1
    },
    virtualScrollerOptions: {
      type: Object,
      default: null
    },
    scrollHeight: {
      type: String,
      default: null
    },
    frozenValue: {
      type: Array,
      default: null
    },
    breakpoint: {
      type: String,
      default: "960px"
    },
    showHeaders: {
      type: Boolean,
      default: !0
    },
    showGridlines: {
      type: Boolean,
      default: !1
    },
    stripedRows: {
      type: Boolean,
      default: !1
    },
    highlightOnSelect: {
      type: Boolean,
      default: !1
    },
    size: {
      type: String,
      default: null
    },
    tableStyle: {
      type: null,
      default: null
    },
    tableClass: {
      type: [String, Object],
      default: null
    },
    tableProps: {
      type: Object,
      default: null
    },
    filterInputProps: {
      type: null,
      default: null
    },
    filterButtonProps: {
      type: Object,
      default: function() {
        return {
          filter: {
            severity: "secondary",
            text: !0,
            rounded: !0
          },
          inline: {
            clear: {
              severity: "secondary",
              text: !0,
              rounded: !0
            }
          },
          popover: {
            addRule: {
              severity: "info",
              text: !0,
              size: "small"
            },
            removeRule: {
              severity: "danger",
              text: !0,
              size: "small"
            },
            apply: {
              size: "small"
            },
            clear: {
              outlined: !0,
              size: "small"
            }
          }
        };
      }
    },
    editButtonProps: {
      type: Object,
      default: function() {
        return {
          init: {
            severity: "secondary",
            text: !0,
            rounded: !0
          },
          save: {
            severity: "secondary",
            text: !0,
            rounded: !0
          },
          cancel: {
            severity: "secondary",
            text: !0,
            rounded: !0
          }
        };
      }
    }
  },
  style: $T,
  provide: function() {
    return {
      $pcDataTable: this,
      $parentInstance: this
    };
  }
}, fg = {
  name: "RowCheckbox",
  hostName: "DataTable",
  extends: ne,
  emits: ["change"],
  props: {
    value: null,
    checked: null,
    column: null,
    rowCheckboxIconTemplate: {
      type: Function,
      default: null
    },
    index: {
      type: Number,
      default: null
    }
  },
  methods: {
    getColumnPT: function(e) {
      var n = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          checked: this.checked,
          disabled: this.$attrs.disabled
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: n
      }), this.ptm("column.".concat(e), n), this.ptmo(this.getColumnProp(), e, n));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    onChange: function(e) {
      this.$attrs.disabled || this.$emit("change", {
        originalEvent: e,
        data: this.value
      });
    }
  },
  computed: {
    checkboxAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.checked ? this.$primevue.config.locale.aria.selectRow : this.$primevue.config.locale.aria.unselectRow : void 0;
    }
  },
  components: {
    CheckIcon: Tn,
    Checkbox: aa
  }
};
function _R(t, e, n, o, i, r) {
  var a = $("CheckIcon"), l = $("Checkbox");
  return m(), O(l, {
    modelValue: n.checked,
    binary: !0,
    disabled: t.$attrs.disabled,
    "aria-label": r.checkboxAriaLabel,
    onChange: r.onChange,
    unstyled: t.unstyled,
    pt: r.getColumnPT("pcRowCheckbox")
  }, {
    icon: E(function(s) {
      return [n.rowCheckboxIconTemplate ? (m(), O(q(n.rowCheckboxIconTemplate), {
        key: 0,
        checked: s.checked,
        class: Y(s.class)
      }, null, 8, ["checked", "class"])) : !n.rowCheckboxIconTemplate && s.checked ? (m(), O(a, k({
        key: 1,
        class: s.class
      }, r.getColumnPT("pcRowCheckbox.icon")), null, 16, ["class"])) : M("", !0)];
    }),
    _: 1
  }, 8, ["modelValue", "disabled", "aria-label", "onChange", "unstyled", "pt"]);
}
fg.render = _R;
var hg = {
  name: "RowRadioButton",
  hostName: "DataTable",
  extends: ne,
  emits: ["change"],
  props: {
    value: null,
    checked: null,
    name: null,
    column: null,
    index: {
      type: Number,
      default: null
    }
  },
  methods: {
    getColumnPT: function(e) {
      var n = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          checked: this.checked,
          disabled: this.$attrs.disabled
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: n
      }), this.ptm("column.".concat(e), n), this.ptmo(this.getColumnProp(), e, n));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    onChange: function(e) {
      this.$attrs.disabled || this.$emit("change", {
        originalEvent: e,
        data: this.value
      });
    }
  },
  components: {
    RadioButton: lg
  }
};
function KR(t, e, n, o, i, r) {
  var a = $("RadioButton");
  return m(), O(a, {
    modelValue: n.checked,
    binary: !0,
    disabled: t.$attrs.disabled,
    name: n.name,
    onChange: r.onChange,
    unstyled: t.unstyled,
    pt: r.getColumnPT("pcRowRadiobutton")
  }, null, 8, ["modelValue", "disabled", "name", "onChange", "unstyled", "pt"]);
}
hg.render = KR;
function Tr() {
  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */
  var t, e, n = typeof Symbol == "function" ? Symbol : {}, o = n.iterator || "@@iterator", i = n.toStringTag || "@@toStringTag";
  function r(p, h, g, b) {
    var C = h && h.prototype instanceof l ? h : l, x = Object.create(C.prototype);
    return Bt(x, "_invoke", (function(R, w, T) {
      var S, I, B, H = 0, K = T || [], j = !1, F = { p: 0, n: 0, v: t, a: U, f: U.bind(t, 4), d: function(ie, ue) {
        return S = ie, I = 0, B = t, F.n = ue, a;
      } };
      function U(le, ie) {
        for (I = le, B = ie, e = 0; !j && H && !ue && e < K.length; e++) {
          var ue, de = K[e], Ce = F.p, Re = de[2];
          le > 3 ? (ue = Re === ie) && (B = de[(I = de[4]) ? 5 : (I = 3, 3)], de[4] = de[5] = t) : de[0] <= Ce && ((ue = le < 2 && Ce < de[1]) ? (I = 0, F.v = ie, F.n = de[1]) : Ce < Re && (ue = le < 3 || de[0] > ie || ie > Re) && (de[4] = le, de[5] = ie, F.n = Re, I = 0));
        }
        if (ue || le > 1) return a;
        throw j = !0, ie;
      }
      return function(le, ie, ue) {
        if (H > 1) throw TypeError("Generator is already running");
        for (j && ie === 1 && U(ie, ue), I = ie, B = ue; (e = I < 2 ? t : B) || !j; ) {
          S || (I ? I < 3 ? (I > 1 && (F.n = -1), U(I, B)) : F.n = B : F.v = B);
          try {
            if (H = 2, S) {
              if (I || (le = "next"), e = S[le]) {
                if (!(e = e.call(S, B))) throw TypeError("iterator result is not an object");
                if (!e.done) return e;
                B = e.value, I < 2 && (I = 0);
              } else I === 1 && (e = S.return) && e.call(S), I < 2 && (B = TypeError("The iterator does not provide a '" + le + "' method"), I = 1);
              S = t;
            } else if ((e = (j = F.n < 0) ? B : R.call(w, F)) !== a) break;
          } catch (de) {
            S = t, I = 1, B = de;
          } finally {
            H = 1;
          }
        }
        return { value: e, done: j };
      };
    })(p, g, b), !0), x;
  }
  var a = {};
  function l() {
  }
  function s() {
  }
  function d() {
  }
  e = Object.getPrototypeOf;
  var c = [][o] ? e(e([][o]())) : (Bt(e = {}, o, function() {
    return this;
  }), e), u = d.prototype = l.prototype = Object.create(c);
  function f(p) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(p, d) : (p.__proto__ = d, Bt(p, i, "GeneratorFunction")), p.prototype = Object.create(u), p;
  }
  return s.prototype = d, Bt(u, "constructor", d), Bt(d, "constructor", s), s.displayName = "GeneratorFunction", Bt(d, i, "GeneratorFunction"), Bt(u), Bt(u, i, "Generator"), Bt(u, o, function() {
    return this;
  }), Bt(u, "toString", function() {
    return "[object Generator]";
  }), (Tr = function() {
    return { w: r, m: f };
  })();
}
function Bt(t, e, n, o) {
  var i = Object.defineProperty;
  try {
    i({}, "", {});
  } catch {
    i = 0;
  }
  Bt = function(a, l, s, d) {
    function c(u, f) {
      Bt(a, u, function(p) {
        return this._invoke(u, f, p);
      });
    }
    l ? i ? i(a, l, { value: s, enumerable: !d, configurable: !d, writable: !d }) : a[l] = s : (c("next", 0), c("throw", 1), c("return", 2));
  }, Bt(t, e, n, o);
}
function Lp(t, e, n, o, i, r, a) {
  try {
    var l = t[r](a), s = l.value;
  } catch (d) {
    return void n(d);
  }
  l.done ? e(s) : Promise.resolve(s).then(o, i);
}
function zp(t) {
  return function() {
    var e = this, n = arguments;
    return new Promise(function(o, i) {
      var r = t.apply(e, n);
      function a(s) {
        Lp(r, o, i, a, l, "next", s);
      }
      function l(s) {
        Lp(r, o, i, a, l, "throw", s);
      }
      a(void 0);
    });
  };
}
var mg = {
  name: "BodyCell",
  hostName: "DataTable",
  extends: ne,
  emits: ["cell-edit-init", "cell-edit-complete", "cell-edit-cancel", "row-edit-init", "row-edit-save", "row-edit-cancel", "row-toggle", "radio-change", "checkbox-change", "editing-meta-change"],
  props: {
    rowData: {
      type: Object,
      default: null
    },
    column: {
      type: Object,
      default: null
    },
    frozenRow: {
      type: Boolean,
      default: !1
    },
    rowIndex: {
      type: Number,
      default: null
    },
    index: {
      type: Number,
      default: null
    },
    isRowExpanded: {
      type: Boolean,
      default: !1
    },
    selected: {
      type: Boolean,
      default: !1
    },
    editing: {
      type: Boolean,
      default: !1
    },
    editingMeta: {
      type: Object,
      default: null
    },
    editMode: {
      type: String,
      default: null
    },
    virtualScrollerContentProps: {
      type: Object,
      default: null
    },
    ariaControls: {
      type: String,
      default: null
    },
    name: {
      type: String,
      default: null
    },
    expandedRowIcon: {
      type: String,
      default: null
    },
    collapsedRowIcon: {
      type: String,
      default: null
    },
    editButtonProps: {
      type: Object,
      default: null
    }
  },
  documentEditListener: null,
  selfClick: !1,
  overlayEventListener: null,
  editCompleteTimeout: null,
  data: function() {
    return {
      d_editing: this.editing,
      styleObject: {}
    };
  },
  watch: {
    editing: function(e) {
      this.d_editing = e;
    },
    "$data.d_editing": function(e) {
      this.$emit("editing-meta-change", {
        data: this.rowData,
        field: this.field || "field_".concat(this.index),
        index: this.rowIndex,
        editing: e
      });
    }
  },
  mounted: function() {
    this.columnProp("frozen") && this.updateStickyPosition();
  },
  updated: function() {
    var e = this;
    this.columnProp("frozen") && this.updateStickyPosition(), this.d_editing && (this.editMode === "cell" || this.editMode === "row" && this.columnProp("rowEditor")) && setTimeout(function() {
      var n = fo(e.$el);
      n && n.focus();
    }, 1);
  },
  beforeUnmount: function() {
    this.overlayEventListener && (Hn.off("overlay-click", this.overlayEventListener), this.overlayEventListener = null);
  },
  methods: {
    columnProp: function(e) {
      return eo(this.column, e);
    },
    getColumnPT: function(e) {
      var n, o, i = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          size: (n = this.$parentInstance) === null || n === void 0 || (n = n.$parentInstance) === null || n === void 0 ? void 0 : n.size,
          showGridlines: (o = this.$parentInstance) === null || o === void 0 || (o = o.$parentInstance) === null || o === void 0 ? void 0 : o.showGridlines
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: i
      }), this.ptm("column.".concat(e), i), this.ptmo(this.getColumnProp(), e, i));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    resolveFieldData: function() {
      return be(this.rowData, this.field);
    },
    toggleRow: function(e) {
      this.$emit("row-toggle", {
        originalEvent: e,
        data: this.rowData
      });
    },
    toggleRowWithRadio: function(e, n) {
      this.$emit("radio-change", {
        originalEvent: e.originalEvent,
        index: n,
        data: e.data
      });
    },
    toggleRowWithCheckbox: function(e, n) {
      this.$emit("checkbox-change", {
        originalEvent: e.originalEvent,
        index: n,
        data: e.data
      });
    },
    isEditable: function() {
      return this.column.children && this.column.children.editor != null;
    },
    bindDocumentEditListener: function() {
      var e = this;
      this.documentEditListener || (this.documentEditListener = function(n) {
        e.selfClick = e.$el && e.$el.contains(n.target), e.editCompleteTimeout && clearTimeout(e.editCompleteTimeout), e.selfClick || (e.editCompleteTimeout = setTimeout(function() {
          e.completeEdit(n, "outside");
        }, 1));
      }, document.addEventListener("mousedown", this.documentEditListener));
    },
    unbindDocumentEditListener: function() {
      this.documentEditListener && (document.removeEventListener("mousedown", this.documentEditListener), this.documentEditListener = null, this.selfClick = !1, this.editCompleteTimeout && (clearTimeout(this.editCompleteTimeout), this.editCompleteTimeout = null));
    },
    switchCellToViewMode: function() {
      this.d_editing = !1, this.unbindDocumentEditListener(), Hn.off("overlay-click", this.overlayEventListener), this.overlayEventListener = null;
    },
    onClick: function(e) {
      var n = this;
      this.editMode === "cell" && this.isEditable() && (this.d_editing || (this.d_editing = !0, this.bindDocumentEditListener(), this.$emit("cell-edit-init", {
        originalEvent: e,
        data: this.rowData,
        field: this.field,
        index: this.rowIndex
      }), this.overlayEventListener = function(o) {
        n.selfClick = n.$el && n.$el.contains(o.target);
      }, Hn.on("overlay-click", this.overlayEventListener)));
    },
    completeEdit: function(e, n) {
      var o = {
        originalEvent: e,
        data: this.rowData,
        newData: this.editingRowData,
        value: this.rowData[this.field],
        newValue: this.editingRowData[this.field],
        field: this.field,
        index: this.rowIndex,
        type: n,
        defaultPrevented: !1,
        preventDefault: function() {
          this.defaultPrevented = !0;
        }
      };
      this.$emit("cell-edit-complete", o), o.defaultPrevented || this.switchCellToViewMode();
    },
    onKeyDown: function(e) {
      if (this.editMode === "cell")
        switch (e.code) {
          case "Enter":
          case "NumpadEnter":
            this.completeEdit(e, "enter");
            break;
          case "Escape":
            this.switchCellToViewMode(), this.$emit("cell-edit-cancel", {
              originalEvent: e,
              data: this.rowData,
              field: this.field,
              index: this.rowIndex
            });
            break;
          case "Tab":
            this.completeEdit(e, "tab"), e.shiftKey ? this.moveToPreviousCell(e) : this.moveToNextCell(e);
            break;
        }
    },
    moveToPreviousCell: function(e) {
      var n = this;
      return zp(/* @__PURE__ */ Tr().m(function o() {
        var i, r;
        return Tr().w(function(a) {
          for (; ; ) switch (a.n) {
            case 0:
              if (i = n.findCell(e.target), r = n.findPreviousEditableColumn(i), !r) {
                a.n = 2;
                break;
              }
              return a.n = 1, n.$nextTick();
            case 1:
              hu(r, "click"), e.preventDefault();
            case 2:
              return a.a(2);
          }
        }, o);
      }))();
    },
    moveToNextCell: function(e) {
      var n = this;
      return zp(/* @__PURE__ */ Tr().m(function o() {
        var i, r;
        return Tr().w(function(a) {
          for (; ; ) switch (a.n) {
            case 0:
              if (i = n.findCell(e.target), r = n.findNextEditableColumn(i), !r) {
                a.n = 2;
                break;
              }
              return a.n = 1, n.$nextTick();
            case 1:
              hu(r, "click"), e.preventDefault();
            case 2:
              return a.a(2);
          }
        }, o);
      }))();
    },
    findCell: function(e) {
      if (e) {
        for (var n = e; n && !Le(n, "data-p-cell-editing"); )
          n = n.parentElement;
        return n;
      } else
        return null;
    },
    findPreviousEditableColumn: function(e) {
      var n = e.previousElementSibling;
      if (!n) {
        var o = e.parentElement.previousElementSibling;
        o && (n = o.lastElementChild);
      }
      return n ? Le(n, "data-p-editable-column") ? n : this.findPreviousEditableColumn(n) : null;
    },
    findNextEditableColumn: function(e) {
      var n = e.nextElementSibling;
      if (!n) {
        var o = e.parentElement.nextElementSibling;
        o && (n = o.firstElementChild);
      }
      return n ? Le(n, "data-p-editable-column") ? n : this.findNextEditableColumn(n) : null;
    },
    onRowEditInit: function(e) {
      this.$emit("row-edit-init", {
        originalEvent: e,
        data: this.rowData,
        newData: this.editingRowData,
        field: this.field,
        index: this.rowIndex
      });
    },
    onRowEditSave: function(e) {
      this.$emit("row-edit-save", {
        originalEvent: e,
        data: this.rowData,
        newData: this.editingRowData,
        field: this.field,
        index: this.rowIndex
      });
    },
    onRowEditCancel: function(e) {
      this.$emit("row-edit-cancel", {
        originalEvent: e,
        data: this.rowData,
        newData: this.editingRowData,
        field: this.field,
        index: this.rowIndex
      });
    },
    editorInitCallback: function(e) {
      this.$emit("row-edit-init", {
        originalEvent: e,
        data: this.rowData,
        newData: this.editingRowData,
        field: this.field,
        index: this.rowIndex
      });
    },
    editorSaveCallback: function(e) {
      this.editMode === "row" ? this.$emit("row-edit-save", {
        originalEvent: e,
        data: this.rowData,
        newData: this.editingRowData,
        field: this.field,
        index: this.rowIndex
      }) : this.completeEdit(e, "enter");
    },
    editorCancelCallback: function(e) {
      this.editMode === "row" ? this.$emit("row-edit-cancel", {
        originalEvent: e,
        data: this.rowData,
        newData: this.editingRowData,
        field: this.field,
        index: this.rowIndex
      }) : (this.switchCellToViewMode(), this.$emit("cell-edit-cancel", {
        originalEvent: e,
        data: this.rowData,
        field: this.field,
        index: this.rowIndex
      }));
    },
    updateStickyPosition: function() {
      if (this.columnProp("frozen")) {
        var e = this.columnProp("alignFrozen");
        if (e === "right") {
          var n = 0, o = vl(this.$el, '[data-p-frozen-column="true"]');
          o && (n = pt(o) + parseFloat(o.style["inset-inline-end"] || 0)), this.styleObject.insetInlineEnd = n + "px";
        } else {
          var i = 0, r = yl(this.$el, '[data-p-frozen-column="true"]');
          r && (i = pt(r) + parseFloat(r.style["inset-inline-start"] || 0)), this.styleObject.insetInlineStart = i + "px";
        }
      }
    },
    getVirtualScrollerProp: function(e) {
      return this.virtualScrollerContentProps ? this.virtualScrollerContentProps[e] : null;
    }
  },
  computed: {
    editingRowData: function() {
      return this.editingMeta[this.rowIndex] ? this.editingMeta[this.rowIndex].data : this.rowData;
    },
    field: function() {
      return this.columnProp("field");
    },
    containerClass: function() {
      return [this.columnProp("bodyClass"), this.columnProp("class"), this.cx("bodyCell")];
    },
    containerStyle: function() {
      var e = this.columnProp("bodyStyle"), n = this.columnProp("style");
      return this.columnProp("frozen") ? [n, e, this.styleObject] : [n, e];
    },
    loading: function() {
      return this.getVirtualScrollerProp("loading");
    },
    loadingOptions: function() {
      var e = this.getVirtualScrollerProp("getLoaderOptions");
      return e && e(this.rowIndex, {
        cellIndex: this.index,
        cellFirst: this.index === 0,
        cellLast: this.index === this.getVirtualScrollerProp("columns").length - 1,
        cellEven: this.index % 2 === 0,
        cellOdd: this.index % 2 !== 0,
        column: this.column,
        field: this.field
      });
    },
    expandButtonAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.isRowExpanded ? this.$primevue.config.locale.aria.expandRow : this.$primevue.config.locale.aria.collapseRow : void 0;
    },
    initButtonAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.editRow : void 0;
    },
    saveButtonAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.saveEdit : void 0;
    },
    cancelButtonAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.cancelEdit : void 0;
    }
  },
  components: {
    DTRadioButton: hg,
    DTCheckbox: fg,
    Button: Ao,
    ChevronDownIcon: ra,
    ChevronRightIcon: ia,
    BarsIcon: xc,
    PencilIcon: ag,
    CheckIcon: Tn,
    TimesIcon: br
  },
  directives: {
    ripple: mt
  }
};
function Oi(t) {
  "@babel/helpers - typeof";
  return Oi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Oi(t);
}
function Fp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Ia(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Fp(Object(n), !0).forEach(function(o) {
      HR(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Fp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function HR(t, e, n) {
  return (e = WR(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function WR(t) {
  var e = UR(t, "string");
  return Oi(e) == "symbol" ? e : e + "";
}
function UR(t, e) {
  if (Oi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Oi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var GR = ["colspan", "rowspan", "data-p-selection-column", "data-p-editable-column", "data-p-cell-editing", "data-p-frozen-column"], qR = ["aria-expanded", "aria-controls", "aria-label"];
function JR(t, e, n, o, i, r) {
  var a = $("DTRadioButton"), l = $("DTCheckbox"), s = $("BarsIcon"), d = $("ChevronDownIcon"), c = $("ChevronRightIcon"), u = $("Button"), f = tt("ripple");
  return r.loading ? (m(), y("td", k({
    key: 0,
    style: r.containerStyle,
    class: r.containerClass,
    role: "cell"
  }, Ia(Ia({}, r.getColumnPT("root")), r.getColumnPT("bodyCell"))), [(m(), O(q(n.column.children.loading), {
    data: n.rowData,
    column: n.column,
    field: r.field,
    index: n.rowIndex,
    frozenRow: n.frozenRow,
    loadingOptions: r.loadingOptions
  }, null, 8, ["data", "column", "field", "index", "frozenRow", "loadingOptions"]))], 16)) : (m(), y("td", k({
    key: 1,
    style: r.containerStyle,
    class: r.containerClass,
    colspan: r.columnProp("colspan"),
    rowspan: r.columnProp("rowspan"),
    onClick: e[3] || (e[3] = function() {
      return r.onClick && r.onClick.apply(r, arguments);
    }),
    onKeydown: e[4] || (e[4] = function() {
      return r.onKeyDown && r.onKeyDown.apply(r, arguments);
    }),
    role: "cell"
  }, Ia(Ia({}, r.getColumnPT("root")), r.getColumnPT("bodyCell")), {
    "data-p-selection-column": r.columnProp("selectionMode") != null,
    "data-p-editable-column": r.isEditable(),
    "data-p-cell-editing": i.d_editing,
    "data-p-frozen-column": r.columnProp("frozen")
  }), [n.column.children && n.column.children.body && !i.d_editing ? (m(), O(q(n.column.children.body), {
    key: 0,
    data: n.rowData,
    column: n.column,
    field: r.field,
    index: n.rowIndex,
    frozenRow: n.frozenRow,
    editorInitCallback: r.editorInitCallback,
    rowTogglerCallback: r.toggleRow
  }, null, 8, ["data", "column", "field", "index", "frozenRow", "editorInitCallback", "rowTogglerCallback"])) : n.column.children && n.column.children.editor && i.d_editing ? (m(), O(q(n.column.children.editor), {
    key: 1,
    data: r.editingRowData,
    column: n.column,
    field: r.field,
    index: n.rowIndex,
    frozenRow: n.frozenRow,
    editorSaveCallback: r.editorSaveCallback,
    editorCancelCallback: r.editorCancelCallback
  }, null, 8, ["data", "column", "field", "index", "frozenRow", "editorSaveCallback", "editorCancelCallback"])) : n.column.children && n.column.children.body && !n.column.children.editor && i.d_editing ? (m(), O(q(n.column.children.body), {
    key: 2,
    data: r.editingRowData,
    column: n.column,
    field: r.field,
    index: n.rowIndex,
    frozenRow: n.frozenRow
  }, null, 8, ["data", "column", "field", "index", "frozenRow"])) : r.columnProp("selectionMode") ? (m(), y(_, {
    key: 3
  }, [r.columnProp("selectionMode") === "single" ? (m(), O(a, {
    key: 0,
    value: n.rowData,
    name: n.name,
    checked: n.selected,
    onChange: e[0] || (e[0] = function(p) {
      return r.toggleRowWithRadio(p, n.rowIndex);
    }),
    column: n.column,
    index: n.index,
    unstyled: t.unstyled,
    pt: t.pt
  }, null, 8, ["value", "name", "checked", "column", "index", "unstyled", "pt"])) : r.columnProp("selectionMode") === "multiple" ? (m(), O(l, {
    key: 1,
    value: n.rowData,
    checked: n.selected,
    rowCheckboxIconTemplate: n.column.children && n.column.children.rowcheckboxicon,
    "aria-selected": n.selected ? !0 : void 0,
    onChange: e[1] || (e[1] = function(p) {
      return r.toggleRowWithCheckbox(p, n.rowIndex);
    }),
    column: n.column,
    index: n.index,
    unstyled: t.unstyled,
    pt: t.pt
  }, null, 8, ["value", "checked", "rowCheckboxIconTemplate", "aria-selected", "column", "index", "unstyled", "pt"])) : M("", !0)], 64)) : r.columnProp("rowReorder") ? (m(), y(_, {
    key: 4
  }, [n.column.children && n.column.children.rowreordericon ? (m(), O(q(n.column.children.rowreordericon), k({
    key: 0,
    class: t.cx("reorderableRowHandle")
  }, r.getColumnPT("reorderableRowHandle")), null, 16, ["class"])) : r.columnProp("rowReorderIcon") ? (m(), y("i", k({
    key: 1,
    class: [t.cx("reorderableRowHandle"), r.columnProp("rowReorderIcon")]
  }, r.getColumnPT("reorderableRowHandle")), null, 16)) : (m(), O(s, k({
    key: 2,
    class: t.cx("reorderableRowHandle")
  }, r.getColumnPT("reorderableRowHandle")), null, 16, ["class"]))], 64)) : r.columnProp("expander") ? We((m(), y("button", k({
    key: 5,
    class: t.cx("rowToggleButton"),
    type: "button",
    "aria-expanded": n.isRowExpanded,
    "aria-controls": n.ariaControls,
    "aria-label": r.expandButtonAriaLabel,
    onClick: e[2] || (e[2] = Qi(function() {
      return r.toggleRow && r.toggleRow.apply(r, arguments);
    }, ["stop"])),
    "data-p-selected": "selected"
  }, r.getColumnPT("rowToggleButton"), {
    "data-pc-group-section": "rowactionbutton"
  }), [n.column.children && n.column.children.rowtoggleicon ? (m(), O(q(n.column.children.rowtoggleicon), {
    key: 0,
    class: Y(t.cx("rowToggleIcon")),
    rowExpanded: n.isRowExpanded
  }, null, 8, ["class", "rowExpanded"])) : n.column.children && n.column.children.rowtogglericon ? (m(), O(q(n.column.children.rowtogglericon), {
    key: 1,
    class: Y(t.cx("rowToggleIcon")),
    rowExpanded: n.isRowExpanded
  }, null, 8, ["class", "rowExpanded"])) : (m(), y(_, {
    key: 2
  }, [n.isRowExpanded && n.expandedRowIcon ? (m(), y("span", {
    key: 0,
    class: Y([t.cx("rowToggleIcon"), n.expandedRowIcon])
  }, null, 2)) : n.isRowExpanded && !n.expandedRowIcon ? (m(), O(d, k({
    key: 1,
    class: t.cx("rowToggleIcon")
  }, r.getColumnPT("rowToggleIcon")), null, 16, ["class"])) : !n.isRowExpanded && n.collapsedRowIcon ? (m(), y("span", {
    key: 2,
    class: Y([t.cx("rowToggleIcon"), n.collapsedRowIcon])
  }, null, 2)) : !n.isRowExpanded && !n.collapsedRowIcon ? (m(), O(c, k({
    key: 3,
    class: t.cx("rowToggleIcon")
  }, r.getColumnPT("rowToggleIcon")), null, 16, ["class"])) : M("", !0)], 64))], 16, qR)), [[f]]) : n.editMode === "row" && r.columnProp("rowEditor") ? (m(), y(_, {
    key: 6
  }, [i.d_editing ? M("", !0) : (m(), O(u, k({
    key: 0,
    class: t.cx("pcRowEditorInit"),
    "aria-label": r.initButtonAriaLabel,
    unstyled: t.unstyled,
    onClick: r.onRowEditInit
  }, n.editButtonProps.init, {
    pt: r.getColumnPT("pcRowEditorInit"),
    "data-pc-group-section": "rowactionbutton"
  }), {
    icon: E(function(p) {
      return [(m(), O(q(n.column.children && n.column.children.roweditoriniticon || "PencilIcon"), k({
        class: p.class
      }, r.getColumnPT("pcRowEditorInit").icon), null, 16, ["class"]))];
    }),
    _: 1
  }, 16, ["class", "aria-label", "unstyled", "onClick", "pt"])), i.d_editing ? (m(), O(u, k({
    key: 1,
    class: t.cx("pcRowEditorSave"),
    "aria-label": r.saveButtonAriaLabel,
    unstyled: t.unstyled,
    onClick: r.onRowEditSave
  }, n.editButtonProps.save, {
    pt: r.getColumnPT("pcRowEditorSave"),
    "data-pc-group-section": "rowactionbutton"
  }), {
    icon: E(function(p) {
      return [(m(), O(q(n.column.children && n.column.children.roweditorsaveicon || "CheckIcon"), k({
        class: p.class
      }, r.getColumnPT("pcRowEditorSave").icon), null, 16, ["class"]))];
    }),
    _: 1
  }, 16, ["class", "aria-label", "unstyled", "onClick", "pt"])) : M("", !0), i.d_editing ? (m(), O(u, k({
    key: 2,
    class: t.cx("pcRowEditorCancel"),
    "aria-label": r.cancelButtonAriaLabel,
    unstyled: t.unstyled,
    onClick: r.onRowEditCancel
  }, n.editButtonProps.cancel, {
    pt: r.getColumnPT("pcRowEditorCancel"),
    "data-pc-group-section": "rowactionbutton"
  }), {
    icon: E(function(p) {
      return [(m(), O(q(n.column.children && n.column.children.roweditorcancelicon || "TimesIcon"), k({
        class: p.class
      }, r.getColumnPT("pcRowEditorCancel").icon), null, 16, ["class"]))];
    }),
    _: 1
  }, 16, ["class", "aria-label", "unstyled", "onClick", "pt"])) : M("", !0)], 64)) : (m(), y(_, {
    key: 7
  }, [ee(re(r.resolveFieldData()), 1)], 64))], 16, GR));
}
mg.render = JR;
function Pi(t) {
  "@babel/helpers - typeof";
  return Pi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Pi(t);
}
function YR(t, e) {
  var n = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = XR(t)) || e) {
      n && (t = n);
      var o = 0, i = function() {
      };
      return { s: i, n: function() {
        return o >= t.length ? { done: !0 } : { done: !1, value: t[o++] };
      }, e: function(d) {
        throw d;
      }, f: i };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var r, a = !0, l = !1;
  return { s: function() {
    n = n.call(t);
  }, n: function() {
    var d = n.next();
    return a = d.done, d;
  }, e: function(d) {
    l = !0, r = d;
  }, f: function() {
    try {
      a || n.return == null || n.return();
    } finally {
      if (l) throw r;
    }
  } };
}
function XR(t, e) {
  if (t) {
    if (typeof t == "string") return Np(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Np(t, e) : void 0;
  }
}
function Np(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function jp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Vp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? jp(Object(n), !0).forEach(function(o) {
      ZR(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : jp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function ZR(t, e, n) {
  return (e = QR(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function QR(t) {
  var e = eB(t, "string");
  return Pi(e) == "symbol" ? e : e + "";
}
function eB(t, e) {
  if (Pi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Pi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var gg = {
  name: "BodyRow",
  hostName: "DataTable",
  extends: ne,
  emits: ["rowgroup-toggle", "row-click", "row-dblclick", "row-rightclick", "row-touchend", "row-keydown", "row-mousedown", "row-dragstart", "row-dragover", "row-dragleave", "row-dragend", "row-drop", "row-toggle", "radio-change", "checkbox-change", "cell-edit-init", "cell-edit-complete", "cell-edit-cancel", "row-edit-init", "row-edit-save", "row-edit-cancel", "editing-meta-change"],
  props: {
    rowData: {
      type: Object,
      default: null
    },
    index: {
      type: Number,
      default: 0
    },
    value: {
      type: Array,
      default: null
    },
    columns: {
      type: null,
      default: null
    },
    frozenRow: {
      type: Boolean,
      default: !1
    },
    empty: {
      type: Boolean,
      default: !1
    },
    rowGroupMode: {
      type: String,
      default: null
    },
    groupRowsBy: {
      type: [Array, String, Function],
      default: null
    },
    expandableRowGroups: {
      type: Boolean,
      default: !1
    },
    expandedRowGroups: {
      type: Array,
      default: null
    },
    first: {
      type: Number,
      default: 0
    },
    dataKey: {
      type: [String, Function],
      default: null
    },
    expandedRowIcon: {
      type: String,
      default: null
    },
    collapsedRowIcon: {
      type: String,
      default: null
    },
    expandedRows: {
      type: [Array, Object],
      default: null
    },
    selection: {
      type: [Array, Object],
      default: null
    },
    selectionKeys: {
      type: null,
      default: null
    },
    selectionMode: {
      type: String,
      default: null
    },
    contextMenu: {
      type: Boolean,
      default: !1
    },
    contextMenuSelection: {
      type: Object,
      default: null
    },
    rowClass: {
      type: null,
      default: null
    },
    rowStyle: {
      type: null,
      default: null
    },
    rowGroupHeaderStyle: {
      type: null,
      default: null
    },
    editMode: {
      type: String,
      default: null
    },
    compareSelectionBy: {
      type: String,
      default: "deepEquals"
    },
    editingRows: {
      type: Array,
      default: null
    },
    editingRowKeys: {
      type: null,
      default: null
    },
    editingMeta: {
      type: Object,
      default: null
    },
    templates: {
      type: null,
      default: null
    },
    scrollable: {
      type: Boolean,
      default: !1
    },
    editButtonProps: {
      type: Object,
      default: null
    },
    virtualScrollerContentProps: {
      type: Object,
      default: null
    },
    isVirtualScrollerDisabled: {
      type: Boolean,
      default: !1
    },
    expandedRowId: {
      type: String,
      default: null
    },
    nameAttributeSelector: {
      type: String,
      default: null
    }
  },
  data: function() {
    return {
      d_rowExpanded: !1
    };
  },
  watch: {
    expandedRows: {
      deep: !0,
      immediate: !0,
      handler: function(e) {
        var n = this;
        this.d_rowExpanded = this.dataKey ? (e == null ? void 0 : e[be(this.rowData, this.dataKey)]) !== void 0 : e == null ? void 0 : e.some(function(o) {
          return n.equals(n.rowData, o);
        });
      }
    }
  },
  methods: {
    columnProp: function(e, n) {
      return eo(e, n);
    },
    //@todo - update this method
    getColumnPT: function(e) {
      var n = {
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: n
      }), this.ptm("column.".concat(e), n), this.ptmo(this.columnProp({}, "pt"), e, n));
    },
    //@todo - update this method
    getBodyRowPTOptions: function(e) {
      var n, o = (n = this.$parentInstance) === null || n === void 0 ? void 0 : n.$parentInstance;
      return this.ptm(e, {
        context: {
          index: this.rowIndex,
          selectable: (o == null ? void 0 : o.rowHover) || (o == null ? void 0 : o.selectionMode),
          selected: this.isSelected,
          stripedRows: (o == null ? void 0 : o.stripedRows) || !1
        }
      });
    },
    shouldRenderBodyCell: function(e) {
      var n = this.columnProp(e, "hidden");
      if (this.rowGroupMode && !n) {
        var o = this.columnProp(e, "field");
        if (this.rowGroupMode === "subheader")
          return this.groupRowsBy !== o;
        if (this.rowGroupMode === "rowspan")
          if (this.isGrouped(e)) {
            var i = this.value[this.rowIndex - 1];
            if (i) {
              var r = be(this.value[this.rowIndex], o), a = be(i, o);
              return r !== a;
            } else
              return !0;
          } else
            return !0;
      } else
        return !n;
    },
    calculateRowGroupSize: function(e) {
      if (this.isGrouped(e)) {
        var n = this.rowIndex, o = this.columnProp(e, "field"), i = be(this.value[n], o), r = i, a = 0;
        for (this.d_rowExpanded && a++; i === r; ) {
          a++;
          var l = this.value[++n];
          if (l)
            r = be(l, o);
          else
            break;
        }
        return a === 1 ? null : a;
      } else
        return null;
    },
    isGrouped: function(e) {
      var n = this.columnProp(e, "field");
      return this.groupRowsBy && n ? Array.isArray(this.groupRowsBy) ? this.groupRowsBy.indexOf(n) > -1 : this.groupRowsBy === n : !1;
    },
    findIndexInSelection: function(e) {
      return this.findIndex(e, this.selection);
    },
    findIndex: function(e, n) {
      var o = -1;
      if (n && n.length) {
        for (var i = 0; i < n.length; i++)
          if (this.equals(e, n[i])) {
            o = i;
            break;
          }
      }
      return o;
    },
    equals: function(e, n) {
      return this.compareSelectionBy === "equals" ? e === n : Kt(e, n, this.dataKey);
    },
    onRowGroupToggle: function(e) {
      this.$emit("rowgroup-toggle", {
        originalEvent: e,
        data: this.rowData
      });
    },
    onRowClick: function(e) {
      this.$emit("row-click", {
        originalEvent: e,
        data: this.rowData,
        index: this.rowIndex
      });
    },
    onRowDblClick: function(e) {
      this.$emit("row-dblclick", {
        originalEvent: e,
        data: this.rowData,
        index: this.rowIndex
      });
    },
    onRowRightClick: function(e) {
      this.$emit("row-rightclick", {
        originalEvent: e,
        data: this.rowData,
        index: this.rowIndex
      });
    },
    onRowTouchEnd: function(e) {
      this.$emit("row-touchend", e);
    },
    onRowKeyDown: function(e) {
      this.$emit("row-keydown", {
        originalEvent: e,
        data: this.rowData,
        index: this.rowIndex
      });
    },
    onRowMouseDown: function(e) {
      this.$emit("row-mousedown", e);
    },
    onRowDragStart: function(e) {
      this.$emit("row-dragstart", {
        originalEvent: e,
        index: this.rowIndex
      });
    },
    onRowDragOver: function(e) {
      this.$emit("row-dragover", {
        originalEvent: e,
        index: this.rowIndex
      });
    },
    onRowDragLeave: function(e) {
      this.$emit("row-dragleave", e);
    },
    onRowDragEnd: function(e) {
      this.$emit("row-dragend", e);
    },
    onRowDrop: function(e) {
      this.$emit("row-drop", e);
    },
    onRowToggle: function(e) {
      this.d_rowExpanded = !this.d_rowExpanded, this.$emit("row-toggle", Vp(Vp({}, e), {}, {
        expanded: this.d_rowExpanded
      }));
    },
    onRadioChange: function(e) {
      this.$emit("radio-change", e);
    },
    onCheckboxChange: function(e) {
      this.$emit("checkbox-change", e);
    },
    onCellEditInit: function(e) {
      this.$emit("cell-edit-init", e);
    },
    onCellEditComplete: function(e) {
      this.$emit("cell-edit-complete", e);
    },
    onCellEditCancel: function(e) {
      this.$emit("cell-edit-cancel", e);
    },
    onRowEditInit: function(e) {
      this.$emit("row-edit-init", e);
    },
    onRowEditSave: function(e) {
      this.$emit("row-edit-save", e);
    },
    onRowEditCancel: function(e) {
      this.$emit("row-edit-cancel", e);
    },
    onEditingMetaChange: function(e) {
      this.$emit("editing-meta-change", e);
    },
    getVirtualScrollerProp: function(e, n) {
      return n = n || this.virtualScrollerContentProps, n ? n[e] : null;
    }
  },
  computed: {
    rowIndex: function() {
      var e = this.getVirtualScrollerProp("getItemOptions");
      return e ? e(this.index).index : this.index;
    },
    rowStyles: function() {
      var e;
      return (e = this.rowStyle) === null || e === void 0 ? void 0 : e.call(this, this.rowData);
    },
    rowClasses: function() {
      var e = [], n = null;
      if (this.rowClass) {
        var o = this.rowClass(this.rowData);
        o && e.push(o);
      }
      if (this.columns) {
        var i = YR(this.columns), r;
        try {
          for (i.s(); !(r = i.n()).done; ) {
            var a = r.value, l = this.columnProp(a, "selectionMode");
            if (ae(l)) {
              n = l;
              break;
            }
          }
        } catch (s) {
          i.e(s);
        } finally {
          i.f();
        }
      }
      return [this.cx("row", {
        rowData: this.rowData,
        index: this.rowIndex,
        columnSelectionMode: n
      }), e];
    },
    rowTabindex: function() {
      return this.selection === null && (this.selectionMode === "single" || this.selectionMode === "multiple") && this.rowIndex === 0 ? 0 : -1;
    },
    isRowEditing: function() {
      return this.rowData && this.editingRows ? this.dataKey ? this.editingRowKeys ? this.editingRowKeys[be(this.rowData, this.dataKey)] !== void 0 : !1 : this.findIndex(this.rowData, this.editingRows) > -1 : !1;
    },
    isRowGroupExpanded: function() {
      if (this.expandableRowGroups && this.expandedRowGroups) {
        var e = be(this.rowData, this.groupRowsBy);
        return this.expandedRowGroups.indexOf(e) > -1;
      }
      return !1;
    },
    isSelected: function() {
      return this.rowData && this.selection ? this.dataKey ? this.selectionKeys ? this.selectionKeys[be(this.rowData, this.dataKey)] !== void 0 : !1 : this.selection instanceof Array ? this.findIndexInSelection(this.rowData) > -1 : this.equals(this.rowData, this.selection) : !1;
    },
    isSelectedWithContextMenu: function() {
      return this.rowData && this.contextMenuSelection ? this.equals(this.rowData, this.contextMenuSelection, this.dataKey) : !1;
    },
    shouldRenderRowGroupHeader: function() {
      var e = be(this.rowData, this.groupRowsBy), n = this.value[this.rowIndex - 1];
      if (n) {
        var o = be(n, this.groupRowsBy);
        return e !== o;
      } else
        return !0;
    },
    shouldRenderRowGroupFooter: function() {
      if (this.expandableRowGroups && !this.isRowGroupExpanded)
        return !1;
      var e = be(this.rowData, this.groupRowsBy), n = this.value[this.rowIndex + 1];
      if (n) {
        var o = be(n, this.groupRowsBy);
        return e !== o;
      } else
        return !0;
    },
    columnsLength: function() {
      var e = this;
      if (this.columns) {
        var n = 0;
        return this.columns.forEach(function(o) {
          e.columnProp(o, "hidden") && n++;
        }), this.columns.length - n;
      }
      return 0;
    }
  },
  components: {
    DTBodyCell: mg,
    ChevronDownIcon: ra,
    ChevronRightIcon: ia
  }
};
function $i(t) {
  "@babel/helpers - typeof";
  return $i = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, $i(t);
}
function _p(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function An(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? _p(Object(n), !0).forEach(function(o) {
      tB(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : _p(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function tB(t, e, n) {
  return (e = nB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function nB(t) {
  var e = oB(t, "string");
  return $i(e) == "symbol" ? e : e + "";
}
function oB(t, e) {
  if ($i(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if ($i(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var rB = ["colspan"], iB = ["tabindex", "aria-selected", "data-p-index", "data-p-selectable-row", "data-p-selected", "data-p-selected-contextmenu"], aB = ["id"], lB = ["colspan"], sB = ["colspan"], dB = ["colspan"];
function cB(t, e, n, o, i, r) {
  var a = $("ChevronDownIcon"), l = $("ChevronRightIcon"), s = $("DTBodyCell");
  return n.empty ? (m(), y("tr", k({
    key: 1,
    class: t.cx("emptyMessage"),
    role: "row"
  }, t.ptm("emptyMessage")), [v("td", k({
    colspan: r.columnsLength
  }, An(An({}, r.getColumnPT("bodycell")), t.ptm("emptyMessageCell"))), [n.templates.empty ? (m(), O(q(n.templates.empty), {
    key: 0
  })) : M("", !0)], 16, dB)], 16)) : (m(), y(_, {
    key: 0
  }, [n.templates.groupheader && n.rowGroupMode === "subheader" && r.shouldRenderRowGroupHeader ? (m(), y("tr", k({
    key: 0,
    class: t.cx("rowGroupHeader"),
    style: n.rowGroupHeaderStyle,
    role: "row"
  }, t.ptm("rowGroupHeader")), [v("td", k({
    colspan: r.columnsLength - 1
  }, An(An({}, r.getColumnPT("bodycell")), t.ptm("rowGroupHeaderCell"))), [n.expandableRowGroups ? (m(), y("button", k({
    key: 0,
    class: t.cx("rowToggleButton"),
    onClick: e[0] || (e[0] = function() {
      return r.onRowGroupToggle && r.onRowGroupToggle.apply(r, arguments);
    }),
    type: "button"
  }, t.ptm("rowToggleButton")), [n.templates.rowtoggleicon || n.templates.rowgrouptogglericon ? (m(), O(q(n.templates.rowtoggleicon || n.templates.rowgrouptogglericon), {
    key: 0,
    expanded: r.isRowGroupExpanded
  }, null, 8, ["expanded"])) : (m(), y(_, {
    key: 1
  }, [r.isRowGroupExpanded && n.expandedRowIcon ? (m(), y("span", k({
    key: 0,
    class: [t.cx("rowToggleIcon"), n.expandedRowIcon]
  }, t.ptm("rowToggleIcon")), null, 16)) : r.isRowGroupExpanded && !n.expandedRowIcon ? (m(), O(a, k({
    key: 1,
    class: t.cx("rowToggleIcon")
  }, t.ptm("rowToggleIcon")), null, 16, ["class"])) : !r.isRowGroupExpanded && n.collapsedRowIcon ? (m(), y("span", k({
    key: 2,
    class: [t.cx("rowToggleIcon"), n.collapsedRowIcon]
  }, t.ptm("rowToggleIcon")), null, 16)) : !r.isRowGroupExpanded && !n.collapsedRowIcon ? (m(), O(l, k({
    key: 3,
    class: t.cx("rowToggleIcon")
  }, t.ptm("rowToggleIcon")), null, 16, ["class"])) : M("", !0)], 64))], 16)) : M("", !0), (m(), O(q(n.templates.groupheader), {
    data: n.rowData,
    index: r.rowIndex
  }, null, 8, ["data", "index"]))], 16, rB)], 16)) : M("", !0), !n.expandableRowGroups || r.isRowGroupExpanded ? (m(), y("tr", k({
    key: 1,
    class: r.rowClasses,
    style: r.rowStyles,
    tabindex: r.rowTabindex,
    role: "row",
    "aria-selected": n.selectionMode ? r.isSelected : null,
    onClick: e[1] || (e[1] = function() {
      return r.onRowClick && r.onRowClick.apply(r, arguments);
    }),
    onDblclick: e[2] || (e[2] = function() {
      return r.onRowDblClick && r.onRowDblClick.apply(r, arguments);
    }),
    onContextmenu: e[3] || (e[3] = function() {
      return r.onRowRightClick && r.onRowRightClick.apply(r, arguments);
    }),
    onTouchend: e[4] || (e[4] = function() {
      return r.onRowTouchEnd && r.onRowTouchEnd.apply(r, arguments);
    }),
    onKeydown: e[5] || (e[5] = Qi(function() {
      return r.onRowKeyDown && r.onRowKeyDown.apply(r, arguments);
    }, ["self"])),
    onMousedown: e[6] || (e[6] = function() {
      return r.onRowMouseDown && r.onRowMouseDown.apply(r, arguments);
    }),
    onDragstart: e[7] || (e[7] = function() {
      return r.onRowDragStart && r.onRowDragStart.apply(r, arguments);
    }),
    onDragover: e[8] || (e[8] = function() {
      return r.onRowDragOver && r.onRowDragOver.apply(r, arguments);
    }),
    onDragleave: e[9] || (e[9] = function() {
      return r.onRowDragLeave && r.onRowDragLeave.apply(r, arguments);
    }),
    onDragend: e[10] || (e[10] = function() {
      return r.onRowDragEnd && r.onRowDragEnd.apply(r, arguments);
    }),
    onDrop: e[11] || (e[11] = function() {
      return r.onRowDrop && r.onRowDrop.apply(r, arguments);
    })
  }, r.getBodyRowPTOptions("bodyRow"), {
    "data-p-index": r.rowIndex,
    "data-p-selectable-row": !!n.selectionMode,
    "data-p-selected": n.selection && r.isSelected,
    "data-p-selected-contextmenu": n.contextMenuSelection && r.isSelectedWithContextMenu
  }), [(m(!0), y(_, null, fe(n.columns, function(d, c) {
    return m(), y(_, null, [r.shouldRenderBodyCell(d) ? (m(), O(s, {
      key: r.columnProp(d, "columnKey") || r.columnProp(d, "field") || c,
      rowData: n.rowData,
      column: d,
      rowIndex: r.rowIndex,
      index: c,
      selected: r.isSelected,
      frozenRow: n.frozenRow,
      rowspan: n.rowGroupMode === "rowspan" ? r.calculateRowGroupSize(d) : null,
      editMode: n.editMode,
      editing: n.editMode === "row" && r.isRowEditing,
      editingMeta: n.editingMeta,
      virtualScrollerContentProps: n.virtualScrollerContentProps,
      ariaControls: n.expandedRowId + "_" + r.rowIndex + "_expansion",
      name: n.nameAttributeSelector,
      isRowExpanded: i.d_rowExpanded,
      expandedRowIcon: n.expandedRowIcon,
      collapsedRowIcon: n.collapsedRowIcon,
      editButtonProps: n.editButtonProps,
      onRadioChange: r.onRadioChange,
      onCheckboxChange: r.onCheckboxChange,
      onRowToggle: r.onRowToggle,
      onCellEditInit: r.onCellEditInit,
      onCellEditComplete: r.onCellEditComplete,
      onCellEditCancel: r.onCellEditCancel,
      onRowEditInit: r.onRowEditInit,
      onRowEditSave: r.onRowEditSave,
      onRowEditCancel: r.onRowEditCancel,
      onEditingMetaChange: r.onEditingMetaChange,
      unstyled: t.unstyled,
      pt: t.pt
    }, null, 8, ["rowData", "column", "rowIndex", "index", "selected", "frozenRow", "rowspan", "editMode", "editing", "editingMeta", "virtualScrollerContentProps", "ariaControls", "name", "isRowExpanded", "expandedRowIcon", "collapsedRowIcon", "editButtonProps", "onRadioChange", "onCheckboxChange", "onRowToggle", "onCellEditInit", "onCellEditComplete", "onCellEditCancel", "onRowEditInit", "onRowEditSave", "onRowEditCancel", "onEditingMetaChange", "unstyled", "pt"])) : M("", !0)], 64);
  }), 256))], 16, iB)) : M("", !0), n.templates.expansion && n.expandedRows && i.d_rowExpanded ? (m(), y("tr", k({
    key: 2,
    id: n.expandedRowId + "_" + r.rowIndex + "_expansion",
    class: t.cx("rowExpansion"),
    role: "row"
  }, t.ptm("rowExpansion")), [v("td", k({
    colspan: r.columnsLength
  }, An(An({}, r.getColumnPT("bodycell")), t.ptm("rowExpansionCell"))), [(m(), O(q(n.templates.expansion), {
    data: n.rowData,
    index: r.rowIndex
  }, null, 8, ["data", "index"]))], 16, lB)], 16, aB)) : M("", !0), n.templates.groupfooter && n.rowGroupMode === "subheader" && r.shouldRenderRowGroupFooter ? (m(), y("tr", k({
    key: 3,
    class: t.cx("rowGroupFooter"),
    role: "row"
  }, t.ptm("rowGroupFooter")), [v("td", k({
    colspan: r.columnsLength - 1
  }, An(An({}, r.getColumnPT("bodycell")), t.ptm("rowGroupFooterCell"))), [(m(), O(q(n.templates.groupfooter), {
    data: n.rowData,
    index: r.rowIndex
  }, null, 8, ["data", "index"]))], 16, sB)], 16)) : M("", !0)], 64));
}
gg.render = cB;
var bg = {
  name: "TableBody",
  hostName: "DataTable",
  extends: ne,
  emits: ["rowgroup-toggle", "row-click", "row-dblclick", "row-rightclick", "row-touchend", "row-keydown", "row-mousedown", "row-dragstart", "row-dragover", "row-dragleave", "row-dragend", "row-drop", "row-toggle", "radio-change", "checkbox-change", "cell-edit-init", "cell-edit-complete", "cell-edit-cancel", "row-edit-init", "row-edit-save", "row-edit-cancel", "editing-meta-change"],
  props: {
    value: {
      type: Array,
      default: null
    },
    columns: {
      type: null,
      default: null
    },
    frozenRow: {
      type: Boolean,
      default: !1
    },
    empty: {
      type: Boolean,
      default: !1
    },
    rowGroupMode: {
      type: String,
      default: null
    },
    groupRowsBy: {
      type: [Array, String, Function],
      default: null
    },
    expandableRowGroups: {
      type: Boolean,
      default: !1
    },
    expandedRowGroups: {
      type: Array,
      default: null
    },
    first: {
      type: Number,
      default: 0
    },
    dataKey: {
      type: [String, Function],
      default: null
    },
    expandedRowIcon: {
      type: String,
      default: null
    },
    collapsedRowIcon: {
      type: String,
      default: null
    },
    expandedRows: {
      type: [Array, Object],
      default: null
    },
    selection: {
      type: [Array, Object],
      default: null
    },
    selectionKeys: {
      type: null,
      default: null
    },
    selectionMode: {
      type: String,
      default: null
    },
    rowHover: {
      type: Boolean,
      default: !1
    },
    contextMenu: {
      type: Boolean,
      default: !1
    },
    contextMenuSelection: {
      type: Object,
      default: null
    },
    rowClass: {
      type: null,
      default: null
    },
    rowStyle: {
      type: null,
      default: null
    },
    editMode: {
      type: String,
      default: null
    },
    compareSelectionBy: {
      type: String,
      default: "deepEquals"
    },
    editingRows: {
      type: Array,
      default: null
    },
    editingRowKeys: {
      type: null,
      default: null
    },
    editingMeta: {
      type: Object,
      default: null
    },
    templates: {
      type: null,
      default: null
    },
    scrollable: {
      type: Boolean,
      default: !1
    },
    editButtonProps: {
      type: Object,
      default: null
    },
    virtualScrollerContentProps: {
      type: Object,
      default: null
    },
    isVirtualScrollerDisabled: {
      type: Boolean,
      default: !1
    }
  },
  data: function() {
    return {
      rowGroupHeaderStyleObject: {}
    };
  },
  mounted: function() {
    this.frozenRow && this.updateFrozenRowStickyPosition(), this.scrollable && this.rowGroupMode === "subheader" && this.updateFrozenRowGroupHeaderStickyPosition();
  },
  updated: function() {
    this.frozenRow && this.updateFrozenRowStickyPosition(), this.scrollable && this.rowGroupMode === "subheader" && this.updateFrozenRowGroupHeaderStickyPosition();
  },
  methods: {
    getRowKey: function(e, n) {
      return this.dataKey ? be(e, this.dataKey) : n;
    },
    updateFrozenRowStickyPosition: function() {
      this.$el.style.top = er(this.$el.previousElementSibling) + "px";
    },
    updateFrozenRowGroupHeaderStickyPosition: function() {
      var e = er(this.$el.previousElementSibling);
      this.rowGroupHeaderStyleObject.top = e + "px";
    },
    getVirtualScrollerProp: function(e, n) {
      return n = n || this.virtualScrollerContentProps, n ? n[e] : null;
    },
    bodyRef: function(e) {
      var n = this.getVirtualScrollerProp("contentRef");
      n && n(e);
    }
  },
  computed: {
    rowGroupHeaderStyle: function() {
      return this.scrollable ? {
        top: this.rowGroupHeaderStyleObject.top
      } : null;
    },
    bodyContentStyle: function() {
      return this.getVirtualScrollerProp("contentStyle");
    },
    ptmTBodyOptions: function() {
      var e;
      return {
        context: {
          scrollable: (e = this.$parentInstance) === null || e === void 0 || (e = e.$parentInstance) === null || e === void 0 ? void 0 : e.scrollable
        }
      };
    },
    dataP: function() {
      return Te({
        hoverable: this.rowHover || this.selectionMode,
        frozen: this.frozenRow
      });
    }
  },
  components: {
    DTBodyRow: gg
  }
}, uB = ["data-p"];
function pB(t, e, n, o, i, r) {
  var a = $("DTBodyRow");
  return m(), y("tbody", k({
    ref: r.bodyRef,
    class: t.cx("tbody"),
    role: "rowgroup",
    style: r.bodyContentStyle,
    "data-p": r.dataP
  }, t.ptm("tbody", r.ptmTBodyOptions)), [n.empty ? (m(), O(a, {
    key: 1,
    empty: n.empty,
    columns: n.columns,
    templates: n.templates,
    unstyled: t.unstyled,
    pt: t.pt
  }, null, 8, ["empty", "columns", "templates", "unstyled", "pt"])) : (m(!0), y(_, {
    key: 0
  }, fe(n.value, function(l, s) {
    return m(), O(a, {
      key: r.getRowKey(l, s),
      rowData: l,
      index: s,
      value: n.value,
      columns: n.columns,
      frozenRow: n.frozenRow,
      empty: n.empty,
      first: n.first,
      dataKey: n.dataKey,
      selection: n.selection,
      selectionKeys: n.selectionKeys,
      selectionMode: n.selectionMode,
      contextMenu: n.contextMenu,
      contextMenuSelection: n.contextMenuSelection,
      rowGroupMode: n.rowGroupMode,
      groupRowsBy: n.groupRowsBy,
      expandableRowGroups: n.expandableRowGroups,
      rowClass: n.rowClass,
      rowStyle: n.rowStyle,
      editMode: n.editMode,
      compareSelectionBy: n.compareSelectionBy,
      scrollable: n.scrollable,
      expandedRowIcon: n.expandedRowIcon,
      collapsedRowIcon: n.collapsedRowIcon,
      expandedRows: n.expandedRows,
      expandedRowGroups: n.expandedRowGroups,
      editingRows: n.editingRows,
      editingRowKeys: n.editingRowKeys,
      templates: n.templates,
      editButtonProps: n.editButtonProps,
      virtualScrollerContentProps: n.virtualScrollerContentProps,
      isVirtualScrollerDisabled: n.isVirtualScrollerDisabled,
      editingMeta: n.editingMeta,
      rowGroupHeaderStyle: r.rowGroupHeaderStyle,
      expandedRowId: t.$id,
      nameAttributeSelector: t.$attrSelector,
      onRowgroupToggle: e[0] || (e[0] = function(d) {
        return t.$emit("rowgroup-toggle", d);
      }),
      onRowClick: e[1] || (e[1] = function(d) {
        return t.$emit("row-click", d);
      }),
      onRowDblclick: e[2] || (e[2] = function(d) {
        return t.$emit("row-dblclick", d);
      }),
      onRowRightclick: e[3] || (e[3] = function(d) {
        return t.$emit("row-rightclick", d);
      }),
      onRowTouchend: e[4] || (e[4] = function(d) {
        return t.$emit("row-touchend", d);
      }),
      onRowKeydown: e[5] || (e[5] = function(d) {
        return t.$emit("row-keydown", d);
      }),
      onRowMousedown: e[6] || (e[6] = function(d) {
        return t.$emit("row-mousedown", d);
      }),
      onRowDragstart: e[7] || (e[7] = function(d) {
        return t.$emit("row-dragstart", d);
      }),
      onRowDragover: e[8] || (e[8] = function(d) {
        return t.$emit("row-dragover", d);
      }),
      onRowDragleave: e[9] || (e[9] = function(d) {
        return t.$emit("row-dragleave", d);
      }),
      onRowDragend: e[10] || (e[10] = function(d) {
        return t.$emit("row-dragend", d);
      }),
      onRowDrop: e[11] || (e[11] = function(d) {
        return t.$emit("row-drop", d);
      }),
      onRowToggle: e[12] || (e[12] = function(d) {
        return t.$emit("row-toggle", d);
      }),
      onRadioChange: e[13] || (e[13] = function(d) {
        return t.$emit("radio-change", d);
      }),
      onCheckboxChange: e[14] || (e[14] = function(d) {
        return t.$emit("checkbox-change", d);
      }),
      onCellEditInit: e[15] || (e[15] = function(d) {
        return t.$emit("cell-edit-init", d);
      }),
      onCellEditComplete: e[16] || (e[16] = function(d) {
        return t.$emit("cell-edit-complete", d);
      }),
      onCellEditCancel: e[17] || (e[17] = function(d) {
        return t.$emit("cell-edit-cancel", d);
      }),
      onRowEditInit: e[18] || (e[18] = function(d) {
        return t.$emit("row-edit-init", d);
      }),
      onRowEditSave: e[19] || (e[19] = function(d) {
        return t.$emit("row-edit-save", d);
      }),
      onRowEditCancel: e[20] || (e[20] = function(d) {
        return t.$emit("row-edit-cancel", d);
      }),
      onEditingMetaChange: e[21] || (e[21] = function(d) {
        return t.$emit("editing-meta-change", d);
      }),
      unstyled: t.unstyled,
      pt: t.pt
    }, null, 8, ["rowData", "index", "value", "columns", "frozenRow", "empty", "first", "dataKey", "selection", "selectionKeys", "selectionMode", "contextMenu", "contextMenuSelection", "rowGroupMode", "groupRowsBy", "expandableRowGroups", "rowClass", "rowStyle", "editMode", "compareSelectionBy", "scrollable", "expandedRowIcon", "collapsedRowIcon", "expandedRows", "expandedRowGroups", "editingRows", "editingRowKeys", "templates", "editButtonProps", "virtualScrollerContentProps", "isVirtualScrollerDisabled", "editingMeta", "rowGroupHeaderStyle", "expandedRowId", "nameAttributeSelector", "unstyled", "pt"]);
  }), 128))], 16, uB);
}
bg.render = pB;
var vg = {
  name: "FooterCell",
  hostName: "DataTable",
  extends: ne,
  props: {
    column: {
      type: Object,
      default: null
    },
    index: {
      type: Number,
      default: null
    }
  },
  data: function() {
    return {
      styleObject: {}
    };
  },
  mounted: function() {
    this.columnProp("frozen") && this.updateStickyPosition();
  },
  updated: function() {
    this.columnProp("frozen") && this.updateStickyPosition();
  },
  methods: {
    columnProp: function(e) {
      return eo(this.column, e);
    },
    getColumnPT: function(e) {
      var n, o, i = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          size: (n = this.$parentInstance) === null || n === void 0 || (n = n.$parentInstance) === null || n === void 0 ? void 0 : n.size,
          showGridlines: ((o = this.$parentInstance) === null || o === void 0 || (o = o.$parentInstance) === null || o === void 0 ? void 0 : o.showGridlines) || !1
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: i
      }), this.ptm("column.".concat(e), i), this.ptmo(this.getColumnProp(), e, i));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    updateStickyPosition: function() {
      if (this.columnProp("frozen")) {
        var e = this.columnProp("alignFrozen");
        if (e === "right") {
          var n = 0, o = vl(this.$el, '[data-p-frozen-column="true"]');
          o && (n = pt(o) + parseFloat(o.style["inset-inline-end"] || 0)), this.styleObject.insetInlineEnd = n + "px";
        } else {
          var i = 0, r = yl(this.$el, '[data-p-frozen-column="true"]');
          r && (i = pt(r) + parseFloat(r.style["inset-inline-start"] || 0)), this.styleObject.insetInlineStart = i + "px";
        }
      }
    }
  },
  computed: {
    containerClass: function() {
      return [this.columnProp("footerClass"), this.columnProp("class"), this.cx("footerCell")];
    },
    containerStyle: function() {
      var e = this.columnProp("footerStyle"), n = this.columnProp("style");
      return this.columnProp("frozen") ? [n, e, this.styleObject] : [n, e];
    }
  }
};
function Ti(t) {
  "@babel/helpers - typeof";
  return Ti = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ti(t);
}
function Kp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Hp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Kp(Object(n), !0).forEach(function(o) {
      fB(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Kp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function fB(t, e, n) {
  return (e = hB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function hB(t) {
  var e = mB(t, "string");
  return Ti(e) == "symbol" ? e : e + "";
}
function mB(t, e) {
  if (Ti(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ti(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var gB = ["colspan", "rowspan", "data-p-frozen-column"];
function bB(t, e, n, o, i, r) {
  return m(), y("td", k({
    style: r.containerStyle,
    class: r.containerClass,
    role: "cell",
    colspan: r.columnProp("colspan"),
    rowspan: r.columnProp("rowspan")
  }, Hp(Hp({}, r.getColumnPT("root")), r.getColumnPT("footerCell")), {
    "data-p-frozen-column": r.columnProp("frozen")
  }), [n.column.children && n.column.children.footer ? (m(), O(q(n.column.children.footer), {
    key: 0,
    column: n.column
  }, null, 8, ["column"])) : M("", !0), r.columnProp("footer") ? (m(), y("span", k({
    key: 1,
    class: t.cx("columnFooter")
  }, r.getColumnPT("columnFooter")), re(r.columnProp("footer")), 17)) : M("", !0)], 16, gB);
}
vg.render = bB;
function vB(t, e) {
  var n = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = yB(t)) || e) {
      n && (t = n);
      var o = 0, i = function() {
      };
      return { s: i, n: function() {
        return o >= t.length ? { done: !0 } : { done: !1, value: t[o++] };
      }, e: function(d) {
        throw d;
      }, f: i };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var r, a = !0, l = !1;
  return { s: function() {
    n = n.call(t);
  }, n: function() {
    var d = n.next();
    return a = d.done, d;
  }, e: function(d) {
    l = !0, r = d;
  }, f: function() {
    try {
      a || n.return == null || n.return();
    } finally {
      if (l) throw r;
    }
  } };
}
function yB(t, e) {
  if (t) {
    if (typeof t == "string") return Wp(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Wp(t, e) : void 0;
  }
}
function Wp(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var yg = {
  name: "TableFooter",
  hostName: "DataTable",
  extends: ne,
  props: {
    columnGroup: {
      type: null,
      default: null
    },
    columns: {
      type: Object,
      default: null
    }
  },
  provide: function() {
    return {
      $rows: this.d_footerRows,
      $columns: this.d_footerColumns
    };
  },
  data: function() {
    return {
      d_footerRows: new or({
        type: "Row"
      }),
      d_footerColumns: new or({
        type: "Column"
      })
    };
  },
  beforeUnmount: function() {
    this.d_footerRows.clear(), this.d_footerColumns.clear();
  },
  methods: {
    columnProp: function(e, n) {
      return eo(e, n);
    },
    getColumnGroupPT: function(e) {
      var n = {
        props: this.getColumnGroupProps(),
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          type: "footer",
          scrollable: this.ptmTFootOptions.context.scrollable
        }
      };
      return k(this.ptm("columnGroup.".concat(e), {
        columnGroup: n
      }), this.ptm("columnGroup.".concat(e), n), this.ptmo(this.getColumnGroupProps(), e, n));
    },
    getColumnGroupProps: function() {
      return this.columnGroup && this.columnGroup.props && this.columnGroup.props.pt ? this.columnGroup.props.pt : void 0;
    },
    getRowPT: function(e, n, o) {
      var i = {
        props: e.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: o
        }
      };
      return k(this.ptm("row.".concat(n), {
        row: i
      }), this.ptm("row.".concat(n), i), this.ptmo(this.getRowProp(e), n, i));
    },
    getRowProp: function(e) {
      return e.props && e.props.pt ? e.props.pt : void 0;
    },
    getFooterRows: function() {
      var e;
      return (e = this.d_footerRows) === null || e === void 0 ? void 0 : e.get(this.columnGroup, this.columnGroup.children);
    },
    getFooterColumns: function(e) {
      var n;
      return (n = this.d_footerColumns) === null || n === void 0 ? void 0 : n.get(e, e.children);
    }
  },
  computed: {
    hasFooter: function() {
      var e = !1;
      if (this.columnGroup)
        e = !0;
      else if (this.columns) {
        var n = vB(this.columns), o;
        try {
          for (n.s(); !(o = n.n()).done; ) {
            var i = o.value;
            if (this.columnProp(i, "footer") || i.children && i.children.footer) {
              e = !0;
              break;
            }
          }
        } catch (r) {
          n.e(r);
        } finally {
          n.f();
        }
      }
      return e;
    },
    ptmTFootOptions: function() {
      var e;
      return {
        context: {
          scrollable: (e = this.$parentInstance) === null || e === void 0 || (e = e.$parentInstance) === null || e === void 0 ? void 0 : e.scrollable
        }
      };
    }
  },
  components: {
    DTFooterCell: vg
  }
};
function Ri(t) {
  "@babel/helpers - typeof";
  return Ri = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ri(t);
}
function Up(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Oa(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Up(Object(n), !0).forEach(function(o) {
      kB(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Up(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function kB(t, e, n) {
  return (e = wB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function wB(t) {
  var e = CB(t, "string");
  return Ri(e) == "symbol" ? e : e + "";
}
function CB(t, e) {
  if (Ri(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ri(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var xB = ["data-p-scrollable"];
function SB(t, e, n, o, i, r) {
  var a, l = $("DTFooterCell");
  return r.hasFooter ? (m(), y("tfoot", k({
    key: 0,
    class: t.cx("tfoot"),
    style: t.sx("tfoot"),
    role: "rowgroup"
  }, n.columnGroup ? Oa(Oa({}, t.ptm("tfoot", r.ptmTFootOptions)), r.getColumnGroupPT("root")) : t.ptm("tfoot", r.ptmTFootOptions), {
    "data-p-scrollable": (a = t.$parentInstance) === null || a === void 0 || (a = a.$parentInstance) === null || a === void 0 ? void 0 : a.scrollable,
    "data-pc-section": "tfoot"
  }), [n.columnGroup ? (m(!0), y(_, {
    key: 1
  }, fe(r.getFooterRows(), function(s, d) {
    return m(), y("tr", k({
      key: d,
      role: "row"
    }, {
      ref_for: !0
    }, Oa(Oa({}, t.ptm("footerRow")), r.getRowPT(s, "root", d))), [(m(!0), y(_, null, fe(r.getFooterColumns(s), function(c, u) {
      return m(), y(_, {
        key: r.columnProp(c, "columnKey") || r.columnProp(c, "field") || u
      }, [r.columnProp(c, "hidden") ? M("", !0) : (m(), O(l, {
        key: 0,
        column: c,
        index: d,
        pt: t.pt
      }, null, 8, ["column", "index", "pt"]))], 64);
    }), 128))], 16);
  }), 128)) : (m(), y("tr", k({
    key: 0,
    role: "row"
  }, t.ptm("footerRow")), [(m(!0), y(_, null, fe(n.columns, function(s, d) {
    return m(), y(_, {
      key: r.columnProp(s, "columnKey") || r.columnProp(s, "field") || d
    }, [r.columnProp(s, "hidden") ? M("", !0) : (m(), O(l, {
      key: 0,
      column: s,
      pt: t.pt
    }, null, 8, ["column", "pt"]))], 64);
  }), 128))], 16))], 16, xB)) : M("", !0);
}
yg.render = SB;
function Bi(t) {
  "@babel/helpers - typeof";
  return Bi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Bi(t);
}
function Gp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function co(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Gp(Object(n), !0).forEach(function(o) {
      IB(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Gp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function IB(t, e, n) {
  return (e = OB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function OB(t) {
  var e = PB(t, "string");
  return Bi(e) == "symbol" ? e : e + "";
}
function PB(t, e) {
  if (Bi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Bi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Pc = {
  name: "ColumnFilter",
  hostName: "DataTable",
  extends: ne,
  emits: ["filter-change", "filter-apply", "operator-change", "matchmode-change", "constraint-add", "constraint-remove", "filter-clear", "apply-click"],
  props: {
    field: {
      type: String,
      default: null
    },
    type: {
      type: String,
      default: "text"
    },
    display: {
      type: String,
      default: null
    },
    showMenu: {
      type: Boolean,
      default: !0
    },
    matchMode: {
      type: String,
      default: null
    },
    showOperator: {
      type: Boolean,
      default: !0
    },
    showClearButton: {
      type: Boolean,
      default: !0
    },
    showApplyButton: {
      type: Boolean,
      default: !0
    },
    showMatchModes: {
      type: Boolean,
      default: !0
    },
    showAddButton: {
      type: Boolean,
      default: !0
    },
    matchModeOptions: {
      type: Array,
      default: null
    },
    maxConstraints: {
      type: Number,
      default: 2
    },
    filterElement: {
      type: Function,
      default: null
    },
    filterHeaderTemplate: {
      type: Function,
      default: null
    },
    filterFooterTemplate: {
      type: Function,
      default: null
    },
    filterClearTemplate: {
      type: Function,
      default: null
    },
    filterApplyTemplate: {
      type: Function,
      default: null
    },
    filterIconTemplate: {
      type: Function,
      default: null
    },
    filterAddIconTemplate: {
      type: Function,
      default: null
    },
    filterRemoveIconTemplate: {
      type: Function,
      default: null
    },
    filterClearIconTemplate: {
      type: Function,
      default: null
    },
    filters: {
      type: Object,
      default: null
    },
    filtersStore: {
      type: Object,
      default: null
    },
    filterMenuClass: {
      type: String,
      default: null
    },
    filterMenuStyle: {
      type: null,
      default: null
    },
    filterInputProps: {
      type: null,
      default: null
    },
    filterButtonProps: {
      type: null,
      default: null
    },
    column: null
  },
  data: function() {
    return {
      overlayVisible: !1,
      defaultMatchMode: null,
      defaultOperator: null
    };
  },
  overlay: null,
  selfClick: !1,
  overlayEventListener: null,
  beforeUnmount: function() {
    this.overlayEventListener && (Hn.off("overlay-click", this.overlayEventListener), this.overlayEventListener = null), this.overlay && (Xe.clear(this.overlay), this.onOverlayHide());
  },
  mounted: function() {
    if (this.filters && this.filters[this.field]) {
      var e = this.filters[this.field];
      e.operator ? (this.defaultMatchMode = e.constraints[0].matchMode, this.defaultOperator = e.operator) : this.defaultMatchMode = this.filters[this.field].matchMode;
    }
  },
  methods: {
    getColumnPT: function(e, n) {
      var o = co({
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        }
      }, n);
      return k(this.ptm("column.".concat(e), {
        column: o
      }), this.ptm("column.".concat(e), o), this.ptmo(this.getColumnProp(), e, o));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    ptmFilterConstraintOptions: function(e) {
      return {
        context: {
          highlighted: e && this.isRowMatchModeSelected(e.value)
        }
      };
    },
    clearFilter: function() {
      var e = co({}, this.filters);
      e[this.field].operator ? (e[this.field].constraints.splice(1), e[this.field].operator = this.defaultOperator, e[this.field].constraints[0] = {
        value: null,
        matchMode: this.defaultMatchMode
      }) : (e[this.field].value = null, e[this.field].matchMode = this.defaultMatchMode), this.$emit("filter-clear"), this.$emit("filter-change", e), this.$emit("filter-apply"), this.hide();
    },
    applyFilter: function() {
      this.$emit("apply-click", {
        field: this.field,
        constraints: this.filters[this.field]
      }), this.$emit("filter-apply"), this.hide();
    },
    hasFilter: function() {
      if (this.filtersStore) {
        var e = this.filtersStore[this.field];
        if (e)
          return e.operator ? !this.isFilterBlank(e.constraints[0].value) : !this.isFilterBlank(e.value);
      }
      return !1;
    },
    hasRowFilter: function() {
      return this.filters[this.field] && !this.isFilterBlank(this.filters[this.field].value);
    },
    isFilterBlank: function(e) {
      return e != null ? typeof e == "string" && e.trim().length == 0 || e instanceof Array && e.length == 0 : !0;
    },
    toggleMenu: function(e) {
      this.overlayVisible = !this.overlayVisible, e.preventDefault();
    },
    onToggleButtonKeyDown: function(e) {
      switch (e.code) {
        case "Enter":
        case "NumpadEnter":
        case "Space":
          this.toggleMenu(e);
          break;
        case "Escape":
          this.overlayVisible = !1;
          break;
      }
    },
    onRowMatchModeChange: function(e) {
      var n = co({}, this.filters);
      n[this.field].matchMode = e, this.$emit("matchmode-change", {
        field: this.field,
        matchMode: e
      }), this.$emit("filter-change", n), this.$emit("filter-apply"), this.hide();
    },
    onRowMatchModeKeyDown: function(e) {
      var n = e.target;
      switch (e.code) {
        case "ArrowDown":
          var o = this.findNextItem(n);
          o && (n.removeAttribute("tabindex"), o.tabIndex = "0", o.focus()), e.preventDefault();
          break;
        case "ArrowUp":
          var i = this.findPrevItem(n);
          i && (n.removeAttribute("tabindex"), i.tabIndex = "0", i.focus()), e.preventDefault();
          break;
      }
    },
    isRowMatchModeSelected: function(e) {
      return this.filters[this.field].matchMode === e;
    },
    onOperatorChange: function(e) {
      var n = co({}, this.filters);
      n[this.field].operator = e, this.$emit("filter-change", n), this.$emit("operator-change", {
        field: this.field,
        operator: e
      }), this.showApplyButton || this.$emit("filter-apply");
    },
    onMenuMatchModeChange: function(e, n) {
      var o = co({}, this.filters);
      o[this.field].constraints[n].matchMode = e, this.$emit("matchmode-change", {
        field: this.field,
        matchMode: e,
        index: n
      }), this.showApplyButton || this.$emit("filter-apply");
    },
    addConstraint: function() {
      var e = co({}, this.filters), n = {
        value: null,
        matchMode: this.defaultMatchMode
      };
      e[this.field].constraints.push(n), this.$emit("constraint-add", {
        field: this.field,
        constraint: n
      }), this.$emit("filter-change", e), this.showApplyButton || this.$emit("filter-apply");
    },
    removeConstraint: function(e) {
      var n = co({}, this.filters), o = n[this.field].constraints.splice(e, 1);
      this.$emit("constraint-remove", {
        field: this.field,
        constraint: o
      }), this.$emit("filter-change", n), this.showApplyButton || this.$emit("filter-apply");
    },
    filterCallback: function() {
      this.$emit("filter-apply");
    },
    findNextItem: function(e) {
      var n = e.nextElementSibling;
      return n ? Le(n, "data-pc-section") === "filterconstraintseparator" ? this.findNextItem(n) : n : e.parentElement.firstElementChild;
    },
    findPrevItem: function(e) {
      var n = e.previousElementSibling;
      return n ? Le(n, "data-pc-section") === "filterconstraintseparator" ? this.findPrevItem(n) : n : e.parentElement.lastElementChild;
    },
    hide: function() {
      this.overlayVisible = !1, this.showMenuButton && Fe(this.$refs.icon.$el);
    },
    onContentClick: function(e) {
      this.selfClick = !0, Hn.emit("overlay-click", {
        originalEvent: e,
        target: this.overlay
      });
    },
    onContentMouseDown: function() {
      this.selfClick = !0;
    },
    onOverlayEnter: function(e) {
      var n = this;
      this.filterMenuStyle && Hr(this.overlay, this.filterMenuStyle), Xe.set("overlay", e, this.$primevue.config.zIndex.overlay), Hr(e, {
        position: "absolute",
        top: "0"
      }), Uh(this.overlay, this.$refs.icon.$el), this.bindOutsideClickListener(), this.bindScrollListener(), this.bindResizeListener(), this.overlayEventListener = function(o) {
        n.isOutsideClicked(o.target) || (n.selfClick = !0);
      }, Hn.on("overlay-click", this.overlayEventListener);
    },
    onOverlayAfterEnter: function() {
      var e;
      (e = this.overlay) === null || e === void 0 || (e = e.$focustrap) === null || e === void 0 || e.autoFocus();
    },
    onOverlayLeave: function() {
      this.onOverlayHide();
    },
    onOverlayAfterLeave: function(e) {
      Xe.clear(e);
    },
    onOverlayHide: function() {
      this.unbindOutsideClickListener(), this.unbindResizeListener(), this.unbindScrollListener(), this.overlay = null, Hn.off("overlay-click", this.overlayEventListener), this.overlayEventListener = null;
    },
    overlayRef: function(e) {
      this.overlay = e;
    },
    isOutsideClicked: function(e) {
      return !this.isTargetClicked(e) && this.overlay && !(this.overlay.isSameNode(e) || this.overlay.contains(e));
    },
    isTargetClicked: function(e) {
      return this.$refs.icon && (this.$refs.icon.$el.isSameNode(e) || this.$refs.icon.$el.contains(e));
    },
    bindOutsideClickListener: function() {
      var e = this;
      this.outsideClickListener || (this.outsideClickListener = function(n) {
        e.overlayVisible && !e.selfClick && e.isOutsideClicked(n.target) && (e.overlayVisible = !1), e.selfClick = !1;
      }, document.addEventListener("click", this.outsideClickListener, !0));
    },
    unbindOutsideClickListener: function() {
      this.outsideClickListener && (document.removeEventListener("click", this.outsideClickListener, !0), this.outsideClickListener = null, this.selfClick = !1);
    },
    bindScrollListener: function() {
      var e = this;
      this.scrollHandler || (this.scrollHandler = new Tm(this.$refs.icon.$el, function() {
        e.overlayVisible && e.hide();
      })), this.scrollHandler.bindScrollListener();
    },
    unbindScrollListener: function() {
      this.scrollHandler && this.scrollHandler.unbindScrollListener();
    },
    bindResizeListener: function() {
      var e = this;
      this.resizeListener || (this.resizeListener = function() {
        e.overlayVisible && !fc() && e.hide();
      }, window.addEventListener("resize", this.resizeListener));
    },
    unbindResizeListener: function() {
      this.resizeListener && (window.removeEventListener("resize", this.resizeListener), this.resizeListener = null);
    }
  },
  computed: {
    showMenuButton: function() {
      return this.showMenu && (this.display === "row" ? this.type !== "boolean" : !0);
    },
    overlayId: function() {
      return this.$id + "_overlay";
    },
    matchModes: function() {
      var e = this;
      return this.matchModeOptions || this.$primevue.config.filterMatchModeOptions[this.type].map(function(n) {
        return {
          label: e.$primevue.config.locale[n],
          value: n
        };
      });
    },
    isShowMatchModes: function() {
      return this.type !== "boolean" && this.showMatchModes && this.matchModes;
    },
    operatorOptions: function() {
      return [{
        label: this.$primevue.config.locale.matchAll,
        value: se.AND
      }, {
        label: this.$primevue.config.locale.matchAny,
        value: se.OR
      }];
    },
    noFilterLabel: function() {
      return this.$primevue.config.locale ? this.$primevue.config.locale.noFilter : void 0;
    },
    isShowOperator: function() {
      return this.showOperator && this.filters[this.field].operator;
    },
    operator: function() {
      return this.filters[this.field].operator;
    },
    fieldConstraints: function() {
      return this.filters[this.field].constraints || [this.filters[this.field]];
    },
    showRemoveIcon: function() {
      return this.fieldConstraints.length > 1;
    },
    removeRuleButtonLabel: function() {
      return this.$primevue.config.locale ? this.$primevue.config.locale.removeRule : void 0;
    },
    addRuleButtonLabel: function() {
      return this.$primevue.config.locale ? this.$primevue.config.locale.addRule : void 0;
    },
    isShowAddConstraint: function() {
      return this.showAddButton && this.filters[this.field].operator && this.fieldConstraints && this.fieldConstraints.length < this.maxConstraints;
    },
    clearButtonLabel: function() {
      return this.$primevue.config.locale ? this.$primevue.config.locale.clear : void 0;
    },
    applyButtonLabel: function() {
      return this.$primevue.config.locale ? this.$primevue.config.locale.apply : void 0;
    },
    columnFilterButtonAriaLabel: function() {
      var e;
      return (e = this.$primevue.config.locale) !== null && e !== void 0 && e.aria ? this.overlayVisible ? this.$primevue.config.locale.aria.hideFilterMenu : this.$primevue.config.locale.aria.showFilterMenu : void 0;
    },
    filterOperatorAriaLabel: function() {
      return this.$primevue.config.locale ? this.$primevue.config.locale.filterOperator : void 0;
    },
    filterRuleAriaLabel: function() {
      return this.$primevue.config.locale ? this.$primevue.config.locale.filterConstraint : void 0;
    },
    ptmHeaderFilterClearParams: function() {
      return {
        context: {
          hidden: this.hasRowFilter()
        }
      };
    },
    ptmFilterMenuParams: function() {
      return {
        context: {
          overlayVisible: this.overlayVisible,
          active: this.hasFilter()
        }
      };
    }
  },
  components: {
    Select: la,
    Button: Ao,
    Portal: vr,
    FilterSlashIcon: cg,
    FilterFillIcon: dg,
    FilterIcon: sg,
    TrashIcon: pg,
    PlusIcon: ug
  },
  directives: {
    focustrap: wc
  }
};
function Ei(t) {
  "@babel/helpers - typeof";
  return Ei = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ei(t);
}
function qp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Pa(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? qp(Object(n), !0).forEach(function(o) {
      $B(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : qp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function $B(t, e, n) {
  return (e = TB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function TB(t) {
  var e = RB(t, "string");
  return Ei(e) == "symbol" ? e : e + "";
}
function RB(t, e) {
  if (Ei(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ei(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var BB = ["id", "aria-modal"], EB = ["onClick", "onKeydown", "tabindex"];
function MB(t, e, n, o, i, r) {
  var a = $("Button"), l = $("Select"), s = $("Portal"), d = tt("focustrap");
  return m(), y("div", k({
    class: t.cx("filter")
  }, r.getColumnPT("filter")), [n.display === "row" ? (m(), y("div", k({
    key: 0,
    class: t.cx("filterElementContainer")
  }, Pa(Pa({}, n.filterInputProps), r.getColumnPT("filterElementContainer"))), [(m(), O(q(n.filterElement), {
    field: n.field,
    filterModel: n.filters[n.field],
    filterCallback: r.filterCallback
  }, null, 8, ["field", "filterModel", "filterCallback"]))], 16)) : M("", !0), r.showMenuButton ? (m(), O(a, k({
    key: 1,
    ref: "icon",
    "aria-label": r.columnFilterButtonAriaLabel,
    "aria-haspopup": "true",
    "aria-expanded": i.overlayVisible,
    "aria-controls": r.overlayId,
    class: t.cx("pcColumnFilterButton"),
    unstyled: t.unstyled,
    onClick: e[0] || (e[0] = function(c) {
      return r.toggleMenu(c);
    }),
    onKeydown: e[1] || (e[1] = function(c) {
      return r.onToggleButtonKeyDown(c);
    })
  }, Pa(Pa({}, r.getColumnPT("pcColumnFilterButton", r.ptmFilterMenuParams)), n.filterButtonProps.filter)), {
    icon: E(function(c) {
      return [(m(), O(q(n.filterIconTemplate || (r.hasFilter() ? "FilterFillIcon" : "FilterIcon")), k({
        class: c.class
      }, r.getColumnPT("filterMenuIcon")), null, 16, ["class"]))];
    }),
    _: 1
  }, 16, ["aria-label", "aria-expanded", "aria-controls", "class", "unstyled"])) : M("", !0), P(s, null, {
    default: E(function() {
      return [P(gl, k({
        name: "p-connected-overlay",
        onEnter: r.onOverlayEnter,
        onAfterEnter: r.onOverlayAfterEnter,
        onLeave: r.onOverlayLeave,
        onAfterLeave: r.onOverlayAfterLeave
      }, r.getColumnPT("transition")), {
        default: E(function() {
          return [i.overlayVisible ? We((m(), y("div", k({
            key: 0,
            ref: r.overlayRef,
            id: r.overlayId,
            "aria-modal": i.overlayVisible,
            role: "dialog",
            class: [t.cx("filterOverlay"), n.filterMenuClass],
            onKeydown: e[10] || (e[10] = ja(function() {
              return r.hide && r.hide.apply(r, arguments);
            }, ["escape"])),
            onClick: e[11] || (e[11] = function() {
              return r.onContentClick && r.onContentClick.apply(r, arguments);
            }),
            onMousedown: e[12] || (e[12] = function() {
              return r.onContentMouseDown && r.onContentMouseDown.apply(r, arguments);
            })
          }, r.getColumnPT("filterOverlay")), [(m(), O(q(n.filterHeaderTemplate), {
            field: n.field,
            filterModel: n.filters[n.field],
            filterCallback: r.filterCallback
          }, null, 8, ["field", "filterModel", "filterCallback"])), n.display === "row" ? (m(), y("ul", k({
            key: 0,
            class: t.cx("filterConstraintList")
          }, r.getColumnPT("filterConstraintList")), [(m(!0), y(_, null, fe(r.matchModes, function(c, u) {
            return m(), y("li", k({
              key: c.label,
              class: t.cx("filterConstraint", {
                matchMode: c
              }),
              onClick: function(p) {
                return r.onRowMatchModeChange(c.value);
              },
              onKeydown: [e[2] || (e[2] = function(f) {
                return r.onRowMatchModeKeyDown(f);
              }), ja(Qi(function(f) {
                return r.onRowMatchModeChange(c.value);
              }, ["prevent"]), ["enter"])],
              tabindex: u === 0 ? "0" : null
            }, {
              ref_for: !0
            }, r.getColumnPT("filterConstraint", r.ptmFilterConstraintOptions(c))), re(c.label), 17, EB);
          }), 128)), v("li", k({
            class: t.cx("filterConstraintSeparator")
          }, r.getColumnPT("filterConstraintSeparator")), null, 16), v("li", k({
            class: t.cx("filterConstraint"),
            onClick: e[3] || (e[3] = function(c) {
              return r.clearFilter();
            }),
            onKeydown: [e[4] || (e[4] = function(c) {
              return r.onRowMatchModeKeyDown(c);
            }), e[5] || (e[5] = ja(function(c) {
              return t.onRowClearItemClick();
            }, ["enter"]))]
          }, r.getColumnPT("filterConstraint")), re(r.noFilterLabel), 17)], 16)) : (m(), y(_, {
            key: 1
          }, [r.isShowOperator ? (m(), y("div", k({
            key: 0,
            class: t.cx("filterOperator")
          }, r.getColumnPT("filterOperator")), [P(l, {
            options: r.operatorOptions,
            modelValue: r.operator,
            "aria-label": r.filterOperatorAriaLabel,
            class: Y(t.cx("pcFilterOperatorDropdown")),
            optionLabel: "label",
            optionValue: "value",
            "onUpdate:modelValue": e[6] || (e[6] = function(c) {
              return r.onOperatorChange(c);
            }),
            unstyled: t.unstyled,
            pt: r.getColumnPT("pcFilterOperatorDropdown")
          }, null, 8, ["options", "modelValue", "aria-label", "class", "unstyled", "pt"])], 16)) : M("", !0), v("div", k({
            class: t.cx("filterRuleList")
          }, r.getColumnPT("filterRuleList")), [(m(!0), y(_, null, fe(r.fieldConstraints, function(c, u) {
            return m(), y("div", k({
              key: u,
              class: t.cx("filterRule")
            }, {
              ref_for: !0
            }, r.getColumnPT("filterRule")), [r.isShowMatchModes ? (m(), O(l, {
              key: 0,
              options: r.matchModes,
              modelValue: c.matchMode,
              class: Y(t.cx("pcFilterConstraintDropdown")),
              optionLabel: "label",
              optionValue: "value",
              "aria-label": r.filterRuleAriaLabel,
              "onUpdate:modelValue": function(p) {
                return r.onMenuMatchModeChange(p, u);
              },
              unstyled: t.unstyled,
              pt: r.getColumnPT("pcFilterConstraintDropdown")
            }, null, 8, ["options", "modelValue", "class", "aria-label", "onUpdate:modelValue", "unstyled", "pt"])) : M("", !0), n.display === "menu" ? (m(), O(q(n.filterElement), {
              key: 1,
              field: n.field,
              filterModel: c,
              filterCallback: r.filterCallback,
              applyFilter: r.applyFilter
            }, null, 8, ["field", "filterModel", "filterCallback", "applyFilter"])) : M("", !0), r.showRemoveIcon ? (m(), y("div", k({
              key: 2,
              ref_for: !0
            }, r.getColumnPT("filterRemove")), [P(a, k({
              type: "button",
              class: t.cx("pcFilterRemoveRuleButton"),
              onClick: function(p) {
                return r.removeConstraint(u);
              },
              label: r.removeRuleButtonLabel,
              unstyled: t.unstyled
            }, {
              ref_for: !0
            }, n.filterButtonProps.popover.removeRule, {
              pt: r.getColumnPT("pcFilterRemoveRuleButton")
            }), {
              icon: E(function(f) {
                return [(m(), O(q(n.filterRemoveIconTemplate || "TrashIcon"), k({
                  class: f.class
                }, {
                  ref_for: !0
                }, r.getColumnPT("pcFilterRemoveRuleButton").icon), null, 16, ["class"]))];
              }),
              _: 1
            }, 16, ["class", "onClick", "label", "unstyled", "pt"])], 16)) : M("", !0)], 16);
          }), 128))], 16), r.isShowAddConstraint ? (m(), y("div", mr(k({
            key: 1
          }, r.getColumnPT("filterAddButtonContainer"))), [P(a, k({
            type: "button",
            label: r.addRuleButtonLabel,
            iconPos: "left",
            class: t.cx("pcFilterAddRuleButton"),
            onClick: e[7] || (e[7] = function(c) {
              return r.addConstraint();
            }),
            unstyled: t.unstyled
          }, n.filterButtonProps.popover.addRule, {
            pt: r.getColumnPT("pcFilterAddRuleButton")
          }), {
            icon: E(function(c) {
              return [(m(), O(q(n.filterAddIconTemplate || "PlusIcon"), k({
                class: c.class
              }, r.getColumnPT("pcFilterAddRuleButton").icon), null, 16, ["class"]))];
            }),
            _: 1
          }, 16, ["label", "class", "unstyled", "pt"])], 16)) : M("", !0), v("div", k({
            class: t.cx("filterButtonbar")
          }, r.getColumnPT("filterButtonbar")), [!n.filterClearTemplate && n.showClearButton ? (m(), O(a, k({
            key: 0,
            type: "button",
            class: t.cx("pcFilterClearButton"),
            label: r.clearButtonLabel,
            onClick: e[8] || (e[8] = function(c) {
              return r.clearFilter();
            }),
            unstyled: t.unstyled
          }, n.filterButtonProps.popover.clear, {
            pt: r.getColumnPT("pcFilterClearButton")
          }), null, 16, ["class", "label", "unstyled", "pt"])) : (m(), O(q(n.filterClearTemplate), {
            key: 1,
            field: n.field,
            filterModel: n.filters[n.field],
            filterCallback: r.clearFilter
          }, null, 8, ["field", "filterModel", "filterCallback"])), n.showApplyButton ? (m(), y(_, {
            key: 2
          }, [n.filterApplyTemplate ? (m(), O(q(n.filterApplyTemplate), {
            key: 1,
            field: n.field,
            filterModel: n.filters[n.field],
            filterCallback: r.applyFilter
          }, null, 8, ["field", "filterModel", "filterCallback"])) : (m(), O(a, k({
            key: 0,
            type: "button",
            class: t.cx("pcFilterApplyButton"),
            label: r.applyButtonLabel,
            onClick: e[9] || (e[9] = function(c) {
              return r.applyFilter();
            }),
            unstyled: t.unstyled
          }, n.filterButtonProps.popover.apply, {
            pt: r.getColumnPT("pcFilterApplyButton")
          }), null, 16, ["class", "label", "unstyled", "pt"]))], 64)) : M("", !0)], 16)], 64)), (m(), O(q(n.filterFooterTemplate), {
            field: n.field,
            filterModel: n.filters[n.field],
            filterCallback: r.filterCallback
          }, null, 8, ["field", "filterModel", "filterCallback"]))], 16, BB)), [[d]]) : M("", !0)];
        }),
        _: 1
      }, 16, ["onEnter", "onAfterEnter", "onLeave", "onAfterLeave"])];
    }),
    _: 1
  })], 16);
}
Pc.render = MB;
var $c = {
  name: "HeaderCheckbox",
  hostName: "DataTable",
  extends: ne,
  emits: ["change"],
  props: {
    checked: null,
    disabled: null,
    column: null,
    headerCheckboxIconTemplate: {
      type: Function,
      default: null
    }
  },
  methods: {
    getColumnPT: function(e) {
      var n = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          checked: this.checked,
          disabled: this.disabled
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: n
      }), this.ptm("column.".concat(e), n), this.ptmo(this.getColumnProp(), e, n));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    onChange: function(e) {
      this.$emit("change", {
        originalEvent: e,
        checked: !this.checked
      });
    }
  },
  computed: {
    headerCheckboxAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.checked ? this.$primevue.config.locale.aria.selectAll : this.$primevue.config.locale.aria.unselectAll : void 0;
    }
  },
  components: {
    CheckIcon: Tn,
    Checkbox: aa
  }
};
function AB(t, e, n, o, i, r) {
  var a = $("Checkbox");
  return m(), O(a, {
    modelValue: n.checked,
    binary: !0,
    disabled: n.disabled,
    "aria-label": r.headerCheckboxAriaLabel,
    onChange: r.onChange,
    unstyled: t.unstyled,
    pt: r.getColumnPT("pcHeaderCheckbox")
  }, null, 8, ["modelValue", "disabled", "aria-label", "onChange", "unstyled", "pt"]);
}
$c.render = AB;
var kg = {
  name: "FilterHeaderCell",
  hostName: "DataTable",
  extends: ne,
  emits: ["checkbox-change", "filter-change", "filter-apply", "operator-change", "matchmode-change", "constraint-add", "constraint-remove", "apply-click"],
  props: {
    column: {
      type: Object,
      default: null
    },
    index: {
      type: Number,
      default: null
    },
    allRowsSelected: {
      type: Boolean,
      default: !1
    },
    empty: {
      type: Boolean,
      default: !1
    },
    display: {
      type: String,
      default: "row"
    },
    filters: {
      type: Object,
      default: null
    },
    filtersStore: {
      type: Object,
      default: null
    },
    rowGroupMode: {
      type: String,
      default: null
    },
    groupRowsBy: {
      type: [Array, String, Function],
      default: null
    },
    filterInputProps: {
      type: null,
      default: null
    },
    filterButtonProps: {
      type: null,
      default: null
    }
  },
  data: function() {
    return {
      styleObject: {}
    };
  },
  mounted: function() {
    this.columnProp("frozen") && this.updateStickyPosition();
  },
  updated: function() {
    this.columnProp("frozen") && this.updateStickyPosition();
  },
  methods: {
    columnProp: function(e) {
      return eo(this.column, e);
    },
    getColumnPT: function(e) {
      if (!this.column) return null;
      var n = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: n
      }), this.ptm("column.".concat(e), n), this.ptmo(this.getColumnProp(), e, n));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    updateStickyPosition: function() {
      if (this.columnProp("frozen")) {
        var e = this.columnProp("alignFrozen");
        if (e === "right") {
          var n = 0, o = vl(this.$el, '[data-p-frozen-column="true"]');
          o && (n = pt(o) + parseFloat(o.style["inset-inline-end"] || 0)), this.styleObject.insetInlineEnd = n + "px";
        } else {
          var i = 0, r = yl(this.$el, '[data-p-frozen-column="true"]');
          r && (i = pt(r) + parseFloat(r.style["inset-inline-start"] || 0)), this.styleObject.insetInlineStart = i + "px";
        }
      }
    }
  },
  computed: {
    getFilterColumnHeaderClass: function() {
      return [this.cx("headerCell", {
        column: this.column
      }), this.columnProp("filterHeaderClass"), this.columnProp("class")];
    },
    getFilterColumnHeaderStyle: function() {
      return this.columnProp("frozen") ? [this.columnProp("filterHeaderStyle"), this.columnProp("style"), this.styleObject] : [this.columnProp("filterHeaderStyle"), this.columnProp("style")];
    }
  },
  components: {
    DTHeaderCheckbox: $c,
    DTColumnFilter: Pc
  }
};
function Mi(t) {
  "@babel/helpers - typeof";
  return Mi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Mi(t);
}
function Jp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Yp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Jp(Object(n), !0).forEach(function(o) {
      DB(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Jp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function DB(t, e, n) {
  return (e = LB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function LB(t) {
  var e = zB(t, "string");
  return Mi(e) == "symbol" ? e : e + "";
}
function zB(t, e) {
  if (Mi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Mi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var FB = ["data-p-frozen-column"];
function NB(t, e, n, o, i, r) {
  var a = $("DTHeaderCheckbox"), l = $("DTColumnFilter");
  return !r.columnProp("hidden") && (n.rowGroupMode !== "subheader" || n.groupRowsBy !== r.columnProp("field")) ? (m(), y("th", k({
    key: 0,
    style: r.getFilterColumnHeaderStyle,
    class: r.getFilterColumnHeaderClass
  }, Yp(Yp({}, r.getColumnPT("root")), r.getColumnPT("headerCell")), {
    "data-p-frozen-column": r.columnProp("frozen")
  }), [r.columnProp("selectionMode") === "multiple" ? (m(), O(a, {
    key: 0,
    checked: n.allRowsSelected,
    disabled: n.empty,
    onChange: e[0] || (e[0] = function(s) {
      return t.$emit("checkbox-change", s);
    }),
    column: n.column,
    unstyled: t.unstyled,
    pt: t.pt
  }, null, 8, ["checked", "disabled", "column", "unstyled", "pt"])) : M("", !0), n.column.children && n.column.children.filter ? (m(), O(l, {
    key: 1,
    field: r.columnProp("filterField") || r.columnProp("field"),
    type: r.columnProp("dataType"),
    display: "row",
    showMenu: r.columnProp("showFilterMenu"),
    filterElement: n.column.children && n.column.children.filter,
    filterHeaderTemplate: n.column.children && n.column.children.filterheader,
    filterFooterTemplate: n.column.children && n.column.children.filterfooter,
    filterClearTemplate: n.column.children && n.column.children.filterclear,
    filterApplyTemplate: n.column.children && n.column.children.filterapply,
    filterIconTemplate: n.column.children && n.column.children.filtericon,
    filterAddIconTemplate: n.column.children && n.column.children.filteraddicon,
    filterRemoveIconTemplate: n.column.children && n.column.children.filterremoveicon,
    filterClearIconTemplate: n.column.children && n.column.children.filterclearicon,
    filters: n.filters,
    filtersStore: n.filtersStore,
    filterInputProps: n.filterInputProps,
    filterButtonProps: n.filterButtonProps,
    onFilterChange: e[1] || (e[1] = function(s) {
      return t.$emit("filter-change", s);
    }),
    onFilterApply: e[2] || (e[2] = function(s) {
      return t.$emit("filter-apply");
    }),
    filterMenuStyle: r.columnProp("filterMenuStyle"),
    filterMenuClass: r.columnProp("filterMenuClass"),
    showOperator: r.columnProp("showFilterOperator"),
    showClearButton: r.columnProp("showClearButton"),
    showApplyButton: r.columnProp("showApplyButton"),
    showMatchModes: r.columnProp("showFilterMatchModes"),
    showAddButton: r.columnProp("showAddButton"),
    matchModeOptions: r.columnProp("filterMatchModeOptions"),
    maxConstraints: r.columnProp("maxConstraints"),
    onOperatorChange: e[3] || (e[3] = function(s) {
      return t.$emit("operator-change", s);
    }),
    onMatchmodeChange: e[4] || (e[4] = function(s) {
      return t.$emit("matchmode-change", s);
    }),
    onConstraintAdd: e[5] || (e[5] = function(s) {
      return t.$emit("constraint-add", s);
    }),
    onConstraintRemove: e[6] || (e[6] = function(s) {
      return t.$emit("constraint-remove", s);
    }),
    onApplyClick: e[7] || (e[7] = function(s) {
      return t.$emit("apply-click", s);
    }),
    column: n.column,
    unstyled: t.unstyled,
    pt: t.pt
  }, null, 8, ["field", "type", "showMenu", "filterElement", "filterHeaderTemplate", "filterFooterTemplate", "filterClearTemplate", "filterApplyTemplate", "filterIconTemplate", "filterAddIconTemplate", "filterRemoveIconTemplate", "filterClearIconTemplate", "filters", "filtersStore", "filterInputProps", "filterButtonProps", "filterMenuStyle", "filterMenuClass", "showOperator", "showClearButton", "showApplyButton", "showMatchModes", "showAddButton", "matchModeOptions", "maxConstraints", "column", "unstyled", "pt"])) : M("", !0)], 16, FB)) : M("", !0);
}
kg.render = NB;
var wg = {
  name: "HeaderCell",
  hostName: "DataTable",
  extends: ne,
  emits: ["column-click", "column-mousedown", "column-dragstart", "column-dragover", "column-dragleave", "column-drop", "column-resizestart", "checkbox-change", "filter-change", "filter-apply", "operator-change", "matchmode-change", "constraint-add", "constraint-remove", "filter-clear", "apply-click"],
  props: {
    column: {
      type: Object,
      default: null
    },
    index: {
      type: Number,
      default: null
    },
    resizableColumns: {
      type: Boolean,
      default: !1
    },
    groupRowsBy: {
      type: [Array, String, Function],
      default: null
    },
    sortMode: {
      type: String,
      default: "single"
    },
    groupRowSortField: {
      type: [String, Function],
      default: null
    },
    sortField: {
      type: [String, Function],
      default: null
    },
    sortOrder: {
      type: Number,
      default: null
    },
    multiSortMeta: {
      type: Array,
      default: null
    },
    allRowsSelected: {
      type: Boolean,
      default: !1
    },
    empty: {
      type: Boolean,
      default: !1
    },
    filterDisplay: {
      type: String,
      default: null
    },
    filters: {
      type: Object,
      default: null
    },
    filtersStore: {
      type: Object,
      default: null
    },
    filterColumn: {
      type: Boolean,
      default: !1
    },
    reorderableColumns: {
      type: Boolean,
      default: !1
    },
    filterInputProps: {
      type: null,
      default: null
    },
    filterButtonProps: {
      type: null,
      default: null
    }
  },
  data: function() {
    return {
      styleObject: {}
    };
  },
  mounted: function() {
    this.columnProp("frozen") && this.updateStickyPosition();
  },
  updated: function() {
    this.columnProp("frozen") && this.updateStickyPosition();
  },
  methods: {
    columnProp: function(e) {
      return eo(this.column, e);
    },
    getColumnPT: function(e) {
      var n, o, i = {
        props: this.column.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: this.index,
          sortable: this.columnProp("sortable") === "" || this.columnProp("sortable"),
          sorted: this.isColumnSorted(),
          resizable: this.resizableColumns,
          size: (n = this.$parentInstance) === null || n === void 0 || (n = n.$parentInstance) === null || n === void 0 ? void 0 : n.size,
          showGridlines: ((o = this.$parentInstance) === null || o === void 0 || (o = o.$parentInstance) === null || o === void 0 ? void 0 : o.showGridlines) || !1
        }
      };
      return k(this.ptm("column.".concat(e), {
        column: i
      }), this.ptm("column.".concat(e), i), this.ptmo(this.getColumnProp(), e, i));
    },
    getColumnProp: function() {
      return this.column.props && this.column.props.pt ? this.column.props.pt : void 0;
    },
    onClick: function(e) {
      this.$emit("column-click", {
        originalEvent: e,
        column: this.column
      });
    },
    onKeyDown: function(e) {
      (e.code === "Enter" || e.code === "NumpadEnter" || e.code === "Space") && e.currentTarget.nodeName === "TH" && Le(e.currentTarget, "data-p-sortable-column") && (this.$emit("column-click", {
        originalEvent: e,
        column: this.column
      }), e.preventDefault());
    },
    onMouseDown: function(e) {
      this.$emit("column-mousedown", {
        originalEvent: e,
        column: this.column
      });
    },
    onDragStart: function(e) {
      this.$emit("column-dragstart", {
        originalEvent: e,
        column: this.column
      });
    },
    onDragOver: function(e) {
      this.$emit("column-dragover", {
        originalEvent: e,
        column: this.column
      });
    },
    onDragLeave: function(e) {
      this.$emit("column-dragleave", {
        originalEvent: e,
        column: this.column
      });
    },
    onDrop: function(e) {
      this.$emit("column-drop", {
        originalEvent: e,
        column: this.column
      });
    },
    onResizeStart: function(e) {
      this.$emit("column-resizestart", e);
    },
    getMultiSortMetaIndex: function() {
      var e = this;
      return this.multiSortMeta.findIndex(function(n) {
        return n.field === e.columnProp("field") || n.field === e.columnProp("sortField");
      });
    },
    getBadgeValue: function() {
      var e = this.getMultiSortMetaIndex();
      return this.groupRowsBy && this.groupRowsBy === this.groupRowSortField && e > -1 ? e : e + 1;
    },
    isMultiSorted: function() {
      return this.sortMode === "multiple" && this.columnProp("sortable") && this.getMultiSortMetaIndex() > -1;
    },
    isColumnSorted: function() {
      return this.sortMode === "single" ? this.sortField && (this.sortField === this.columnProp("field") || this.sortField === this.columnProp("sortField")) : this.isMultiSorted();
    },
    updateStickyPosition: function() {
      if (this.columnProp("frozen")) {
        var e = this.columnProp("alignFrozen");
        if (e === "right") {
          var n = 0, o = vl(this.$el, '[data-p-frozen-column="true"]');
          o && (n = pt(o) + parseFloat(o.style["inset-inline-end"] || 0)), this.styleObject.insetInlineEnd = n + "px";
        } else {
          var i = 0, r = yl(this.$el, '[data-p-frozen-column="true"]');
          r && (i = pt(r) + parseFloat(r.style["inset-inline-start"] || 0)), this.styleObject.insetInlineStart = i + "px";
        }
        var a = this.$el.parentElement.nextElementSibling;
        if (a) {
          var l = _a(this.$el);
          a.children[l] && (a.children[l].style["inset-inline-start"] = this.styleObject["inset-inline-start"], a.children[l].style["inset-inline-end"] = this.styleObject["inset-inline-end"]);
        }
      }
    },
    onHeaderCheckboxChange: function(e) {
      this.$emit("checkbox-change", e);
    }
  },
  computed: {
    containerClass: function() {
      return [this.cx("headerCell"), this.filterColumn ? this.columnProp("filterHeaderClass") : this.columnProp("headerClass"), this.columnProp("class")];
    },
    containerStyle: function() {
      var e = this.filterColumn ? this.columnProp("filterHeaderStyle") : this.columnProp("headerStyle"), n = this.columnProp("style");
      return this.columnProp("frozen") ? [n, e, this.styleObject] : [n, e];
    },
    sortState: function() {
      var e = !1, n = null;
      if (this.sortMode === "single")
        e = this.sortField && (this.sortField === this.columnProp("field") || this.sortField === this.columnProp("sortField")), n = e ? this.sortOrder : 0;
      else if (this.sortMode === "multiple") {
        var o = this.getMultiSortMetaIndex();
        o > -1 && (e = !0, n = this.multiSortMeta[o].order);
      }
      return {
        sorted: e,
        sortOrder: n
      };
    },
    sortableColumnIcon: function() {
      var e = this.sortState, n = e.sorted, o = e.sortOrder;
      if (n) {
        if (n && o > 0) return Ed;
        if (n && o < 0) return Rd;
      } else return $d;
      return null;
    },
    ariaSort: function() {
      if (this.columnProp("sortable")) {
        var e = this.sortState, n = e.sorted, o = e.sortOrder;
        return n && o < 0 ? "descending" : n && o > 0 ? "ascending" : "none";
      } else
        return null;
    }
  },
  components: {
    Badge: Sl,
    DTHeaderCheckbox: $c,
    DTColumnFilter: Pc,
    SortAltIcon: $d,
    SortAmountUpAltIcon: Ed,
    SortAmountDownIcon: Rd
  }
};
function Ai(t) {
  "@babel/helpers - typeof";
  return Ai = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ai(t);
}
function Xp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Zp(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Xp(Object(n), !0).forEach(function(o) {
      jB(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Xp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function jB(t, e, n) {
  return (e = VB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function VB(t) {
  var e = _B(t, "string");
  return Ai(e) == "symbol" ? e : e + "";
}
function _B(t, e) {
  if (Ai(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ai(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var KB = ["tabindex", "colspan", "rowspan", "aria-sort", "data-p-sortable-column", "data-p-resizable-column", "data-p-sorted", "data-p-filter-column", "data-p-frozen-column", "data-p-reorderable-column"];
function HB(t, e, n, o, i, r) {
  var a = $("Badge"), l = $("DTHeaderCheckbox"), s = $("DTColumnFilter");
  return m(), y("th", k({
    style: r.containerStyle,
    class: r.containerClass,
    tabindex: r.columnProp("sortable") ? "0" : null,
    role: "columnheader",
    colspan: r.columnProp("colspan"),
    rowspan: r.columnProp("rowspan"),
    "aria-sort": r.ariaSort,
    onClick: e[8] || (e[8] = function() {
      return r.onClick && r.onClick.apply(r, arguments);
    }),
    onKeydown: e[9] || (e[9] = function() {
      return r.onKeyDown && r.onKeyDown.apply(r, arguments);
    }),
    onMousedown: e[10] || (e[10] = function() {
      return r.onMouseDown && r.onMouseDown.apply(r, arguments);
    }),
    onDragstart: e[11] || (e[11] = function() {
      return r.onDragStart && r.onDragStart.apply(r, arguments);
    }),
    onDragover: e[12] || (e[12] = function() {
      return r.onDragOver && r.onDragOver.apply(r, arguments);
    }),
    onDragleave: e[13] || (e[13] = function() {
      return r.onDragLeave && r.onDragLeave.apply(r, arguments);
    }),
    onDrop: e[14] || (e[14] = function() {
      return r.onDrop && r.onDrop.apply(r, arguments);
    })
  }, Zp(Zp({}, r.getColumnPT("root")), r.getColumnPT("headerCell")), {
    "data-p-sortable-column": r.columnProp("sortable"),
    "data-p-resizable-column": n.resizableColumns,
    "data-p-sorted": r.isColumnSorted(),
    "data-p-filter-column": n.filterColumn,
    "data-p-frozen-column": r.columnProp("frozen"),
    "data-p-reorderable-column": n.reorderableColumns
  }), [n.resizableColumns && !r.columnProp("frozen") ? (m(), y("span", k({
    key: 0,
    class: t.cx("columnResizer"),
    onMousedown: e[0] || (e[0] = function() {
      return r.onResizeStart && r.onResizeStart.apply(r, arguments);
    })
  }, r.getColumnPT("columnResizer")), null, 16)) : M("", !0), v("div", k({
    class: t.cx("columnHeaderContent")
  }, r.getColumnPT("columnHeaderContent")), [n.column.children && n.column.children.header ? (m(), O(q(n.column.children.header), {
    key: 0,
    column: n.column
  }, null, 8, ["column"])) : M("", !0), r.columnProp("header") ? (m(), y("span", k({
    key: 1,
    class: t.cx("columnTitle")
  }, r.getColumnPT("columnTitle")), re(r.columnProp("header")), 17)) : M("", !0), r.columnProp("sortable") ? (m(), y("span", mr(k({
    key: 2
  }, r.getColumnPT("sort"))), [(m(), O(q(n.column.children && n.column.children.sorticon || r.sortableColumnIcon), k({
    sorted: r.sortState.sorted,
    sortOrder: r.sortState.sortOrder,
    class: t.cx("sortIcon")
  }, r.getColumnPT("sorticon")), null, 16, ["sorted", "sortOrder", "class"]))], 16)) : M("", !0), r.isMultiSorted() ? (m(), O(a, {
    key: 3,
    class: Y(t.cx("pcSortBadge")),
    pt: r.getColumnPT("pcSortBadge"),
    value: r.getBadgeValue(),
    size: "small"
  }, null, 8, ["class", "pt", "value"])) : M("", !0), r.columnProp("selectionMode") === "multiple" && n.filterDisplay !== "row" ? (m(), O(l, {
    key: 4,
    checked: n.allRowsSelected,
    onChange: r.onHeaderCheckboxChange,
    disabled: n.empty,
    headerCheckboxIconTemplate: n.column.children && n.column.children.headercheckboxicon,
    column: n.column,
    unstyled: t.unstyled,
    pt: t.pt
  }, null, 8, ["checked", "onChange", "disabled", "headerCheckboxIconTemplate", "column", "unstyled", "pt"])) : M("", !0), n.filterDisplay === "menu" && n.column.children && n.column.children.filter ? (m(), O(s, {
    key: 5,
    field: r.columnProp("filterField") || r.columnProp("field"),
    type: r.columnProp("dataType"),
    display: "menu",
    showMenu: r.columnProp("showFilterMenu"),
    filterElement: n.column.children && n.column.children.filter,
    filterHeaderTemplate: n.column.children && n.column.children.filterheader,
    filterFooterTemplate: n.column.children && n.column.children.filterfooter,
    filterClearTemplate: n.column.children && n.column.children.filterclear,
    filterApplyTemplate: n.column.children && n.column.children.filterapply,
    filterIconTemplate: n.column.children && n.column.children.filtericon,
    filterAddIconTemplate: n.column.children && n.column.children.filteraddicon,
    filterRemoveIconTemplate: n.column.children && n.column.children.filterremoveicon,
    filterClearIconTemplate: n.column.children && n.column.children.filterclearicon,
    filters: n.filters,
    filtersStore: n.filtersStore,
    filterInputProps: n.filterInputProps,
    filterButtonProps: n.filterButtonProps,
    onFilterChange: e[1] || (e[1] = function(d) {
      return t.$emit("filter-change", d);
    }),
    onFilterApply: e[2] || (e[2] = function(d) {
      return t.$emit("filter-apply");
    }),
    filterMenuStyle: r.columnProp("filterMenuStyle"),
    filterMenuClass: r.columnProp("filterMenuClass"),
    showOperator: r.columnProp("showFilterOperator"),
    showClearButton: r.columnProp("showClearButton"),
    showApplyButton: r.columnProp("showApplyButton"),
    showMatchModes: r.columnProp("showFilterMatchModes"),
    showAddButton: r.columnProp("showAddButton"),
    matchModeOptions: r.columnProp("filterMatchModeOptions"),
    maxConstraints: r.columnProp("maxConstraints"),
    onOperatorChange: e[3] || (e[3] = function(d) {
      return t.$emit("operator-change", d);
    }),
    onMatchmodeChange: e[4] || (e[4] = function(d) {
      return t.$emit("matchmode-change", d);
    }),
    onConstraintAdd: e[5] || (e[5] = function(d) {
      return t.$emit("constraint-add", d);
    }),
    onConstraintRemove: e[6] || (e[6] = function(d) {
      return t.$emit("constraint-remove", d);
    }),
    onApplyClick: e[7] || (e[7] = function(d) {
      return t.$emit("apply-click", d);
    }),
    column: n.column,
    unstyled: t.unstyled,
    pt: t.pt
  }, null, 8, ["field", "type", "showMenu", "filterElement", "filterHeaderTemplate", "filterFooterTemplate", "filterClearTemplate", "filterApplyTemplate", "filterIconTemplate", "filterAddIconTemplate", "filterRemoveIconTemplate", "filterClearIconTemplate", "filters", "filtersStore", "filterInputProps", "filterButtonProps", "filterMenuStyle", "filterMenuClass", "showOperator", "showClearButton", "showApplyButton", "showMatchModes", "showAddButton", "matchModeOptions", "maxConstraints", "column", "unstyled", "pt"])) : M("", !0)], 16)], 16, KB);
}
wg.render = HB;
var Cg = {
  name: "TableHeader",
  hostName: "DataTable",
  extends: ne,
  emits: ["column-click", "column-mousedown", "column-dragstart", "column-dragover", "column-dragleave", "column-drop", "column-resizestart", "checkbox-change", "filter-change", "filter-apply", "operator-change", "matchmode-change", "constraint-add", "constraint-remove", "filter-clear", "apply-click"],
  props: {
    columnGroup: {
      type: null,
      default: null
    },
    columns: {
      type: null,
      default: null
    },
    rowGroupMode: {
      type: String,
      default: null
    },
    groupRowsBy: {
      type: [Array, String, Function],
      default: null
    },
    resizableColumns: {
      type: Boolean,
      default: !1
    },
    allRowsSelected: {
      type: Boolean,
      default: !1
    },
    empty: {
      type: Boolean,
      default: !1
    },
    sortMode: {
      type: String,
      default: "single"
    },
    groupRowSortField: {
      type: [String, Function],
      default: null
    },
    sortField: {
      type: [String, Function],
      default: null
    },
    sortOrder: {
      type: Number,
      default: null
    },
    multiSortMeta: {
      type: Array,
      default: null
    },
    filterDisplay: {
      type: String,
      default: null
    },
    filters: {
      type: Object,
      default: null
    },
    filtersStore: {
      type: Object,
      default: null
    },
    reorderableColumns: {
      type: Boolean,
      default: !1
    },
    first: {
      type: Number,
      default: 0
    },
    filterInputProps: {
      type: null,
      default: null
    },
    filterButtonProps: {
      type: null,
      default: null
    }
  },
  provide: function() {
    return {
      $rows: this.d_headerRows,
      $columns: this.d_headerColumns
    };
  },
  data: function() {
    return {
      d_headerRows: new or({
        type: "Row"
      }),
      d_headerColumns: new or({
        type: "Column"
      })
    };
  },
  beforeUnmount: function() {
    this.d_headerRows.clear(), this.d_headerColumns.clear();
  },
  methods: {
    columnProp: function(e, n) {
      return eo(e, n);
    },
    getColumnGroupPT: function(e) {
      var n, o = {
        props: this.getColumnGroupProps(),
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          type: "header",
          scrollable: (n = this.$parentInstance) === null || n === void 0 || (n = n.$parentInstance) === null || n === void 0 ? void 0 : n.scrollable
        }
      };
      return k(this.ptm("columnGroup.".concat(e), {
        columnGroup: o
      }), this.ptm("columnGroup.".concat(e), o), this.ptmo(this.getColumnGroupProps(), e, o));
    },
    getColumnGroupProps: function() {
      return this.columnGroup && this.columnGroup.props && this.columnGroup.props.pt ? this.columnGroup.props.pt : void 0;
    },
    getRowPT: function(e, n, o) {
      var i = {
        props: e.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: o
        }
      };
      return k(this.ptm("row.".concat(n), {
        row: i
      }), this.ptm("row.".concat(n), i), this.ptmo(this.getRowProp(e), n, i));
    },
    getRowProp: function(e) {
      return e.props && e.props.pt ? e.props.pt : void 0;
    },
    getColumnPT: function(e, n, o) {
      var i = {
        props: e.props,
        parent: {
          instance: this,
          props: this.$props,
          state: this.$data
        },
        context: {
          index: o
        }
      };
      return k(this.ptm("column.".concat(n), {
        column: i
      }), this.ptm("column.".concat(n), i), this.ptmo(this.getColumnProp(e), n, i));
    },
    getColumnProp: function(e) {
      return e.props && e.props.pt ? e.props.pt : void 0;
    },
    getFilterColumnHeaderClass: function(e) {
      return [this.cx("headerCell", {
        column: e
      }), this.columnProp(e, "filterHeaderClass"), this.columnProp(e, "class")];
    },
    getFilterColumnHeaderStyle: function(e) {
      return [this.columnProp(e, "filterHeaderStyle"), this.columnProp(e, "style")];
    },
    getHeaderRows: function() {
      var e;
      return (e = this.d_headerRows) === null || e === void 0 ? void 0 : e.get(this.columnGroup, this.columnGroup.children);
    },
    getHeaderColumns: function(e) {
      var n;
      return (n = this.d_headerColumns) === null || n === void 0 ? void 0 : n.get(e, e.children);
    }
  },
  computed: {
    ptmTHeadOptions: function() {
      var e;
      return {
        context: {
          scrollable: (e = this.$parentInstance) === null || e === void 0 || (e = e.$parentInstance) === null || e === void 0 ? void 0 : e.scrollable
        }
      };
    }
  },
  components: {
    DTHeaderCell: wg,
    DTFilterHeaderCell: kg
  }
};
function Di(t) {
  "@babel/helpers - typeof";
  return Di = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Di(t);
}
function Qp(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function $a(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? Qp(Object(n), !0).forEach(function(o) {
      WB(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : Qp(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function WB(t, e, n) {
  return (e = UB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function UB(t) {
  var e = GB(t, "string");
  return Di(e) == "symbol" ? e : e + "";
}
function GB(t, e) {
  if (Di(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Di(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var qB = ["data-p-scrollable"];
function JB(t, e, n, o, i, r) {
  var a, l = $("DTHeaderCell"), s = $("DTFilterHeaderCell");
  return m(), y("thead", k({
    class: t.cx("thead"),
    style: t.sx("thead"),
    role: "rowgroup"
  }, n.columnGroup ? $a($a({}, t.ptm("thead", r.ptmTHeadOptions)), r.getColumnGroupPT("root")) : t.ptm("thead", r.ptmTHeadOptions), {
    "data-p-scrollable": (a = t.$parentInstance) === null || a === void 0 || (a = a.$parentInstance) === null || a === void 0 ? void 0 : a.scrollable,
    "data-pc-section": "thead"
  }), [n.columnGroup ? (m(!0), y(_, {
    key: 1
  }, fe(r.getHeaderRows(), function(d, c) {
    return m(), y("tr", k({
      key: c,
      role: "row"
    }, {
      ref_for: !0
    }, $a($a({}, t.ptm("headerRow")), r.getRowPT(d, "root", c))), [(m(!0), y(_, null, fe(r.getHeaderColumns(d), function(u, f) {
      return m(), y(_, {
        key: r.columnProp(u, "columnKey") || r.columnProp(u, "field") || f
      }, [!r.columnProp(u, "hidden") && (n.rowGroupMode !== "subheader" || n.groupRowsBy !== r.columnProp(u, "field")) && typeof u.children != "string" ? (m(), O(l, {
        key: 0,
        column: u,
        onColumnClick: e[15] || (e[15] = function(p) {
          return t.$emit("column-click", p);
        }),
        onColumnMousedown: e[16] || (e[16] = function(p) {
          return t.$emit("column-mousedown", p);
        }),
        groupRowsBy: n.groupRowsBy,
        groupRowSortField: n.groupRowSortField,
        sortMode: n.sortMode,
        sortField: n.sortField,
        sortOrder: n.sortOrder,
        multiSortMeta: n.multiSortMeta,
        allRowsSelected: n.allRowsSelected,
        empty: n.empty,
        onCheckboxChange: e[17] || (e[17] = function(p) {
          return t.$emit("checkbox-change", p);
        }),
        filters: n.filters,
        filterDisplay: n.filterDisplay,
        filtersStore: n.filtersStore,
        filterInputProps: n.filterInputProps,
        filterButtonProps: n.filterButtonProps,
        onFilterChange: e[18] || (e[18] = function(p) {
          return t.$emit("filter-change", p);
        }),
        onFilterApply: e[19] || (e[19] = function(p) {
          return t.$emit("filter-apply");
        }),
        onOperatorChange: e[20] || (e[20] = function(p) {
          return t.$emit("operator-change", p);
        }),
        onMatchmodeChange: e[21] || (e[21] = function(p) {
          return t.$emit("matchmode-change", p);
        }),
        onConstraintAdd: e[22] || (e[22] = function(p) {
          return t.$emit("constraint-add", p);
        }),
        onConstraintRemove: e[23] || (e[23] = function(p) {
          return t.$emit("constraint-remove", p);
        }),
        onApplyClick: e[24] || (e[24] = function(p) {
          return t.$emit("apply-click", p);
        }),
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["column", "groupRowsBy", "groupRowSortField", "sortMode", "sortField", "sortOrder", "multiSortMeta", "allRowsSelected", "empty", "filters", "filterDisplay", "filtersStore", "filterInputProps", "filterButtonProps", "unstyled", "pt"])) : M("", !0)], 64);
    }), 128))], 16);
  }), 128)) : (m(), y("tr", k({
    key: 0,
    role: "row"
  }, t.ptm("headerRow")), [(m(!0), y(_, null, fe(n.columns, function(d, c) {
    return m(), y(_, {
      key: r.columnProp(d, "columnKey") || r.columnProp(d, "field") || c
    }, [!r.columnProp(d, "hidden") && (n.rowGroupMode !== "subheader" || n.groupRowsBy !== r.columnProp(d, "field")) ? (m(), O(l, {
      key: 0,
      column: d,
      index: c,
      onColumnClick: e[0] || (e[0] = function(u) {
        return t.$emit("column-click", u);
      }),
      onColumnMousedown: e[1] || (e[1] = function(u) {
        return t.$emit("column-mousedown", u);
      }),
      onColumnDragstart: e[2] || (e[2] = function(u) {
        return t.$emit("column-dragstart", u);
      }),
      onColumnDragover: e[3] || (e[3] = function(u) {
        return t.$emit("column-dragover", u);
      }),
      onColumnDragleave: e[4] || (e[4] = function(u) {
        return t.$emit("column-dragleave", u);
      }),
      onColumnDrop: e[5] || (e[5] = function(u) {
        return t.$emit("column-drop", u);
      }),
      groupRowsBy: n.groupRowsBy,
      groupRowSortField: n.groupRowSortField,
      reorderableColumns: n.reorderableColumns,
      resizableColumns: n.resizableColumns,
      onColumnResizestart: e[6] || (e[6] = function(u) {
        return t.$emit("column-resizestart", u);
      }),
      sortMode: n.sortMode,
      sortField: n.sortField,
      sortOrder: n.sortOrder,
      multiSortMeta: n.multiSortMeta,
      allRowsSelected: n.allRowsSelected,
      empty: n.empty,
      onCheckboxChange: e[7] || (e[7] = function(u) {
        return t.$emit("checkbox-change", u);
      }),
      filters: n.filters,
      filterDisplay: n.filterDisplay,
      filtersStore: n.filtersStore,
      filterInputProps: n.filterInputProps,
      filterButtonProps: n.filterButtonProps,
      first: n.first,
      onFilterChange: e[8] || (e[8] = function(u) {
        return t.$emit("filter-change", u);
      }),
      onFilterApply: e[9] || (e[9] = function(u) {
        return t.$emit("filter-apply");
      }),
      onOperatorChange: e[10] || (e[10] = function(u) {
        return t.$emit("operator-change", u);
      }),
      onMatchmodeChange: e[11] || (e[11] = function(u) {
        return t.$emit("matchmode-change", u);
      }),
      onConstraintAdd: e[12] || (e[12] = function(u) {
        return t.$emit("constraint-add", u);
      }),
      onConstraintRemove: e[13] || (e[13] = function(u) {
        return t.$emit("constraint-remove", u);
      }),
      onApplyClick: e[14] || (e[14] = function(u) {
        return t.$emit("apply-click", u);
      }),
      unstyled: t.unstyled,
      pt: t.pt
    }, null, 8, ["column", "index", "groupRowsBy", "groupRowSortField", "reorderableColumns", "resizableColumns", "sortMode", "sortField", "sortOrder", "multiSortMeta", "allRowsSelected", "empty", "filters", "filterDisplay", "filtersStore", "filterInputProps", "filterButtonProps", "first", "unstyled", "pt"])) : M("", !0)], 64);
  }), 128))], 16)), n.filterDisplay === "row" ? (m(), y("tr", k({
    key: 2,
    role: "row"
  }, t.ptm("headerRow")), [(m(!0), y(_, null, fe(n.columns, function(d, c) {
    return m(), y(_, {
      key: r.columnProp(d, "columnKey") || r.columnProp(d, "field") || c
    }, [!r.columnProp(d, "hidden") && (n.rowGroupMode !== "subheader" || n.groupRowsBy !== r.columnProp(d, "field")) ? (m(), O(s, {
      key: 0,
      column: d,
      index: c,
      allRowsSelected: n.allRowsSelected,
      empty: n.empty,
      display: "row",
      filters: n.filters,
      filtersStore: n.filtersStore,
      filterInputProps: n.filterInputProps,
      filterButtonProps: n.filterButtonProps,
      onFilterChange: e[25] || (e[25] = function(u) {
        return t.$emit("filter-change", u);
      }),
      onFilterApply: e[26] || (e[26] = function(u) {
        return t.$emit("filter-apply");
      }),
      onOperatorChange: e[27] || (e[27] = function(u) {
        return t.$emit("operator-change", u);
      }),
      onMatchmodeChange: e[28] || (e[28] = function(u) {
        return t.$emit("matchmode-change", u);
      }),
      onConstraintAdd: e[29] || (e[29] = function(u) {
        return t.$emit("constraint-add", u);
      }),
      onConstraintRemove: e[30] || (e[30] = function(u) {
        return t.$emit("constraint-remove", u);
      }),
      onApplyClick: e[31] || (e[31] = function(u) {
        return t.$emit("apply-click", u);
      }),
      onCheckboxChange: e[32] || (e[32] = function(u) {
        return t.$emit("checkbox-change", u);
      }),
      unstyled: t.unstyled,
      pt: t.pt
    }, null, 8, ["column", "index", "allRowsSelected", "empty", "filters", "filtersStore", "filterInputProps", "filterButtonProps", "unstyled", "pt"])) : M("", !0)], 64);
  }), 128))], 16)) : M("", !0)], 16, qB);
}
Cg.render = JB;
var YB = ["expanded"];
function cn(t) {
  "@babel/helpers - typeof";
  return cn = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, cn(t);
}
function XB(t, e) {
  if (t == null) return {};
  var n, o, i = ZB(t, e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(t);
    for (o = 0; o < r.length; o++) n = r[o], e.indexOf(n) === -1 && {}.propertyIsEnumerable.call(t, n) && (i[n] = t[n]);
  }
  return i;
}
function ZB(t, e) {
  if (t == null) return {};
  var n = {};
  for (var o in t) if ({}.hasOwnProperty.call(t, o)) {
    if (e.indexOf(o) !== -1) continue;
    n[o] = t[o];
  }
  return n;
}
function ef(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function Rt(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? ef(Object(n), !0).forEach(function(o) {
      Ka(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : ef(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function Ka(t, e, n) {
  return (e = QB(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function QB(t) {
  var e = eE(t, "string");
  return cn(e) == "symbol" ? e : e + "";
}
function eE(t, e) {
  if (cn(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (cn(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
function tf(t, e) {
  return oE(t) || nE(t, e) || Tc(t, e) || tE();
}
function tE() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function nE(t, e) {
  var n = t == null ? null : typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (n != null) {
    var o, i, r, a, l = [], s = !0, d = !1;
    try {
      if (r = (n = n.call(t)).next, e !== 0) for (; !(s = (o = r.call(n)).done) && (l.push(o.value), l.length !== e); s = !0) ;
    } catch (c) {
      d = !0, i = c;
    } finally {
      try {
        if (!s && n.return != null && (a = n.return(), Object(a) !== a)) return;
      } finally {
        if (d) throw i;
      }
    }
    return l;
  }
}
function oE(t) {
  if (Array.isArray(t)) return t;
}
function Ir(t, e) {
  var n = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = Tc(t)) || e) {
      n && (t = n);
      var o = 0, i = function() {
      };
      return { s: i, n: function() {
        return o >= t.length ? { done: !0 } : { done: !1, value: t[o++] };
      }, e: function(d) {
        throw d;
      }, f: i };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var r, a = !0, l = !1;
  return { s: function() {
    n = n.call(t);
  }, n: function() {
    var d = n.next();
    return a = d.done, d;
  }, e: function(d) {
    l = !0, r = d;
  }, f: function() {
    try {
      a || n.return == null || n.return();
    } finally {
      if (l) throw r;
    }
  } };
}
function ze(t) {
  return aE(t) || iE(t) || Tc(t) || rE();
}
function rE() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Tc(t, e) {
  if (t) {
    if (typeof t == "string") return Ad(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ad(t, e) : void 0;
  }
}
function iE(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function aE(t) {
  if (Array.isArray(t)) return Ad(t);
}
function Ad(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var xg = {
  name: "DataTable",
  extends: VR,
  inheritAttrs: !1,
  emits: ["value-change", "update:first", "update:rows", "page", "update:sortField", "update:sortOrder", "update:multiSortMeta", "sort", "filter", "row-click", "row-dblclick", "update:selection", "row-select", "row-unselect", "update:contextMenuSelection", "row-contextmenu", "row-unselect-all", "row-select-all", "select-all-change", "column-resize-end", "column-reorder", "row-reorder", "update:expandedRows", "row-collapse", "row-expand", "update:expandedRowGroups", "rowgroup-collapse", "rowgroup-expand", "update:filters", "state-restore", "state-save", "cell-edit-init", "cell-edit-complete", "cell-edit-cancel", "update:editingRows", "row-edit-init", "row-edit-save", "row-edit-cancel"],
  provide: function() {
    return {
      $columns: this.d_columns.get(),
      $columnGroups: this.d_columnGroups.get()
    };
  },
  data: function() {
    return {
      d_first: this.first,
      d_rows: this.rows,
      d_sortField: this.sortField,
      d_sortOrder: this.sortOrder,
      d_nullSortOrder: this.nullSortOrder,
      d_multiSortMeta: this.multiSortMeta ? ze(this.multiSortMeta) : [],
      d_groupRowsSortMeta: null,
      d_selectionKeys: null,
      d_columnOrder: null,
      d_editingRowKeys: null,
      d_editingMeta: {},
      d_filters: this.cloneFilters(this.filters),
      d_columns: new or({
        type: "Column"
      }),
      d_columnGroups: new or({
        type: "ColumnGroup"
      })
    };
  },
  rowTouched: !1,
  anchorRowIndex: null,
  rangeRowIndex: null,
  documentColumnResizeListener: null,
  documentColumnResizeEndListener: null,
  lastResizeHelperX: null,
  resizeColumnElement: null,
  columnResizing: !1,
  colReorderIconWidth: null,
  colReorderIconHeight: null,
  draggedColumn: null,
  draggedColumnElement: null,
  draggedRowIndex: null,
  droppedRowIndex: null,
  rowDragging: null,
  columnWidthsState: null,
  tableWidthState: null,
  columnWidthsRestored: !1,
  watch: {
    first: function(e) {
      this.d_first = e;
    },
    rows: function(e) {
      this.d_rows = e;
    },
    sortField: function(e) {
      this.d_sortField = e;
    },
    sortOrder: function(e) {
      this.d_sortOrder = e;
    },
    nullSortOrder: function(e) {
      this.d_nullSortOrder = e;
    },
    multiSortMeta: function(e) {
      this.d_multiSortMeta = e;
    },
    selection: {
      immediate: !0,
      handler: function(e) {
        this.dataKey && this.updateSelectionKeys(e);
      }
    },
    editingRows: {
      immediate: !0,
      handler: function(e) {
        this.dataKey && this.updateEditingRowKeys(e);
      }
    },
    filters: {
      deep: !0,
      handler: function(e) {
        this.d_filters = this.cloneFilters(e);
      }
    }
  },
  mounted: function() {
    this.isStateful() && (this.restoreState(), this.resizableColumns && this.restoreColumnWidths()), this.editMode === "row" && this.dataKey && !this.d_editingRowKeys && this.updateEditingRowKeys(this.editingRows);
  },
  beforeUnmount: function() {
    this.unbindColumnResizeEvents(), this.destroyStyleElement(), this.d_columns.clear(), this.d_columnGroups.clear();
  },
  updated: function() {
    this.isStateful() && this.saveState(), this.editMode === "row" && this.dataKey && !this.d_editingRowKeys && this.updateEditingRowKeys(this.editingRows);
  },
  methods: {
    columnProp: function(e, n) {
      return eo(e, n);
    },
    onPage: function(e) {
      var n = this;
      this.clearEditingMetaData(), this.d_first = e.first, this.d_rows = e.rows;
      var o = this.createLazyLoadEvent(e);
      o.pageCount = e.pageCount, o.page = e.page, this.$emit("update:first", this.d_first), this.$emit("update:rows", this.d_rows), this.$emit("page", o), this.$nextTick(function() {
        n.$emit("value-change", n.processedData);
      });
    },
    onColumnHeaderClick: function(e) {
      var n = this, o = e.originalEvent, i = e.column;
      if (this.columnProp(i, "sortable")) {
        var r = o.target, a = this.columnProp(i, "sortField") || this.columnProp(i, "field");
        if (Le(r, "data-p-sortable-column") === !0 || Le(r, "data-pc-section") === "columntitle" || Le(r, "data-pc-section") === "columnheadercontent" || Le(r, "data-pc-section") === "sorticon" || Le(r.parentElement, "data-pc-section") === "sorticon" || Le(r.parentElement.parentElement, "data-pc-section") === "sorticon" || r.closest('[data-p-sortable-column="true"]') && !r.closest('[data-pc-section="columnfilterbutton"]') && !Jl(o.target)) {
          if (Va(), this.sortMode === "single")
            this.d_sortField === a ? this.removableSort && this.d_sortOrder * -1 === this.defaultSortOrder ? (this.d_sortOrder = null, this.d_sortField = null) : this.d_sortOrder = this.d_sortOrder * -1 : (this.d_sortOrder = this.defaultSortOrder, this.d_sortField = a), this.$emit("update:sortField", this.d_sortField), this.$emit("update:sortOrder", this.d_sortOrder), this.resetPage();
          else if (this.sortMode === "multiple") {
            var l = o.metaKey || o.ctrlKey;
            l || (this.d_multiSortMeta = this.d_multiSortMeta.filter(function(s) {
              return s.field === a;
            })), this.addMultiSortField(a), this.$emit("update:multiSortMeta", this.d_multiSortMeta);
          }
          this.$emit("sort", this.createLazyLoadEvent(o)), this.$nextTick(function() {
            n.$emit("value-change", n.processedData);
          });
        }
      }
    },
    sortSingle: function(e) {
      var n = this;
      if (this.clearEditingMetaData(), this.groupRowsBy && this.groupRowsBy === this.sortField)
        return this.d_multiSortMeta = [{
          field: this.sortField,
          order: this.sortOrder || this.defaultSortOrder
        }, {
          field: this.d_sortField,
          order: this.d_sortOrder
        }], this.sortMultiple(e);
      var o = ze(e), i = /* @__PURE__ */ new Map(), r = Ir(o), a;
      try {
        for (r.s(); !(a = r.n()).done; ) {
          var l = a.value;
          i.set(l, be(l, this.d_sortField));
        }
      } catch (d) {
        r.e(d);
      } finally {
        r.f();
      }
      var s = vu();
      return o.sort(function(d, c) {
        var u = i.get(d), f = i.get(c);
        return ku(u, f, n.d_sortOrder, s, n.d_nullSortOrder);
      }), o;
    },
    sortMultiple: function(e) {
      var n = this;
      if (this.clearEditingMetaData(), this.groupRowsBy && (this.d_groupRowsSortMeta || this.d_multiSortMeta.length && this.groupRowsBy === this.d_multiSortMeta[0].field)) {
        var o = this.d_multiSortMeta[0];
        !this.d_groupRowsSortMeta && (this.d_groupRowsSortMeta = o), o.field !== this.d_groupRowsSortMeta.field && (this.d_multiSortMeta = [this.d_groupRowsSortMeta].concat(ze(this.d_multiSortMeta)));
      }
      var i = ze(e);
      return i.sort(function(r, a) {
        return n.multisortField(r, a, 0);
      }), i;
    },
    multisortField: function(e, n, o) {
      var i = be(e, this.d_multiSortMeta[o].field), r = be(n, this.d_multiSortMeta[o].field), a = vu();
      return i === r ? this.d_multiSortMeta.length - 1 > o ? this.multisortField(e, n, o + 1) : 0 : ku(i, r, this.d_multiSortMeta[o].order, a, this.d_nullSortOrder);
    },
    addMultiSortField: function(e) {
      var n = this.d_multiSortMeta.findIndex(function(o) {
        return o.field === e;
      });
      n >= 0 ? this.removableSort && this.d_multiSortMeta[n].order * -1 === this.defaultSortOrder ? this.d_multiSortMeta.splice(n, 1) : this.d_multiSortMeta[n] = {
        field: e,
        order: this.d_multiSortMeta[n].order * -1
      } : this.d_multiSortMeta.push({
        field: e,
        order: this.defaultSortOrder
      }), this.d_multiSortMeta = ze(this.d_multiSortMeta);
    },
    getActiveFilters: function(e) {
      var n = function(a) {
        var l = tf(a, 2), s = l[0], d = l[1];
        if (d.constraints) {
          var c = d.constraints.filter(function(u) {
            return u.value !== null;
          });
          if (c.length > 0)
            return [s, Rt(Rt({}, d), {}, {
              constraints: c
            })];
        } else if (d.value !== null)
          return [s, d];
      }, o = function(a) {
        return a !== void 0;
      }, i = Object.entries(e).map(n).filter(o);
      return Object.fromEntries(i);
    },
    filter: function(e) {
      var n = this;
      if (e) {
        this.clearEditingMetaData();
        var o = this.getActiveFilters(this.filters), i;
        o.global && (i = this.globalFilterFields || this.columns.map(function(w) {
          return n.columnProp(w, "filterField") || n.columnProp(w, "field");
        }));
        for (var r = [], a = 0; a < e.length; a++) {
          var l = !0, s = !1, d = !1;
          for (var c in o)
            if (Object.prototype.hasOwnProperty.call(o, c) && c !== "global") {
              d = !0;
              var u = c, f = o[u];
              if (f.operator) {
                var p = Ir(f.constraints), h;
                try {
                  for (p.s(); !(h = p.n()).done; ) {
                    var g = h.value;
                    if (l = this.executeLocalFilter(u, e[a], g), f.operator === se.OR && l || f.operator === se.AND && !l)
                      break;
                  }
                } catch (w) {
                  p.e(w);
                } finally {
                  p.f();
                }
              } else
                l = this.executeLocalFilter(u, e[a], f);
              if (!l)
                break;
            }
          if (l && o.global && !s && i)
            for (var b = 0; b < i.length; b++) {
              var C = i[b];
              if (s = Js.filters[o.global.matchMode || V.CONTAINS](be(e[a], C), o.global.value, this.filterLocale), s)
                break;
            }
          var x = void 0;
          o.global ? x = d ? d && l && s : s : x = d && l, x && r.push(e[a]);
        }
        (r.length === this.value.length || Object.keys(o).length == 0) && (r = e);
        var R = this.createLazyLoadEvent();
        return R.filteredValue = r, this.$emit("filter", R), this.$emit("value-change", r), r;
      }
    },
    executeLocalFilter: function(e, n, o) {
      var i = o.value, r = o.matchMode || V.STARTS_WITH, a = be(n, e), l = Js.filters[r];
      return l(a, i, this.filterLocale);
    },
    onRowClick: function(e) {
      var n = e.originalEvent, o = this.$refs.bodyRef && this.$refs.bodyRef.$el, i = ft(o, 'tr[data-p-selectable-row="true"][tabindex="0"]');
      if (!Jl(n.target)) {
        if (this.$emit("row-click", e), this.selectionMode) {
          var r = e.data, a = this.d_first + e.index;
          if (this.isMultipleSelectionMode() && n.shiftKey && this.anchorRowIndex != null)
            Va(), this.rangeRowIndex = a, this.selectRange(n);
          else {
            var l = this.isSelected(r), s = this.rowTouched ? !1 : this.metaKeySelection;
            if (this.anchorRowIndex = a, this.rangeRowIndex = a, s) {
              var d = n.metaKey || n.ctrlKey;
              if (l && d) {
                if (this.isSingleSelectionMode())
                  this.$emit("update:selection", null);
                else {
                  var c = this.findIndexInSelection(r), u = this.selection.filter(function(R, w) {
                    return w != c;
                  });
                  this.$emit("update:selection", u);
                }
                this.$emit("row-unselect", {
                  originalEvent: n,
                  data: r,
                  index: a,
                  type: "row"
                });
              } else {
                if (this.isSingleSelectionMode())
                  this.$emit("update:selection", r);
                else if (this.isMultipleSelectionMode()) {
                  var f = d ? this.selection || [] : [];
                  f = [].concat(ze(f), [r]), this.$emit("update:selection", f);
                }
                this.$emit("row-select", {
                  originalEvent: n,
                  data: r,
                  index: a,
                  type: "row"
                });
              }
            } else if (this.selectionMode === "single")
              l ? (this.$emit("update:selection", null), this.$emit("row-unselect", {
                originalEvent: n,
                data: r,
                index: a,
                type: "row"
              })) : (this.$emit("update:selection", r), this.$emit("row-select", {
                originalEvent: n,
                data: r,
                index: a,
                type: "row"
              }));
            else if (this.selectionMode === "multiple")
              if (l) {
                var p = this.findIndexInSelection(r), h = this.selection.filter(function(R, w) {
                  return w != p;
                });
                this.$emit("update:selection", h), this.$emit("row-unselect", {
                  originalEvent: n,
                  data: r,
                  index: a,
                  type: "row"
                });
              } else {
                var g = this.selection ? [].concat(ze(this.selection), [r]) : [r];
                this.$emit("update:selection", g), this.$emit("row-select", {
                  originalEvent: n,
                  data: r,
                  index: a,
                  type: "row"
                });
              }
          }
        }
        if (this.rowTouched = !1, i) {
          var b, C;
          if (((b = n.target) === null || b === void 0 ? void 0 : b.getAttribute("data-pc-section")) === "rowtoggleicon") return;
          var x = (C = n.currentTarget) === null || C === void 0 ? void 0 : C.closest('tr[data-p-selectable-row="true"]');
          i.tabIndex = "-1", x && (x.tabIndex = "0");
        }
      }
    },
    onRowDblClick: function(e) {
      var n = e.originalEvent;
      Jl(n.target) || this.$emit("row-dblclick", e);
    },
    onRowRightClick: function(e) {
      this.contextMenu && (Va(), e.originalEvent.target.focus()), this.$emit("update:contextMenuSelection", e.data), this.$emit("row-contextmenu", e);
    },
    onRowTouchEnd: function() {
      this.rowTouched = !0;
    },
    onRowKeyDown: function(e, n) {
      var o = e.originalEvent, i = e.data, r = e.index, a = o.metaKey || o.ctrlKey;
      if (this.selectionMode) {
        var l = o.target;
        switch (o.code) {
          case "ArrowDown":
            this.onArrowDownKey(o, l, r, n);
            break;
          case "ArrowUp":
            this.onArrowUpKey(o, l, r, n);
            break;
          case "Home":
            this.onHomeKey(o, l, r, n);
            break;
          case "End":
            this.onEndKey(o, l, r, n);
            break;
          case "Enter":
          case "NumpadEnter":
            this.onEnterKey(o, i, r);
            break;
          case "Space":
            this.onSpaceKey(o, i, r, n);
            break;
          case "Tab":
            this.onTabKey(o, r);
            break;
          default:
            if (o.code === "KeyA" && a && this.isMultipleSelectionMode()) {
              var s = this.dataToRender(n.rows);
              this.$emit("update:selection", s);
            }
            var d = o.code === "KeyC" && a;
            d || o.preventDefault();
            break;
        }
      }
    },
    onArrowDownKey: function(e, n, o, i) {
      var r = this.findNextSelectableRow(n);
      if (r && this.focusRowChange(n, r), e.shiftKey) {
        var a = this.dataToRender(i.rows), l = o + 1 >= a.length ? a.length - 1 : o + 1;
        this.onRowClick({
          originalEvent: e,
          data: a[l],
          index: l
        });
      }
      e.preventDefault();
    },
    onArrowUpKey: function(e, n, o, i) {
      var r = this.findPrevSelectableRow(n);
      if (r && this.focusRowChange(n, r), e.shiftKey) {
        var a = this.dataToRender(i.rows), l = o - 1 <= 0 ? 0 : o - 1;
        this.onRowClick({
          originalEvent: e,
          data: a[l],
          index: l
        });
      }
      e.preventDefault();
    },
    onHomeKey: function(e, n, o, i) {
      var r = this.findFirstSelectableRow();
      if (r && this.focusRowChange(n, r), e.ctrlKey && e.shiftKey) {
        var a = this.dataToRender(i.rows);
        this.$emit("update:selection", a.slice(0, o + 1));
      }
      e.preventDefault();
    },
    onEndKey: function(e, n, o, i) {
      var r = this.findLastSelectableRow();
      if (r && this.focusRowChange(n, r), e.ctrlKey && e.shiftKey) {
        var a = this.dataToRender(i.rows);
        this.$emit("update:selection", a.slice(o, a.length));
      }
      e.preventDefault();
    },
    onEnterKey: function(e, n, o) {
      this.onRowClick({
        originalEvent: e,
        data: n,
        index: o
      }), e.preventDefault();
    },
    onSpaceKey: function(e, n, o, i) {
      if (this.onEnterKey(e, n, o), e.shiftKey && this.selection !== null) {
        var r = this.dataToRender(i.rows), a;
        if (this.selection.length > 0) {
          var l, s;
          l = Yl(this.selection[0], r), s = Yl(this.selection[this.selection.length - 1], r), a = o <= l ? s : l;
        } else
          a = Yl(this.selection, r);
        var d = a !== o ? r.slice(Math.min(a, o), Math.max(a, o) + 1) : n;
        this.$emit("update:selection", d);
      }
    },
    onTabKey: function(e, n) {
      var o = this.$refs.bodyRef && this.$refs.bodyRef.$el, i = Nn(o, 'tr[data-p-selectable-row="true"]');
      if (e.code === "Tab" && i && i.length > 0) {
        var r = ft(o, 'tr[data-p-selected="true"]'), a = ft(o, 'tr[data-p-selectable-row="true"][tabindex="0"]');
        r ? (r.tabIndex = "0", a && a !== r && (a.tabIndex = "-1")) : (i[0].tabIndex = "0", a !== i[0] && i[n] && (i[n].tabIndex = "-1"));
      }
    },
    findNextSelectableRow: function(e) {
      var n = e.nextElementSibling;
      return n ? Le(n, "data-p-selectable-row") === !0 ? n : this.findNextSelectableRow(n) : null;
    },
    findPrevSelectableRow: function(e) {
      var n = e.previousElementSibling;
      return n ? Le(n, "data-p-selectable-row") === !0 ? n : this.findPrevSelectableRow(n) : null;
    },
    findFirstSelectableRow: function() {
      var e = ft(this.$refs.table, 'tr[data-p-selectable-row="true"]');
      return e;
    },
    findLastSelectableRow: function() {
      var e = Nn(this.$refs.table, 'tr[data-p-selectable-row="true"]');
      return e ? e[e.length - 1] : null;
    },
    focusRowChange: function(e, n) {
      e.tabIndex = "-1", n.tabIndex = "0", Fe(n);
    },
    toggleRowWithRadio: function(e) {
      var n = e.data;
      this.isSelected(n) ? (this.$emit("update:selection", null), this.$emit("row-unselect", {
        originalEvent: e.originalEvent,
        data: n,
        index: e.index,
        type: "radiobutton"
      })) : (this.$emit("update:selection", n), this.$emit("row-select", {
        originalEvent: e.originalEvent,
        data: n,
        index: e.index,
        type: "radiobutton"
      }));
    },
    toggleRowWithCheckbox: function(e) {
      var n = e.data;
      if (this.isSelected(n)) {
        var o = this.findIndexInSelection(n), i = this.selection.filter(function(a, l) {
          return l != o;
        });
        this.$emit("update:selection", i), this.$emit("row-unselect", {
          originalEvent: e.originalEvent,
          data: n,
          index: e.index,
          type: "checkbox"
        });
      } else {
        var r = this.selection ? ze(this.selection) : [];
        r = [].concat(ze(r), [n]), this.$emit("update:selection", r), this.$emit("row-select", {
          originalEvent: e.originalEvent,
          data: n,
          index: e.index,
          type: "checkbox"
        });
      }
    },
    toggleRowsWithCheckbox: function(e) {
      if (this.selectAll !== null)
        this.$emit("select-all-change", e);
      else {
        var n = e.originalEvent, o = e.checked, i = [];
        o ? (i = this.frozenValue ? [].concat(ze(this.frozenValue), ze(this.processedData)) : this.processedData, this.$emit("row-select-all", {
          originalEvent: n,
          data: i
        })) : this.$emit("row-unselect-all", {
          originalEvent: n
        }), this.$emit("update:selection", i);
      }
    },
    isSingleSelectionMode: function() {
      return this.selectionMode === "single";
    },
    isMultipleSelectionMode: function() {
      return this.selectionMode === "multiple";
    },
    isSelected: function(e) {
      return e && this.selection ? this.dataKey ? this.d_selectionKeys ? this.d_selectionKeys[be(e, this.dataKey)] !== void 0 : !1 : this.selection instanceof Array ? this.findIndexInSelection(e) > -1 : this.equals(e, this.selection) : !1;
    },
    findIndexInSelection: function(e) {
      return this.findIndex(e, this.selection);
    },
    findIndex: function(e, n) {
      var o = -1;
      if (n && n.length) {
        for (var i = 0; i < n.length; i++)
          if (this.equals(e, n[i])) {
            o = i;
            break;
          }
      }
      return o;
    },
    updateSelectionKeys: function(e) {
      if (this.d_selectionKeys = {}, Array.isArray(e)) {
        var n = Ir(e), o;
        try {
          for (n.s(); !(o = n.n()).done; ) {
            var i = o.value;
            this.d_selectionKeys[String(be(i, this.dataKey))] = 1;
          }
        } catch (r) {
          n.e(r);
        } finally {
          n.f();
        }
      } else
        this.d_selectionKeys[String(be(e, this.dataKey))] = 1;
    },
    updateEditingRowKeys: function(e) {
      if (e && e.length) {
        this.d_editingRowKeys = {};
        var n = Ir(e), o;
        try {
          for (n.s(); !(o = n.n()).done; ) {
            var i = o.value;
            this.d_editingRowKeys[String(be(i, this.dataKey))] = 1;
          }
        } catch (r) {
          n.e(r);
        } finally {
          n.f();
        }
      } else
        this.d_editingRowKeys = null;
    },
    equals: function(e, n) {
      return this.compareSelectionBy === "equals" ? e === n : Kt(e, n, this.dataKey);
    },
    selectRange: function(e) {
      var n, o;
      this.rangeRowIndex > this.anchorRowIndex ? (n = this.anchorRowIndex, o = this.rangeRowIndex) : this.rangeRowIndex < this.anchorRowIndex ? (n = this.rangeRowIndex, o = this.anchorRowIndex) : (n = this.rangeRowIndex, o = this.rangeRowIndex), this.lazy && this.paginator && (n -= this.d_first, o -= this.d_first);
      for (var i = this.processedData, r = [], a = n; a <= o; a++) {
        var l = i[a];
        r.push(l), this.$emit("row-select", {
          originalEvent: e,
          data: l,
          type: "row"
        });
      }
      this.$emit("update:selection", r);
    },
    generateCSV: function(e, n) {
      var o = this, i = "\uFEFF";
      n || (n = this.processedData, e && e.selectionOnly ? n = this.selection || [] : this.frozenValue && (n = n ? [].concat(ze(this.frozenValue), ze(n)) : this.frozenValue));
      for (var r = !1, a = 0; a < this.columns.length; a++) {
        var l = this.columns[a];
        this.columnProp(l, "exportable") !== !1 && this.columnProp(l, "field") && (r ? i += this.csvSeparator : r = !0, i += '"' + (this.columnProp(l, "exportHeader") || this.columnProp(l, "header") || this.columnProp(l, "field")) + '"');
      }
      n && n.forEach(function(u) {
        i += `
`;
        for (var f = !1, p = 0; p < o.columns.length; p++) {
          var h = o.columns[p];
          if (o.columnProp(h, "exportable") !== !1 && o.columnProp(h, "field")) {
            f ? i += o.csvSeparator : f = !0;
            var g = be(u, o.columnProp(h, "field"));
            g != null ? o.exportFunction ? g = o.exportFunction({
              data: g,
              field: o.columnProp(h, "field")
            }) : g = String(g).replace(/"/g, '""') : g = "", i += '"' + g + '"';
          }
        }
      });
      for (var s = !1, d = 0; d < this.columns.length; d++) {
        var c = this.columns[d];
        d === 0 && (i += `
`), this.columnProp(c, "exportable") !== !1 && this.columnProp(c, "exportFooter") && (s ? i += this.csvSeparator : s = !0, i += '"' + (this.columnProp(c, "exportFooter") || this.columnProp(c, "footer") || this.columnProp(c, "field")) + '"');
      }
      return i;
    },
    exportCSV: function(e, n) {
      var o = this.generateCSV(e, n);
      mv(o, this.exportFilename);
    },
    resetPage: function() {
      this.d_first = 0, this.$emit("update:first", this.d_first);
    },
    onColumnResizeStart: function(e) {
      var n = ln(this.$el).left;
      this.resizeColumnElement = e.target.parentElement, this.columnResizing = !0, this.lastResizeHelperX = e.pageX - n + this.$el.scrollLeft, this.bindColumnResizeEvents();
    },
    onColumnResize: function(e) {
      var n = ln(this.$el).left;
      this.$el.setAttribute("data-p-unselectable-text", "true"), !this.isUnstyled && Hr(this.$el, {
        "user-select": "none"
      }), this.$refs.resizeHelper.style.height = this.$el.offsetHeight + "px", this.$refs.resizeHelper.style.top = "0px", this.$refs.resizeHelper.style.left = e.pageX - n + this.$el.scrollLeft + "px", this.$refs.resizeHelper.style.display = "block";
    },
    onColumnResizeEnd: function() {
      var e = Ja(this.$el) ? this.lastResizeHelperX - this.$refs.resizeHelper.offsetLeft : this.$refs.resizeHelper.offsetLeft - this.lastResizeHelperX, n = this.resizeColumnElement.offsetWidth, o = n + e, i = this.resizeColumnElement.style.minWidth || 15;
      if (n + e > parseInt(i, 10)) {
        if (this.columnResizeMode === "fit") {
          var r = this.resizeColumnElement.nextElementSibling, a = r.offsetWidth - e;
          o > 15 && a > 15 && this.resizeTableCells(o, a);
        } else if (this.columnResizeMode === "expand") {
          var l = this.$refs.table.offsetWidth + e + "px", s = function(f) {
            f && (f.style.width = f.style.minWidth = l);
          };
          if (this.resizeTableCells(o), s(this.$refs.table), !this.virtualScrollerDisabled) {
            var d = this.$refs.bodyRef && this.$refs.bodyRef.$el, c = this.$refs.frozenBodyRef && this.$refs.frozenBodyRef.$el;
            s(d), s(c);
          }
        }
        this.$emit("column-resize-end", {
          element: this.resizeColumnElement,
          delta: e
        });
      }
      this.$refs.resizeHelper.style.display = "none", this.resizeColumn = null, this.$el.removeAttribute("data-p-unselectable-text"), !this.isUnstyled && (this.$el.style["user-select"] = ""), this.unbindColumnResizeEvents(), this.isStateful() && this.saveState();
    },
    resizeTableCells: function(e, n) {
      var o = _a(this.resizeColumnElement), i = [], r = Nn(this.$refs.table, 'thead[data-pc-section="thead"] > tr > th');
      r.forEach(function(s) {
        return i.push(pt(s));
      }), this.destroyStyleElement(), this.createStyleElement();
      var a = "", l = '[data-pc-name="datatable"]['.concat(this.$attrSelector, '] > [data-pc-section="tablecontainer"] ').concat(this.virtualScrollerDisabled ? "" : '> [data-pc-name="virtualscroller"]', ' > table[data-pc-section="table"]');
      i.forEach(function(s, d) {
        var c = d === o ? e : n && d === o + 1 ? n : s, u = "width: ".concat(c, "px !important; max-width: ").concat(c, "px !important");
        a += `
                    `.concat(l, ' > thead[data-pc-section="thead"] > tr > th:nth-child(').concat(d + 1, `),
                    `).concat(l, ' > tbody[data-pc-section="tbody"] > tr > td:nth-child(').concat(d + 1, `),
                    `).concat(l, ' > tfoot[data-pc-section="tfoot"] > tr > td:nth-child(').concat(d + 1, `) {
                        `).concat(u, `
                    }
                `);
      }), this.styleElement.innerHTML = a;
    },
    bindColumnResizeEvents: function() {
      var e = this;
      this.documentColumnResizeListener || (this.documentColumnResizeListener = function(n) {
        e.columnResizing && e.onColumnResize(n);
      }, document.addEventListener("mousemove", this.documentColumnResizeListener)), this.documentColumnResizeEndListener || (this.documentColumnResizeEndListener = function() {
        e.columnResizing && (e.columnResizing = !1, e.onColumnResizeEnd());
      }, document.addEventListener("mouseup", this.documentColumnResizeEndListener));
    },
    unbindColumnResizeEvents: function() {
      this.documentColumnResizeListener && (document.removeEventListener("document", this.documentColumnResizeListener), this.documentColumnResizeListener = null), this.documentColumnResizeEndListener && (document.removeEventListener("document", this.documentColumnResizeEndListener), this.documentColumnResizeEndListener = null);
    },
    onColumnHeaderMouseDown: function(e) {
      var n = e.originalEvent, o = e.column;
      this.reorderableColumns && this.columnProp(o, "reorderableColumn") !== !1 && (n.target.nodeName === "INPUT" || n.target.nodeName === "TEXTAREA" || Le(n.target, '[data-pc-section="columnresizer"]') ? n.currentTarget.draggable = !1 : n.currentTarget.draggable = !0);
    },
    onColumnHeaderDragStart: function(e) {
      var n = e.originalEvent, o = e.column;
      if (this.columnResizing) {
        n.preventDefault();
        return;
      }
      this.colReorderIconWidth = Cv(this.$refs.reorderIndicatorUp), this.colReorderIconHeight = wv(this.$refs.reorderIndicatorUp), this.draggedColumn = o, this.draggedColumnElement = this.findParentHeader(n.target), n.dataTransfer.setData("text", "b");
    },
    onColumnHeaderDragOver: function(e) {
      var n = e.originalEvent, o = e.column, i = this.findParentHeader(n.target);
      if (this.reorderableColumns && this.draggedColumnElement && i && !this.columnProp(o, "frozen")) {
        n.preventDefault();
        var r = ln(this.$el), a = ln(i);
        if (this.draggedColumnElement !== i) {
          var l = a.left - r.left, s = a.left + i.offsetWidth / 2;
          this.$refs.reorderIndicatorUp.style.top = a.top - r.top - (this.colReorderIconHeight - 1) + "px", this.$refs.reorderIndicatorDown.style.top = a.top - r.top + i.offsetHeight + "px", n.pageX > s ? (this.$refs.reorderIndicatorUp.style.left = l + i.offsetWidth - Math.ceil(this.colReorderIconWidth / 2) + "px", this.$refs.reorderIndicatorDown.style.left = l + i.offsetWidth - Math.ceil(this.colReorderIconWidth / 2) + "px", this.dropPosition = 1) : (this.$refs.reorderIndicatorUp.style.left = l - Math.ceil(this.colReorderIconWidth / 2) + "px", this.$refs.reorderIndicatorDown.style.left = l - Math.ceil(this.colReorderIconWidth / 2) + "px", this.dropPosition = -1), this.$refs.reorderIndicatorUp.style.display = "block", this.$refs.reorderIndicatorDown.style.display = "block";
        }
      }
    },
    onColumnHeaderDragLeave: function(e) {
      var n = e.originalEvent;
      this.reorderableColumns && this.draggedColumnElement && (n.preventDefault(), this.$refs.reorderIndicatorUp.style.display = "none", this.$refs.reorderIndicatorDown.style.display = "none");
    },
    onColumnHeaderDrop: function(e) {
      var n = this, o = e.originalEvent, i = e.column;
      if (o.preventDefault(), this.draggedColumnElement) {
        var r = _a(this.draggedColumnElement), a = _a(this.findParentHeader(o.target)), l = r !== a;
        if (l && (a - r === 1 && this.dropPosition === -1 || a - r === -1 && this.dropPosition === 1) && (l = !1), l) {
          var s = function(C, x) {
            return n.columnProp(C, "columnKey") || n.columnProp(x, "columnKey") ? n.columnProp(C, "columnKey") === n.columnProp(x, "columnKey") : n.columnProp(C, "field") === n.columnProp(x, "field");
          }, d = this.columns.findIndex(function(b) {
            return s(b, n.draggedColumn);
          }), c = this.columns.findIndex(function(b) {
            return s(b, i);
          }), u = [], f = Nn(this.$el, 'thead[data-pc-section="thead"] > tr > th');
          f.forEach(function(b) {
            return u.push(pt(b));
          });
          var p = u.find(function(b, C) {
            return C === d;
          }), h = u.filter(function(b, C) {
            return C !== d;
          }), g = [].concat(ze(h.slice(0, c)), [p], ze(h.slice(c)));
          this.addColumnWidthStyles(g), c < d && this.dropPosition === 1 && c++, c > d && this.dropPosition === -1 && c--, yu(this.columns, d, c), this.updateReorderableColumns(), this.$emit("column-reorder", {
            originalEvent: o,
            dragIndex: d,
            dropIndex: c
          });
        }
        this.$refs.reorderIndicatorUp.style.display = "none", this.$refs.reorderIndicatorDown.style.display = "none", this.draggedColumnElement.draggable = !1, this.draggedColumnElement = null, this.draggedColumn = null, this.dropPosition = null;
      }
    },
    findParentHeader: function(e) {
      if (e.nodeName === "TH")
        return e;
      for (var n = e.parentElement; n.nodeName !== "TH" && (n = n.parentElement, !!n); )
        ;
      return n;
    },
    findColumnByKey: function(e, n) {
      if (e && e.length)
        for (var o = 0; o < e.length; o++) {
          var i = e[o];
          if (this.columnProp(i, "columnKey") === n || this.columnProp(i, "field") === n)
            return i;
        }
      return null;
    },
    onRowMouseDown: function(e) {
      Le(e.target, "data-pc-section") === "reorderablerowhandle" || Le(e.target.parentElement, "data-pc-section") === "reorderablerowhandle" ? e.currentTarget.draggable = !0 : e.currentTarget.draggable = !1;
    },
    onRowDragStart: function(e) {
      var n = e.originalEvent, o = e.index;
      this.rowDragging = !0, this.draggedRowIndex = o, n.dataTransfer.setData("text", "b");
    },
    onRowDragOver: function(e) {
      var n = e.originalEvent, o = e.index;
      if (this.rowDragging && this.draggedRowIndex !== o) {
        var i = n.currentTarget, r = ln(i).top, a = n.pageY, l = r + er(i) / 2, s = i.previousElementSibling;
        a < l ? (i.setAttribute("data-p-datatable-dragpoint-bottom", "false"), !this.isUnstyled && an(i, "p-datatable-dragpoint-bottom"), this.droppedRowIndex = o, s ? (s.setAttribute("data-p-datatable-dragpoint-bottom", "true"), !this.isUnstyled && xn(s, "p-datatable-dragpoint-bottom")) : (i.setAttribute("data-p-datatable-dragpoint-top", "true"), !this.isUnstyled && xn(i, "p-datatable-dragpoint-top"))) : (s ? (s.setAttribute("data-p-datatable-dragpoint-bottom", "false"), !this.isUnstyled && an(s, "p-datatable-dragpoint-bottom")) : (i.setAttribute("data-p-datatable-dragpoint-top", "true"), !this.isUnstyled && xn(i, "p-datatable-dragpoint-top")), this.droppedRowIndex = o + 1, i.setAttribute("data-p-datatable-dragpoint-bottom", "true"), !this.isUnstyled && xn(i, "p-datatable-dragpoint-bottom")), n.preventDefault();
      }
    },
    onRowDragLeave: function(e) {
      var n = e.currentTarget, o = n.previousElementSibling;
      o && (o.setAttribute("data-p-datatable-dragpoint-bottom", "false"), !this.isUnstyled && an(o, "p-datatable-dragpoint-bottom")), n.setAttribute("data-p-datatable-dragpoint-bottom", "false"), !this.isUnstyled && an(n, "p-datatable-dragpoint-bottom"), n.setAttribute("data-p-datatable-dragpoint-top", "false"), !this.isUnstyled && an(n, "p-datatable-dragpoint-top");
    },
    onRowDragEnd: function(e) {
      this.rowDragging = !1, this.draggedRowIndex = null, this.droppedRowIndex = null, e.currentTarget.draggable = !1;
    },
    onRowDrop: function(e) {
      if (this.droppedRowIndex != null) {
        var n = this.draggedRowIndex > this.droppedRowIndex ? this.droppedRowIndex : this.droppedRowIndex === 0 ? 0 : this.droppedRowIndex - 1, o = ze(this.processedData);
        yu(o, this.draggedRowIndex + this.d_first, n + this.d_first), this.$emit("row-reorder", {
          originalEvent: e,
          dragIndex: this.draggedRowIndex,
          dropIndex: n,
          value: o
        });
      }
      this.onRowDragLeave(e), this.onRowDragEnd(e), e.preventDefault();
    },
    toggleRow: function(e) {
      var n = this, o = e.expanded, i = XB(e, YB), r = e.data, a;
      if (this.dataKey) {
        var l = be(r, this.dataKey);
        a = this.expandedRows ? Rt({}, this.expandedRows) : {}, o ? a[l] = !0 : delete a[l];
      } else
        a = this.expandedRows ? ze(this.expandedRows) : [], o ? a.push(r) : a = a.filter(function(s) {
          return !n.equals(r, s);
        });
      this.$emit("update:expandedRows", a), o ? this.$emit("row-expand", i) : this.$emit("row-collapse", i);
    },
    toggleRowGroup: function(e) {
      var n = e.originalEvent, o = e.data, i = be(o, this.groupRowsBy), r = this.expandedRowGroups ? ze(this.expandedRowGroups) : [];
      this.isRowGroupExpanded(o) ? (r = r.filter(function(a) {
        return a !== i;
      }), this.$emit("update:expandedRowGroups", r), this.$emit("rowgroup-collapse", {
        originalEvent: n,
        data: i
      })) : (r.push(i), this.$emit("update:expandedRowGroups", r), this.$emit("rowgroup-expand", {
        originalEvent: n,
        data: i
      }));
    },
    isRowGroupExpanded: function(e) {
      if (this.expandableRowGroups && this.expandedRowGroups) {
        var n = be(e, this.groupRowsBy);
        return this.expandedRowGroups.indexOf(n) > -1;
      }
      return !1;
    },
    isStateful: function() {
      return this.stateKey != null;
    },
    getStorage: function() {
      switch (this.stateStorage) {
        case "local":
          return window.localStorage;
        case "session":
          return window.sessionStorage;
        default:
          throw new Error(this.stateStorage + ' is not a valid value for the state storage, supported values are "local" and "session".');
      }
    },
    saveState: function() {
      var e = this.getStorage(), n = {};
      this.paginator && (n.first = this.d_first, n.rows = this.d_rows), this.d_sortField && (typeof this.d_sortField != "function" && (n.sortField = this.d_sortField), n.sortOrder = this.d_sortOrder), this.d_multiSortMeta && (n.multiSortMeta = this.d_multiSortMeta), this.hasFilters && (n.filters = this.filters), this.resizableColumns && this.saveColumnWidths(n), this.reorderableColumns && (n.columnOrder = this.d_columnOrder), this.expandedRows && (n.expandedRows = this.expandedRows), this.expandedRowGroups && (n.expandedRowGroups = this.expandedRowGroups), this.selection && (n.selection = this.selection, n.selectionKeys = this.d_selectionKeys), Object.keys(n).length && e.setItem(this.stateKey, JSON.stringify(n)), this.$emit("state-save", n);
    },
    restoreState: function() {
      var e = this.getStorage(), n = e.getItem(this.stateKey), o = /\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{3}Z/, i = function(s, d) {
        return typeof d == "string" && o.test(d) ? new Date(d) : d;
      }, r;
      try {
        r = JSON.parse(n, i);
      } catch {
      }
      if (!r || cn(r) !== "object") {
        e.removeItem(this.stateKey);
        return;
      }
      var a = {};
      this.paginator && (typeof r.first == "number" && (this.d_first = r.first, this.$emit("update:first", this.d_first), a.first = this.d_first), typeof r.rows == "number" && (this.d_rows = r.rows, this.$emit("update:rows", this.d_rows), a.rows = this.d_rows)), typeof r.sortField == "string" && (this.d_sortField = r.sortField, this.$emit("update:sortField", this.d_sortField), a.sortField = this.d_sortField), typeof r.sortOrder == "number" && (this.d_sortOrder = r.sortOrder, this.$emit("update:sortOrder", this.d_sortOrder), a.sortOrder = this.d_sortOrder), Array.isArray(r.multiSortMeta) && (this.d_multiSortMeta = r.multiSortMeta, this.$emit("update:multiSortMeta", this.d_multiSortMeta), a.multiSortMeta = this.d_multiSortMeta), this.hasFilters && cn(r.filters) === "object" && r.filters !== null && (this.d_filters = this.cloneFilters(r.filters), this.$emit("update:filters", this.d_filters), a.filters = this.d_filters), this.resizableColumns && (typeof r.columnWidths == "string" && (this.columnWidthsState = r.columnWidths, a.columnWidths = this.columnWidthsState), typeof r.tableWidth == "string" && (this.tableWidthState = r.tableWidth, a.tableWidth = this.tableWidthState)), this.reorderableColumns && Array.isArray(r.columnOrder) && (this.d_columnOrder = r.columnOrder, a.columnOrder = this.d_columnOrder), cn(r.expandedRows) === "object" && r.expandedRows !== null && (this.$emit("update:expandedRows", r.expandedRows), a.expandedRows = r.expandedRows), Array.isArray(r.expandedRowGroups) && (this.$emit("update:expandedRowGroups", r.expandedRowGroups), a.expandedRowGroups = r.expandedRowGroups), cn(r.selection) === "object" && r.selection !== null && (cn(r.selectionKeys) === "object" && r.selectionKeys !== null && (this.d_selectionKeys = r.selectionKeys, a.selectionKeys = this.d_selectionKeys), this.$emit("update:selection", r.selection), a.selection = r.selection), this.$emit("state-restore", a);
    },
    saveColumnWidths: function(e) {
      var n = [], o = Nn(this.$el, 'thead[data-pc-section="thead"] > tr > th');
      o.forEach(function(i) {
        return n.push(pt(i));
      }), e.columnWidths = n.join(","), this.columnResizeMode === "expand" && (e.tableWidth = pt(this.$refs.table) + "px");
    },
    addColumnWidthStyles: function(e) {
      this.createStyleElement();
      var n = "", o = '[data-pc-name="datatable"]['.concat(this.$attrSelector, '] > [data-pc-section="tablecontainer"] ').concat(this.virtualScrollerDisabled ? "" : '> [data-pc-name="virtualscroller"]', ' > table[data-pc-section="table"]');
      e.forEach(function(i, r) {
        var a = "width: ".concat(i, "px !important; max-width: ").concat(i, "px !important");
        n += `
        `.concat(o, ' > thead[data-pc-section="thead"] > tr > th:nth-child(').concat(r + 1, `),
        `).concat(o, ' > tbody[data-pc-section="tbody"] > tr > td:nth-child(').concat(r + 1, `),
        `).concat(o, ' > tfoot[data-pc-section="tfoot"] > tr > td:nth-child(').concat(r + 1, `) {
            `).concat(a, `
        }
    `);
      }), this.styleElement.innerHTML = n;
    },
    restoreColumnWidths: function() {
      if (this.columnWidthsState) {
        var e = this.columnWidthsState.split(",");
        this.columnResizeMode === "expand" && this.tableWidthState && (this.$refs.table.style.width = this.tableWidthState, this.$refs.table.style.minWidth = this.tableWidthState), ae(e) && this.addColumnWidthStyles(e);
      }
    },
    onCellEditInit: function(e) {
      this.$emit("cell-edit-init", e);
    },
    onCellEditComplete: function(e) {
      this.$emit("cell-edit-complete", e);
    },
    onCellEditCancel: function(e) {
      this.$emit("cell-edit-cancel", e);
    },
    onRowEditInit: function(e) {
      var n = this.editingRows ? ze(this.editingRows) : [];
      n.push(e.data), this.$emit("update:editingRows", n), this.$emit("row-edit-init", e);
    },
    onRowEditSave: function(e) {
      var n = ze(this.editingRows);
      n.splice(this.findIndex(e.data, n), 1), this.$emit("update:editingRows", n), this.$emit("row-edit-save", e);
    },
    onRowEditCancel: function(e) {
      var n = ze(this.editingRows);
      n.splice(this.findIndex(e.data, n), 1), this.$emit("update:editingRows", n), this.$emit("row-edit-cancel", e);
    },
    onEditingMetaChange: function(e) {
      var n = e.data, o = e.field, i = e.index, r = e.editing, a = Rt({}, this.d_editingMeta), l = a[i];
      if (r)
        !l && (l = a[i] = {
          data: Rt({}, n),
          fields: []
        }), l.fields.push(o);
      else if (l) {
        var s = l.fields.filter(function(d) {
          return d !== o;
        });
        s.length ? l.fields = s : delete a[i];
      }
      this.d_editingMeta = a;
    },
    clearEditingMetaData: function() {
      this.editMode && (this.d_editingMeta = {});
    },
    createLazyLoadEvent: function(e) {
      return {
        originalEvent: e,
        first: this.d_first,
        rows: this.d_rows,
        sortField: this.d_sortField,
        sortOrder: this.d_sortOrder,
        multiSortMeta: this.d_multiSortMeta,
        filters: this.d_filters
      };
    },
    hasGlobalFilter: function() {
      return this.filters && Object.prototype.hasOwnProperty.call(this.filters, "global");
    },
    onFilterChange: function(e) {
      this.d_filters = e;
    },
    onFilterApply: function() {
      this.d_first = 0, this.$emit("update:first", this.d_first), this.$emit("update:filters", this.d_filters), this.lazy && this.$emit("filter", this.createLazyLoadEvent());
    },
    cloneFilters: function(e) {
      var n = {};
      return e && Object.entries(e).forEach(function(o) {
        var i = tf(o, 2), r = i[0], a = i[1];
        n[r] = a.operator ? {
          operator: a.operator,
          constraints: a.constraints.map(function(l) {
            return Rt({}, l);
          })
        } : Rt({}, a);
      }), n;
    },
    updateReorderableColumns: function() {
      var e = this, n = [];
      this.columns.forEach(function(o) {
        return n.push(e.columnProp(o, "columnKey") || e.columnProp(o, "field"));
      }), this.d_columnOrder = n;
    },
    createStyleElement: function() {
      var e;
      this.styleElement = document.createElement("style"), this.styleElement.type = "text/css", ea(this.styleElement, "nonce", (e = this.$primevue) === null || e === void 0 || (e = e.config) === null || e === void 0 || (e = e.csp) === null || e === void 0 ? void 0 : e.nonce), document.head.appendChild(this.styleElement);
    },
    destroyStyleElement: function() {
      this.styleElement && (document.head.removeChild(this.styleElement), this.styleElement = null);
    },
    dataToRender: function(e) {
      var n = e || this.processedData;
      if (n && this.paginator) {
        var o = this.lazy ? 0 : this.d_first;
        return n.slice(o, o + this.d_rows);
      }
      return n;
    },
    getVirtualScrollerRef: function() {
      return this.$refs.virtualScroller;
    },
    hasSpacerStyle: function(e) {
      return ae(e);
    }
  },
  computed: {
    columns: function() {
      var e = this.d_columns.get(this);
      if (e && this.reorderableColumns && this.d_columnOrder) {
        var n = [], o = Ir(this.d_columnOrder), i;
        try {
          for (o.s(); !(i = o.n()).done; ) {
            var r = i.value, a = this.findColumnByKey(e, r);
            a && !this.columnProp(a, "hidden") && n.push(a);
          }
        } catch (l) {
          o.e(l);
        } finally {
          o.f();
        }
        return [].concat(n, ze(e.filter(function(l) {
          return n.indexOf(l) < 0;
        })));
      }
      return e;
    },
    columnGroups: function() {
      return this.d_columnGroups.get(this);
    },
    headerColumnGroup: function() {
      var e, n = this;
      return (e = this.columnGroups) === null || e === void 0 ? void 0 : e.find(function(o) {
        return n.columnProp(o, "type") === "header";
      });
    },
    footerColumnGroup: function() {
      var e, n = this;
      return (e = this.columnGroups) === null || e === void 0 ? void 0 : e.find(function(o) {
        return n.columnProp(o, "type") === "footer";
      });
    },
    hasFilters: function() {
      return this.filters && Object.keys(this.filters).length > 0 && this.filters.constructor === Object;
    },
    processedData: function() {
      var e, n = this.value || [];
      return !this.lazy && !((e = this.virtualScrollerOptions) !== null && e !== void 0 && e.lazy) && n && n.length && (this.hasFilters && (n = this.filter(n)), this.sorted && (this.sortMode === "single" ? n = this.sortSingle(n) : this.sortMode === "multiple" && (n = this.sortMultiple(n)))), n;
    },
    totalRecordsLength: function() {
      if (this.lazy)
        return this.totalRecords;
      var e = this.processedData;
      return e ? e.length : 0;
    },
    empty: function() {
      var e = this.processedData;
      return !e || e.length === 0;
    },
    paginatorTop: function() {
      return this.paginator && (this.paginatorPosition !== "bottom" || this.paginatorPosition === "both");
    },
    paginatorBottom: function() {
      return this.paginator && (this.paginatorPosition !== "top" || this.paginatorPosition === "both");
    },
    sorted: function() {
      return this.d_sortField || this.d_multiSortMeta && this.d_multiSortMeta.length > 0;
    },
    allRowsSelected: function() {
      var e = this;
      if (this.selectAll !== null)
        return this.selectAll;
      var n = this.frozenValue ? [].concat(ze(this.frozenValue), ze(this.processedData)) : this.processedData;
      return ae(n) && this.selection && Array.isArray(this.selection) && n.every(function(o) {
        return e.selection.some(function(i) {
          return e.equals(i, o);
        });
      });
    },
    groupRowSortField: function() {
      return this.sortMode === "single" ? this.sortField : this.d_groupRowsSortMeta ? this.d_groupRowsSortMeta.field : null;
    },
    headerFilterButtonProps: function() {
      return Rt(Rt({
        filter: {
          severity: "secondary",
          text: !0,
          rounded: !0
        }
      }, this.filterButtonProps), {}, {
        inline: Rt({
          clear: {
            severity: "secondary",
            text: !0,
            rounded: !0
          }
        }, this.filterButtonProps.inline),
        popover: Rt({
          addRule: {
            severity: "info",
            text: !0,
            size: "small"
          },
          removeRule: {
            severity: "danger",
            text: !0,
            size: "small"
          },
          apply: {
            size: "small"
          },
          clear: {
            outlined: !0,
            size: "small"
          }
        }, this.filterButtonProps.popover)
      });
    },
    rowEditButtonProps: function() {
      return Rt(Rt({}, {
        init: {
          severity: "secondary",
          text: !0,
          rounded: !0
        },
        save: {
          severity: "secondary",
          text: !0,
          rounded: !0
        },
        cancel: {
          severity: "secondary",
          text: !0,
          rounded: !0
        }
      }), this.editButtonProps);
    },
    virtualScrollerDisabled: function() {
      return lt(this.virtualScrollerOptions) || !this.scrollable;
    },
    dataP: function() {
      return Te(Ka(Ka(Ka({
        scrollable: this.scrollable,
        "flex-scrollable": this.scrollable && this.scrollHeight === "flex"
      }, this.size, this.size), "loading", this.loading), "empty", this.empty));
    }
  },
  components: {
    DTPaginator: ig,
    DTTableHeader: Cg,
    DTTableBody: bg,
    DTTableFooter: yg,
    DTVirtualScroller: kc,
    ArrowDownIcon: Hm,
    ArrowUpIcon: Wm,
    SpinnerIcon: Mo
  }
};
function Li(t) {
  "@babel/helpers - typeof";
  return Li = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Li(t);
}
function nf(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function of(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? nf(Object(n), !0).forEach(function(o) {
      lE(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : nf(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function lE(t, e, n) {
  return (e = sE(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function sE(t) {
  var e = dE(t, "string");
  return Li(e) == "symbol" ? e : e + "";
}
function dE(t, e) {
  if (Li(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Li(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var cE = ["data-p"], uE = ["data-p"];
function pE(t, e, n, o, i, r) {
  var a = $("SpinnerIcon"), l = $("DTPaginator"), s = $("DTTableHeader"), d = $("DTTableBody"), c = $("DTTableFooter"), u = $("DTVirtualScroller");
  return m(), y("div", k({
    class: t.cx("root"),
    "data-scrollselectors": ".p-datatable-wrapper",
    "data-p": r.dataP
  }, t.ptmi("root")), [L(t.$slots, "default"), t.loading ? (m(), y("div", k({
    key: 0,
    class: t.cx("mask")
  }, t.ptm("mask")), [t.$slots.loading ? L(t.$slots, "loading", {
    key: 0
  }) : (m(), y(_, {
    key: 1
  }, [t.$slots.loadingicon ? (m(), O(q(t.$slots.loadingicon), {
    key: 0,
    class: Y(t.cx("loadingIcon"))
  }, null, 8, ["class"])) : t.loadingIcon ? (m(), y("i", k({
    key: 1,
    class: [t.cx("loadingIcon"), "pi-spin", t.loadingIcon]
  }, t.ptm("loadingIcon")), null, 16)) : (m(), O(a, k({
    key: 2,
    spin: "",
    class: t.cx("loadingIcon")
  }, t.ptm("loadingIcon")), null, 16, ["class"]))], 64))], 16)) : M("", !0), t.$slots.header ? (m(), y("div", k({
    key: 1,
    class: t.cx("header")
  }, t.ptm("header")), [L(t.$slots, "header")], 16)) : M("", !0), r.paginatorTop ? (m(), O(l, {
    key: 2,
    rows: i.d_rows,
    first: i.d_first,
    totalRecords: r.totalRecordsLength,
    pageLinkSize: t.pageLinkSize,
    template: t.paginatorTemplate,
    rowsPerPageOptions: t.rowsPerPageOptions,
    currentPageReportTemplate: t.currentPageReportTemplate,
    class: Y(t.cx("pcPaginator", {
      position: "top"
    })),
    onPage: e[0] || (e[0] = function(f) {
      return r.onPage(f);
    }),
    alwaysShow: t.alwaysShowPaginator,
    unstyled: t.unstyled,
    "data-p-top": !0,
    pt: t.ptm("pcPaginator")
  }, On({
    _: 2
  }, [t.$slots.paginatorcontainer ? {
    name: "container",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorcontainer", {
        first: f.first,
        last: f.last,
        rows: f.rows,
        page: f.page,
        pageCount: f.pageCount,
        pageLinks: f.pageLinks,
        totalRecords: f.totalRecords,
        firstPageCallback: f.firstPageCallback,
        lastPageCallback: f.lastPageCallback,
        prevPageCallback: f.prevPageCallback,
        nextPageCallback: f.nextPageCallback,
        rowChangeCallback: f.rowChangeCallback,
        changePageCallback: f.changePageCallback
      })];
    }),
    key: "0"
  } : void 0, t.$slots.paginatorstart ? {
    name: "start",
    fn: E(function() {
      return [L(t.$slots, "paginatorstart")];
    }),
    key: "1"
  } : void 0, t.$slots.paginatorend ? {
    name: "end",
    fn: E(function() {
      return [L(t.$slots, "paginatorend")];
    }),
    key: "2"
  } : void 0, t.$slots.paginatorfirstpagelinkicon ? {
    name: "firstpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorfirstpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "3"
  } : void 0, t.$slots.paginatorprevpagelinkicon ? {
    name: "prevpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorprevpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "4"
  } : void 0, t.$slots.paginatornextpagelinkicon ? {
    name: "nextpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatornextpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "5"
  } : void 0, t.$slots.paginatorlastpagelinkicon ? {
    name: "lastpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorlastpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "6"
  } : void 0, t.$slots.paginatorjumptopagedropdownicon ? {
    name: "jumptopagedropdownicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorjumptopagedropdownicon", {
        class: Y(f.class)
      })];
    }),
    key: "7"
  } : void 0, t.$slots.paginatorrowsperpagedropdownicon ? {
    name: "rowsperpagedropdownicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorrowsperpagedropdownicon", {
        class: Y(f.class)
      })];
    }),
    key: "8"
  } : void 0]), 1032, ["rows", "first", "totalRecords", "pageLinkSize", "template", "rowsPerPageOptions", "currentPageReportTemplate", "class", "alwaysShow", "unstyled", "pt"])) : M("", !0), v("div", k({
    class: t.cx("tableContainer"),
    style: [t.sx("tableContainer"), {
      maxHeight: r.virtualScrollerDisabled ? t.scrollHeight : ""
    }],
    "data-p": r.dataP
  }, t.ptm("tableContainer")), [P(u, k({
    ref: "virtualScroller"
  }, t.virtualScrollerOptions, {
    items: r.processedData,
    columns: r.columns,
    style: t.scrollHeight !== "flex" ? {
      height: t.scrollHeight
    } : void 0,
    scrollHeight: t.scrollHeight !== "flex" ? void 0 : "100%",
    disabled: r.virtualScrollerDisabled,
    loaderDisabled: "",
    inline: "",
    autoSize: "",
    showSpacer: !1,
    pt: t.ptm("virtualScroller")
  }), {
    content: E(function(f) {
      return [v("table", k({
        ref: "table",
        role: "table",
        class: [t.cx("table"), t.tableClass],
        style: [t.tableStyle, f.spacerStyle]
      }, of(of({}, t.tableProps), t.ptm("table"))), [t.showHeaders ? (m(), O(s, {
        key: 0,
        columnGroup: r.headerColumnGroup,
        columns: f.columns,
        rowGroupMode: t.rowGroupMode,
        groupRowsBy: t.groupRowsBy,
        groupRowSortField: r.groupRowSortField,
        reorderableColumns: t.reorderableColumns,
        resizableColumns: t.resizableColumns,
        allRowsSelected: r.allRowsSelected,
        empty: r.empty,
        sortMode: t.sortMode,
        sortField: i.d_sortField,
        sortOrder: i.d_sortOrder,
        multiSortMeta: i.d_multiSortMeta,
        filters: i.d_filters,
        filtersStore: t.filters,
        filterDisplay: t.filterDisplay,
        filterButtonProps: r.headerFilterButtonProps,
        filterInputProps: t.filterInputProps,
        first: i.d_first,
        onColumnClick: e[1] || (e[1] = function(p) {
          return r.onColumnHeaderClick(p);
        }),
        onColumnMousedown: e[2] || (e[2] = function(p) {
          return r.onColumnHeaderMouseDown(p);
        }),
        onFilterChange: r.onFilterChange,
        onFilterApply: r.onFilterApply,
        onColumnDragstart: e[3] || (e[3] = function(p) {
          return r.onColumnHeaderDragStart(p);
        }),
        onColumnDragover: e[4] || (e[4] = function(p) {
          return r.onColumnHeaderDragOver(p);
        }),
        onColumnDragleave: e[5] || (e[5] = function(p) {
          return r.onColumnHeaderDragLeave(p);
        }),
        onColumnDrop: e[6] || (e[6] = function(p) {
          return r.onColumnHeaderDrop(p);
        }),
        onColumnResizestart: e[7] || (e[7] = function(p) {
          return r.onColumnResizeStart(p);
        }),
        onCheckboxChange: e[8] || (e[8] = function(p) {
          return r.toggleRowsWithCheckbox(p);
        }),
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["columnGroup", "columns", "rowGroupMode", "groupRowsBy", "groupRowSortField", "reorderableColumns", "resizableColumns", "allRowsSelected", "empty", "sortMode", "sortField", "sortOrder", "multiSortMeta", "filters", "filtersStore", "filterDisplay", "filterButtonProps", "filterInputProps", "first", "onFilterChange", "onFilterApply", "unstyled", "pt"])) : M("", !0), t.frozenValue ? (m(), O(d, {
        key: 1,
        ref: "frozenBodyRef",
        value: t.frozenValue,
        frozenRow: !0,
        columns: f.columns,
        first: i.d_first,
        dataKey: t.dataKey,
        selection: t.selection,
        selectionKeys: i.d_selectionKeys,
        selectionMode: t.selectionMode,
        rowHover: t.rowHover,
        contextMenu: t.contextMenu,
        contextMenuSelection: t.contextMenuSelection,
        rowGroupMode: t.rowGroupMode,
        groupRowsBy: t.groupRowsBy,
        expandableRowGroups: t.expandableRowGroups,
        rowClass: t.rowClass,
        rowStyle: t.rowStyle,
        editMode: t.editMode,
        compareSelectionBy: t.compareSelectionBy,
        scrollable: t.scrollable,
        expandedRowIcon: t.expandedRowIcon,
        collapsedRowIcon: t.collapsedRowIcon,
        expandedRows: t.expandedRows,
        expandedRowGroups: t.expandedRowGroups,
        editingRows: t.editingRows,
        editingRowKeys: i.d_editingRowKeys,
        templates: t.$slots,
        editButtonProps: r.rowEditButtonProps,
        isVirtualScrollerDisabled: !0,
        onRowgroupToggle: r.toggleRowGroup,
        onRowClick: e[9] || (e[9] = function(p) {
          return r.onRowClick(p);
        }),
        onRowDblclick: e[10] || (e[10] = function(p) {
          return r.onRowDblClick(p);
        }),
        onRowRightclick: e[11] || (e[11] = function(p) {
          return r.onRowRightClick(p);
        }),
        onRowTouchend: r.onRowTouchEnd,
        onRowKeydown: r.onRowKeyDown,
        onRowMousedown: r.onRowMouseDown,
        onRowDragstart: e[12] || (e[12] = function(p) {
          return r.onRowDragStart(p);
        }),
        onRowDragover: e[13] || (e[13] = function(p) {
          return r.onRowDragOver(p);
        }),
        onRowDragleave: e[14] || (e[14] = function(p) {
          return r.onRowDragLeave(p);
        }),
        onRowDragend: e[15] || (e[15] = function(p) {
          return r.onRowDragEnd(p);
        }),
        onRowDrop: e[16] || (e[16] = function(p) {
          return r.onRowDrop(p);
        }),
        onRowToggle: e[17] || (e[17] = function(p) {
          return r.toggleRow(p);
        }),
        onRadioChange: e[18] || (e[18] = function(p) {
          return r.toggleRowWithRadio(p);
        }),
        onCheckboxChange: e[19] || (e[19] = function(p) {
          return r.toggleRowWithCheckbox(p);
        }),
        onCellEditInit: e[20] || (e[20] = function(p) {
          return r.onCellEditInit(p);
        }),
        onCellEditComplete: e[21] || (e[21] = function(p) {
          return r.onCellEditComplete(p);
        }),
        onCellEditCancel: e[22] || (e[22] = function(p) {
          return r.onCellEditCancel(p);
        }),
        onRowEditInit: e[23] || (e[23] = function(p) {
          return r.onRowEditInit(p);
        }),
        onRowEditSave: e[24] || (e[24] = function(p) {
          return r.onRowEditSave(p);
        }),
        onRowEditCancel: e[25] || (e[25] = function(p) {
          return r.onRowEditCancel(p);
        }),
        editingMeta: i.d_editingMeta,
        onEditingMetaChange: r.onEditingMetaChange,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["value", "columns", "first", "dataKey", "selection", "selectionKeys", "selectionMode", "rowHover", "contextMenu", "contextMenuSelection", "rowGroupMode", "groupRowsBy", "expandableRowGroups", "rowClass", "rowStyle", "editMode", "compareSelectionBy", "scrollable", "expandedRowIcon", "collapsedRowIcon", "expandedRows", "expandedRowGroups", "editingRows", "editingRowKeys", "templates", "editButtonProps", "onRowgroupToggle", "onRowTouchend", "onRowKeydown", "onRowMousedown", "editingMeta", "onEditingMetaChange", "unstyled", "pt"])) : M("", !0), P(d, {
        ref: "bodyRef",
        value: r.dataToRender(f.rows),
        class: Y(f.styleClass),
        columns: f.columns,
        empty: r.empty,
        first: i.d_first,
        dataKey: t.dataKey,
        selection: t.selection,
        selectionKeys: i.d_selectionKeys,
        selectionMode: t.selectionMode,
        rowHover: t.rowHover,
        contextMenu: t.contextMenu,
        contextMenuSelection: t.contextMenuSelection,
        rowGroupMode: t.rowGroupMode,
        groupRowsBy: t.groupRowsBy,
        expandableRowGroups: t.expandableRowGroups,
        rowClass: t.rowClass,
        rowStyle: t.rowStyle,
        editMode: t.editMode,
        compareSelectionBy: t.compareSelectionBy,
        scrollable: t.scrollable,
        expandedRowIcon: t.expandedRowIcon,
        collapsedRowIcon: t.collapsedRowIcon,
        expandedRows: t.expandedRows,
        expandedRowGroups: t.expandedRowGroups,
        editingRows: t.editingRows,
        editingRowKeys: i.d_editingRowKeys,
        templates: t.$slots,
        editButtonProps: r.rowEditButtonProps,
        virtualScrollerContentProps: f,
        isVirtualScrollerDisabled: r.virtualScrollerDisabled,
        onRowgroupToggle: r.toggleRowGroup,
        onRowClick: e[26] || (e[26] = function(p) {
          return r.onRowClick(p);
        }),
        onRowDblclick: e[27] || (e[27] = function(p) {
          return r.onRowDblClick(p);
        }),
        onRowRightclick: e[28] || (e[28] = function(p) {
          return r.onRowRightClick(p);
        }),
        onRowTouchend: r.onRowTouchEnd,
        onRowKeydown: function(h) {
          return r.onRowKeyDown(h, f);
        },
        onRowMousedown: r.onRowMouseDown,
        onRowDragstart: e[29] || (e[29] = function(p) {
          return r.onRowDragStart(p);
        }),
        onRowDragover: e[30] || (e[30] = function(p) {
          return r.onRowDragOver(p);
        }),
        onRowDragleave: e[31] || (e[31] = function(p) {
          return r.onRowDragLeave(p);
        }),
        onRowDragend: e[32] || (e[32] = function(p) {
          return r.onRowDragEnd(p);
        }),
        onRowDrop: e[33] || (e[33] = function(p) {
          return r.onRowDrop(p);
        }),
        onRowToggle: e[34] || (e[34] = function(p) {
          return r.toggleRow(p);
        }),
        onRadioChange: e[35] || (e[35] = function(p) {
          return r.toggleRowWithRadio(p);
        }),
        onCheckboxChange: e[36] || (e[36] = function(p) {
          return r.toggleRowWithCheckbox(p);
        }),
        onCellEditInit: e[37] || (e[37] = function(p) {
          return r.onCellEditInit(p);
        }),
        onCellEditComplete: e[38] || (e[38] = function(p) {
          return r.onCellEditComplete(p);
        }),
        onCellEditCancel: e[39] || (e[39] = function(p) {
          return r.onCellEditCancel(p);
        }),
        onRowEditInit: e[40] || (e[40] = function(p) {
          return r.onRowEditInit(p);
        }),
        onRowEditSave: e[41] || (e[41] = function(p) {
          return r.onRowEditSave(p);
        }),
        onRowEditCancel: e[42] || (e[42] = function(p) {
          return r.onRowEditCancel(p);
        }),
        editingMeta: i.d_editingMeta,
        onEditingMetaChange: r.onEditingMetaChange,
        unstyled: t.unstyled,
        pt: t.pt
      }, null, 8, ["value", "class", "columns", "empty", "first", "dataKey", "selection", "selectionKeys", "selectionMode", "rowHover", "contextMenu", "contextMenuSelection", "rowGroupMode", "groupRowsBy", "expandableRowGroups", "rowClass", "rowStyle", "editMode", "compareSelectionBy", "scrollable", "expandedRowIcon", "collapsedRowIcon", "expandedRows", "expandedRowGroups", "editingRows", "editingRowKeys", "templates", "editButtonProps", "virtualScrollerContentProps", "isVirtualScrollerDisabled", "onRowgroupToggle", "onRowTouchend", "onRowKeydown", "onRowMousedown", "editingMeta", "onEditingMetaChange", "unstyled", "pt"]), r.hasSpacerStyle(f.spacerStyle) ? (m(), y("tbody", k({
        key: 2,
        class: t.cx("virtualScrollerSpacer"),
        style: {
          height: "calc(".concat(f.spacerStyle.height, " - ").concat(f.rows.length * f.itemSize, "px)")
        }
      }, t.ptm("virtualScrollerSpacer")), null, 16)) : M("", !0), P(c, {
        columnGroup: r.footerColumnGroup,
        columns: f.columns,
        pt: t.pt
      }, null, 8, ["columnGroup", "columns", "pt"])], 16)];
    }),
    _: 1
  }, 16, ["items", "columns", "style", "scrollHeight", "disabled", "pt"])], 16, uE), r.paginatorBottom ? (m(), O(l, {
    key: 3,
    rows: i.d_rows,
    first: i.d_first,
    totalRecords: r.totalRecordsLength,
    pageLinkSize: t.pageLinkSize,
    template: t.paginatorTemplate,
    rowsPerPageOptions: t.rowsPerPageOptions,
    currentPageReportTemplate: t.currentPageReportTemplate,
    class: Y(t.cx("pcPaginator", {
      position: "bottom"
    })),
    onPage: e[43] || (e[43] = function(f) {
      return r.onPage(f);
    }),
    alwaysShow: t.alwaysShowPaginator,
    unstyled: t.unstyled,
    "data-p-bottom": !0,
    pt: t.ptm("pcPaginator")
  }, On({
    _: 2
  }, [t.$slots.paginatorcontainer ? {
    name: "container",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorcontainer", {
        first: f.first,
        last: f.last,
        rows: f.rows,
        page: f.page,
        pageCount: f.pageCount,
        pageLinks: f.pageLinks,
        totalRecords: f.totalRecords,
        firstPageCallback: f.firstPageCallback,
        lastPageCallback: f.lastPageCallback,
        prevPageCallback: f.prevPageCallback,
        nextPageCallback: f.nextPageCallback,
        rowChangeCallback: f.rowChangeCallback,
        changePageCallback: f.changePageCallback
      })];
    }),
    key: "0"
  } : void 0, t.$slots.paginatorstart ? {
    name: "start",
    fn: E(function() {
      return [L(t.$slots, "paginatorstart")];
    }),
    key: "1"
  } : void 0, t.$slots.paginatorend ? {
    name: "end",
    fn: E(function() {
      return [L(t.$slots, "paginatorend")];
    }),
    key: "2"
  } : void 0, t.$slots.paginatorfirstpagelinkicon ? {
    name: "firstpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorfirstpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "3"
  } : void 0, t.$slots.paginatorprevpagelinkicon ? {
    name: "prevpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorprevpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "4"
  } : void 0, t.$slots.paginatornextpagelinkicon ? {
    name: "nextpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatornextpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "5"
  } : void 0, t.$slots.paginatorlastpagelinkicon ? {
    name: "lastpagelinkicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorlastpagelinkicon", {
        class: Y(f.class)
      })];
    }),
    key: "6"
  } : void 0, t.$slots.paginatorjumptopagedropdownicon ? {
    name: "jumptopagedropdownicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorjumptopagedropdownicon", {
        class: Y(f.class)
      })];
    }),
    key: "7"
  } : void 0, t.$slots.paginatorrowsperpagedropdownicon ? {
    name: "rowsperpagedropdownicon",
    fn: E(function(f) {
      return [L(t.$slots, "paginatorrowsperpagedropdownicon", {
        class: Y(f.class)
      })];
    }),
    key: "8"
  } : void 0]), 1032, ["rows", "first", "totalRecords", "pageLinkSize", "template", "rowsPerPageOptions", "currentPageReportTemplate", "class", "alwaysShow", "unstyled", "pt"])) : M("", !0), t.$slots.footer ? (m(), y("div", k({
    key: 4,
    class: t.cx("footer")
  }, t.ptm("footer")), [L(t.$slots, "footer")], 16)) : M("", !0), v("div", k({
    ref: "resizeHelper",
    class: t.cx("columnResizeIndicator"),
    style: {
      display: "none"
    }
  }, t.ptm("columnResizeIndicator")), null, 16), t.reorderableColumns ? (m(), y("span", k({
    key: 5,
    ref: "reorderIndicatorUp",
    class: t.cx("rowReorderIndicatorUp"),
    style: {
      position: "absolute",
      display: "none"
    }
  }, t.ptm("rowReorderIndicatorUp")), [(m(), O(q(t.$slots.rowreorderindicatorupicon || t.$slots.reorderindicatorupicon || "ArrowDownIcon")))], 16)) : M("", !0), t.reorderableColumns ? (m(), y("span", k({
    key: 6,
    ref: "reorderIndicatorDown",
    class: t.cx("rowReorderIndicatorDown"),
    style: {
      position: "absolute",
      display: "none"
    }
  }, t.ptm("rowReorderIndicatorDown")), [(m(), O(q(t.$slots.rowreorderindicatordownicon || t.$slots.reorderindicatordownicon || "ArrowUpIcon")))], 16)) : M("", !0)], 16, cE);
}
xg.render = pE;
var fE = te.extend({
  name: "column"
}), hE = {
  name: "BaseColumn",
  extends: ne,
  props: {
    columnKey: {
      type: null,
      default: null
    },
    field: {
      type: [String, Function],
      default: null
    },
    sortField: {
      type: [String, Function],
      default: null
    },
    filterField: {
      type: [String, Function],
      default: null
    },
    dataType: {
      type: String,
      default: "text"
    },
    sortable: {
      type: Boolean,
      default: !1
    },
    header: {
      type: null,
      default: null
    },
    footer: {
      type: null,
      default: null
    },
    style: {
      type: null,
      default: null
    },
    class: {
      type: String,
      default: null
    },
    headerStyle: {
      type: null,
      default: null
    },
    headerClass: {
      type: String,
      default: null
    },
    bodyStyle: {
      type: null,
      default: null
    },
    bodyClass: {
      type: String,
      default: null
    },
    footerStyle: {
      type: null,
      default: null
    },
    footerClass: {
      type: String,
      default: null
    },
    showFilterMenu: {
      type: Boolean,
      default: !0
    },
    showFilterOperator: {
      type: Boolean,
      default: !0
    },
    showClearButton: {
      type: Boolean,
      default: !1
    },
    showApplyButton: {
      type: Boolean,
      default: !0
    },
    showFilterMatchModes: {
      type: Boolean,
      default: !0
    },
    showAddButton: {
      type: Boolean,
      default: !0
    },
    filterMatchModeOptions: {
      type: Array,
      default: null
    },
    maxConstraints: {
      type: Number,
      default: 2
    },
    excludeGlobalFilter: {
      type: Boolean,
      default: !1
    },
    filterHeaderClass: {
      type: String,
      default: null
    },
    filterHeaderStyle: {
      type: null,
      default: null
    },
    filterMenuClass: {
      type: String,
      default: null
    },
    filterMenuStyle: {
      type: null,
      default: null
    },
    selectionMode: {
      type: String,
      default: null
    },
    expander: {
      type: Boolean,
      default: !1
    },
    colspan: {
      type: Number,
      default: null
    },
    rowspan: {
      type: Number,
      default: null
    },
    rowReorder: {
      type: Boolean,
      default: !1
    },
    rowReorderIcon: {
      type: String,
      default: void 0
    },
    reorderableColumn: {
      type: Boolean,
      default: !0
    },
    rowEditor: {
      type: Boolean,
      default: !1
    },
    frozen: {
      type: Boolean,
      default: !1
    },
    alignFrozen: {
      type: String,
      default: "left"
    },
    exportable: {
      type: Boolean,
      default: !0
    },
    exportHeader: {
      type: String,
      default: null
    },
    exportFooter: {
      type: String,
      default: null
    },
    filterMatchMode: {
      type: String,
      default: null
    },
    hidden: {
      type: Boolean,
      default: !1
    }
  },
  style: fE,
  provide: function() {
    return {
      $pcColumn: this,
      $parentInstance: this
    };
  }
}, mE = {
  name: "Column",
  extends: hE,
  inheritAttrs: !1,
  inject: ["$columns"],
  mounted: function() {
    var e;
    (e = this.$columns) === null || e === void 0 || e.add(this.$);
  },
  unmounted: function() {
    var e;
    (e = this.$columns) === null || e === void 0 || e.delete(this.$);
  },
  render: function() {
    return null;
  }
}, gE = te.extend({
  name: "columngroup"
}), bE = {
  name: "BaseColumnGroup",
  extends: ne,
  props: {
    type: {
      type: String,
      default: null
    }
  },
  style: gE,
  provide: function() {
    return {
      $pcColumnGroup: this,
      $parentInstance: this
    };
  }
}, vE = {
  name: "ColumnGroup",
  extends: bE,
  inheritAttrs: !1,
  inject: ["$columnGroups"],
  mounted: function() {
    var e;
    (e = this.$columnGroups) === null || e === void 0 || e.add(this.$);
  },
  unmounted: function() {
    var e;
    (e = this.$columnGroups) === null || e === void 0 || e.delete(this.$);
  },
  render: function() {
    return null;
  }
}, yE = {
  name: "Row",
  extends: ne,
  inject: ["$rows"],
  mounted: function() {
    var e;
    (e = this.$rows) === null || e === void 0 || e.add(this.$);
  },
  unmounted: function() {
    var e;
    (e = this.$rows) === null || e === void 0 || e.delete(this.$);
  },
  render: function() {
    return null;
  }
};
const kE = { borderRadius: { none: "0", xs: "2px", sm: "4px", md: "6px", lg: "8px", xl: "12px" }, emerald: { 50: "#E8F6F1", 100: "#C5EBE1", 200: "#9EDFCF", 300: "#76D3BD", 400: "#58C9AF", 500: "#3BBFA1", 600: "#35AF94", 700: "#2D9B83", 800: "#268873", 900: "#1A6657", 950: "#0d3329" }, green: { 50: "var(--color-green-50)", 100: "var(--color-green-100)", 200: "var(--color-green-200)", 300: "var(--color-green-300)", 400: "var(--color-green-400)", 500: "var(--color-green-500)", 600: "var(--color-green-600)", 700: "var(--color-green-700)", 800: "var(--color-green-800)", 900: "var(--color-green-900)", 950: "#0e2f10" }, lime: { 50: "#F9FBE7", 100: "#F0F4C3", 200: "#E6EE9C", 300: "#DCE775", 400: "#D4E157", 500: "#CDDC39", 600: "#C0CA33", 700: "#AFB42B", 800: "#9E9D24", 900: "#827717", 950: "#413c0c" }, red: { 50: "var(--color-red-50)", 100: "var(--color-red-100)", 200: "var(--color-red-200)", 300: "var(--color-red-300)", 400: "var(--color-red-400)", 500: "var(--color-red-500)", 600: "var(--color-red-600)", 700: "var(--color-red-700)", 800: "var(--color-red-800)", 900: "var(--color-red-900)", 950: "#5c0e0e" }, orange: { 50: "#FFF3E0", 100: "#FFE0B2", 200: "#FFCC80", 300: "#FFB74D", 400: "#FFA726", 500: "#FF9800", 600: "#FB8C00", 700: "#F57C00", 800: "#EF6C00", 900: "#E65100", 950: "#732900" }, amber: { 50: "#FFF8E1", 100: "#FFECB3", 200: "#FFE082", 300: "#FFD54F", 400: "#FFCA28", 500: "#FFC107", 600: "#FFB300", 700: "#FFA000", 800: "#FF8F00", 900: "#FF6F00", 950: "#803800" }, yellow: { 50: "var(--color-yellow-50)", 100: "var(--color-yellow-100)", 200: "var(--color-yellow-200)", 300: "var(--color-yellow-300)", 400: "var(--color-yellow-400)", 500: "var(--color-yellow-500)", 600: "var(--color-yellow-600)", 700: "var(--color-yellow-700)", 800: "var(--color-yellow-800)", 900: "var(--color-yellow-900)", 950: "#7b400c" }, teal: { 50: "#E0F2F1", 100: "#B2DFDB", 200: "#80CBC4", 300: "#4DB6AC", 400: "#26A69A", 500: "#009688", 600: "#00897B", 700: "#00796B", 800: "#00695C", 900: "#004D40", 950: "#002720" }, cyan: { 50: "#E0F7FA", 100: "#B2EBF2", 200: "#80DEEA", 300: "#4DD0E1", 400: "#26C6DA", 500: "#00BCD4", 600: "#00ACC1", 700: "#0097A7", 800: "#00838F", 900: "#006064", 950: "#003032" }, sky: { 50: "#E1F5FE", 100: "#B3E5FC", 200: "#81D4FA", 300: "#4FC3F7", 400: "#29B6F6", 500: "#03A9F4", 600: "#039BE5", 700: "#0288D1", 800: "#0277BD", 900: "#01579B", 950: "#012c4e" }, blue: { 50: "var(--color-blue-50)", 100: "var(--color-blue-100)", 200: "var(--color-blue-200)", 300: "var(--color-blue-300)", 400: "var(--color-blue-400)", 500: "var(--color-blue-500)", 600: "var(--color-blue-600)", 700: "var(--color-blue-700)", 800: "var(--color-blue-800)", 900: "var(--color-blue-900)", 950: "#072451" }, indigo: { 50: "#E8EAF6", 100: "#C5CAE9", 200: "#9FA8DA", 300: "#7986CB", 400: "#5C6BC0", 500: "#3F51B5", 600: "#3949AB", 700: "#303F9F", 800: "#283593", 900: "#1A237E", 950: "#0d123f" }, violet: { 50: "#EDE7F6", 100: "#D1C4E9", 200: "#B39DDB", 300: "#9575CD", 400: "#7E57C2", 500: "#673AB7", 600: "#5E35B1", 700: "#512DA8", 800: "#4527A0", 900: "#311B92", 950: "#190e49" }, purple: { 50: "var(--color-purple-50)", 100: "var(--color-purple-100)", 200: "var(--color-purple-200)", 300: "var(--color-purple-300)", 400: "var(--color-purple-400)", 500: "var(--color-purple-500)", 600: "var(--color-purple-600)", 700: "var(--color-purple-700)", 800: "var(--color-purple-800)", 900: "var(--color-purple-900)", 950: "#250a46" }, fuchsia: { 50: "#FDE6F3", 100: "#FBC1E3", 200: "#F897D1", 300: "#F56DBF", 400: "#F34DB2", 500: "#F12DA5", 600: "#E0289D", 700: "#CC2392", 800: "#B81E88", 900: "#951777", 950: "#4b0c3c" }, pink: { 50: "#FCE4EC", 100: "#F8BBD0", 200: "#F48FB1", 300: "#F06292", 400: "#EC407A", 500: "#E91E63", 600: "#D81B60", 700: "#C2185B", 800: "#AD1457", 900: "#880E4F", 950: "#440728" }, rose: { 50: "#FFF0F0", 100: "#FFD9D9", 200: "#FFC0C0", 300: "#FFA7A7", 400: "#FF8E8E", 500: "#FF7575", 600: "#FF5252", 700: "#FF3838", 800: "#F71C1C", 900: "#D50000", 950: "#3E0000" }, slate: { 50: "#f8fafc", 100: "#f1f5f9", 200: "#e2e8f0", 300: "#cbd5e1", 400: "#94a3b8", 500: "#64748b", 600: "#475569", 700: "#334155", 800: "#1e293b", 900: "#0f172a", 950: "#020617" }, gray: { 50: "var(--color-gray-50)", 100: "var(--color-gray-100)", 200: "var(--color-gray-200)", 300: "var(--color-gray-300)", 400: "var(--color-gray-400)", 500: "var(--color-gray-500)", 600: "var(--color-gray-600)", 700: "var(--color-gray-700)", 800: "var(--color-gray-800)", 900: "var(--color-gray-900)", 950: "#030712" }, zinc: { 50: "#fafafa", 100: "#f4f4f5", 200: "#e4e4e7", 300: "#d4d4d8", 400: "#a1a1aa", 500: "#71717a", 600: "#52525b", 700: "#3f3f46", 800: "#27272a", 900: "#18181b", 950: "#09090b" }, neutral: { 50: "#fafafa", 100: "#f5f5f5", 200: "#e5e5e5", 300: "#d4d4d4", 400: "#a3a3a3", 500: "#737373", 600: "#525252", 700: "#404040", 800: "#262626", 900: "#171717", 950: "#0a0a0a" }, stone: { 50: "#fafaf9", 100: "#f5f5f4", 200: "#e7e5e4", 300: "#d6d3d1", 400: "#a8a29e", 500: "#78716c", 600: "#57534e", 700: "#44403c", 800: "#292524", 900: "#1c1917", 950: "#0c0a09" } }, wE = { transitionDuration: "0.2s", focusRing: { width: "0", style: "none", color: "unset", offset: "0" }, disabledOpacity: "0.38", iconSize: "1rem", anchorGutter: "0", primary: { 50: "{sky.50}", 100: "{sky.100}", 200: "{sky.200}", 300: "{sky.300}", 400: "{sky.400}", 500: "{sky.500}", 600: "{sky.600}", 700: "{sky.700}", 800: "{sky.800}", 900: "{sky.900}", 950: "{sky.950}" }, formField: { paddingX: "0.5rem", paddingY: "6px", sm: { fontSize: "0.875rem", paddingX: "0.5rem", paddingY: "6px" }, lg: { fontSize: "1.125rem", paddingX: "0.5rem", paddingY: "6px" }, borderRadius: "{border.radius.sm}", focusRing: { width: "2px", style: "solid", color: "{primary.color}", offset: "-2px", shadow: "none" }, transitionDuration: "{transition.duration}" }, list: { padding: "0.5rem 0", gap: "0", header: { padding: "0.75rem 1rem" }, option: { padding: "0.75rem 1rem", borderRadius: "{border.radius.none}" }, optionGroup: { padding: "0.75rem 1rem", fontWeight: "700" } }, content: { borderRadius: "{border.radius.sm}" }, mask: { transitionDuration: "0.15s" }, navigation: { list: { padding: "0.5rem 0", gap: "0" }, item: { padding: "0.75rem 1rem", borderRadius: "{border.radius.none}", gap: "0.5rem" }, submenuLabel: { padding: "0.75rem 1rem", fontWeight: "700" }, submenuIcon: { size: "0.875rem" } }, overlay: { select: { borderRadius: "{border.radius.sm}", shadow: "0 5px 5px -3px rgba(0,0,0,.2), 0 8px 10px 1px rgba(0,0,0,.14), 0 3px 14px 2px rgba(0,0,0,.12)" }, popover: { borderRadius: "{border.radius.sm}", padding: "1rem", shadow: "0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)" }, modal: { borderRadius: "{border.radius.sm}", padding: "1.5rem", shadow: "0 11px 15px -7px rgba(0,0,0,.2), 0 24px 38px 3px rgba(0,0,0,.14), 0 9px 46px 8px rgba(0,0,0,.12)" }, navigation: { shadow: "0 2px 4px -1px rgba(0,0,0,.2), 0 4px 5px 0 rgba(0,0,0,.14), 0 1px 10px 0 rgba(0,0,0,.12)" } }, colorScheme: { light: { focusRing: { shadow: "0 0 1px 4px {surface.200}" }, surface: { 0: "#ffffff", 50: "{slate.50}", 100: "{slate.100}", 200: "{slate.200}", 300: "{slate.300}", 400: "{slate.400}", 500: "{slate.500}", 600: "{slate.600}", 700: "{slate.700}", 800: "{slate.800}", 900: "{slate.900}", 950: "{slate.950}" }, primary: { color: "{primary.700}", contrastColor: "#ffffff", hoverColor: "{primary.600}", activeColor: "{primary.500}" }, highlight: { background: "color-mix(in srgb, {primary.color}, transparent 88%)", focusBackground: "color-mix(in srgb, {primary.color}, transparent 76%)", color: "{primary.700}", focusColor: "{primary.800}" }, mask: { background: "rgba(0,0,0,0.32)", color: "{surface.200}" }, formField: { background: "{surface.0}", disabledBackground: "{surface.300}", filledBackground: "{surface.100}", filledHoverBackground: "{surface.200}", filledFocusBackground: "{surface.100}", borderColor: "{surface.400}", hoverBorderColor: "{surface.900}", focusBorderColor: "{primary.color}", invalidBorderColor: "{red.800}", color: "{surface.900}", disabledColor: "{surface.600}", placeholderColor: "{surface.600}", invalidPlaceholderColor: "{red.800}", floatLabelColor: "{surface.600}", floatLabelFocusColor: "{primary.600}", floatLabelActiveColor: "{surface.600}", floatLabelInvalidColor: "{form.field.invalid.placeholder.color}", iconColor: "{surface.600}", shadow: "none" }, text: { color: "{surface.900}", hoverColor: "{surface.900}", mutedColor: "{surface.600}", hoverMutedColor: "{surface.600}" }, content: { background: "{surface.0}", hoverBackground: "{surface.100}", borderColor: "{surface.300}", color: "{text.color}", hoverColor: "{text.hover.color}" }, overlay: { select: { background: "{surface.0}", borderColor: "{surface.0}", color: "{text.color}" }, popover: { background: "{surface.0}", borderColor: "{surface.0}", color: "{text.color}" }, modal: { background: "{surface.0}", borderColor: "{surface.0}", color: "{text.color}" } }, list: { option: { focusBackground: "{surface.100}", selectedBackground: "{highlight.background}", selectedFocusBackground: "{highlight.focus.background}", color: "{text.color}", focusColor: "{text.hover.color}", selectedColor: "{highlight.color}", selectedFocusColor: "{highlight.focus.color}", icon: { color: "{surface.600}", focusColor: "{surface.600}" } }, optionGroup: { background: "transparent", color: "{text.color}" } }, navigation: { item: { focusBackground: "{surface.100}", activeBackground: "{surface.200}", color: "{text.color}", focusColor: "{text.hover.color}", activeColor: "{text.hover.color}", icon: { color: "{surface.600}", focusColor: "{surface.600}", activeColor: "{surface.600}" } }, submenuLabel: { background: "transparent", color: "{text.color}" }, submenuIcon: { color: "{surface.600}", focusColor: "{surface.600}", activeColor: "{surface.600}" } } }, dark: { focusRing: { shadow: "0 0 1px 4px {surface.700}" }, surface: { 0: "#ffffff", 50: "{zinc.50}", 100: "{zinc.100}", 200: "{zinc.200}", 300: "{zinc.300}", 400: "{zinc.400}", 500: "{zinc.500}", 600: "{zinc.600}", 700: "{zinc.700}", 800: "{zinc.800}", 900: "{zinc.900}", 950: "{zinc.950}" }, primary: { color: "{primary.400}", contrastColor: "{surface.900}", hoverColor: "{primary.300}", activeColor: "{primary.200}" }, highlight: { background: "color-mix(in srgb, {primary.400}, transparent 84%)", focusBackground: "color-mix(in srgb, {primary.400}, transparent 76%)", color: "rgba(255,255,255,.87)", focusColor: "rgba(255,255,255,.87)" }, mask: { background: "rgba(0,0,0,0.6)", color: "{surface.200}" }, formField: { background: "{surface.950}", disabledBackground: "{surface.700}", filledBackground: "{surface.800}", filledHoverBackground: "{surface.700}", filledFocusBackground: "{surface.800}", borderColor: "{surface.600}", hoverBorderColor: "{surface.400}", focusBorderColor: "{primary.color}", invalidBorderColor: "{red.300}", color: "{surface.0}", disabledColor: "{surface.400}", placeholderColor: "{surface.400}", invalidPlaceholderColor: "{red.300}", floatLabelColor: "{surface.400}", floatLabelFocusColor: "{primary.color}", floatLabelActiveColor: "{surface.400}", floatLabelInvalidColor: "{form.field.invalid.placeholder.color}", iconColor: "{surface.400}", shadow: "none" }, text: { color: "{surface.0}", hoverColor: "{surface.0}", mutedColor: "{surface.400}", hoverMutedColor: "{surface.400}" }, content: { background: "{surface.900}", hoverBackground: "{surface.800}", borderColor: "{surface.700}", color: "{text.color}", hoverColor: "{text.hover.color}" }, overlay: { select: { background: "{surface.900}", borderColor: "{surface.900}", color: "{text.color}" }, popover: { background: "{surface.900}", borderColor: "{surface.900}", color: "{text.color}" }, modal: { background: "{surface.900}", borderColor: "{surface.900}", color: "{text.color}" } }, list: { option: { focusBackground: "{surface.800}", selectedBackground: "{highlight.background}", selectedFocusBackground: "{highlight.focus.background}", color: "{text.color}", focusColor: "{text.hover.color}", selectedColor: "{highlight.color}", selectedFocusColor: "{highlight.focus.color}", icon: { color: "{surface.400}", focusColor: "{surface.400}" } }, optionGroup: { background: "transparent", color: "{text.muted.color}" } }, navigation: { item: { focusBackground: "{surface.800}", activeBackground: "{surface.700}", color: "{text.color}", focusColor: "{text.hover.color}", activeColor: "{text.hover.color}", icon: { color: "{surface.400}", focusColor: "{surface.400}", activeColor: "{surface.400}" } }, submenuLabel: { background: "transparent", color: "{text.muted.color}" }, submenuIcon: { color: "{surface.400}", focusColor: "{surface.400}", activeColor: "{surface.400}" } } } } }, CE = /* @__PURE__ */ JSON.parse(`{"accordion":{"root":{"transitionDuration":"{transition.duration}"},"panel":{"borderWidth":"0","borderColor":"{content.border.color}"},"header":{"color":"{text.color}","hoverColor":"{text.color}","activeColor":"{text.color}","padding":"1.25rem","fontWeight":"600","borderRadius":"0","borderWidth":"0","borderColor":"{content.border.color}","background":"{content.background}","hoverBackground":"{content.hover.background}","activeBackground":"{content.background}","activeHoverBackground":"{content.background}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"},"toggleIcon":{"color":"{text.muted.color}","hoverColor":"{text.muted.color}","activeColor":"{text.muted.color}","activeHoverColor":"{text.muted.color}"},"first":{"topBorderRadius":"{content.border.radius}","borderWidth":"0"},"last":{"bottomBorderRadius":"{content.border.radius}","activeBottomBorderRadius":"0"}},"content":{"borderWidth":"0","borderColor":"{content.border.color}","background":"{content.background}","color":"{text.color}","padding":"0 1.25rem 1.25rem 1.25rem"},"css":"\\n.p-accordionpanel {\\n    box-shadow: 0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12);\\n    transition: margin dt('accordion.transition.duration');\\n}\\n\\n.p-accordionpanel-active {\\n    margin: 1rem 0;\\n}\\n\\n.p-accordionpanel:first-child {\\n    border-top-left-radius: dt('content.border.radius');\\n    border-top-right-radius: dt('content.border.radius');\\n    margin-top: 0;\\n}\\n\\n.p-accordionpanel:last-child {\\n    border-bottom-left-radius: dt('content.border.radius');\\n    border-bottom-right-radius: dt('content.border.radius');\\n    margin-bottom: 0;\\n}\\n\\n.p-accordionpanel:not(.p-disabled) .p-accordionheader:focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n"},"autocomplete":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledHoverBackground":"{form.field.filled.hover.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}"},"overlay":{"background":"{overlay.select.background}","borderColor":"{overlay.select.border.color}","borderRadius":"{overlay.select.border.radius}","color":"{overlay.select.color}","shadow":"{overlay.select.shadow}"},"list":{"padding":"{list.padding}","gap":"{list.gap}"},"option":{"focusBackground":"{list.option.focus.background}","selectedBackground":"{list.option.selected.background}","selectedFocusBackground":"{list.option.selected.focus.background}","color":"{list.option.color}","focusColor":"{list.option.focus.color}","selectedColor":"{list.option.selected.color}","selectedFocusColor":"{list.option.selected.focus.color}","padding":"{list.option.padding}","borderRadius":"{list.option.border.radius}"},"optionGroup":{"background":"{list.option.group.background}","color":"{list.option.group.color}","fontWeight":"{list.option.group.font.weight}","padding":"{list.option.group.padding}"},"dropdown":{"width":"3rem","sm":{"width":"2.5rem"},"lg":{"width":"3.5rem"},"borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.border.color}","activeBorderColor":"{form.field.border.color}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"chip":{"borderRadius":"{border.radius.sm}"},"emptyMessage":{"padding":"{list.option.padding}"},"colorScheme":{"light":{"chip":{"focusBackground":"{surface.300}","focusColor":"{surface.950}"},"dropdown":{"background":"{surface.100}","hoverBackground":"{surface.200}","activeBackground":"{surface.300}","color":"{surface.600}","hoverColor":"{surface.700}","activeColor":"{surface.800}"}},"dark":{"chip":{"focusBackground":"{surface.600}","focusColor":"{surface.0}"},"dropdown":{"background":"{surface.800}","hoverBackground":"{surface.700}","activeBackground":"{surface.600}","color":"{surface.300}","hoverColor":"{surface.200}","activeColor":"{surface.100}"}}},"css":"\\n.p-autocomplete-dropdown:focus-visible {\\n    background: dt('autocomplete.dropdown.hover.background');\\n    border-color: dt('autocomplete.dropdown.hover.border.color');\\n    color: dt('autocomplete.dropdown.hover.color');\\n}\\n\\n.p-variant-filled.p-autocomplete-input-multiple {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border: 1px solid transparent;\\n    background: dt('autocomplete.filled.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.border.color'), dt('autocomplete.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\\n}\\n\\n.p-autocomplete:not(.p-disabled):hover .p-variant-filled.p-autocomplete-input-multiple {\\n    background: dt('autocomplete.filled.hover.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.hover.border.color'), dt('autocomplete.hover.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-autocomplete:not(.p-disabled).p-focus .p-variant-filled.p-autocomplete-input-multiple {\\n    outline: 0 none;\\n    background: dt('autocomplete.filled.focus.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.border.color'), dt('autocomplete.border.color'));\\n    background-size: 100% 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-autocomplete:not(.p-disabled).p-focus:hover .p-variant-filled.p-autocomplete-input-multiple {\\n    background-image: linear-gradient(to bottom, dt('autocomplete.focus.border.color'), dt('autocomplete.focus.border.color')), linear-gradient(to bottom, dt('autocomplete.hover.border.color'), dt('autocomplete.hover.border.color'));\\n}\\n\\n.p-autocomplete.p-invalid .p-autocomplete-input-multiple {\\n    background-image: linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color')), linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color'));\\n}\\n\\n.p-autocomplete.p-invalid.p-focus .p-autocomplete-input-multiple  {\\n    background-image: linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color')), linear-gradient(to bottom, dt('autocomplete.invalid.border.color'), dt('autocomplete.invalid.border.color'));\\n}\\n\\n.p-autocomplete-option {\\n    transition: none;\\n}\\n"},"avatar":{"root":{"width":"2rem","height":"2rem","fontSize":"1rem","background":"{content.border.color}","color":"{content.color}","borderRadius":"{content.border.radius}"},"icon":{"size":"1rem"},"group":{"borderColor":"{content.background}","offset":"-0.75rem"},"lg":{"width":"3rem","height":"3rem","fontSize":"1.5rem","icon":{"size":"1.5rem"},"group":{"offset":"-1rem"}},"xl":{"width":"4rem","height":"4rem","fontSize":"2rem","icon":{"size":"2rem"},"group":{"offset":"-1.5rem"}},"css":""},"badge":{"root":{"borderRadius":"{border.radius.md}","padding":"0 0.5rem","fontSize":"0.75rem","fontWeight":"700","minWidth":"1.5rem","height":"1.5rem"},"dot":{"size":"0.5rem"},"sm":{"fontSize":"0.625rem","minWidth":"1.25rem","height":"1.25rem"},"lg":{"fontSize":"0.875rem","minWidth":"1.75rem","height":"1.75rem"},"xl":{"fontSize":"1rem","minWidth":"2rem","height":"2rem"},"colorScheme":{"light":{"primary":{"background":"{primary.color}","color":"{primary.contrast.color}"},"secondary":{"background":"{surface.100}","color":"{surface.600}"},"success":{"background":"{green.500}","color":"{surface.0}"},"info":{"background":"{sky.500}","color":"{surface.0}"},"warn":{"background":"{orange.500}","color":"{surface.0}"},"danger":{"background":"{red.500}","color":"{surface.0}"},"contrast":{"background":"{surface.950}","color":"{surface.0}"}},"dark":{"primary":{"background":"{primary.color}","color":"{primary.contrast.color}"},"secondary":{"background":"{surface.800}","color":"{surface.300}"},"success":{"background":"{green.400}","color":"{green.950}"},"info":{"background":"{sky.400}","color":"{sky.950}"},"warn":{"background":"{orange.400}","color":"{orange.950}"},"danger":{"background":"{red.400}","color":"{red.950}"},"contrast":{"background":"{surface.0}","color":"{surface.950}"}}},"css":""},"blockui":{"root":{"borderRadius":"{content.border.radius}"},"css":""},"breadcrumb":{"root":{"padding":"1rem","background":"{content.background}","gap":"0.5rem","transitionDuration":"{transition.duration}"},"item":{"color":"{text.muted.color}","hoverColor":"{text.color}","borderRadius":"{content.border.radius}","gap":"{navigation.item.gap}","icon":{"color":"{navigation.item.icon.color}","hoverColor":"{navigation.item.icon.focus.color}"},"focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"separator":{"color":"{navigation.item.icon.color}"},"css":""},"button":{"root":{"borderRadius":"{form.field.border.radius}","roundedBorderRadius":"2rem","gap":"0.5rem","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","iconOnlyWidth":"3rem","sm":{"fontSize":"{form.field.sm.font.size}","paddingX":"{form.field.sm.padding.x}","paddingY":"{form.field.sm.padding.y}","iconOnlyWidth":"2.5rem"},"lg":{"fontSize":"{form.field.lg.font.size}","paddingX":"{form.field.lg.padding.x}","paddingY":"{form.field.lg.padding.y}","iconOnlyWidth":"3.5rem"},"label":{"fontWeight":"500"},"raisedShadow":"0 3px 1px -2px rgba(0,0,0,.2), 0 2px 2px 0 rgba(0,0,0,.14), 0 1px 5px 0 rgba(0,0,0,.12)","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","offset":"{focus.ring.offset}"},"badgeSize":"1rem","transitionDuration":"{form.field.transition.duration}"},"colorScheme":{"light":{"root":{"primary":{"background":"{primary.color}","hoverBackground":"{primary.hover.color}","activeBackground":"{primary.active.color}","borderColor":"{primary.color}","hoverBorderColor":"{primary.hover.color}","activeBorderColor":"{primary.active.color}","color":"{primary.contrast.color}","hoverColor":"{primary.contrast.color}","activeColor":"{primary.contrast.color}","focusRing":{"color":"{primary.color}","shadow":"none"}},"secondary":{"background":"{surface.100}","hoverBackground":"{surface.200}","activeBackground":"{surface.300}","borderColor":"{surface.100}","hoverBorderColor":"{surface.200}","activeBorderColor":"{surface.300}","color":"{surface.600}","hoverColor":"{surface.700}","activeColor":"{surface.800}","focusRing":{"color":"{surface.600}","shadow":"none"}},"info":{"background":"{sky.500}","hoverBackground":"{sky.400}","activeBackground":"{sky.300}","borderColor":"{sky.500}","hoverBorderColor":"{sky.400}","activeBorderColor":"{sky.300}","color":"#ffffff","hoverColor":"#ffffff","activeColor":"#ffffff","focusRing":{"color":"{sky.500}","shadow":"none"}},"success":{"background":"{green.500}","hoverBackground":"{green.400}","activeBackground":"{green.300}","borderColor":"{green.500}","hoverBorderColor":"{green.400}","activeBorderColor":"{green.300}","color":"#ffffff","hoverColor":"#ffffff","activeColor":"#ffffff","focusRing":{"color":"{green.500}","shadow":"none"}},"warn":{"background":"{orange.500}","hoverBackground":"{orange.400}","activeBackground":"{orange.300}","borderColor":"{orange.500}","hoverBorderColor":"{orange.400}","activeBorderColor":"{orange.300}","color":"#ffffff","hoverColor":"#ffffff","activeColor":"#ffffff","focusRing":{"color":"{orange.500}","shadow":"none"}},"help":{"background":"{purple.500}","hoverBackground":"{purple.400}","activeBackground":"{purple.300}","borderColor":"{purple.500}","hoverBorderColor":"{purple.400}","activeBorderColor":"{purple.300}","color":"#ffffff","hoverColor":"#ffffff","activeColor":"#ffffff","focusRing":{"color":"{purple.500}","shadow":"none"}},"danger":{"background":"{red.500}","hoverBackground":"{red.400}","activeBackground":"{red.300}","borderColor":"{red.500}","hoverBorderColor":"{red.400}","activeBorderColor":"{red.300}","color":"#ffffff","hoverColor":"#ffffff","activeColor":"#ffffff","focusRing":{"color":"{red.500}","shadow":"none"}},"contrast":{"background":"{surface.950}","hoverBackground":"{surface.800}","activeBackground":"{surface.700}","borderColor":"{surface.950}","hoverBorderColor":"{surface.800}","activeBorderColor":"{surface.700}","color":"{surface.0}","hoverColor":"{surface.0}","activeColor":"{surface.0}","focusRing":{"color":"{surface.950}","shadow":"none"}}},"outlined":{"primary":{"hoverBackground":"{primary.50}","activeBackground":"{primary.100}","borderColor":"{primary.color}","color":"{primary.color}"},"secondary":{"hoverBackground":"{surface.50}","activeBackground":"{surface.100}","borderColor":"{surface.600}","color":"{surface.600}"},"success":{"hoverBackground":"{green.50}","activeBackground":"{green.100}","borderColor":"{green.500}","color":"{green.500}"},"info":{"hoverBackground":"{sky.50}","activeBackground":"{sky.100}","borderColor":"{sky.500}","color":"{sky.500}"},"warn":{"hoverBackground":"{orange.50}","activeBackground":"{orange.100}","borderColor":"{orange.500}","color":"{orange.500}"},"help":{"hoverBackground":"{purple.50}","activeBackground":"{purple.100}","borderColor":"{purple.500}","color":"{purple.500}"},"danger":{"hoverBackground":"{red.50}","activeBackground":"{red.100}","borderColor":"{red.500}","color":"{red.500}"},"contrast":{"hoverBackground":"{surface.50}","activeBackground":"{surface.100}","borderColor":"{surface.950}","color":"{surface.950}"},"plain":{"hoverBackground":"{surface.50}","activeBackground":"{surface.100}","borderColor":"{surface.900}","color":"{surface.900}"}},"text":{"primary":{"hoverBackground":"{primary.50}","activeBackground":"{primary.100}","color":"{primary.color}"},"secondary":{"hoverBackground":"{surface.50}","activeBackground":"{surface.100}","color":"{surface.600}"},"success":{"hoverBackground":"{green.50}","activeBackground":"{green.100}","color":"{green.500}"},"info":{"hoverBackground":"{sky.50}","activeBackground":"{sky.100}","color":"{sky.500}"},"warn":{"hoverBackground":"{orange.50}","activeBackground":"{orange.100}","color":"{orange.500}"},"help":{"hoverBackground":"{purple.50}","activeBackground":"{purple.100}","color":"{purple.500}"},"danger":{"hoverBackground":"{red.50}","activeBackground":"{red.100}","color":"{red.500}"},"contrast":{"hoverBackground":"{surface.50}","activeBackground":"{surface.100}","color":"{surface.950}"},"plain":{"hoverBackground":"{surface.50}","activeBackground":"{surface.100}","color":"{surface.900}"}},"link":{"color":"{primary.color}","hoverColor":"{primary.color}","activeColor":"{primary.color}"}},"dark":{"root":{"primary":{"background":"{primary.color}","hoverBackground":"{primary.hover.color}","activeBackground":"{primary.active.color}","borderColor":"{primary.color}","hoverBorderColor":"{primary.hover.color}","activeBorderColor":"{primary.active.color}","color":"{primary.contrast.color}","hoverColor":"{primary.contrast.color}","activeColor":"{primary.contrast.color}","focusRing":{"color":"{primary.color}","shadow":"none"}},"secondary":{"background":"{surface.800}","hoverBackground":"{surface.700}","activeBackground":"{surface.600}","borderColor":"{surface.800}","hoverBorderColor":"{surface.700}","activeBorderColor":"{surface.600}","color":"{surface.300}","hoverColor":"{surface.200}","activeColor":"{surface.100}","focusRing":{"color":"{surface.300}","shadow":"none"}},"info":{"background":"{sky.400}","hoverBackground":"{sky.300}","activeBackground":"{sky.200}","borderColor":"{sky.400}","hoverBorderColor":"{sky.300}","activeBorderColor":"{sky.200}","color":"{sky.950}","hoverColor":"{sky.950}","activeColor":"{sky.950}","focusRing":{"color":"{sky.400}","shadow":"none"}},"success":{"background":"{green.400}","hoverBackground":"{green.300}","activeBackground":"{green.200}","borderColor":"{green.400}","hoverBorderColor":"{green.300}","activeBorderColor":"{green.200}","color":"{green.950}","hoverColor":"{green.950}","activeColor":"{green.950}","focusRing":{"color":"{green.400}","shadow":"none"}},"warn":{"background":"{orange.400}","hoverBackground":"{orange.300}","activeBackground":"{orange.200}","borderColor":"{orange.400}","hoverBorderColor":"{orange.300}","activeBorderColor":"{orange.200}","color":"{orange.950}","hoverColor":"{orange.950}","activeColor":"{orange.950}","focusRing":{"color":"{orange.400}","shadow":"none"}},"help":{"background":"{purple.400}","hoverBackground":"{purple.300}","activeBackground":"{purple.200}","borderColor":"{purple.400}","hoverBorderColor":"{purple.300}","activeBorderColor":"{purple.200}","color":"{purple.950}","hoverColor":"{purple.950}","activeColor":"{purple.950}","focusRing":{"color":"{purple.400}","shadow":"none"}},"danger":{"background":"{red.400}","hoverBackground":"{red.300}","activeBackground":"{red.200}","borderColor":"{red.400}","hoverBorderColor":"{red.300}","activeBorderColor":"{red.200}","color":"{red.950}","hoverColor":"{red.950}","activeColor":"{red.950}","focusRing":{"color":"{red.400}","shadow":"none"}},"contrast":{"background":"{surface.0}","hoverBackground":"{surface.100}","activeBackground":"{surface.200}","borderColor":"{surface.0}","hoverBorderColor":"{surface.100}","activeBorderColor":"{surface.200}","color":"{surface.950}","hoverColor":"{surface.950}","activeColor":"{surface.950}","focusRing":{"color":"{surface.0}","shadow":"none"}}},"outlined":{"primary":{"hoverBackground":"color-mix(in srgb, {primary.color}, transparent 96%)","activeBackground":"color-mix(in srgb, {primary.color}, transparent 84%)","borderColor":"{primary.700}","color":"{primary.color}"},"secondary":{"hoverBackground":"rgba(255,255,255,0.04)","activeBackground":"rgba(255,255,255,0.16)","borderColor":"{surface.700}","color":"{surface.400}"},"success":{"hoverBackground":"color-mix(in srgb, {green.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {green.400}, transparent 84%)","borderColor":"{green.700}","color":"{green.400}"},"info":{"hoverBackground":"color-mix(in srgb, {sky.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {sky.400}, transparent 84%)","borderColor":"{sky.700}","color":"{sky.400}"},"warn":{"hoverBackground":"color-mix(in srgb, {orange.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {orange.400}, transparent 84%)","borderColor":"{orange.700}","color":"{orange.400}"},"help":{"hoverBackground":"color-mix(in srgb, {purple.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {purple.400}, transparent 84%)","borderColor":"{purple.700}","color":"{purple.400}"},"danger":{"hoverBackground":"color-mix(in srgb, {red.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {red.400}, transparent 84%)","borderColor":"{red.700}","color":"{red.400}"},"contrast":{"hoverBackground":"{surface.800}","activeBackground":"{surface.700}","borderColor":"{surface.500}","color":"{surface.0}"},"plain":{"hoverBackground":"{surface.800}","activeBackground":"{surface.700}","borderColor":"{surface.600}","color":"{surface.0}"}},"text":{"primary":{"hoverBackground":"color-mix(in srgb, {primary.color}, transparent 96%)","activeBackground":"color-mix(in srgb, {primary.color}, transparent 84%)","color":"{primary.color}"},"secondary":{"hoverBackground":"{surface.800}","activeBackground":"{surface.700}","color":"{surface.400}"},"success":{"hoverBackground":"color-mix(in srgb, {green.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {green.400}, transparent 84%)","color":"{green.400}"},"info":{"hoverBackground":"color-mix(in srgb, {sky.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {sky.400}, transparent 84%)","color":"{sky.400}"},"warn":{"hoverBackground":"color-mix(in srgb, {orange.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {orange.400}, transparent 84%)","color":"{orange.400}"},"help":{"hoverBackground":"color-mix(in srgb, {purple.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {purple.400}, transparent 84%)","color":"{purple.400}"},"danger":{"hoverBackground":"color-mix(in srgb, {red.400}, transparent 96%)","activeBackground":"color-mix(in srgb, {red.400}, transparent 84%)","color":"{red.400}"},"contrast":{"hoverBackground":"{surface.800}","activeBackground":"{surface.700}","color":"{surface.0}"},"plain":{"hoverBackground":"{surface.800}","activeBackground":"{surface.700}","color":"{surface.0}"}},"link":{"color":"{primary.color}","hoverColor":"{primary.color}","activeColor":"{primary.color}"}}},"css":"\\n.p-button:focus-visible {\\n    background: dt('button.primary.active.background');\\n    border-color: dt('button.primary.active.background');\\n}\\n\\n.p-button-secondary:focus-visible {\\n    background: dt('button.secondary.active.background');\\n    border-color: dt('button.secondary.active.background');\\n}\\n\\n.p-button-success:focus-visible {\\n    background: dt('button.success.active.background');\\n    border-color: dt('button.success.active.background');\\n}\\n\\n.p-button-info:focus-visible {\\n    background: dt('button.info.active.background');\\n    border-color: dt('button.info.active.background');\\n}\\n\\n.p-button-warn:focus-visible {\\n    background: dt('button.warn.active.background');\\n    border-color: dt('button.warn.active.background');\\n}\\n\\n.p-button-help:focus-visible {\\n    background: dt('button.help.active.background');\\n    border-color: dt('button.help.active.background');\\n}\\n\\n.p-button-danger:focus-visible {\\n    background: dt('button.danger.active.background');\\n    border-color: dt('button.danger.active.background');\\n}\\n\\n.p-button-contrast:focus-visible {\\n    background: dt('button.contrast.active.background');\\n    border-color: dt('button.contrast.active.background');\\n}\\n\\n.p-button-link:focus-visible {\\n    background: color-mix(in srgb, dt('primary.color'), transparent 84%);\\n    border-color: transparent;\\n}\\n\\n.p-button-text:focus-visible {\\n    background: dt('button.text.primary.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-secondary.p-button-text:focus-visible {\\n    background: dt('button.text.secondary.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-success.p-button-text:focus-visible {\\n    background: dt('button.text.success.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-info.p-button-text:focus-visible {\\n    background: dt('button.text.info.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-warn.p-button-text:focus-visible {\\n    background: dt('button.text.warn.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-help.p-button-text:focus-visible {\\n    background: dt('button.text.help.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-danger.p-button-text:focus-visible {\\n    background: dt('button.text.danger.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-contrast.p-button-text:focus-visible {\\n    background: dt('button.text.contrast.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-plain.p-button-text:focus-visible {\\n    background: dt('button.text.plain.active.background');\\n    border-color: transparent;\\n}\\n\\n.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.primary.active.background');\\n}\\n\\n.p-button-secondary.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.secondary.active.background');\\n    border-color: dt('button.outlined.secondary.border.color');\\n}\\n\\n.p-button-success.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.success.active.background');\\n}\\n\\n.p-button-info.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.info.active.background');\\n}\\n\\n.p-button-warn.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.warn.active.background');\\n}\\n\\n.p-button-help.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.help.active.background');\\n}\\n\\n.p-button-danger.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.danger.active.background');\\n}\\n\\n.p-button-contrast.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.contrast.active.background');\\n}\\n\\n.p-button-plain.p-button-outlined:focus-visible {\\n    background: dt('button.outlined.plain.active.background');\\n}\\n"},"datepicker":{"root":{"transitionDuration":"{transition.duration}"},"panel":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","borderRadius":"{content.border.radius}","shadow":"{overlay.popover.shadow}","padding":"0.5rem"},"header":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","padding":"0 0 0.5rem 0"},"title":{"gap":"0.5rem","fontWeight":"700"},"dropdown":{"width":"3rem","sm":{"width":"2.5rem"},"lg":{"width":"3.5rem"},"borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.border.color}","activeBorderColor":"{form.field.border.color}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"inputIcon":{"color":"{form.field.icon.color}"},"selectMonth":{"hoverBackground":"{content.hover.background}","color":"{content.color}","hoverColor":"{content.hover.color}","padding":"0.5rem 0.75rem","borderRadius":"{content.border.radius}"},"selectYear":{"hoverBackground":"{content.hover.background}","color":"{content.color}","hoverColor":"{content.hover.color}","padding":"0.5rem 0.75rem","borderRadius":"{content.border.radius}"},"group":{"borderColor":"{content.border.color}","gap":"{overlay.popover.padding}"},"dayView":{"margin":"0.5rem 0 0 0"},"weekDay":{"padding":"0.5rem","fontWeight":"700","color":"{content.color}"},"date":{"hoverBackground":"{content.hover.background}","selectedBackground":"{primary.color}","rangeSelectedBackground":"{highlight.background}","color":"{content.color}","hoverColor":"{content.hover.color}","selectedColor":"{primary.contrast.color}","rangeSelectedColor":"{highlight.color}","width":"2.5rem","height":"2.5rem","borderRadius":"50%","padding":"0.125rem","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"monthView":{"margin":"0.5rem 0 0 0"},"month":{"padding":"0.625rem","borderRadius":"{content.border.radius}"},"yearView":{"margin":"0.5rem 0 0 0"},"year":{"padding":"0.625rem","borderRadius":"{content.border.radius}"},"buttonbar":{"padding":"0.5rem 0 0 0","borderColor":"{content.border.color}"},"timePicker":{"padding":"0.5rem 0 0 0","borderColor":"{content.border.color}","gap":"0.5rem","buttonGap":"0.25rem"},"colorScheme":{"light":{"dropdown":{"background":"{surface.100}","hoverBackground":"{surface.200}","activeBackground":"{surface.300}","color":"{surface.600}","hoverColor":"{surface.700}","activeColor":"{surface.800}"},"today":{"background":"{surface.200}","color":"{surface.900}"}},"dark":{"dropdown":{"background":"{surface.800}","hoverBackground":"{surface.700}","activeBackground":"{surface.600}","color":"{surface.300}","hoverColor":"{surface.200}","activeColor":"{surface.100}"},"today":{"background":"{surface.700}","color":"{surface.0}"}}},"css":"\\n.p-datepicker-header {\\n    justify-content: start;\\n}\\n\\n.p-datepicker-title {\\n    order: 1;\\n}\\n\\n.p-datepicker-prev-button {\\n    order: 2;\\n    margin-inline-start: auto;\\n}\\n\\n.p-datepicker-next-button {\\n    order: 2;\\n    margin-inline-start: 0.5rem;\\n}\\n\\n.p-datepicker-select-month:focus-visible {\\n    background: dt('datepicker.select.month.hover.background');\\n    color: dt('datepicker.select.month.hover.color');\\n    outline: 0 none;\\n}\\n\\n.p-datepicker-select-year:focus-visible {\\n    background: dt('datepicker.select.year.hover.background');\\n    color: dt('datepicker.select.year.hover.color');\\n    outline: 0 none;\\n}\\n\\n.p-datepicker-dropdown:focus-visible {\\n    outline: 0 none;\\n    background: dt('datepicker.dropdown.hover.background');\\n    border-color: dt('datepicker.dropdown.hover.border.color');\\n    color: dt('datepicker.dropdown.hover.color');\\n}\\n"},"card":{"root":{"background":"{content.background}","borderRadius":"{content.border.radius}","color":"{content.color}","shadow":"0 2px 1px -1px rgba(0,0,0,.2), 0 1px 1px 0 rgba(0,0,0,.14), 0 1px 3px 0 rgba(0,0,0,.12)"},"body":{"padding":"1.5rem","gap":"0.75rem"},"caption":{"gap":"0.5rem"},"title":{"fontSize":"1.25rem","fontWeight":"500"},"subtitle":{"color":"{text.muted.color}"},"css":""},"carousel":{"root":{"transitionDuration":"{transition.duration}"},"content":{"gap":"0.25rem"},"indicatorList":{"padding":"1rem","gap":"1rem"},"indicator":{"width":"1.25rem","height":"1.25rem","borderRadius":"50%","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"colorScheme":{"light":{"indicator":{"background":"{surface.200}","hoverBackground":"{surface.300}","activeBackground":"{primary.color}"}},"dark":{"indicator":{"background":"{surface.700}","hoverBackground":"{surface.600}","activeBackground":"{primary.color}"}}},"css":"\\n.p-carousel-indicator-button:hover {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%);\\n}\\n\\n.p-carousel-indicator-button:focus-visible {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%);\\n}\\n\\n.p-carousel-indicator-active .p-carousel-indicator-button:hover {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('carousel.indicator.active.background'), transparent 92%);\\n}\\n\\n.p-carousel-indicator-active .p-carousel-indicator-button:focus-visible {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('carousel.indicator.active.background'), transparent 84%);\\n}\\n"},"cascadeselect":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledHoverBackground":"{form.field.filled.hover.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","invalidPlaceholderColor":"{form.field.invalid.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}","sm":{"fontSize":"{form.field.sm.font.size}","paddingX":"{form.field.sm.padding.x}","paddingY":"{form.field.sm.padding.y}"},"lg":{"fontSize":"{form.field.lg.font.size}","paddingX":"{form.field.lg.padding.x}","paddingY":"{form.field.lg.padding.y}"}},"dropdown":{"width":"2.5rem","color":"{form.field.icon.color}"},"overlay":{"background":"{overlay.select.background}","borderColor":"{overlay.select.border.color}","borderRadius":"{overlay.select.border.radius}","color":"{overlay.select.color}","shadow":"{overlay.select.shadow}"},"list":{"padding":"{list.padding}","gap":"{list.gap}","mobileIndent":"1rem"},"option":{"focusBackground":"{list.option.focus.background}","selectedBackground":"{list.option.selected.background}","selectedFocusBackground":"{list.option.selected.focus.background}","color":"{list.option.color}","focusColor":"{list.option.focus.color}","selectedColor":"{list.option.selected.color}","selectedFocusColor":"{list.option.selected.focus.color}","padding":"{list.option.padding}","borderRadius":"{list.option.border.radius}","icon":{"color":"{list.option.icon.color}","focusColor":"{list.option.icon.focus.color}","size":"0.875rem"}},"clearIcon":{"color":"{form.field.icon.color}"},"css":"\\n.p-cascadeselect.p-variant-filled {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border: 1px solid transparent;\\n    background: dt('cascadeselect.filled.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.border.color'), dt('cascadeselect.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\\n}\\n\\n.p-cascadeselect.p-variant-filled:not(.p-disabled):hover {\\n    background: dt('cascadeselect.filled.hover.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.hover.border.color'), dt('cascadeselect.hover.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-cascadeselect.p-variant-filled:not(.p-disabled).p-focus {\\n    outline: 0 none;\\n    background: dt('cascadeselect.filled.focus.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.border.color'), dt('cascadeselect.border.color'));\\n    background-size: 100% 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-cascadeselect.p-variant-filled:not(.p-disabled).p-focus:hover {\\n    background-image: linear-gradient(to bottom, dt('cascadeselect.focus.border.color'), dt('cascadeselect.focus.border.color')), linear-gradient(to bottom, dt('cascadeselect.hover.border.color'), dt('cascadeselect.hover.border.color'));\\n}\\n\\n.p-cascadeselect.p-variant-filled.p-invalid {\\n    background-image: linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color')), linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color'));\\n}\\n\\n.p-cascadeselect.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {\\n    background-image: linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color')), linear-gradient(to bottom, dt('cascadeselect.invalid.border.color'), dt('cascadeselect.invalid.border.color'));\\n}\\n\\n.p-cascadeselect-option {\\n    transition: none;\\n}\\n"},"checkbox":{"root":{"borderRadius":"{border.radius.xs}","width":"18px","height":"18px","background":"{form.field.background}","checkedBackground":"{primary.color}","checkedHoverBackground":"{primary.color}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","checkedBorderColor":"{primary.color}","checkedHoverBorderColor":"{primary.color}","checkedFocusBorderColor":"{primary.color}","checkedDisabledBorderColor":"{form.field.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","shadow":"{form.field.shadow}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"},"transitionDuration":"{form.field.transition.duration}","sm":{"width":"14px","height":"14px"},"lg":{"width":"22px","height":"22px"}},"icon":{"size":"0.875rem","color":"{form.field.color}","checkedColor":"{primary.contrast.color}","checkedHoverColor":"{primary.contrast.color}","disabledColor":"{form.field.disabled.color}","sm":{"size":"0.75rem"},"lg":{"size":"1rem"}},"css":"\\n.p-checkbox {\\n    border-radius: 50%;\\n    transition: box-shadow dt('checkbox.transition.duration');\\n}\\n\\n.p-checkbox-box {\\n    border-width: 2px;\\n}\\n\\n.p-checkbox:not(.p-disabled):has(.p-checkbox-input:hover) {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%);\\n}\\n\\n.p-checkbox:not(.p-disabled):has(.p-checkbox-input:focus-visible) {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 88%);\\n}\\n\\n.p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('checkbox.checked.background'), transparent 92%);\\n}\\n\\n.p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:focus-visible) {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('checkbox.checked.background'), transparent 84%);\\n}\\n\\n.p-checkbox-checked .p-checkbox-box:before  {\\n    content: \\"\\";\\n    position: absolute;\\n    top: var(--p-md-check-icon-t);\\n    left: 2px;\\n    border-right: 2px solid transparent;\\n    border-bottom: 2px solid transparent;\\n    transform: rotate(45deg);\\n    transform-origin: 0% 100%;\\n    animation: p-md-check 125ms 50ms linear forwards;\\n}\\n\\n.p-checkbox-checked .p-checkbox-icon {\\n    display: none;\\n}\\n\\n.p-checkbox {\\n    --p-md-check-icon-t: 10px;\\n    --p-md-check-icon-w: 6px;\\n    --p-md-check-icon-h: 12px;\\n}\\n\\n.p-checkbox-sm {\\n    --p-md-check-icon-t: 8px;\\n    --p-md-check-icon-w: 4px;\\n    --p-md-check-icon-h: 10px;\\n}\\n\\n.p-checkbox-lg {\\n    --p-md-check-icon-t: 12px;\\n    --p-md-check-icon-w: 8px;\\n    --p-md-check-icon-h: 16px;\\n}\\n\\n@keyframes p-md-check {\\n    0%{\\n      width: 0;\\n      height: 0;\\n      border-color: dt('checkbox.icon.checked.color');\\n      transform: translate3d(0,0,0) rotate(45deg);\\n    }\\n    33%{\\n      width: var(--p-md-check-icon-w);\\n      height: 0;\\n      transform: translate3d(0,0,0) rotate(45deg);\\n    }\\n    100%{\\n      width: var(--p-md-check-icon-w);\\n      height: var(--p-md-check-icon-h);\\n      border-color: dt('checkbox.icon.checked.color');\\n      transform: translate3d(0,calc(-1 * var(--p-md-check-icon-h)),0) rotate(45deg);\\n    }\\n}\\n"},"chip":{"root":{"borderRadius":"2rem","paddingX":"0.75rem","paddingY":"0.75rem","gap":"0.5rem","transitionDuration":"{transition.duration}"},"image":{"width":"2.25rem","height":"2.25rem"},"icon":{"size":"1rem"},"removeIcon":{"size":"1rem","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}"}},"colorScheme":{"light":{"root":{"background":"{surface.200}","color":"{surface.900}"},"icon":{"color":"{surface.600}"},"removeIcon":{"color":"{surface.600}","focusRing":{"shadow":"0 0 1px 4px {surface.300}"}}},"dark":{"root":{"background":"{surface.700}","color":"{surface.0}"},"icon":{"color":"{surface.0}"},"removeIcon":{"color":"{surface.0}","focusRing":{"shadow":"0 0 1px 4px {surface.600}"}}}},"css":""},"colorpicker":{"root":{"transitionDuration":"{transition.duration}"},"preview":{"width":"2rem","height":"2rem","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"panel":{"shadow":"{overlay.popover.shadow}","borderRadius":"{overlay.popover.borderRadius}"},"colorScheme":{"light":{"panel":{"background":"{surface.800}","borderColor":"{surface.900}"},"handle":{"color":"{surface.0}"}},"dark":{"panel":{"background":"{surface.900}","borderColor":"{surface.700}"},"handle":{"color":"{surface.0}"}}},"css":""},"confirmdialog":{"icon":{"size":"2rem","color":"{overlay.modal.color}"},"content":{"gap":"1rem"},"css":""},"confirmpopup":{"root":{"background":"{overlay.popover.background}","borderColor":"{overlay.popover.border.color}","color":"{overlay.popover.color}","borderRadius":"{overlay.popover.border.radius}","shadow":"{overlay.popover.shadow}","gutter":"10px","arrowOffset":"1.25rem"},"content":{"padding":"{overlay.popover.padding}","gap":"1rem"},"icon":{"size":"1.5rem","color":"{overlay.popover.color}"},"footer":{"gap":"0.5rem","padding":"0 {overlay.popover.padding} {overlay.popover.padding} {overlay.popover.padding}"},"css":""},"contextmenu":{"root":{"background":"{content.background}","borderColor":"transparent","color":"{content.color}","borderRadius":"{content.border.radius}","shadow":"{overlay.navigation.shadow}","transitionDuration":"{transition.duration}"},"list":{"padding":"{navigation.list.padding}","gap":"{navigation.list.gap}"},"item":{"focusBackground":"{navigation.item.focus.background}","activeBackground":"{navigation.item.active.background}","color":"{navigation.item.color}","focusColor":"{navigation.item.focus.color}","activeColor":"{navigation.item.active.color}","padding":"{navigation.item.padding}","borderRadius":"{navigation.item.border.radius}","gap":"{navigation.item.gap}","icon":{"color":"{navigation.item.icon.color}","focusColor":"{navigation.item.icon.focus.color}","activeColor":"{navigation.item.icon.active.color}"}},"submenu":{"mobileIndent":"1rem"},"submenuIcon":{"size":"{navigation.submenu.icon.size}","color":"{navigation.submenu.icon.color}","focusColor":"{navigation.submenu.icon.focus.color}","activeColor":"{navigation.submenu.icon.active.color}"},"separator":{"borderColor":"{content.border.color}"},"css":""},"dataview":{"root":{"borderColor":"transparent","borderWidth":"0","borderRadius":"0","padding":"0"},"header":{"background":"{content.background}","color":"{content.color}","borderColor":"{content.border.color}","borderWidth":"0 0 1px 0","padding":"0.75rem 1rem","borderRadius":"0"},"content":{"background":"{content.background}","color":"{content.color}","borderColor":"transparent","borderWidth":"0","padding":"0","borderRadius":"0"},"footer":{"background":"{content.background}","color":"{content.color}","borderColor":"{content.border.color}","borderWidth":"1px 0 0 0","padding":"0.75rem 1rem","borderRadius":"0"},"paginatorTop":{"borderColor":"{content.border.color}","borderWidth":"0 0 1px 0"},"paginatorBottom":{"borderColor":"{content.border.color}","borderWidth":"1px 0 0 0"},"css":""},"datatable":{"root":{"transitionDuration":"{transition.duration}"},"header":{"background":"{content.background}","borderColor":"{datatable.border.color}","color":"{content.color}","borderWidth":"0 0 1px 0","padding":"0.75rem 1rem","sm":{"padding":"0.375rem 0.5rem"},"lg":{"padding":"1rem 1.25rem"}},"headerCell":{"background":"{content.background}","hoverBackground":"{content.hover.background}","selectedBackground":"{highlight.background}","borderColor":"{datatable.border.color}","color":"{content.color}","hoverColor":"{content.hover.color}","selectedColor":"{highlight.color}","gap":"0.5rem","padding":"0.75rem 1rem","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"-1px","shadow":"{focus.ring.shadow}"},"sm":{"padding":"0.375rem 0.5rem"},"lg":{"padding":"1rem 1.25rem"}},"columnTitle":{"fontWeight":"600"},"row":{"background":"{content.background}","hoverBackground":"{content.hover.background}","selectedBackground":"{highlight.background}","color":"{content.color}","hoverColor":"{content.hover.color}","selectedColor":"{highlight.color}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"-1px","shadow":"{focus.ring.shadow}"}},"bodyCell":{"borderColor":"{datatable.border.color}","padding":"0.75rem 1rem","sm":{"padding":"0.375rem 0.5rem"},"lg":{"padding":"1rem 1.25rem"}},"footerCell":{"background":"{content.background}","borderColor":"{datatable.border.color}","color":"{content.color}","padding":"0.75rem 1rem","sm":{"padding":"0.375rem 0.5rem"},"lg":{"padding":"1rem 1.25rem"}},"columnFooter":{"fontWeight":"600"},"footer":{"background":"{content.background}","borderColor":"{datatable.border.color}","color":"{content.color}","borderWidth":"0 0 1px 0","padding":"0.75rem 1rem","sm":{"padding":"0.375rem 0.5rem"},"lg":{"padding":"1rem 1.25rem"}},"dropPoint":{"color":"{primary.color}"},"columnResizer":{"width":"0.5rem"},"resizeIndicator":{"width":"1px","color":"{primary.color}"},"sortIcon":{"color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}","size":"0.875rem"},"loadingIcon":{"size":"2rem"},"rowToggleButton":{"hoverBackground":"{content.hover.background}","selectedHoverBackground":"{content.background}","color":"{text.muted.color}","hoverColor":"{text.color}","selectedHoverColor":"{primary.color}","size":"1.75rem","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"filter":{"inlineGap":"0.5rem","overlaySelect":{"background":"{overlay.select.background}","borderColor":"{overlay.select.border.color}","borderRadius":"{overlay.select.border.radius}","color":"{overlay.select.color}","shadow":"{overlay.select.shadow}"},"overlayPopover":{"background":"{overlay.popover.background}","borderColor":"{overlay.popover.border.color}","borderRadius":"{overlay.popover.border.radius}","color":"{overlay.popover.color}","shadow":"{overlay.popover.shadow}","padding":"{overlay.popover.padding}","gap":"0.5rem"},"rule":{"borderColor":"{content.border.color}"},"constraintList":{"padding":"{list.padding}","gap":"{list.gap}"},"constraint":{"focusBackground":"{list.option.focus.background}","selectedBackground":"{list.option.selected.background}","selectedFocusBackground":"{list.option.selected.focus.background}","color":"{list.option.color}","focusColor":"{list.option.focus.color}","selectedColor":"{list.option.selected.color}","selectedFocusColor":"{list.option.selected.focus.color}","separator":{"borderColor":"{content.border.color}"},"padding":"{list.option.padding}","borderRadius":"{list.option.border.radius}"}},"paginatorTop":{"borderColor":"{datatable.border.color}","borderWidth":"0 0 1px 0"},"paginatorBottom":{"borderColor":"{datatable.border.color}","borderWidth":"0 0 1px 0"},"colorScheme":{"light":{"root":{"borderColor":"{content.border.color}"},"row":{"stripedBackground":"{surface.50}"},"bodyCell":{"selectedBorderColor":"{primary.100}"}},"dark":{"root":{"borderColor":"{surface.800}"},"row":{"stripedBackground":"{surface.950}"},"bodyCell":{"selectedBorderColor":"{primary.900}"}}},"css":"\\n.p-datatable-header-cell,\\n.p-datatable-tbody > tr {\\n    transition: none;\\n}\\n"},"dialog":{"root":{"background":"{overlay.modal.background}","borderColor":"{overlay.modal.border.color}","color":"{overlay.modal.color}","borderRadius":"{overlay.modal.border.radius}","shadow":"{overlay.modal.shadow}"},"header":{"padding":"{overlay.modal.padding}","gap":"0.5rem"},"title":{"fontSize":"1.25rem","fontWeight":"600"},"content":{"padding":"0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}"},"footer":{"padding":"0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}","gap":"0.5rem"},"css":""},"divider":{"root":{"borderColor":"{content.border.color}"},"content":{"background":"{content.background}","color":"{text.color}"},"horizontal":{"margin":"1rem 0","padding":"0 1rem","content":{"padding":"0 0.5rem"}},"vertical":{"margin":"0 1rem","padding":"0.5rem 0","content":{"padding":"0.5rem 0"}},"css":""},"dock":{"root":{"background":"rgba(255, 255, 255, 0.1)","borderColor":"rgba(255, 255, 255, 0.2)","padding":"0.5rem","borderRadius":"{border.radius.xl}"},"item":{"borderRadius":"{content.border.radius}","padding":"0.5rem","size":"3rem","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"css":""},"drawer":{"root":{"background":"{overlay.modal.background}","borderColor":"{overlay.modal.border.color}","color":"{overlay.modal.color}","shadow":"{overlay.modal.shadow}"},"header":{"padding":"{overlay.modal.padding}"},"title":{"fontSize":"1.5rem","fontWeight":"600"},"content":{"padding":"0 {overlay.modal.padding} {overlay.modal.padding} {overlay.modal.padding}"},"footer":{"padding":"{overlay.modal.padding}"},"css":""},"editor":{"toolbar":{"background":"{content.background}","borderColor":"{content.border.color}","borderRadius":"{content.border.radius}"},"toolbarItem":{"color":"{text.muted.color}","hoverColor":"{text.color}","activeColor":"{primary.color}"},"overlay":{"background":"{overlay.select.background}","borderColor":"{overlay.select.border.color}","borderRadius":"{overlay.select.border.radius}","color":"{overlay.select.color}","shadow":"{overlay.select.shadow}","padding":"{list.padding}"},"overlayOption":{"focusBackground":"{list.option.focus.background}","color":"{list.option.color}","focusColor":"{list.option.focus.color}","padding":"{list.option.padding}","borderRadius":"{list.option.border.radius}"},"content":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","borderRadius":"{content.border.radius}"},"css":"\\n.p-editor .p-editor-toolbar {\\n    padding: 0.75rem\\n}\\n"},"fieldset":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","borderRadius":"{content.border.radius}","color":"{content.color}","padding":"0 1.25rem 1.25rem 1.25rem","transitionDuration":"{transition.duration}"},"legend":{"background":"{content.background}","hoverBackground":"{content.hover.background}","color":"{content.color}","hoverColor":"{content.hover.color}","borderRadius":"{content.border.radius}","borderWidth":"1px","borderColor":"transparent","padding":"0.75rem 1rem","gap":"0.5rem","fontWeight":"600","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"toggleIcon":{"color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}"},"content":{"padding":"0"},"css":"\\n.p-fieldset-toggle-button:focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n"},"fileupload":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","borderRadius":"{content.border.radius}","transitionDuration":"{transition.duration}"},"header":{"background":"transparent","color":"{text.color}","padding":"1.25rem","borderColor":"unset","borderWidth":"0","borderRadius":"0","gap":"0.5rem"},"content":{"highlightBorderColor":"{primary.color}","padding":"0 1.25rem 1.25rem 1.25rem","gap":"1rem"},"file":{"padding":"1rem","gap":"1rem","borderColor":"{content.border.color}","info":{"gap":"0.5rem"}},"fileList":{"gap":"0.5rem"},"progressbar":{"height":"0.25rem"},"basic":{"gap":"0.5rem"},"css":""},"iftalabel":{"root":{"color":"{form.field.float.label.color}","focusColor":"{form.field.float.label.focus.color}","invalidColor":"{form.field.float.label.invalid.color}","transitionDuration":"0.2s","positionX":"{form.field.padding.x}","top":"0.5rem","fontSize":"0.75rem","fontWeight":"400"},"input":{"paddingTop":"1.5rem","paddingBottom":"0.5rem"},"css":""},"floatlabel":{"root":{"color":"{form.field.float.label.color}","focusColor":"{form.field.float.label.focus.color}","activeColor":"{form.field.float.label.active.color}","invalidColor":"{form.field.float.label.invalid.color}","transitionDuration":"0.2s","positionX":"{form.field.padding.x}","positionY":"{form.field.padding.y}","fontWeight":"500","active":{"fontSize":"0.75rem","fontWeight":"400"}},"over":{"active":{"top":"-1.25rem"}},"in":{"input":{"paddingTop":"1.5rem","paddingBottom":"0.5rem"},"active":{"top":"0.5rem"}},"on":{"borderRadius":"{border.radius.xs}","active":{"background":"{form.field.background}","padding":"0 0.125rem"}},"css":""},"galleria":{"root":{"borderWidth":"1px","borderColor":"{content.border.color}","borderRadius":"{content.border.radius}","transitionDuration":"{transition.duration}"},"navButton":{"background":"rgba(255, 255, 255, 0.1)","hoverBackground":"rgba(255, 255, 255, 0.2)","color":"{surface.100}","hoverColor":"{surface.0}","size":"3rem","gutter":"0.5rem","prev":{"borderRadius":"50%"},"next":{"borderRadius":"50%"},"focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"navIcon":{"size":"1.5rem"},"thumbnailsContent":{"background":"{content.background}","padding":"1rem 0.25rem"},"thumbnailNavButton":{"size":"2rem","borderRadius":"50%","gutter":"0.5rem","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"thumbnailNavButtonIcon":{"size":"1rem"},"caption":{"background":"rgba(0, 0, 0, 0.5)","color":"{surface.100}","padding":"1rem"},"indicatorList":{"gap":"0.5rem","padding":"1rem"},"indicatorButton":{"width":"1rem","height":"1rem","activeBackground":"{primary.color}","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"insetIndicatorList":{"background":"rgba(0, 0, 0, 0.5)"},"insetIndicatorButton":{"background":"rgba(255, 255, 255, 0.4)","hoverBackground":"rgba(255, 255, 255, 0.6)","activeBackground":"rgba(255, 255, 255, 0.9)"},"closeButton":{"size":"3rem","gutter":"0.5rem","background":"rgba(255, 255, 255, 0.1)","hoverBackground":"rgba(255, 255, 255, 0.2)","color":"{surface.50}","hoverColor":"{surface.0}","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"closeButtonIcon":{"size":"1.5rem"},"colorScheme":{"light":{"thumbnailNavButton":{"hoverBackground":"{surface.100}","color":"{surface.600}","hoverColor":"{surface.700}"},"indicatorButton":{"background":"{surface.200}","hoverBackground":"{surface.300}"}},"dark":{"thumbnailNavButton":{"hoverBackground":"{surface.700}","color":"{surface.400}","hoverColor":"{surface.0}"},"indicatorButton":{"background":"{surface.700}","hoverBackground":"{surface.600}"}}},"css":""},"iconfield":{"icon":{"color":"{form.field.icon.color}"},"css":""},"image":{"root":{"transitionDuration":"{transition.duration}"},"preview":{"icon":{"size":"1.5rem"},"mask":{"background":"{mask.background}","color":"{mask.color}"}},"toolbar":{"position":{"left":"auto","right":"1rem","top":"1rem","bottom":"auto"},"blur":"8px","background":"rgba(255,255,255,0.1)","borderColor":"rgba(255,255,255,0.2)","borderWidth":"1px","borderRadius":"30px","padding":".5rem","gap":"0.5rem"},"action":{"hoverBackground":"rgba(255,255,255,0.1)","color":"{surface.50}","hoverColor":"{surface.0}","size":"3rem","iconSize":"1.5rem","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"css":""},"imagecompare":{"handle":{"size":"20px","hoverSize":"40px","background":"rgba(255,255,255,0.4)","hoverBackground":"rgba(255,255,255,0.6)","borderColor":"unset","hoverBorderColor":"unset","borderWidth":"0","borderRadius":"50%","transitionDuration":"{transition.duration}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"rgba(255,255,255,0.3)","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"css":""},"inlinemessage":{"root":{"padding":"{form.field.padding.y} {form.field.padding.x}","borderRadius":"{content.border.radius}","gap":"0.5rem"},"text":{"fontWeight":"500"},"icon":{"size":"1rem"},"colorScheme":{"light":{"info":{"background":"color-mix(in srgb, {blue.50}, transparent 5%)","borderColor":"{blue.200}","color":"{blue.600}","shadow":"0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)"},"success":{"background":"color-mix(in srgb, {green.50}, transparent 5%)","borderColor":"{green.200}","color":"{green.600}","shadow":"0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)"},"warn":{"background":"color-mix(in srgb,{yellow.50}, transparent 5%)","borderColor":"{yellow.200}","color":"{yellow.600}","shadow":"0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)"},"error":{"background":"color-mix(in srgb, {red.50}, transparent 5%)","borderColor":"{red.200}","color":"{red.600}","shadow":"0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)"},"secondary":{"background":"{surface.100}","borderColor":"{surface.200}","color":"{surface.600}","shadow":"0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)"},"contrast":{"background":"{surface.900}","borderColor":"{surface.950}","color":"{surface.50}","shadow":"0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)"}},"dark":{"info":{"background":"color-mix(in srgb, {blue.500}, transparent 84%)","borderColor":"color-mix(in srgb, {blue.700}, transparent 64%)","color":"{blue.500}","shadow":"0px 4px 8px 0px color-mix(in srgb, {blue.500}, transparent 96%)"},"success":{"background":"color-mix(in srgb, {green.500}, transparent 84%)","borderColor":"color-mix(in srgb, {green.700}, transparent 64%)","color":"{green.500}","shadow":"0px 4px 8px 0px color-mix(in srgb, {green.500}, transparent 96%)"},"warn":{"background":"color-mix(in srgb, {yellow.500}, transparent 84%)","borderColor":"color-mix(in srgb, {yellow.700}, transparent 64%)","color":"{yellow.500}","shadow":"0px 4px 8px 0px color-mix(in srgb, {yellow.500}, transparent 96%)"},"error":{"background":"color-mix(in srgb, {red.500}, transparent 84%)","borderColor":"color-mix(in srgb, {red.700}, transparent 64%)","color":"{red.500}","shadow":"0px 4px 8px 0px color-mix(in srgb, {red.500}, transparent 96%)"},"secondary":{"background":"{surface.800}","borderColor":"{surface.700}","color":"{surface.300}","shadow":"0px 4px 8px 0px color-mix(in srgb, {surface.500}, transparent 96%)"},"contrast":{"background":"{surface.0}","borderColor":"{surface.100}","color":"{surface.950}","shadow":"0px 4px 8px 0px color-mix(in srgb, {surface.950}, transparent 96%)"}}},"css":""},"inplace":{"root":{"padding":"{form.field.padding.y} {form.field.padding.x}","borderRadius":"{content.border.radius}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"},"transitionDuration":"{transition.duration}"},"display":{"hoverBackground":"{content.hover.background}","hoverColor":"{content.hover.color}"},"css":""},"inputchips":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}"},"chip":{"borderRadius":"{border.radius.sm}"},"colorScheme":{"light":{"chip":{"focusBackground":"{surface.200}","color":"{surface.800}"}},"dark":{"chip":{"focusBackground":"{surface.700}","color":"{surface.0}"}}},"css":""},"inputgroup":{"addon":{"background":"{form.field.background}","borderColor":"{form.field.border.color}","color":"{form.field.icon.color}","borderRadius":"{form.field.border.radius}","padding":"6px","minWidth":"3rem"},"css":"\\n.p-inputgroup:has(.p-variant-filled) .p-inputgroupaddon {\\n    border-block-start-color: dt('inputtext.filled.background');\\n    border-inline-color: dt('inputtext.filled.background');\\n    background: dt('inputtext.filled.background') no-repeat;\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n}\\n"},"inputnumber":{"root":{"transitionDuration":"{transition.duration}"},"button":{"width":"3rem","borderRadius":"{form.field.border.radius}","verticalPadding":"{form.field.padding.y}"},"colorScheme":{"light":{"button":{"background":"transparent","hoverBackground":"{surface.100}","activeBackground":"{surface.200}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.border.color}","activeBorderColor":"{form.field.border.color}","color":"{surface.400}","hoverColor":"{surface.500}","activeColor":"{surface.600}"}},"dark":{"button":{"background":"transparent","hoverBackground":"{surface.800}","activeBackground":"{surface.700}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.border.color}","activeBorderColor":"{form.field.border.color}","color":"{surface.400}","hoverColor":"{surface.300}","activeColor":"{surface.200}"}}},"css":"\\n.p-inputnumber-stacked .p-inputnumber-button-group {\\n    top: 2px;\\n    right: 2px;\\n    height: calc(100% - 4px);\\n}\\n\\n.p-inputnumber-horizontal:has(.p-variant-filled) .p-inputnumber-button {\\n    border-block-start-color: dt('inputtext.filled.background');\\n    border-inline-color: dt('inputtext.filled.background');\\n    background: dt('inputtext.filled.background') no-repeat;\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n}\\n\\n.p-inputnumber-vertical:has(.p-variant-filled) .p-inputnumber-button {\\n    border-block-color: dt('inputtext.filled.background');\\n    border-inline-color: dt('inputtext.filled.background');\\n    background: dt('inputtext.filled.background') no-repeat;\\n}\\n\\n.p-inputnumber-vertical:has(.p-variant-filled) .p-inputnumber-increment-button {\\n    border-block-end: 1px solid dt('inputtext.border.color')\\n}\\n"},"inputotp":{"root":{"gap":"0.5rem"},"input":{"width":"3rem","sm":{"width":"2.5rem"},"lg":{"width":"3.5rem"}},"css":""},"inputtext":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledHoverBackground":"{form.field.filled.hover.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","invalidPlaceholderColor":"{form.field.invalid.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}","sm":{"fontSize":"{form.field.sm.font.size}","paddingX":"{form.field.sm.padding.x}","paddingY":"{form.field.sm.padding.y}"},"lg":{"fontSize":"{form.field.lg.font.size}","paddingX":"{form.field.lg.padding.x}","paddingY":"{form.field.lg.padding.y}"}},"css":"\\n.p-inputtext.p-variant-filled {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border: 1px solid transparent;\\n    background: dt('inputtext.filled.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.border.color'), dt('inputtext.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\\n}\\n\\n.p-inputtext.p-variant-filled:enabled:hover {\\n    background: dt('inputtext.filled.hover.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.hover.border.color'), dt('inputtext.hover.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-inputtext.p-variant-filled:enabled:focus {\\n    outline: 0 none;\\n    background: dt('inputtext.filled.focus.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.border.color'), dt('inputtext.border.color'));\\n    background-size: 100% 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-inputtext.p-variant-filled:enabled:hover:focus {\\n    background-image: linear-gradient(to bottom, dt('inputtext.focus.border.color'), dt('inputtext.focus.border.color')), linear-gradient(to bottom, dt('inputtext.hover.border.color'), dt('inputtext.hover.border.color'));\\n}\\n\\n.p-inputtext.p-variant-filled.p-invalid {\\n    background-image: linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color')), linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color'));\\n}\\n\\n.p-inputtext.p-variant-filled.p-invalid:enabled:focus {\\n    background-image: linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color')), linear-gradient(to bottom, dt('inputtext.invalid.border.color'), dt('inputtext.invalid.border.color'));\\n}\\n"},"knob":{"root":{"transitionDuration":"{transition.duration}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"value":{"background":"{primary.color}"},"range":{"background":"{content.border.color}"},"text":{"color":"{text.muted.color}"},"css":""},"listbox":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","borderColor":"{form.field.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","shadow":"{form.field.shadow}","borderRadius":"{form.field.border.radius}","transitionDuration":"{form.field.transition.duration}"},"list":{"padding":"{list.padding}","gap":"{list.gap}","header":{"padding":"{list.header.padding}"}},"option":{"focusBackground":"{list.option.focus.background}","selectedBackground":"{list.option.selected.background}","selectedFocusBackground":"{list.option.selected.focus.background}","color":"{list.option.color}","focusColor":"{list.option.focus.color}","selectedColor":"{list.option.selected.color}","selectedFocusColor":"{list.option.selected.focus.color}","padding":"{list.option.padding}","borderRadius":"{list.option.border.radius}"},"optionGroup":{"background":"{list.option.group.background}","color":"{list.option.group.color}","fontWeight":"{list.option.group.font.weight}","padding":"{list.option.group.padding}"},"checkmark":{"color":"{list.option.color}","gutterStart":"-0.375rem","gutterEnd":"0.375rem"},"emptyMessage":{"padding":"{list.option.padding}"},"colorScheme":{"light":{"option":{"stripedBackground":"{surface.50}"}},"dark":{"option":{"stripedBackground":"{surface.900}"}}},"css":"\\n.p-listbox-option {\\n    transition: none;\\n}\\n"},"megamenu":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","borderRadius":"{content.border.radius}","color":"{content.color}","gap":"0.5rem","verticalOrientation":{"padding":"{navigation.list.padding}","gap":"{navigation.list.gap}"},"horizontalOrientation":{"padding":"0.5rem 0.75rem","gap":"0.5rem"},"transitionDuration":"{transition.duration}"},"baseItem":{"borderRadius":"{content.border.radius}","padding":"{navigation.item.padding}"},"item":{"focusBackground":"{navigation.item.focus.background}","activeBackground":"{navigation.item.active.background}","color":"{navigation.item.color}","focusColor":"{navigation.item.focus.color}","activeColor":"{navigation.item.active.color}","padding":"{navigation.item.padding}","borderRadius":"{navigation.item.border.radius}","gap":"{navigation.item.gap}","icon":{"color":"{navigation.item.icon.color}","focusColor":"{navigation.item.icon.focus.color}","activeColor":"{navigation.item.icon.active.color}"}},"overlay":{"padding":"0","background":"{content.background}","borderColor":"transparent","borderRadius":"{content.border.radius}","color":"{content.color}","shadow":"{overlay.navigation.shadow}","gap":"0.5rem"},"submenu":{"padding":"{navigation.list.padding}","gap":"{navigation.list.gap}"},"submenuLabel":{"padding":"{navigation.submenu.label.padding}","fontWeight":"{navigation.submenu.label.font.weight}","background":"{navigation.submenu.label.background.}","color":"{navigation.submenu.label.color}"},"submenuIcon":{"size":"{navigation.submenu.icon.size}","color":"{navigation.submenu.icon.color}","focusColor":"{navigation.submenu.icon.focus.color}","activeColor":"{navigation.submenu.icon.active.color}"},"separator":{"borderColor":"{content.border.color}"},"mobileButton":{"borderRadius":"50%","size":"2.5rem","color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}","hoverBackground":"{content.hover.background}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"css":"\\n.p-megamenu-button:focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n"},"menu":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","borderRadius":"{content.border.radius}","shadow":"{overlay.navigation.shadow}","transitionDuration":"{transition.duration}"},"list":{"padding":"{navigation.list.padding}","gap":"{navigation.list.gap}"},"item":{"focusBackground":"{navigation.item.focus.background}","color":"{navigation.item.color}","focusColor":"{navigation.item.focus.color}","padding":"{navigation.item.padding}","borderRadius":"{navigation.item.border.radius}","gap":"{navigation.item.gap}","icon":{"color":"{navigation.item.icon.color}","focusColor":"{navigation.item.icon.focus.color}"}},"submenuLabel":{"padding":"{navigation.submenu.label.padding}","fontWeight":"{navigation.submenu.label.font.weight}","background":"{navigation.submenu.label.background}","color":"{navigation.submenu.label.color}"},"separator":{"borderColor":"{content.border.color}"},"css":"\\n.p-menu-overlay {\\n    border-color: transparent;\\n}\\n"},"menubar":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","borderRadius":"{content.border.radius}","color":"{content.color}","gap":"0.5rem","padding":"0.5rem 0.75rem","transitionDuration":"{transition.duration}"},"baseItem":{"borderRadius":"{content.border.radius}","padding":"{navigation.item.padding}"},"item":{"focusBackground":"{navigation.item.focus.background}","activeBackground":"{navigation.item.active.background}","color":"{navigation.item.color}","focusColor":"{navigation.item.focus.color}","activeColor":"{navigation.item.active.color}","padding":"{navigation.item.padding}","borderRadius":"{navigation.item.border.radius}","gap":"{navigation.item.gap}","icon":{"color":"{navigation.item.icon.color}","focusColor":"{navigation.item.icon.focus.color}","activeColor":"{navigation.item.icon.active.color}"}},"submenu":{"padding":"{navigation.list.padding}","gap":"{navigation.list.gap}","background":"{content.background}","borderColor":"transparent","borderRadius":"{content.border.radius}","shadow":"{overlay.navigation.shadow}","mobileIndent":"1rem","icon":{"size":"{navigation.submenu.icon.size}","color":"{navigation.submenu.icon.color}","focusColor":"{navigation.submenu.icon.focus.color}","activeColor":"{navigation.submenu.icon.active.color}"}},"separator":{"borderColor":"{content.border.color}"},"mobileButton":{"borderRadius":"50%","size":"2.5rem","color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}","hoverBackground":"{content.hover.background}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"css":"\\n.p-menubar-button:focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n"},"message":{"root":{"borderRadius":"{content.border.radius}","borderWidth":"0","transitionDuration":"{transition.duration}"},"content":{"padding":"1rem 1.25rem","gap":"0.5rem","sm":{"padding":"0.625rem 0.625rem"},"lg":{"padding":"0.825rem 0.825rem"}},"text":{"fontSize":"1rem","fontWeight":"500","sm":{"fontSize":"0.875rem"},"lg":{"fontSize":"1.125rem"}},"icon":{"size":"1.25rem","sm":{"size":"1rem"},"lg":{"size":"1.5rem"}},"closeButton":{"width":"2rem","height":"2rem","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","offset":"{focus.ring.offset}"}},"closeIcon":{"size":"1rem","sm":{"size":"0.875rem"},"lg":{"size":"1.125rem"}},"outlined":{"root":{"borderWidth":"1px"}},"simple":{"content":{"padding":"0"}},"colorScheme":{"light":{"info":{"background":"color-mix(in srgb, {blue.50}, transparent 5%)","borderColor":"{blue.200}","color":"{blue.600}","shadow":"none","closeButton":{"hoverBackground":"{blue.100}","focusRing":{"color":"{blue.600}","shadow":"none"}},"outlined":{"color":"{blue.600}","borderColor":"{blue.600}"},"simple":{"color":"{blue.600}"}},"success":{"background":"color-mix(in srgb, {green.50}, transparent 5%)","borderColor":"{green.200}","color":"{green.600}","shadow":"none","closeButton":{"hoverBackground":"{green.100}","focusRing":{"color":"{green.600}","shadow":"none"}},"outlined":{"color":"{green.600}","borderColor":"{green.600}"},"simple":{"color":"{green.600}"}},"warn":{"background":"color-mix(in srgb,{yellow.50}, transparent 5%)","borderColor":"{yellow.200}","color":"{yellow.900}","shadow":"none","closeButton":{"hoverBackground":"{yellow.100}","focusRing":{"color":"{yellow.600}","shadow":"none"}},"outlined":{"color":"{yellow.900}","borderColor":"{yellow.900}"},"simple":{"color":"{yellow.900}"}},"error":{"background":"color-mix(in srgb, {red.50}, transparent 5%)","borderColor":"{red.200}","color":"{red.600}","shadow":"none","closeButton":{"hoverBackground":"{red.100}","focusRing":{"color":"{red.600}","shadow":"none"}},"outlined":{"color":"{red.600}","borderColor":"{red.600}"},"simple":{"color":"{red.600}"}},"secondary":{"background":"{surface.100}","borderColor":"{surface.200}","color":"{surface.600}","shadow":"none","closeButton":{"hoverBackground":"{surface.200}","focusRing":{"color":"{surface.600}","shadow":"none"}},"outlined":{"color":"{surface.600}","borderColor":"{surface.600}"},"simple":{"color":"{surface.600}"}},"contrast":{"background":"{surface.900}","borderColor":"{surface.950}","color":"{surface.50}","shadow":"none","closeButton":{"hoverBackground":"{surface.800}","focusRing":{"color":"{surface.50}","shadow":"none"}},"outlined":{"color":"{surface.950}","borderColor":"{surface.950}"},"simple":{"color":"{surface.950}"}}},"dark":{"info":{"background":"color-mix(in srgb, {blue.500}, transparent 84%)","borderColor":"color-mix(in srgb, {blue.700}, transparent 64%)","color":"{blue.500}","shadow":"none","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{blue.500}","shadow":"none"}},"outlined":{"color":"{blue.500}","borderColor":"{blue.500}"},"simple":{"color":"{blue.500}"}},"success":{"background":"color-mix(in srgb, {green.500}, transparent 84%)","borderColor":"color-mix(in srgb, {green.700}, transparent 64%)","color":"{green.500}","shadow":"none","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{green.500}","shadow":"none"}},"outlined":{"color":"{green.500}","borderColor":"{green.500}"},"simple":{"color":"{green.500}"}},"warn":{"background":"color-mix(in srgb, {yellow.500}, transparent 84%)","borderColor":"color-mix(in srgb, {yellow.700}, transparent 64%)","color":"{yellow.500}","shadow":"none","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{yellow.500}","shadow":"none"}},"outlined":{"color":"{yellow.500}","borderColor":"{yellow.500}"},"simple":{"color":"{yellow.500}"}},"error":{"background":"color-mix(in srgb, {red.500}, transparent 84%)","borderColor":"color-mix(in srgb, {red.700}, transparent 64%)","color":"{red.500}","shadow":"none","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{red.500}","shadow":"none"}},"outlined":{"color":"{red.500}","borderColor":"{red.500}"},"simple":{"color":"{red.500}"}},"secondary":{"background":"{surface.800}","borderColor":"{surface.700}","color":"{surface.300}","shadow":"none","closeButton":{"hoverBackground":"{surface.700}","focusRing":{"color":"{surface.300}","shadow":"none"}},"outlined":{"color":"{surface.400}","borderColor":"{surface.400}"},"simple":{"color":"{surface.400}"}},"contrast":{"background":"{surface.0}","borderColor":"{surface.100}","color":"{surface.950}","shadow":"none","closeButton":{"hoverBackground":"{surface.100}","focusRing":{"color":"{surface.950}","shadow":"none"}},"outlined":{"color":"{surface.0}","borderColor":"{surface.0}"},"simple":{"color":"{surface.0}"}}}},"css":""},"metergroup":{"root":{"borderRadius":"{content.border.radius}","gap":"1rem"},"meters":{"background":"{content.border.color}","size":"0.5rem"},"label":{"gap":"0.5rem"},"labelMarker":{"size":"0.5rem"},"labelIcon":{"size":"1rem"},"labelList":{"verticalGap":"0.5rem","horizontalGap":"1rem"},"css":""},"multiselect":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledHoverBackground":"{form.field.filled.hover.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","invalidPlaceholderColor":"{form.field.invalid.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}","sm":{"fontSize":"{form.field.sm.font.size}","paddingX":"{form.field.sm.padding.x}","paddingY":"{form.field.sm.padding.y}"},"lg":{"fontSize":"{form.field.lg.font.size}","paddingX":"{form.field.lg.padding.x}","paddingY":"{form.field.lg.padding.y}"}},"dropdown":{"width":"2.5rem","color":"{form.field.icon.color}"},"overlay":{"background":"{overlay.select.background}","borderColor":"{overlay.select.border.color}","borderRadius":"{overlay.select.border.radius}","color":"{overlay.select.color}","shadow":"{overlay.select.shadow}"},"list":{"padding":"{list.padding}","gap":"{list.gap}","header":{"padding":"{list.header.padding}"}},"option":{"focusBackground":"{list.option.focus.background}","selectedBackground":"{list.option.selected.background}","selectedFocusBackground":"{list.option.selected.focus.background}","color":"{list.option.color}","focusColor":"{list.option.focus.color}","selectedColor":"{list.option.selected.color}","selectedFocusColor":"{list.option.selected.focus.color}","padding":"{list.option.padding}","borderRadius":"{list.option.border.radius}","gap":"0.75rem"},"optionGroup":{"background":"{list.option.group.background}","color":"{list.option.group.color}","fontWeight":"{list.option.group.font.weight}","padding":"{list.option.group.padding}"},"chip":{"borderRadius":"{border.radius.sm}"},"clearIcon":{"color":"{form.field.icon.color}"},"emptyMessage":{"padding":"{list.option.padding}"},"css":"\\n.p-multiselect.p-variant-filled {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border: 1px solid transparent;\\n    background: dt('multiselect.filled.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.border.color'), dt('multiselect.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\\n}\\n\\n.p-multiselect.p-variant-filled:not(.p-disabled):hover {\\n    background: dt('multiselect.filled.hover.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.hover.border.color'), dt('multiselect.hover.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-multiselect.p-variant-filled:not(.p-disabled).p-focus {\\n    outline: 0 none;\\n    background: dt('multiselect.filled.focus.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.border.color'), dt('multiselect.border.color'));\\n    background-size: 100% 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-multiselect.p-variant-filled:not(.p-disabled).p-focus:hover {\\n    background-image: linear-gradient(to bottom, dt('multiselect.focus.border.color'), dt('multiselect.focus.border.color')), linear-gradient(to bottom, dt('multiselect.hover.border.color'), dt('multiselect.hover.border.color'));\\n}\\n\\n.p-multiselect.p-variant-filled.p-invalid {\\n    background-image: linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color')), linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color'));\\n}\\n\\n.p-multiselect.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {\\n    background-image: linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color')), linear-gradient(to bottom, dt('multiselect.invalid.border.color'), dt('multiselect.invalid.border.color'));\\n}\\n\\n.p-multiselect-option {\\n    transition: none;\\n}\\n"},"orderlist":{"root":{"gap":"1.125rem"},"controls":{"gap":"0.5rem"},"css":""},"organizationchart":{"root":{"gutter":"0.75rem","transitionDuration":"{transition.duration}"},"node":{"background":"{content.background}","hoverBackground":"{content.hover.background}","selectedBackground":"{highlight.background}","borderColor":"{content.border.color}","color":"{content.color}","selectedColor":"{highlight.color}","hoverColor":"{content.hover.color}","padding":"1rem 1.25rem","toggleablePadding":"1rem 1.25rem 1.5rem 1.25rem","borderRadius":"{content.border.radius}"},"nodeToggleButton":{"background":"{content.background}","hoverBackground":"{content.hover.background}","borderColor":"{content.border.color}","color":"{text.muted.color}","hoverColor":"{text.color}","size":"1.75rem","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"connector":{"color":"{content.border.color}","borderRadius":"{content.border.radius}","height":"24px"},"css":""},"overlaybadge":{"root":{"outline":{"width":"2px","color":"{content.background}"}},"css":""},"popover":{"root":{"background":"{overlay.popover.background}","borderColor":"{overlay.popover.border.color}","color":"{overlay.popover.color}","borderRadius":"{overlay.popover.border.radius}","shadow":"{overlay.popover.shadow}","gutter":"10px","arrowOffset":"1.25rem"},"content":{"padding":"{overlay.popover.padding}"},"css":""},"paginator":{"root":{"padding":"0.5rem 1rem","gap":"0.25rem","borderRadius":"{content.border.radius}","background":"{content.background}","color":"{content.color}","transitionDuration":"{transition.duration}"},"navButton":{"background":"transparent","hoverBackground":"{content.hover.background}","selectedBackground":"{highlight.background}","color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}","selectedColor":"{highlight.color}","width":"2.5rem","height":"2.5rem","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"currentPageReport":{"color":"{text.muted.color}"},"jumpToPageInput":{"maxWidth":"2.5rem"},"css":""},"password":{"meter":{"background":"{content.border.color}","borderRadius":"{content.border.radius}","height":".75rem"},"icon":{"color":"{form.field.icon.color}"},"overlay":{"background":"{overlay.popover.background}","borderColor":"{overlay.popover.border.color}","borderRadius":"{overlay.popover.border.radius}","color":"{overlay.popover.color}","padding":"{overlay.popover.padding}","shadow":"{overlay.popover.shadow}"},"content":{"gap":"0.5rem"},"colorScheme":{"light":{"strength":{"weakBackground":"{red.500}","mediumBackground":"{amber.500}","strongBackground":"{green.500}"}},"dark":{"strength":{"weakBackground":"{red.400}","mediumBackground":"{amber.400}","strongBackground":"{green.400}"}}},"css":""},"panel":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","borderRadius":"{content.border.radius}"},"header":{"background":"transparent","color":"{text.color}","padding":"1.25rem","borderColor":"{content.border.color}","borderWidth":"0","borderRadius":"0"},"toggleableHeader":{"padding":"0.5rem 1.25rem"},"title":{"fontWeight":"600"},"content":{"padding":"0 1.25rem 1.25rem 1.25rem"},"footer":{"padding":"0 1.25rem 1.25rem 1.25rem"},"css":""},"panelmenu":{"root":{"gap":"0","transitionDuration":"{transition.duration}"},"panel":{"background":"{content.background}","borderColor":"{content.border.color}","borderWidth":"0","color":"{content.color}","padding":"0","borderRadius":"0","first":{"borderWidth":"0","topBorderRadius":"{content.border.radius}"},"last":{"borderWidth":"0","bottomBorderRadius":"{content.border.radius}"}},"item":{"focusBackground":"{navigation.item.focus.background}","color":"{navigation.item.color}","focusColor":"{navigation.item.focus.color}","gap":"0.5rem","padding":"{navigation.item.padding}","borderRadius":"{content.border.radius}","icon":{"color":"{navigation.item.icon.color}","focusColor":"{navigation.item.icon.focus.color}"}},"submenu":{"indent":"1rem"},"submenuIcon":{"color":"{navigation.submenu.icon.color}","focusColor":"{navigation.submenu.icon.focus.color}"},"css":"\\n.p-panelmenu-panel {\\n    box-shadow: 0 0 0 1px dt('panelmenu.panel.border.color');\\n    transition: margin dt('panelmenu.transition.duration');\\n}\\n\\n.p-panelmenu-panel:has(.p-panelmenu-header-active) {\\n    margin: 1rem 0;\\n}\\n\\n.p-panelmenu-panel:first-child {\\n    border-top-left-radius: dt('content.border.radius');\\n    border-top-right-radius: dt('content.border.radius');\\n    margin-top: 0;\\n}\\n\\n.p-panelmenu-panel:last-child {\\n    border-bottom-left-radius: dt('content.border.radius');\\n    border-bottom-right-radius: dt('content.border.radius');\\n    margin-bottom: 0;\\n}\\n\\n.p-accordionpanel:not(.p-disabled) .p-accordionheader:focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n"},"picklist":{"root":{"gap":"1.125rem"},"controls":{"gap":"0.5rem"},"css":""},"progressbar":{"root":{"background":"{content.border.color}","borderRadius":"{content.border.radius}","height":"1rem"},"value":{"background":"{primary.color}"},"label":{"color":"{primary.contrast.color}","fontSize":"0.75rem","fontWeight":"600"},"css":""},"progressspinner":{"colorScheme":{"light":{"root":{"colorOne":"{red.500}","colorTwo":"{blue.500}","colorThree":"{green.500}","colorFour":"{yellow.500}"}},"dark":{"root":{"colorOne":"{red.400}","colorTwo":"{blue.400}","colorThree":"{green.400}","colorFour":"{yellow.400}"}}},"css":""},"radiobutton":{"root":{"width":"20px","height":"20px","background":"{form.field.background}","checkedBackground":"{primary.contrast.color}","checkedHoverBackground":"{primary.contrast.color}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","checkedBorderColor":"{primary.color}","checkedHoverBorderColor":"{primary.color}","checkedFocusBorderColor":"{primary.color}","checkedDisabledBorderColor":"{form.field.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","shadow":"{form.field.shadow}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"},"transitionDuration":"{form.field.transition.duration}","sm":{"width":"16px","height":"16px"},"lg":{"width":"24px","height":"24px"}},"icon":{"size":"10px","checkedColor":"{primary.color}","checkedHoverColor":"{primary.color}","disabledColor":"{form.field.disabled.color}","sm":{"size":"8px"},"lg":{"size":"12px"}}},"rating":{"root":{"gap":"0.5rem","transitionDuration":"{transition.duration}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"icon":{"size":"1.125rem","color":"{text.muted.color}","hoverColor":"{primary.color}","activeColor":"{primary.color}"},"css":"\\n.p-rating:not(.p-disabled):not(.p-readonly) .p-rating-option:hover {\\n    background: color-mix(in srgb, dt('rating.icon.color'), transparent 96%);\\n    box-shadow: 0 0 1px 8px color-mix(in srgb, dt('rating.icon.color'), transparent 96%);\\n}\\n\\n.p-rating:not(.p-disabled):not(.p-readonly) .p-rating-option-active:hover {\\n    background: color-mix(in srgb, dt('rating.icon.active.color'), transparent 92%);\\n    box-shadow: 0 0 1px 8px color-mix(in srgb, dt('rating.icon.active.color'), transparent 92%);\\n}\\n\\n.p-rating-option.p-focus-visible {\\n    background: color-mix(in srgb, dt('rating.icon.active.color'), transparent 84%);\\n    box-shadow: 0 0 1px 8px color-mix(in srgb, dt('rating.icon.active.color'), transparent 84%);\\n}\\n"},"ripple":{"colorScheme":{"light":{"root":{"background":"rgba(0,0,0,0.1)"}},"dark":{"root":{"background":"rgba(255,255,255,0.3)"}}},"css":""},"scrollpanel":{"root":{"transitionDuration":"{transition.duration}"},"bar":{"size":"9px","borderRadius":"{border.radius.sm}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"colorScheme":{"light":{"bar":{"background":"{surface.200}"}},"dark":{"bar":{"background":"{surface.700}"}}},"css":""},"select":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledHoverBackground":"{form.field.filled.hover.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","invalidPlaceholderColor":"{form.field.invalid.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}","sm":{"fontSize":"{form.field.sm.font.size}","paddingX":"{form.field.sm.padding.x}","paddingY":"{form.field.sm.padding.y}"},"lg":{"fontSize":"{form.field.lg.font.size}","paddingX":"{form.field.lg.padding.x}","paddingY":"{form.field.lg.padding.y}"}},"dropdown":{"width":"2.5rem","color":"{form.field.icon.color}"},"overlay":{"background":"{overlay.select.background}","borderColor":"{overlay.select.border.color}","borderRadius":"{overlay.select.border.radius}","color":"{overlay.select.color}","shadow":"{overlay.select.shadow}"},"list":{"padding":"{list.padding}","gap":"{list.gap}","header":{"padding":"{list.header.padding}"}},"option":{"focusBackground":"{list.option.focus.background}","selectedBackground":"{list.option.selected.background}","selectedFocusBackground":"{list.option.selected.focus.background}","color":"{list.option.color}","focusColor":"{list.option.focus.color}","selectedColor":"{list.option.selected.color}","selectedFocusColor":"{list.option.selected.focus.color}","padding":"{list.option.padding}","borderRadius":"{list.option.border.radius}"},"optionGroup":{"background":"{list.option.group.background}","color":"{list.option.group.color}","fontWeight":"{list.option.group.font.weight}","padding":"{list.option.group.padding}"},"clearIcon":{"color":"{form.field.icon.color}"},"checkmark":{"color":"{list.option.color}","gutterStart":"-0.375rem","gutterEnd":"0.375rem"},"emptyMessage":{"padding":"{list.option.padding}"},"css":"\\n.p-select.p-variant-filled {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border: 1px solid transparent;\\n    background: dt('select.filled.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.border.color'), dt('select.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\\n}\\n\\n.p-select.p-variant-filled:not(.p-disabled):hover {\\n    background: dt('select.filled.hover.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.hover.border.color'), dt('select.hover.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-select.p-variant-filled:not(.p-disabled).p-focus {\\n    outline: 0 none;\\n    background: dt('select.filled.focus.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.border.color'), dt('select.border.color'));\\n    background-size: 100% 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-select.p-variant-filled:not(.p-disabled).p-focus:hover {\\n    background-image: linear-gradient(to bottom, dt('select.focus.border.color'), dt('select.focus.border.color')), linear-gradient(to bottom, dt('select.hover.border.color'), dt('select.hover.border.color'));\\n}\\n\\n.p-select.p-variant-filled.p-invalid {\\n    background-image: linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color')), linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color'));\\n}\\n\\n.p-select.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {\\n    background-image: linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color')), linear-gradient(to bottom, dt('select.invalid.border.color'), dt('select.invalid.border.color'));\\n}\\n\\n.p-select-option {\\n    transition: none;\\n}\\n"},"selectbutton":{"root":{"borderRadius":"{form.field.border.radius}"},"colorScheme":{"light":{"root":{"invalidBorderColor":"{form.field.invalid.border.color}"}},"dark":{"root":{"invalidBorderColor":"{form.field.invalid.border.color}"}}},"css":""},"skeleton":{"root":{"borderRadius":"{content.border.radius}"},"colorScheme":{"light":{"root":{"background":"{surface.200}","animationBackground":"rgba(255,255,255,0.4)"}},"dark":{"root":{"background":"rgba(255, 255, 255, 0.06)","animationBackground":"rgba(255, 255, 255, 0.04)"}}},"css":""},"slider":{"root":{"transitionDuration":"{transition.duration}"},"track":{"background":"{content.border.color}","borderRadius":"{border.radius.xs}","size":"2px"},"range":{"background":"{primary.color}"},"handle":{"width":"18px","height":"18px","borderRadius":"50%","background":"{primary.color}","hoverBackground":"{primary.color}","content":{"borderRadius":"50%","background":"{primary.color}","hoverBackground":"{primary.color}","width":"18px","height":"18px","shadow":"0px 2px 1px -1px rgba(0, 0, 0, .2), 0px 1px 1px 0px rgba(0, 0, 0, .14), 0px 1px 3px 0px rgba(0, 0, 0, .12)"},"focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"css":"\\n.p-slider-handle {\\n    transition: box-shadow dt('slider.transition.duration');\\n}\\n\\n.p-slider:not(.p-disabled) .p-slider-handle:hover {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('slider.handle.background'), transparent 92%);\\n}\\n\\n.p-slider-handle:focus-visible,\\n.p-slider:not(.p-disabled) .p-slider-handle:focus:hover {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('slider.handle.background'), transparent 84%);\\n}\\n"},"speeddial":{"root":{"gap":"0.5rem","transitionDuration":"{transition.duration}"},"css":""},"splitter":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","transitionDuration":"{transition.duration}"},"gutter":{"background":"{content.border.color}"},"handle":{"size":"24px","background":"transparent","borderRadius":"{content.border.radius}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"css":""},"splitbutton":{"root":{"borderRadius":"{form.field.border.radius}","roundedBorderRadius":"2rem","raisedShadow":"0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12)"},"css":""},"stepper":{"root":{"transitionDuration":"{transition.duration}"},"separator":{"background":"{content.border.color}","activeBackground":"{primary.color}","margin":"0 0 0 1.625rem","size":"2px"},"step":{"padding":"0.5rem","gap":"1rem"},"stepHeader":{"padding":"0.75rem 1rem","borderRadius":"{content.border.radius}","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"},"gap":"0.5rem"},"stepTitle":{"color":"{text.muted.color}","activeColor":"{text.color}","fontWeight":"500"},"stepNumber":{"activeBackground":"{primary.color}","activeBorderColor":"{primary.color}","activeColor":"{primary.contrast.color}","size":"2rem","fontSize":"1.143rem","fontWeight":"500","borderRadius":"50%","shadow":"none"},"steppanels":{"padding":"0.875rem 0.5rem 1.125rem 0.5rem"},"steppanel":{"background":"{content.background}","color":"{content.color}","padding":"0","indent":"1rem"},"colorScheme":{"light":{"stepNumber":{"background":"{surface.400}","borderColor":"{surface.400}","color":"{surface.0}"}},"dark":{"stepNumber":{"background":"{surface.200}","borderColor":"{surface.200}","color":"{surface.900}"}}},"css":"\\n.p-step-header:focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n"},"steps":{"root":{"transitionDuration":"{transition.duration}"},"separator":{"background":"{content.border.color}"},"itemLink":{"borderRadius":"{content.border.radius}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"},"gap":"0.5rem"},"itemLabel":{"color":"{text.muted.color}","activeColor":"{primary.color}","fontWeight":"500"},"itemNumber":{"background":"{content.background}","activeBackground":"{content.background}","borderColor":"{content.border.color}","activeBorderColor":"{content.border.color}","color":"{text.muted.color}","activeColor":"{primary.color}","size":"2rem","fontSize":"1.143rem","fontWeight":"500","borderRadius":"50%","shadow":"0px 0.5px 0px 0px rgba(0, 0, 0, 0.06), 0px 1px 1px 0px rgba(0, 0, 0, 0.12)"},"css":""},"tabmenu":{"root":{"transitionDuration":"{transition.duration}"},"tablist":{"borderWidth":"0 0 1px 0","background":"{content.background}","borderColor":"{content.border.color}"},"item":{"background":"transparent","hoverBackground":"transparent","activeBackground":"transparent","borderWidth":"0 0 1px 0","borderColor":"{content.border.color}","hoverBorderColor":"{content.border.color}","activeBorderColor":"{primary.color}","color":"{text.muted.color}","hoverColor":"{text.color}","activeColor":"{primary.color}","padding":"0.25rem 0.5rem","fontWeight":"600","margin":"0 0 -1px 0","gap":"0.5rem","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"itemIcon":{"color":"{text.muted.color}","hoverColor":"{text.color}","activeColor":"{primary.color}"},"activeBar":{"height":"1px","bottom":"-1px","background":"{primary.color}"},"css":""},"tabs":{"root":{"transitionDuration":"{transition.duration}"},"tablist":{"borderWidth":"0 0 1px 0","background":"{content.background}","borderColor":"{content.border.color}"},"tab":{"background":"transparent","hoverBackground":"{content.hover.background}","activeBackground":"transparent","borderWidth":"0 0 1px 0","borderColor":"{content.border.color}","hoverBorderColor":"{content.border.color}","activeBorderColor":"{primary.color}","color":"{text.color}","hoverColor":"{text.color}","activeColor":"{primary.color}","padding":"0.25rem 0.5rem","fontWeight":"600","margin":"0 0 -1px 0","gap":"0.5rem","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"tabpanel":{"background":"{content.background}","color":"{content.color}","padding":"1.25rem 1.25rem 1.25rem 1.25rem","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"navButton":{"background":"{content.background}","color":"{text.muted.color}","hoverColor":"{text.color}","width":"3rem","shadow":"none","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"}},"activeBar":{"height":"2px","bottom":"-1px","background":"{primary.color}"},"css":"\\n.p-tabs-scrollable .p-tab {\\n    flex-grow: 0\\n}\\n\\n.p-tab-active {\\n    --p-ripple-background: color-mix(in srgb, dt('primary.color'), transparent 90%);\\n}\\n\\n.p-tab:not(.p-disabled):focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n\\n.p-tablist-nav-button:focus-visible {\\n    background: dt('navigation.item.active.background');\\n}\\n"},"tabview":{"root":{"transitionDuration":"{transition.duration}"},"tabList":{"background":"{content.background}","borderColor":"{content.border.color}"},"tab":{"borderColor":"{content.border.color}","activeBorderColor":"{primary.color}","color":"{text.muted.color}","hoverColor":"{text.color}","activeColor":"{primary.color}"},"tabPanel":{"background":"{content.background}","color":"{content.color}"},"navButton":{"background":"{content.background}","color":"{text.muted.color}","hoverColor":"{text.color}"},"colorScheme":{"light":{"navButton":{"shadow":"0px 0px 10px 50px rgba(255, 255, 255, 0.6)"}},"dark":{"navButton":{"shadow":"0px 0px 10px 50px color-mix(in srgb, {content.background}, transparent 50%)"}}},"css":""},"textarea":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledHoverBackground":"{form.field.filled.hover.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","invalidPlaceholderColor":"{form.field.invalid.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}","sm":{"fontSize":"{form.field.sm.font.size}","paddingX":"{form.field.sm.padding.x}","paddingY":"{form.field.sm.padding.y}"},"lg":{"fontSize":"{form.field.lg.font.size}","paddingX":"{form.field.lg.padding.x}","paddingY":"{form.field.lg.padding.y}"}},"css":"\\n.p-textarea.p-variant-filled {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border: 1px solid transparent;\\n    background: dt('textarea.filled.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.border.color'), dt('textarea.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\\n}\\n\\n.p-textarea.p-variant-filled:enabled:hover {\\n    background: dt('textarea.filled.hover.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.hover.border.color'), dt('textarea.hover.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-textarea.p-variant-filled:enabled:focus {\\n    outline: 0 none;\\n    background: dt('textarea.filled.focus.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.border.color'), dt('textarea.border.color'));\\n    background-size: 100% 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-textarea.p-variant-filled:enabled:hover:focus {\\n    background-image: linear-gradient(to bottom, dt('textarea.focus.border.color'), dt('textarea.focus.border.color')), linear-gradient(to bottom, dt('textarea.hover.border.color'), dt('textarea.hover.border.color'));\\n}\\n\\n.p-textarea.p-variant-filled.p-invalid {\\n    background-image: linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color')), linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color'));\\n}\\n\\n.p-textarea.p-variant-filled.p-invalid:enabled:focus {\\n    background-image: linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color')), linear-gradient(to bottom, dt('textarea.invalid.border.color'), dt('textarea.invalid.border.color'));\\n}\\n"},"tieredmenu":{"root":{"background":"{content.background}","borderColor":"{content.border.color}","color":"{content.color}","borderRadius":"{content.border.radius}","shadow":"{overlay.navigation.shadow}","transitionDuration":"{transition.duration}"},"list":{"padding":"{navigation.list.padding}","gap":"{navigation.list.gap}"},"item":{"focusBackground":"{navigation.item.focus.background}","activeBackground":"{navigation.item.active.background}","color":"{navigation.item.color}","focusColor":"{navigation.item.focus.color}","activeColor":"{navigation.item.active.color}","padding":"{navigation.item.padding}","borderRadius":"{navigation.item.border.radius}","gap":"{navigation.item.gap}","icon":{"color":"{navigation.item.icon.color}","focusColor":"{navigation.item.icon.focus.color}","activeColor":"{navigation.item.icon.active.color}"}},"submenu":{"mobileIndent":"1rem"},"submenuIcon":{"size":"{navigation.submenu.icon.size}","color":"{navigation.submenu.icon.color}","focusColor":"{navigation.submenu.icon.focus.color}","activeColor":"{navigation.submenu.icon.active.color}"},"separator":{"borderColor":"{content.border.color}"},"css":"\\n.p-tieredmenu-overlay {\\n    border-color: transparent;\\n}\\n"},"tag":{"root":{"fontSize":"0.875rem","fontWeight":"700","padding":"0.25rem 0.5rem","gap":"0.25rem","borderRadius":"{content.border.radius}","roundedBorderRadius":"{border.radius.xl}"},"icon":{"size":"0.75rem"},"colorScheme":{"light":{"primary":{"background":"{primary.color}","color":"{primary.contrast.color}"},"secondary":{"background":"{surface.100}","color":"{surface.600}"},"success":{"background":"{green.500}","color":"{surface.0}"},"info":{"background":"{sky.500}","color":"{surface.0}"},"warn":{"background":"{orange.500}","color":"{surface.0}"},"danger":{"background":"{red.500}","color":"{surface.0}"},"contrast":{"background":"{surface.950}","color":"{surface.0}"}},"dark":{"primary":{"background":"{primary.color}","color":"{primary.contrast.color}"},"secondary":{"background":"{surface.800}","color":"{surface.300}"},"success":{"background":"{green.400}","color":"{green.950}"},"info":{"background":"{sky.400}","color":"{sky.950}"},"warn":{"background":"{orange.400}","color":"{orange.950}"},"danger":{"background":"{red.400}","color":"{red.950}"},"contrast":{"background":"{surface.0}","color":"{surface.950}"}}},"css":""},"terminal":{"root":{"background":"{form.field.background}","borderColor":"{form.field.border.color}","color":"{form.field.color}","height":"18rem","padding":"{form.field.padding.y} {form.field.padding.x}","borderRadius":"{form.field.border.radius}"},"prompt":{"gap":"0.25rem"},"commandResponse":{"margin":"2px 0"},"css":""},"timeline":{"event":{"minHeight":"5rem"},"horizontal":{"eventContent":{"padding":"1rem 0"}},"vertical":{"eventContent":{"padding":"0 1rem"}},"eventMarker":{"size":"1.5rem","borderRadius":"50%","borderWidth":"2px","background":"{primary.color}","content":{"borderRadius":"50%","size":"0","background":"{primary.color}","insetShadow":"none"}},"eventConnector":{"color":"{content.border.color}","size":"2px"},"colorScheme":{"light":{"eventMarker":{"borderColor":"{surface.0}"}},"dark":{"eventMarker":{"borderColor":"{surface.900}"}}},"css":""},"togglebutton":{"root":{"padding":"0.25rem 25rem","borderRadius":"{form.field.border.radius}","gap":"0.5rem","fontWeight":"500","background":"{form.field.background}","borderColor":"{form.field.border.color}","color":"{form.field.color}","hoverColor":"{form.field.color}","checkedColor":"{form.field.color}","checkedBorderColor":"{form.field.border.color}","disabledBackground":"{form.field.disabled.background}","disabledBorderColor":"{form.field.disabled.background}","disabledColor":"{form.field.disabled.color}","invalidBorderColor":"{form.field.invalid.border.color}","focusRing":{"width":"0","style":"none","offset":"0","color":"unset","shadow":"none"},"transitionDuration":"{form.field.transition.duration}","sm":{"fontSize":"{form.field.sm.font.size}","padding":"0.25rem 0.25rem"},"lg":{"fontSize":"{form.field.lg.font.size}","padding":"0.25rem 0.25rem"}},"icon":{"color":"{text.muted.color}","hoverColor":"{text.muted.color}","checkedColor":"{text.muted.color}","disabledColor":"{form.field.disabled.color}"},"content":{"checkedBackground":"transparent","checkedShadow":"none","padding":"0","borderRadius":"0","sm":{"padding":"0"},"lg":{"padding":"0"}},"colorScheme":{"light":{"root":{"hoverBackground":"{surface.100}","checkedBackground":"{surface.200}"}},"dark":{"root":{"hoverBackground":"{surface.800}","checkedBackground":"{surface.700}"}}},"css":"\\n.p-togglebutton:focus-visible {\\n    background: dt('togglebutton.hover.background');\\n}\\n"},"toggleswitch":{"root":{"width":"2.75rem","height":"1rem","borderRadius":"30px","gap":"0px","shadow":"none","focusRing":{"width":"0","style":"none","color":"unset","offset":"0","shadow":"none"},"borderWidth":"1px","borderColor":"transparent","hoverBorderColor":"transparent","checkedBorderColor":"transparent","checkedHoverBorderColor":"transparent","invalidBorderColor":"{form.field.invalid.border.color}","transitionDuration":"{form.field.transition.duration}","slideDuration":"0.2s"},"handle":{"borderRadius":"50%","size":"1.5rem"},"colorScheme":{"light":{"root":{"background":"{surface.300}","disabledBackground":"{surface.400}","hoverBackground":"{surface.300}","checkedBackground":"{primary.200}","checkedHoverBackground":"{primary.200}"},"handle":{"background":"{surface.0}","disabledBackground":"{surface.200}","hoverBackground":"{surface.0}","checkedBackground":"{primary.color}","checkedHoverBackground":"{primary.color}","color":"{text.muted.color}","hoverColor":"{text.color}","checkedColor":"{primary.contrast.color}","checkedHoverColor":"{primary.contrast.color}"}},"dark":{"root":{"background":"{surface.700}","disabledBackground":"{surface.600}","hoverBackground":"{surface.700}","checkedBackground":"{primary.color}","checkedHoverBackground":"{primary.color}"},"handle":{"background":"{surface.400}","disabledBackground":"{surface.500}","hoverBackground":"{surface.300}","checkedBackground":"{primary.200}","checkedHoverBackground":"{primary.200}","color":"{surface.800}","hoverColor":"{surface.900}","checkedColor":"{primary.contrast.color}","checkedHoverColor":"{primary.contrast.color}"}}},"css":"\\n.p-toggleswitch-handle {\\n    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover) .p-toggleswitch-handle {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 96%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:focus-visible) .p-toggleswitch-handle {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('text.color'), transparent 88%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:hover).p-toggleswitch-checked .p-toggleswitch-handle {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('toggleswitch.handle.checked.background'), transparent 92%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n}\\n\\n.p-toggleswitch:not(.p-disabled):has(.p-toggleswitch-input:focus-visible).p-toggleswitch-checked .p-toggleswitch-handle {\\n    box-shadow: 0 0 1px 10px color-mix(in srgb, dt('toggleswitch.handle.checked.background'), transparent 84%), 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\\n}\\n"},"tree":{"root":{"background":"{content.background}","color":"{content.color}","padding":"1rem","gap":"2px","indent":"2rem","transitionDuration":"{transition.duration}"},"node":{"padding":"0.5rem 0.75rem","borderRadius":"{border.radius.xs}","hoverBackground":"{content.hover.background}","selectedBackground":"{highlight.background}","color":"{text.color}","hoverColor":"{text.hover.color}","selectedColor":"{highlight.color}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"-1px","shadow":"{focus.ring.shadow}"},"gap":"0.5rem"},"nodeIcon":{"color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}","selectedColor":"{highlight.color}"},"nodeToggleButton":{"borderRadius":"50%","size":"2rem","hoverBackground":"{content.hover.background}","selectedHoverBackground":"{content.background}","color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}","selectedHoverColor":"{primary.color}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"loadingIcon":{"size":"2rem"},"filter":{"margin":"0 0 0.75rem 0"},"css":"\\n.p-tree-node-content {\\n    transition: none;\\n}\\n"},"treeselect":{"root":{"background":"{form.field.background}","disabledBackground":"{form.field.disabled.background}","filledBackground":"{form.field.filled.background}","filledHoverBackground":"{form.field.filled.hover.background}","filledFocusBackground":"{form.field.filled.focus.background}","borderColor":"{form.field.border.color}","hoverBorderColor":"{form.field.hover.border.color}","focusBorderColor":"{form.field.focus.border.color}","invalidBorderColor":"{form.field.invalid.border.color}","color":"{form.field.color}","disabledColor":"{form.field.disabled.color}","placeholderColor":"{form.field.placeholder.color}","invalidPlaceholderColor":"{form.field.invalid.placeholder.color}","shadow":"{form.field.shadow}","paddingX":"{form.field.padding.x}","paddingY":"{form.field.padding.y}","borderRadius":"{form.field.border.radius}","focusRing":{"width":"{form.field.focus.ring.width}","style":"{form.field.focus.ring.style}","color":"{form.field.focus.ring.color}","offset":"{form.field.focus.ring.offset}","shadow":"{form.field.focus.ring.shadow}"},"transitionDuration":"{form.field.transition.duration}","sm":{"fontSize":"{form.field.sm.font.size}","paddingX":"{form.field.sm.padding.x}","paddingY":"{form.field.sm.padding.y}"},"lg":{"fontSize":"{form.field.lg.font.size}","paddingX":"{form.field.lg.padding.x}","paddingY":"{form.field.lg.padding.y}"}},"dropdown":{"width":"2.5rem","color":"{form.field.icon.color}"},"overlay":{"background":"{overlay.select.background}","borderColor":"{overlay.select.border.color}","borderRadius":"{overlay.select.border.radius}","color":"{overlay.select.color}","shadow":"{overlay.select.shadow}"},"tree":{"padding":"{list.padding}"},"emptyMessage":{"padding":"{list.option.padding}"},"chip":{"borderRadius":"{border.radius.sm}"},"clearIcon":{"color":"{form.field.icon.color}"},"css":"\\n.p-treeselect.p-variant-filled {\\n    border-bottom-left-radius: 0;\\n    border-bottom-right-radius: 0;\\n    border: 1px solid transparent;\\n    background: dt('treeselect.filled.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.border.color'), dt('treeselect.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    transition: background-size 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);\\n}\\n\\n.p-treeselect.p-variant-filled:not(.p-disabled):hover {\\n    background: dt('treeselect.filled.hover.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.hover.border.color'), dt('treeselect.hover.border.color'));\\n    background-size: 0 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-treeselect.p-variant-filled:not(.p-disabled).p-focus {\\n    outline: 0 none;\\n    background: dt('treeselect.filled.focus.background') no-repeat;\\n    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.border.color'), dt('treeselect.border.color'));\\n    background-size: 100% 2px, 100% 1px;\\n    background-position: 50% 100%, 50% 100%;\\n    background-origin: border-box;\\n    border-color: transparent;\\n}\\n\\n.p-treeselect.p-variant-filled:not(.p-disabled).p-focus:hover {\\n    background-image: linear-gradient(to bottom, dt('treeselect.focus.border.color'), dt('treeselect.focus.border.color')), linear-gradient(to bottom, dt('treeselect.hover.border.color'), dt('treeselect.hover.border.color'));\\n}\\n\\n.p-treeselect.p-variant-filled.p-invalid {\\n    background-image: linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color')), linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color'));\\n}\\n\\n.p-treeselect.p-variant-filled.p-invalid:not(.p-disabled).p-focus  {\\n    background-image: linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color')), linear-gradient(to bottom, dt('treeselect.invalid.border.color'), dt('treeselect.invalid.border.color'));\\n}\\n"},"treetable":{"root":{"transitionDuration":"{transition.duration}"},"header":{"background":"{content.background}","borderColor":"{treetable.border.color}","color":"{content.color}","borderWidth":"0 0 1px 0","padding":"0.75rem 1rem"},"headerCell":{"background":"{content.background}","hoverBackground":"{content.hover.background}","selectedBackground":"{highlight.background}","borderColor":"{treetable.border.color}","color":"{content.color}","hoverColor":"{content.hover.color}","selectedColor":"{highlight.color}","gap":"0.5rem","padding":"0.75rem 1rem","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"-1px","shadow":"{focus.ring.shadow}"}},"columnTitle":{"fontWeight":"600"},"row":{"background":"{content.background}","hoverBackground":"{content.hover.background}","selectedBackground":"{highlight.background}","color":"{content.color}","hoverColor":"{content.hover.color}","selectedColor":"{highlight.color}","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"-1px","shadow":"{focus.ring.shadow}"}},"bodyCell":{"borderColor":"{treetable.border.color}","padding":"0.75rem 1rem","gap":"0.5rem"},"footerCell":{"background":"{content.background}","borderColor":"{treetable.border.color}","color":"{content.color}","padding":"0.75rem 1rem"},"columnFooter":{"fontWeight":"600"},"footer":{"background":"{content.background}","borderColor":"{treetable.border.color}","color":"{content.color}","borderWidth":"0 0 1px 0","padding":"0.75rem 1rem"},"columnResizer":{"width":"0.5rem"},"resizeIndicator":{"width":"1px","color":"{primary.color}"},"sortIcon":{"color":"{text.muted.color}","hoverColor":"{text.hover.muted.color}","size":"0.875rem"},"loadingIcon":{"size":"2rem"},"nodeToggleButton":{"hoverBackground":"{content.hover.background}","selectedHoverBackground":"{content.background}","color":"{text.muted.color}","hoverColor":"{text.color}","selectedHoverColor":"{primary.color}","size":"1.75rem","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","color":"{focus.ring.color}","offset":"{focus.ring.offset}","shadow":"{focus.ring.shadow}"}},"paginatorTop":{"borderColor":"{content.border.color}","borderWidth":"0 0 1px 0"},"paginatorBottom":{"borderColor":"{content.border.color}","borderWidth":"0 0 1px 0"},"colorScheme":{"light":{"root":{"borderColor":"{content.border.color}"},"bodyCell":{"selectedBorderColor":"{primary.100}"}},"dark":{"root":{"borderColor":"{surface.800}"},"bodyCell":{"selectedBorderColor":"{primary.900}"}}}},"toast":{"root":{"width":"25rem","borderRadius":"{content.border.radius}","borderWidth":"0","transitionDuration":"{transition.duration}"},"icon":{"size":"1.25rem"},"content":{"padding":"{overlay.popover.padding}","gap":"0.5rem"},"text":{"gap":"0.5rem"},"summary":{"fontWeight":"500","fontSize":"1rem"},"detail":{"fontWeight":"500","fontSize":"0.875rem"},"closeButton":{"width":"2rem","height":"2rem","borderRadius":"50%","focusRing":{"width":"{focus.ring.width}","style":"{focus.ring.style}","offset":"{focus.ring.offset}"}},"closeIcon":{"size":"1rem"},"colorScheme":{"light":{"root":{"blur":"0"},"info":{"background":"{blue.50}","borderColor":"{blue.200}","color":"{blue.600}","detailColor":"{surface.700}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{blue.100}","focusRing":{"color":"{blue.600}","shadow":"none"}}},"success":{"background":"{green.50}","borderColor":"{green.200}","color":"{green.600}","detailColor":"{surface.700}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{green.100}","focusRing":{"color":"{green.600}","shadow":"none"}}},"warn":{"background":"{yellow.50}","borderColor":"{yellow.200}","color":"{yellow.900}","detailColor":"{surface.700}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{yellow.100}","focusRing":{"color":"{yellow.600}","shadow":"none"}}},"error":{"background":"{red.50}","borderColor":"{red.200}","color":"{red.600}","detailColor":"{surface.700}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{red.100}","focusRing":{"color":"{red.600}","shadow":"none"}}},"secondary":{"background":"{surface.100}","borderColor":"{surface.200}","color":"{surface.600}","detailColor":"{surface.700}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{surface.200}","focusRing":{"color":"{surface.600}","shadow":"none"}}},"contrast":{"background":"{surface.900}","borderColor":"{surface.950}","color":"{surface.50}","detailColor":"{surface.0}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{surface.800}","focusRing":{"color":"{surface.50}","shadow":"none"}}}},"dark":{"root":{"blur":"10px"},"info":{"background":"color-mix(in srgb, {blue.500}, transparent 36%)","borderColor":"color-mix(in srgb, {blue.700}, transparent 64%)","color":"{surface.0}","detailColor":"{blue.100}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{blue.500}","shadow":"none"}}},"success":{"background":"color-mix(in srgb, {green.500}, transparent 36%)","borderColor":"color-mix(in srgb, {green.700}, transparent 64%)","color":"{surface.0}","detailColor":"{green.100}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{green.500}","shadow":"none"}}},"warn":{"background":"color-mix(in srgb, {yellow.500}, transparent 36%)","borderColor":"color-mix(in srgb, {yellow.700}, transparent 64%)","color":"{surface.0}","detailColor":"{yellow.50}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{yellow.500}","shadow":"none"}}},"error":{"background":"color-mix(in srgb, {red.500}, transparent 36%)","borderColor":"color-mix(in srgb, {red.700}, transparent 64%)","color":"{surface.0}","detailColor":"{red.100}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"rgba(255, 255, 255, 0.05)","focusRing":{"color":"{red.500}","shadow":"none"}}},"secondary":{"background":"{surface.800}","borderColor":"{surface.700}","color":"{surface.300}","detailColor":"{surface.0}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{surface.700}","focusRing":{"color":"{surface.300}","shadow":"none"}}},"contrast":{"background":"{surface.0}","borderColor":"{surface.100}","color":"{surface.950}","detailColor":"{surface.950}","shadow":"0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)","closeButton":{"hoverBackground":"{surface.100}","focusRing":{"color":"{surface.950}","shadow":"none"}}}}},"css":""},"toolbar":{"root":{"color":"{content.color}","borderRadius":"{content.border.radius}","gap":"0.5rem","padding":"1rem"},"colorScheme":{"light":{"root":{"background":"{surface.100}","borderColor":"{surface.100}"}},"dark":{"root":{"background":"{surface.800}","borderColor":"{surface.800}"}}},"css":""},"tooltip":{"root":{"background":"{surface.600}","color":"{surface.0}","maxWidth":"12.5rem","gutter":"0.25rem","shadow":"{overlay.popover.shadow}","padding":"0.5rem 0.75rem","borderRadius":"{overlay.popover.border.radius}"},"css":""},"virtualscroller":{"loader":{"mask":{"background":"{content.background}","color":"{text.muted.color}"},"icon":{"size":"2rem"}},"css":""}}`), xE = {
  primitive: kE,
  semantic: wE,
  components: CE
};
var SE = `
    .p-tabs {
        display: flex;
        flex-direction: column;
    }

    .p-tablist {
        display: flex;
        position: relative;
        overflow: hidden;
    }

    .p-tablist-viewport {
        overflow-x: auto;
        overflow-y: hidden;
        scroll-behavior: smooth;
        scrollbar-width: none;
        overscroll-behavior: contain auto;
    }

    .p-tablist-viewport::-webkit-scrollbar {
        display: none;
    }

    .p-tablist-tab-list {
        position: relative;
        display: flex;
        background: dt('tabs.tablist.background');
        border-style: solid;
        border-color: dt('tabs.tablist.border.color');
        border-width: dt('tabs.tablist.border.width');
    }

    .p-tablist-content {
        flex-grow: 1;
    }

    .p-tablist-nav-button {
        all: unset;
        position: absolute !important;
        flex-shrink: 0;
        inset-block-start: 0;
        z-index: 2;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background: dt('tabs.nav.button.background');
        color: dt('tabs.nav.button.color');
        width: dt('tabs.nav.button.width');
        transition:
            color dt('tabs.transition.duration'),
            outline-color dt('tabs.transition.duration'),
            box-shadow dt('tabs.transition.duration');
        box-shadow: dt('tabs.nav.button.shadow');
        outline-color: transparent;
        cursor: pointer;
    }

    .p-tablist-nav-button:focus-visible {
        z-index: 1;
        box-shadow: dt('tabs.nav.button.focus.ring.shadow');
        outline: dt('tabs.nav.button.focus.ring.width') dt('tabs.nav.button.focus.ring.style') dt('tabs.nav.button.focus.ring.color');
        outline-offset: dt('tabs.nav.button.focus.ring.offset');
    }

    .p-tablist-nav-button:hover {
        color: dt('tabs.nav.button.hover.color');
    }

    .p-tablist-prev-button {
        inset-inline-start: 0;
    }

    .p-tablist-next-button {
        inset-inline-end: 0;
    }

    .p-tablist-prev-button:dir(rtl),
    .p-tablist-next-button:dir(rtl) {
        transform: rotate(180deg);
    }

    .p-tab {
        flex-shrink: 0;
        cursor: pointer;
        user-select: none;
        position: relative;
        border-style: solid;
        white-space: nowrap;
        gap: dt('tabs.tab.gap');
        background: dt('tabs.tab.background');
        border-width: dt('tabs.tab.border.width');
        border-color: dt('tabs.tab.border.color');
        color: dt('tabs.tab.color');
        padding: dt('tabs.tab.padding');
        font-weight: dt('tabs.tab.font.weight');
        transition:
            background dt('tabs.transition.duration'),
            border-color dt('tabs.transition.duration'),
            color dt('tabs.transition.duration'),
            outline-color dt('tabs.transition.duration'),
            box-shadow dt('tabs.transition.duration');
        margin: dt('tabs.tab.margin');
        outline-color: transparent;
    }

    .p-tab:not(.p-disabled):focus-visible {
        z-index: 1;
        box-shadow: dt('tabs.tab.focus.ring.shadow');
        outline: dt('tabs.tab.focus.ring.width') dt('tabs.tab.focus.ring.style') dt('tabs.tab.focus.ring.color');
        outline-offset: dt('tabs.tab.focus.ring.offset');
    }

    .p-tab:not(.p-tab-active):not(.p-disabled):hover {
        background: dt('tabs.tab.hover.background');
        border-color: dt('tabs.tab.hover.border.color');
        color: dt('tabs.tab.hover.color');
    }

    .p-tab-active {
        background: dt('tabs.tab.active.background');
        border-color: dt('tabs.tab.active.border.color');
        color: dt('tabs.tab.active.color');
    }

    .p-tabpanels {
        background: dt('tabs.tabpanel.background');
        color: dt('tabs.tabpanel.color');
        padding: dt('tabs.tabpanel.padding');
        outline: 0 none;
    }

    .p-tabpanel:focus-visible {
        box-shadow: dt('tabs.tabpanel.focus.ring.shadow');
        outline: dt('tabs.tabpanel.focus.ring.width') dt('tabs.tabpanel.focus.ring.style') dt('tabs.tabpanel.focus.ring.color');
        outline-offset: dt('tabs.tabpanel.focus.ring.offset');
    }

    .p-tablist-active-bar {
        z-index: 1;
        display: block;
        position: absolute;
        inset-block-end: dt('tabs.active.bar.bottom');
        height: dt('tabs.active.bar.height');
        background: dt('tabs.active.bar.background');
        transition: 250ms cubic-bezier(0.35, 0, 0.25, 1);
    }
`, IE = {
  root: function(e) {
    var n = e.props;
    return ["p-tabs p-component", {
      "p-tabs-scrollable": n.scrollable
    }];
  }
}, OE = te.extend({
  name: "tabs",
  style: SE,
  classes: IE
}), PE = {
  name: "BaseTabs",
  extends: ne,
  props: {
    value: {
      type: [String, Number],
      default: void 0
    },
    lazy: {
      type: Boolean,
      default: !1
    },
    scrollable: {
      type: Boolean,
      default: !1
    },
    showNavigators: {
      type: Boolean,
      default: !0
    },
    tabindex: {
      type: Number,
      default: 0
    },
    selectOnFocus: {
      type: Boolean,
      default: !1
    }
  },
  style: OE,
  provide: function() {
    return {
      $pcTabs: this,
      $parentInstance: this
    };
  }
}, Il = {
  name: "Tabs",
  extends: PE,
  inheritAttrs: !1,
  emits: ["update:value"],
  data: function() {
    return {
      d_value: this.value
    };
  },
  watch: {
    value: function(e) {
      this.d_value = e;
    }
  },
  methods: {
    updateValue: function(e) {
      this.d_value !== e && (this.d_value = e, this.$emit("update:value", e));
    },
    isVertical: function() {
      return this.orientation === "vertical";
    }
  }
};
function $E(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root")
  }, t.ptmi("root")), [L(t.$slots, "default")], 16);
}
Il.render = $E;
var Sg = {
  name: "ChevronLeftIcon",
  extends: Ie
};
function TE(t) {
  return ME(t) || EE(t) || BE(t) || RE();
}
function RE() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function BE(t, e) {
  if (t) {
    if (typeof t == "string") return Dd(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Dd(t, e) : void 0;
  }
}
function EE(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function ME(t) {
  if (Array.isArray(t)) return Dd(t);
}
function Dd(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
function AE(t, e, n, o, i, r) {
  return m(), y("svg", k({
    width: "14",
    height: "14",
    viewBox: "0 0 14 14",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, t.pti()), TE(e[0] || (e[0] = [v("path", {
    d: "M9.61296 13C9.50997 13.0005 9.40792 12.9804 9.3128 12.9409C9.21767 12.9014 9.13139 12.8433 9.05902 12.7701L3.83313 7.54416C3.68634 7.39718 3.60388 7.19795 3.60388 6.99022C3.60388 6.78249 3.68634 6.58325 3.83313 6.43628L9.05902 1.21039C9.20762 1.07192 9.40416 0.996539 9.60724 1.00012C9.81032 1.00371 10.0041 1.08597 10.1477 1.22959C10.2913 1.37322 10.3736 1.56698 10.3772 1.77005C10.3808 1.97313 10.3054 2.16968 10.1669 2.31827L5.49496 6.99022L10.1669 11.6622C10.3137 11.8091 10.3962 12.0084 10.3962 12.2161C10.3962 12.4238 10.3137 12.6231 10.1669 12.7701C10.0945 12.8433 10.0083 12.9014 9.91313 12.9409C9.81801 12.9804 9.71596 13.0005 9.61296 13Z",
    fill: "currentColor"
  }, null, -1)])), 16);
}
Sg.render = AE;
var DE = {
  root: "p-tablist",
  content: "p-tablist-content p-tablist-viewport",
  tabList: "p-tablist-tab-list",
  activeBar: "p-tablist-active-bar",
  prevButton: "p-tablist-prev-button p-tablist-nav-button",
  nextButton: "p-tablist-next-button p-tablist-nav-button"
}, LE = te.extend({
  name: "tablist",
  classes: DE
}), zE = {
  name: "BaseTabList",
  extends: ne,
  props: {},
  style: LE,
  provide: function() {
    return {
      $pcTabList: this,
      $parentInstance: this
    };
  }
}, Ol = {
  name: "TabList",
  extends: zE,
  inheritAttrs: !1,
  inject: ["$pcTabs"],
  data: function() {
    return {
      isPrevButtonEnabled: !1,
      isNextButtonEnabled: !0
    };
  },
  resizeObserver: void 0,
  watch: {
    showNavigators: function(e) {
      e ? this.bindResizeObserver() : this.unbindResizeObserver();
    },
    activeValue: {
      flush: "post",
      handler: function() {
        this.updateInkBar();
      }
    }
  },
  mounted: function() {
    var e = this;
    setTimeout(function() {
      e.updateInkBar();
    }, 150), this.showNavigators && (this.updateButtonState(), this.bindResizeObserver());
  },
  updated: function() {
    this.showNavigators && this.updateButtonState();
  },
  beforeUnmount: function() {
    this.unbindResizeObserver();
  },
  methods: {
    onScroll: function(e) {
      this.showNavigators && this.updateButtonState(), e.preventDefault();
    },
    onPrevButtonClick: function() {
      var e = this.$refs.content, n = this.getVisibleButtonWidths(), o = sn(e) - n, i = Math.abs(e.scrollLeft), r = o * 0.8, a = i - r, l = Math.max(a, 0);
      e.scrollLeft = Ja(e) ? -1 * l : l;
    },
    onNextButtonClick: function() {
      var e = this.$refs.content, n = this.getVisibleButtonWidths(), o = sn(e) - n, i = Math.abs(e.scrollLeft), r = o * 0.8, a = i + r, l = e.scrollWidth - o, s = Math.min(a, l);
      e.scrollLeft = Ja(e) ? -1 * s : s;
    },
    bindResizeObserver: function() {
      var e = this;
      this.resizeObserver = new ResizeObserver(function() {
        return e.updateButtonState();
      }), this.resizeObserver.observe(this.$refs.list);
    },
    unbindResizeObserver: function() {
      var e;
      (e = this.resizeObserver) === null || e === void 0 || e.unobserve(this.$refs.list), this.resizeObserver = void 0;
    },
    updateInkBar: function() {
      var e = this.$refs, n = e.content, o = e.inkbar, i = e.tabs;
      if (o) {
        var r = ft(n, '[data-pc-name="tab"][data-p-active="true"]');
        this.$pcTabs.isVertical() ? (o.style.height = er(r) + "px", o.style.top = ln(r).top - ln(i).top + "px") : (o.style.width = pt(r) + "px", o.style.left = ln(r).left - ln(i).left + "px");
      }
    },
    updateButtonState: function() {
      var e = this.$refs, n = e.list, o = e.content, i = o.scrollTop, r = o.scrollWidth, a = o.scrollHeight, l = o.offsetWidth, s = o.offsetHeight, d = Math.abs(o.scrollLeft), c = [sn(o), jn(o)], u = c[0], f = c[1];
      this.$pcTabs.isVertical() ? (this.isPrevButtonEnabled = i !== 0, this.isNextButtonEnabled = n.offsetHeight >= s && parseInt(i) !== a - f) : (this.isPrevButtonEnabled = d !== 0, this.isNextButtonEnabled = n.offsetWidth >= l && parseInt(d) !== r - u);
    },
    getVisibleButtonWidths: function() {
      var e = this.$refs, n = e.prevButton, o = e.nextButton, i = 0;
      return this.showNavigators && (i = ((n == null ? void 0 : n.offsetWidth) || 0) + ((o == null ? void 0 : o.offsetWidth) || 0)), i;
    }
  },
  computed: {
    templates: function() {
      return this.$pcTabs.$slots;
    },
    activeValue: function() {
      return this.$pcTabs.d_value;
    },
    showNavigators: function() {
      return this.$pcTabs.showNavigators;
    },
    prevButtonAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.previous : void 0;
    },
    nextButtonAriaLabel: function() {
      return this.$primevue.config.locale.aria ? this.$primevue.config.locale.aria.next : void 0;
    },
    dataP: function() {
      return Te({
        scrollable: this.$pcTabs.scrollable
      });
    }
  },
  components: {
    ChevronLeftIcon: Sg,
    ChevronRightIcon: ia
  },
  directives: {
    ripple: mt
  }
}, FE = ["data-p"], NE = ["aria-label", "tabindex"], jE = ["data-p"], VE = ["aria-orientation"], _E = ["aria-label", "tabindex"];
function KE(t, e, n, o, i, r) {
  var a = tt("ripple");
  return m(), y("div", k({
    ref: "list",
    class: t.cx("root"),
    "data-p": r.dataP
  }, t.ptmi("root")), [r.showNavigators && i.isPrevButtonEnabled ? We((m(), y("button", k({
    key: 0,
    ref: "prevButton",
    type: "button",
    class: t.cx("prevButton"),
    "aria-label": r.prevButtonAriaLabel,
    tabindex: r.$pcTabs.tabindex,
    onClick: e[0] || (e[0] = function() {
      return r.onPrevButtonClick && r.onPrevButtonClick.apply(r, arguments);
    })
  }, t.ptm("prevButton"), {
    "data-pc-group-section": "navigator"
  }), [(m(), O(q(r.templates.previcon || "ChevronLeftIcon"), k({
    "aria-hidden": "true"
  }, t.ptm("prevIcon")), null, 16))], 16, NE)), [[a]]) : M("", !0), v("div", k({
    ref: "content",
    class: t.cx("content"),
    onScroll: e[1] || (e[1] = function() {
      return r.onScroll && r.onScroll.apply(r, arguments);
    }),
    "data-p": r.dataP
  }, t.ptm("content")), [v("div", k({
    ref: "tabs",
    class: t.cx("tabList"),
    role: "tablist",
    "aria-orientation": r.$pcTabs.orientation || "horizontal"
  }, t.ptm("tabList")), [L(t.$slots, "default"), v("span", k({
    ref: "inkbar",
    class: t.cx("activeBar"),
    role: "presentation",
    "aria-hidden": "true"
  }, t.ptm("activeBar")), null, 16)], 16, VE)], 16, jE), r.showNavigators && i.isNextButtonEnabled ? We((m(), y("button", k({
    key: 1,
    ref: "nextButton",
    type: "button",
    class: t.cx("nextButton"),
    "aria-label": r.nextButtonAriaLabel,
    tabindex: r.$pcTabs.tabindex,
    onClick: e[2] || (e[2] = function() {
      return r.onNextButtonClick && r.onNextButtonClick.apply(r, arguments);
    })
  }, t.ptm("nextButton"), {
    "data-pc-group-section": "navigator"
  }), [(m(), O(q(r.templates.nexticon || "ChevronRightIcon"), k({
    "aria-hidden": "true"
  }, t.ptm("nextIcon")), null, 16))], 16, _E)), [[a]]) : M("", !0)], 16, FE);
}
Ol.render = KE;
var HE = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-tab", {
      "p-tab-active": n.active,
      "p-disabled": o.disabled
    }];
  }
}, WE = te.extend({
  name: "tab",
  classes: HE
}), UE = {
  name: "BaseTab",
  extends: ne,
  props: {
    value: {
      type: [String, Number],
      default: void 0
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    as: {
      type: [String, Object],
      default: "BUTTON"
    },
    asChild: {
      type: Boolean,
      default: !1
    }
  },
  style: WE,
  provide: function() {
    return {
      $pcTab: this,
      $parentInstance: this
    };
  }
}, Pl = {
  name: "Tab",
  extends: UE,
  inheritAttrs: !1,
  inject: ["$pcTabs", "$pcTabList"],
  methods: {
    onFocus: function() {
      this.$pcTabs.selectOnFocus && this.changeActiveValue();
    },
    onClick: function() {
      this.changeActiveValue();
    },
    onKeydown: function(e) {
      switch (e.code) {
        case "ArrowRight":
          this.onArrowRightKey(e);
          break;
        case "ArrowLeft":
          this.onArrowLeftKey(e);
          break;
        case "Home":
          this.onHomeKey(e);
          break;
        case "End":
          this.onEndKey(e);
          break;
        case "PageDown":
          this.onPageDownKey(e);
          break;
        case "PageUp":
          this.onPageUpKey(e);
          break;
        case "Enter":
        case "NumpadEnter":
        case "Space":
          this.onEnterKey(e);
          break;
      }
    },
    onArrowRightKey: function(e) {
      var n = this.findNextTab(e.currentTarget);
      n ? this.changeFocusedTab(e, n) : this.onHomeKey(e), e.preventDefault();
    },
    onArrowLeftKey: function(e) {
      var n = this.findPrevTab(e.currentTarget);
      n ? this.changeFocusedTab(e, n) : this.onEndKey(e), e.preventDefault();
    },
    onHomeKey: function(e) {
      var n = this.findFirstTab();
      this.changeFocusedTab(e, n), e.preventDefault();
    },
    onEndKey: function(e) {
      var n = this.findLastTab();
      this.changeFocusedTab(e, n), e.preventDefault();
    },
    onPageDownKey: function(e) {
      this.scrollInView(this.findLastTab()), e.preventDefault();
    },
    onPageUpKey: function(e) {
      this.scrollInView(this.findFirstTab()), e.preventDefault();
    },
    onEnterKey: function(e) {
      this.changeActiveValue();
    },
    findNextTab: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, o = n ? e : e.nextElementSibling;
      return o ? Le(o, "data-p-disabled") || Le(o, "data-pc-section") === "activebar" ? this.findNextTab(o) : ft(o, '[data-pc-name="tab"]') : null;
    },
    findPrevTab: function(e) {
      var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1, o = n ? e : e.previousElementSibling;
      return o ? Le(o, "data-p-disabled") || Le(o, "data-pc-section") === "activebar" ? this.findPrevTab(o) : ft(o, '[data-pc-name="tab"]') : null;
    },
    findFirstTab: function() {
      return this.findNextTab(this.$pcTabList.$refs.tabs.firstElementChild, !0);
    },
    findLastTab: function() {
      return this.findPrevTab(this.$pcTabList.$refs.tabs.lastElementChild, !0);
    },
    changeActiveValue: function() {
      this.$pcTabs.updateValue(this.value);
    },
    changeFocusedTab: function(e, n) {
      Fe(n), this.scrollInView(n);
    },
    scrollInView: function(e) {
      var n;
      e == null || (n = e.scrollIntoView) === null || n === void 0 || n.call(e, {
        block: "nearest"
      });
    }
  },
  computed: {
    active: function() {
      var e;
      return Kt((e = this.$pcTabs) === null || e === void 0 ? void 0 : e.d_value, this.value);
    },
    id: function() {
      var e;
      return "".concat((e = this.$pcTabs) === null || e === void 0 ? void 0 : e.$id, "_tab_").concat(this.value);
    },
    ariaControls: function() {
      var e;
      return "".concat((e = this.$pcTabs) === null || e === void 0 ? void 0 : e.$id, "_tabpanel_").concat(this.value);
    },
    attrs: function() {
      return k(this.asAttrs, this.a11yAttrs, this.ptmi("root", this.ptParams));
    },
    asAttrs: function() {
      return this.as === "BUTTON" ? {
        type: "button",
        disabled: this.disabled
      } : void 0;
    },
    a11yAttrs: function() {
      return {
        id: this.id,
        tabindex: this.active ? this.$pcTabs.tabindex : -1,
        role: "tab",
        "aria-selected": this.active,
        "aria-controls": this.ariaControls,
        "data-pc-name": "tab",
        "data-p-disabled": this.disabled,
        "data-p-active": this.active,
        onFocus: this.onFocus,
        onKeydown: this.onKeydown
      };
    },
    ptParams: function() {
      return {
        context: {
          active: this.active
        }
      };
    },
    dataP: function() {
      return Te({
        active: this.active
      });
    }
  },
  directives: {
    ripple: mt
  }
};
function GE(t, e, n, o, i, r) {
  var a = tt("ripple");
  return t.asChild ? L(t.$slots, "default", {
    key: 1,
    dataP: r.dataP,
    class: Y(t.cx("root")),
    active: r.active,
    a11yAttrs: r.a11yAttrs,
    onClick: r.onClick
  }) : We((m(), O(q(t.as), k({
    key: 0,
    class: t.cx("root"),
    "data-p": r.dataP,
    onClick: r.onClick
  }, r.attrs), {
    default: E(function() {
      return [L(t.$slots, "default")];
    }),
    _: 3
  }, 16, ["class", "data-p", "onClick"])), [[a]]);
}
Pl.render = GE;
var qE = {
  root: "p-tabpanels"
}, JE = te.extend({
  name: "tabpanels",
  classes: qE
}), YE = {
  name: "BaseTabPanels",
  extends: ne,
  props: {},
  style: JE,
  provide: function() {
    return {
      $pcTabPanels: this,
      $parentInstance: this
    };
  }
}, $l = {
  name: "TabPanels",
  extends: YE,
  inheritAttrs: !1
};
function XE(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root"),
    role: "presentation"
  }, t.ptmi("root")), [L(t.$slots, "default")], 16);
}
$l.render = XE;
var ZE = {
  root: function(e) {
    var n = e.instance;
    return ["p-tabpanel", {
      "p-tabpanel-active": n.active
    }];
  }
}, QE = te.extend({
  name: "tabpanel",
  classes: ZE
}), eM = {
  name: "BaseTabPanel",
  extends: ne,
  props: {
    // in Tabs
    value: {
      type: [String, Number],
      default: void 0
    },
    as: {
      type: [String, Object],
      default: "DIV"
    },
    asChild: {
      type: Boolean,
      default: !1
    },
    // in TabView
    header: null,
    headerStyle: null,
    headerClass: null,
    headerProps: null,
    headerActionProps: null,
    contentStyle: null,
    contentClass: null,
    contentProps: null,
    disabled: Boolean
  },
  style: QE,
  provide: function() {
    return {
      $pcTabPanel: this,
      $parentInstance: this
    };
  }
}, Tl = {
  name: "TabPanel",
  extends: eM,
  inheritAttrs: !1,
  inject: ["$pcTabs"],
  computed: {
    active: function() {
      var e;
      return Kt((e = this.$pcTabs) === null || e === void 0 ? void 0 : e.d_value, this.value);
    },
    id: function() {
      var e;
      return "".concat((e = this.$pcTabs) === null || e === void 0 ? void 0 : e.$id, "_tabpanel_").concat(this.value);
    },
    ariaLabelledby: function() {
      var e;
      return "".concat((e = this.$pcTabs) === null || e === void 0 ? void 0 : e.$id, "_tab_").concat(this.value);
    },
    attrs: function() {
      return k(this.a11yAttrs, this.ptmi("root", this.ptParams));
    },
    a11yAttrs: function() {
      var e;
      return {
        id: this.id,
        tabindex: (e = this.$pcTabs) === null || e === void 0 ? void 0 : e.tabindex,
        role: "tabpanel",
        "aria-labelledby": this.ariaLabelledby,
        "data-pc-name": "tabpanel",
        "data-p-active": this.active
      };
    },
    ptParams: function() {
      return {
        context: {
          active: this.active
        }
      };
    }
  }
};
function tM(t, e, n, o, i, r) {
  var a, l;
  return r.$pcTabs ? (m(), y(_, {
    key: 1
  }, [t.asChild ? L(t.$slots, "default", {
    key: 1,
    class: Y(t.cx("root")),
    active: r.active,
    a11yAttrs: r.a11yAttrs
  }) : (m(), y(_, {
    key: 0
  }, [!((a = r.$pcTabs) !== null && a !== void 0 && a.lazy) || r.active ? We((m(), O(q(t.as), k({
    key: 0,
    class: t.cx("root")
  }, r.attrs), {
    default: E(function() {
      return [L(t.$slots, "default")];
    }),
    _: 3
  }, 16, ["class"])), [[Hh, (l = r.$pcTabs) !== null && l !== void 0 && l.lazy ? !0 : r.active]]) : M("", !0)], 64))], 64)) : L(t.$slots, "default", {
    key: 0
  });
}
Tl.render = tM;
var nM = `
    .p-tag {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        background: dt('tag.primary.background');
        color: dt('tag.primary.color');
        font-size: dt('tag.font.size');
        font-weight: dt('tag.font.weight');
        padding: dt('tag.padding');
        border-radius: dt('tag.border.radius');
        gap: dt('tag.gap');
    }

    .p-tag-icon {
        font-size: dt('tag.icon.size');
        width: dt('tag.icon.size');
        height: dt('tag.icon.size');
    }

    .p-tag-rounded {
        border-radius: dt('tag.rounded.border.radius');
    }

    .p-tag-success {
        background: dt('tag.success.background');
        color: dt('tag.success.color');
    }

    .p-tag-info {
        background: dt('tag.info.background');
        color: dt('tag.info.color');
    }

    .p-tag-warn {
        background: dt('tag.warn.background');
        color: dt('tag.warn.color');
    }

    .p-tag-danger {
        background: dt('tag.danger.background');
        color: dt('tag.danger.color');
    }

    .p-tag-secondary {
        background: dt('tag.secondary.background');
        color: dt('tag.secondary.color');
    }

    .p-tag-contrast {
        background: dt('tag.contrast.background');
        color: dt('tag.contrast.color');
    }
`, oM = {
  root: function(e) {
    var n = e.props;
    return ["p-tag p-component", {
      "p-tag-info": n.severity === "info",
      "p-tag-success": n.severity === "success",
      "p-tag-warn": n.severity === "warn",
      "p-tag-danger": n.severity === "danger",
      "p-tag-secondary": n.severity === "secondary",
      "p-tag-contrast": n.severity === "contrast",
      "p-tag-rounded": n.rounded
    }];
  },
  icon: "p-tag-icon",
  label: "p-tag-label"
}, rM = te.extend({
  name: "tag",
  style: nM,
  classes: oM
}), iM = {
  name: "BaseTag",
  extends: ne,
  props: {
    value: null,
    severity: null,
    rounded: Boolean,
    icon: String
  },
  style: rM,
  provide: function() {
    return {
      $pcTag: this,
      $parentInstance: this
    };
  }
};
function zi(t) {
  "@babel/helpers - typeof";
  return zi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, zi(t);
}
function aM(t, e, n) {
  return (e = lM(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function lM(t) {
  var e = sM(t, "string");
  return zi(e) == "symbol" ? e : e + "";
}
function sM(t, e) {
  if (zi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (zi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Ig = {
  name: "Tag",
  extends: iM,
  inheritAttrs: !1,
  computed: {
    dataP: function() {
      return Te(aM({
        rounded: this.rounded
      }, this.severity, this.severity));
    }
  }
}, dM = ["data-p"];
function cM(t, e, n, o, i, r) {
  return m(), y("span", k({
    class: t.cx("root"),
    "data-p": r.dataP
  }, t.ptmi("root")), [t.$slots.icon ? (m(), O(q(t.$slots.icon), k({
    key: 0,
    class: t.cx("icon")
  }, t.ptm("icon")), null, 16, ["class"])) : t.icon ? (m(), y("span", k({
    key: 1,
    class: [t.cx("icon"), t.icon]
  }, t.ptm("icon")), null, 16)) : M("", !0), t.value != null || t.$slots.default ? L(t.$slots, "default", {
    key: 2
  }, function() {
    return [v("span", k({
      class: t.cx("label")
    }, t.ptm("label")), re(t.value), 17)];
  }) : M("", !0)], 16, dM);
}
Ig.render = cM;
var uM = `
    .p-chip {
        display: inline-flex;
        align-items: center;
        background: dt('chip.background');
        color: dt('chip.color');
        border-radius: dt('chip.border.radius');
        padding-block: dt('chip.padding.y');
        padding-inline: dt('chip.padding.x');
        gap: dt('chip.gap');
    }

    .p-chip-icon {
        color: dt('chip.icon.color');
        font-size: dt('chip.icon.font.size');
        width: dt('chip.icon.size');
        height: dt('chip.icon.size');
    }

    .p-chip-image {
        border-radius: 50%;
        width: dt('chip.image.width');
        height: dt('chip.image.height');
        margin-inline-start: calc(-1 * dt('chip.padding.y'));
    }

    .p-chip:has(.p-chip-remove-icon) {
        padding-inline-end: dt('chip.padding.y');
    }

    .p-chip:has(.p-chip-image) {
        padding-block-start: calc(dt('chip.padding.y') / 2);
        padding-block-end: calc(dt('chip.padding.y') / 2);
    }

    .p-chip-remove-icon {
        cursor: pointer;
        font-size: dt('chip.remove.icon.size');
        width: dt('chip.remove.icon.size');
        height: dt('chip.remove.icon.size');
        color: dt('chip.remove.icon.color');
        border-radius: 50%;
        transition:
            outline-color dt('chip.transition.duration'),
            box-shadow dt('chip.transition.duration');
        outline-color: transparent;
    }

    .p-chip-remove-icon:focus-visible {
        box-shadow: dt('chip.remove.icon.focus.ring.shadow');
        outline: dt('chip.remove.icon.focus.ring.width') dt('chip.remove.icon.focus.ring.style') dt('chip.remove.icon.focus.ring.color');
        outline-offset: dt('chip.remove.icon.focus.ring.offset');
    }
`, pM = {
  root: "p-chip p-component",
  image: "p-chip-image",
  icon: "p-chip-icon",
  label: "p-chip-label",
  removeIcon: "p-chip-remove-icon"
}, fM = te.extend({
  name: "chip",
  style: uM,
  classes: pM
}), hM = {
  name: "BaseChip",
  extends: ne,
  props: {
    label: {
      type: [String, Number],
      default: null
    },
    icon: {
      type: String,
      default: null
    },
    image: {
      type: String,
      default: null
    },
    removable: {
      type: Boolean,
      default: !1
    },
    removeIcon: {
      type: String,
      default: void 0
    }
  },
  style: fM,
  provide: function() {
    return {
      $pcChip: this,
      $parentInstance: this
    };
  }
}, Og = {
  name: "Chip",
  extends: hM,
  inheritAttrs: !1,
  emits: ["remove"],
  data: function() {
    return {
      visible: !0
    };
  },
  methods: {
    onKeydown: function(e) {
      (e.key === "Enter" || e.key === "Backspace") && this.close(e);
    },
    close: function(e) {
      this.visible = !1, this.$emit("remove", e);
    }
  },
  computed: {
    dataP: function() {
      return Te({
        removable: this.removable
      });
    }
  },
  components: {
    TimesCircleIcon: el
  }
}, mM = ["aria-label", "data-p"], gM = ["src"];
function bM(t, e, n, o, i, r) {
  return i.visible ? (m(), y("div", k({
    key: 0,
    class: t.cx("root"),
    "aria-label": t.label
  }, t.ptmi("root"), {
    "data-p": r.dataP
  }), [L(t.$slots, "default", {}, function() {
    return [t.image ? (m(), y("img", k({
      key: 0,
      src: t.image
    }, t.ptm("image"), {
      class: t.cx("image")
    }), null, 16, gM)) : t.$slots.icon ? (m(), O(q(t.$slots.icon), k({
      key: 1,
      class: t.cx("icon")
    }, t.ptm("icon")), null, 16, ["class"])) : t.icon ? (m(), y("span", k({
      key: 2,
      class: [t.cx("icon"), t.icon]
    }, t.ptm("icon")), null, 16)) : M("", !0), t.label !== null ? (m(), y("div", k({
      key: 3,
      class: t.cx("label")
    }, t.ptm("label")), re(t.label), 17)) : M("", !0)];
  }), t.removable ? L(t.$slots, "removeicon", {
    key: 0,
    removeCallback: r.close,
    keydownCallback: r.onKeydown
  }, function() {
    return [(m(), O(q(t.removeIcon ? "span" : "TimesCircleIcon"), k({
      class: [t.cx("removeIcon"), t.removeIcon],
      onClick: r.close,
      onKeydown: r.onKeydown
    }, t.ptm("removeIcon")), null, 16, ["class", "onClick", "onKeydown"]))];
  }) : M("", !0)], 16, mM)) : M("", !0);
}
Og.render = bM;
var vM = `
    .p-floatlabel {
        display: block;
        position: relative;
    }

    .p-floatlabel label {
        position: absolute;
        pointer-events: none;
        top: 50%;
        transform: translateY(-50%);
        transition-property: all;
        transition-timing-function: ease;
        line-height: 1;
        font-weight: dt('floatlabel.font.weight');
        inset-inline-start: dt('floatlabel.position.x');
        color: dt('floatlabel.color');
        transition-duration: dt('floatlabel.transition.duration');
    }

    .p-floatlabel:has(.p-textarea) label {
        top: dt('floatlabel.position.y');
        transform: translateY(0);
    }

    .p-floatlabel:has(.p-inputicon:first-child) label {
        inset-inline-start: calc((dt('form.field.padding.x') * 2) + dt('icon.size'));
    }

    .p-floatlabel:has(input:focus) label,
    .p-floatlabel:has(input.p-filled) label,
    .p-floatlabel:has(input:-webkit-autofill) label,
    .p-floatlabel:has(textarea:focus) label,
    .p-floatlabel:has(textarea.p-filled) label,
    .p-floatlabel:has(.p-inputwrapper-focus) label,
    .p-floatlabel:has(.p-inputwrapper-filled) label,
    .p-floatlabel:has(input[placeholder]) label,
    .p-floatlabel:has(textarea[placeholder]) label {
        top: dt('floatlabel.over.active.top');
        transform: translateY(0);
        font-size: dt('floatlabel.active.font.size');
        font-weight: dt('floatlabel.active.font.weight');
    }

    .p-floatlabel:has(input.p-filled) label,
    .p-floatlabel:has(textarea.p-filled) label,
    .p-floatlabel:has(.p-inputwrapper-filled) label {
        color: dt('floatlabel.active.color');
    }

    .p-floatlabel:has(input:focus) label,
    .p-floatlabel:has(input:-webkit-autofill) label,
    .p-floatlabel:has(textarea:focus) label,
    .p-floatlabel:has(.p-inputwrapper-focus) label {
        color: dt('floatlabel.focus.color');
    }

    .p-floatlabel-in .p-inputtext,
    .p-floatlabel-in .p-textarea,
    .p-floatlabel-in .p-select-label,
    .p-floatlabel-in .p-multiselect-label,
    .p-floatlabel-in .p-autocomplete-input-multiple,
    .p-floatlabel-in .p-cascadeselect-label,
    .p-floatlabel-in .p-treeselect-label {
        padding-block-start: dt('floatlabel.in.input.padding.top');
        padding-block-end: dt('floatlabel.in.input.padding.bottom');
    }

    .p-floatlabel-in:has(input:focus) label,
    .p-floatlabel-in:has(input.p-filled) label,
    .p-floatlabel-in:has(input:-webkit-autofill) label,
    .p-floatlabel-in:has(textarea:focus) label,
    .p-floatlabel-in:has(textarea.p-filled) label,
    .p-floatlabel-in:has(.p-inputwrapper-focus) label,
    .p-floatlabel-in:has(.p-inputwrapper-filled) label,
    .p-floatlabel-in:has(input[placeholder]) label,
    .p-floatlabel-in:has(textarea[placeholder]) label {
        top: dt('floatlabel.in.active.top');
    }

    .p-floatlabel-on:has(input:focus) label,
    .p-floatlabel-on:has(input.p-filled) label,
    .p-floatlabel-on:has(input:-webkit-autofill) label,
    .p-floatlabel-on:has(textarea:focus) label,
    .p-floatlabel-on:has(textarea.p-filled) label,
    .p-floatlabel-on:has(.p-inputwrapper-focus) label,
    .p-floatlabel-on:has(.p-inputwrapper-filled) label,
    .p-floatlabel-on:has(input[placeholder]) label,
    .p-floatlabel-on:has(textarea[placeholder]) label {
        top: 0;
        transform: translateY(-50%);
        border-radius: dt('floatlabel.on.border.radius');
        background: dt('floatlabel.on.active.background');
        padding: dt('floatlabel.on.active.padding');
    }

    .p-floatlabel:has([class^='p-'][class$='-fluid']) {
        width: 100%;
    }

    .p-floatlabel:has(.p-invalid) label {
        color: dt('floatlabel.invalid.color');
    }
`, yM = {
  root: function(e) {
    var n = e.props;
    return ["p-floatlabel", {
      "p-floatlabel-over": n.variant === "over",
      "p-floatlabel-on": n.variant === "on",
      "p-floatlabel-in": n.variant === "in"
    }];
  }
}, kM = te.extend({
  name: "floatlabel",
  style: vM,
  classes: yM
}), wM = {
  name: "BaseFloatLabel",
  extends: ne,
  props: {
    variant: {
      type: String,
      default: "over"
    }
  },
  style: kM,
  provide: function() {
    return {
      $pcFloatLabel: this,
      $parentInstance: this
    };
  }
}, Pg = {
  name: "FloatLabel",
  extends: wM,
  inheritAttrs: !1
};
function CM(t, e, n, o, i, r) {
  return m(), y("span", k({
    class: t.cx("root")
  }, t.ptmi("root")), [L(t.$slots, "default")], 16);
}
Pg.render = CM;
var xM = `
    .p-card {
        background: dt('card.background');
        color: dt('card.color');
        box-shadow: dt('card.shadow');
        border-radius: dt('card.border.radius');
        display: flex;
        flex-direction: column;
    }

    .p-card-caption {
        display: flex;
        flex-direction: column;
        gap: dt('card.caption.gap');
    }

    .p-card-body {
        padding: dt('card.body.padding');
        display: flex;
        flex-direction: column;
        gap: dt('card.body.gap');
    }

    .p-card-title {
        font-size: dt('card.title.font.size');
        font-weight: dt('card.title.font.weight');
    }

    .p-card-subtitle {
        color: dt('card.subtitle.color');
    }
`, SM = {
  root: "p-card p-component",
  header: "p-card-header",
  body: "p-card-body",
  caption: "p-card-caption",
  title: "p-card-title",
  subtitle: "p-card-subtitle",
  content: "p-card-content",
  footer: "p-card-footer"
}, IM = te.extend({
  name: "card",
  style: xM,
  classes: SM
}), OM = {
  name: "BaseCard",
  extends: ne,
  style: IM,
  provide: function() {
    return {
      $pcCard: this,
      $parentInstance: this
    };
  }
}, $g = {
  name: "Card",
  extends: OM,
  inheritAttrs: !1
};
function PM(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root")
  }, t.ptmi("root")), [t.$slots.header ? (m(), y("div", k({
    key: 0,
    class: t.cx("header")
  }, t.ptm("header")), [L(t.$slots, "header")], 16)) : M("", !0), v("div", k({
    class: t.cx("body")
  }, t.ptm("body")), [t.$slots.title || t.$slots.subtitle ? (m(), y("div", k({
    key: 0,
    class: t.cx("caption")
  }, t.ptm("caption")), [t.$slots.title ? (m(), y("div", k({
    key: 0,
    class: t.cx("title")
  }, t.ptm("title")), [L(t.$slots, "title")], 16)) : M("", !0), t.$slots.subtitle ? (m(), y("div", k({
    key: 1,
    class: t.cx("subtitle")
  }, t.ptm("subtitle")), [L(t.$slots, "subtitle")], 16)) : M("", !0)], 16)) : M("", !0), v("div", k({
    class: t.cx("content")
  }, t.ptm("content")), [L(t.$slots, "content")], 16), t.$slots.footer ? (m(), y("div", k({
    key: 1,
    class: t.cx("footer")
  }, t.ptm("footer")), [L(t.$slots, "footer")], 16)) : M("", !0)], 16)], 16);
}
$g.render = PM;
var $M = `
    .p-togglebutton {
        display: inline-flex;
        cursor: pointer;
        user-select: none;
        overflow: hidden;
        position: relative;
        color: dt('togglebutton.color');
        background: dt('togglebutton.background');
        border: 1px solid dt('togglebutton.border.color');
        padding: dt('togglebutton.padding');
        font-size: 1rem;
        font-family: inherit;
        font-feature-settings: inherit;
        transition:
            background dt('togglebutton.transition.duration'),
            color dt('togglebutton.transition.duration'),
            border-color dt('togglebutton.transition.duration'),
            outline-color dt('togglebutton.transition.duration'),
            box-shadow dt('togglebutton.transition.duration');
        border-radius: dt('togglebutton.border.radius');
        outline-color: transparent;
        font-weight: dt('togglebutton.font.weight');
    }

    .p-togglebutton-content {
        display: inline-flex;
        flex: 1 1 auto;
        align-items: center;
        justify-content: center;
        gap: dt('togglebutton.gap');
        padding: dt('togglebutton.content.padding');
        background: transparent;
        border-radius: dt('togglebutton.content.border.radius');
        transition:
            background dt('togglebutton.transition.duration'),
            color dt('togglebutton.transition.duration'),
            border-color dt('togglebutton.transition.duration'),
            outline-color dt('togglebutton.transition.duration'),
            box-shadow dt('togglebutton.transition.duration');
    }

    .p-togglebutton:not(:disabled):not(.p-togglebutton-checked):hover {
        background: dt('togglebutton.hover.background');
        color: dt('togglebutton.hover.color');
    }

    .p-togglebutton.p-togglebutton-checked {
        background: dt('togglebutton.checked.background');
        border-color: dt('togglebutton.checked.border.color');
        color: dt('togglebutton.checked.color');
    }

    .p-togglebutton-checked .p-togglebutton-content {
        background: dt('togglebutton.content.checked.background');
        box-shadow: dt('togglebutton.content.checked.shadow');
    }

    .p-togglebutton:focus-visible {
        box-shadow: dt('togglebutton.focus.ring.shadow');
        outline: dt('togglebutton.focus.ring.width') dt('togglebutton.focus.ring.style') dt('togglebutton.focus.ring.color');
        outline-offset: dt('togglebutton.focus.ring.offset');
    }

    .p-togglebutton.p-invalid {
        border-color: dt('togglebutton.invalid.border.color');
    }

    .p-togglebutton:disabled {
        opacity: 1;
        cursor: default;
        background: dt('togglebutton.disabled.background');
        border-color: dt('togglebutton.disabled.border.color');
        color: dt('togglebutton.disabled.color');
    }

    .p-togglebutton-label,
    .p-togglebutton-icon {
        position: relative;
        transition: none;
    }

    .p-togglebutton-icon {
        color: dt('togglebutton.icon.color');
    }

    .p-togglebutton:not(:disabled):not(.p-togglebutton-checked):hover .p-togglebutton-icon {
        color: dt('togglebutton.icon.hover.color');
    }

    .p-togglebutton.p-togglebutton-checked .p-togglebutton-icon {
        color: dt('togglebutton.icon.checked.color');
    }

    .p-togglebutton:disabled .p-togglebutton-icon {
        color: dt('togglebutton.icon.disabled.color');
    }

    .p-togglebutton-sm {
        padding: dt('togglebutton.sm.padding');
        font-size: dt('togglebutton.sm.font.size');
    }

    .p-togglebutton-sm .p-togglebutton-content {
        padding: dt('togglebutton.content.sm.padding');
    }

    .p-togglebutton-lg {
        padding: dt('togglebutton.lg.padding');
        font-size: dt('togglebutton.lg.font.size');
    }

    .p-togglebutton-lg .p-togglebutton-content {
        padding: dt('togglebutton.content.lg.padding');
    }

    .p-togglebutton-fluid {
        width: 100%;
    }
`, TM = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-togglebutton p-component", {
      "p-togglebutton-checked": n.active,
      "p-invalid": n.$invalid,
      "p-togglebutton-fluid": o.fluid,
      "p-togglebutton-sm p-inputfield-sm": o.size === "small",
      "p-togglebutton-lg p-inputfield-lg": o.size === "large"
    }];
  },
  content: "p-togglebutton-content",
  icon: "p-togglebutton-icon",
  label: "p-togglebutton-label"
}, RM = te.extend({
  name: "togglebutton",
  style: $M,
  classes: TM
}), BM = {
  name: "BaseToggleButton",
  extends: gc,
  props: {
    onIcon: String,
    offIcon: String,
    onLabel: {
      type: String,
      default: "Yes"
    },
    offLabel: {
      type: String,
      default: "No"
    },
    readonly: {
      type: Boolean,
      default: !1
    },
    tabindex: {
      type: Number,
      default: null
    },
    ariaLabelledby: {
      type: String,
      default: null
    },
    ariaLabel: {
      type: String,
      default: null
    },
    size: {
      type: String,
      default: null
    },
    fluid: {
      type: Boolean,
      default: null
    }
  },
  style: RM,
  provide: function() {
    return {
      $pcToggleButton: this,
      $parentInstance: this
    };
  }
};
function Fi(t) {
  "@babel/helpers - typeof";
  return Fi = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Fi(t);
}
function EM(t, e, n) {
  return (e = MM(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function MM(t) {
  var e = AM(t, "string");
  return Fi(e) == "symbol" ? e : e + "";
}
function AM(t, e) {
  if (Fi(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Fi(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Tg = {
  name: "ToggleButton",
  extends: BM,
  inheritAttrs: !1,
  emits: ["change"],
  methods: {
    getPTOptions: function(e) {
      var n = e === "root" ? this.ptmi : this.ptm;
      return n(e, {
        context: {
          active: this.active,
          disabled: this.disabled
        }
      });
    },
    onChange: function(e) {
      !this.disabled && !this.readonly && (this.writeValue(!this.d_value, e), this.$emit("change", e));
    },
    onBlur: function(e) {
      var n, o;
      (n = (o = this.formField).onBlur) === null || n === void 0 || n.call(o, e);
    }
  },
  computed: {
    active: function() {
      return this.d_value === !0;
    },
    hasLabel: function() {
      return ae(this.onLabel) && ae(this.offLabel);
    },
    label: function() {
      return this.hasLabel ? this.d_value ? this.onLabel : this.offLabel : " ";
    },
    dataP: function() {
      return Te(EM({
        checked: this.active,
        invalid: this.$invalid
      }, this.size, this.size));
    }
  },
  directives: {
    ripple: mt
  }
}, DM = ["tabindex", "disabled", "aria-pressed", "aria-label", "aria-labelledby", "data-p-checked", "data-p-disabled", "data-p"], LM = ["data-p"];
function zM(t, e, n, o, i, r) {
  var a = tt("ripple");
  return We((m(), y("button", k({
    type: "button",
    class: t.cx("root"),
    tabindex: t.tabindex,
    disabled: t.disabled,
    "aria-pressed": t.d_value,
    onClick: e[0] || (e[0] = function() {
      return r.onChange && r.onChange.apply(r, arguments);
    }),
    onBlur: e[1] || (e[1] = function() {
      return r.onBlur && r.onBlur.apply(r, arguments);
    })
  }, r.getPTOptions("root"), {
    "aria-label": t.ariaLabel,
    "aria-labelledby": t.ariaLabelledby,
    "data-p-checked": r.active,
    "data-p-disabled": t.disabled,
    "data-p": r.dataP
  }), [v("span", k({
    class: t.cx("content")
  }, r.getPTOptions("content"), {
    "data-p": r.dataP
  }), [L(t.$slots, "default", {}, function() {
    return [L(t.$slots, "icon", {
      value: t.d_value,
      class: Y(t.cx("icon"))
    }, function() {
      return [t.onIcon || t.offIcon ? (m(), y("span", k({
        key: 0,
        class: [t.cx("icon"), t.d_value ? t.onIcon : t.offIcon]
      }, r.getPTOptions("icon")), null, 16)) : M("", !0)];
    }), v("span", k({
      class: t.cx("label")
    }, r.getPTOptions("label")), re(r.label), 17)];
  })], 16, LM)], 16, DM)), [[a]]);
}
Tg.render = zM;
var FM = `
    .p-selectbutton {
        display: inline-flex;
        user-select: none;
        vertical-align: bottom;
        outline-color: transparent;
        border-radius: dt('selectbutton.border.radius');
    }

    .p-selectbutton .p-togglebutton {
        border-radius: 0;
        border-width: 1px 1px 1px 0;
    }

    .p-selectbutton .p-togglebutton:focus-visible {
        position: relative;
        z-index: 1;
    }

    .p-selectbutton .p-togglebutton:first-child {
        border-inline-start-width: 1px;
        border-start-start-radius: dt('selectbutton.border.radius');
        border-end-start-radius: dt('selectbutton.border.radius');
    }

    .p-selectbutton .p-togglebutton:last-child {
        border-start-end-radius: dt('selectbutton.border.radius');
        border-end-end-radius: dt('selectbutton.border.radius');
    }

    .p-selectbutton.p-invalid {
        outline: 1px solid dt('selectbutton.invalid.border.color');
        outline-offset: 0;
    }

    .p-selectbutton-fluid {
        width: 100%;
    }
    
    .p-selectbutton-fluid .p-togglebutton {
        flex: 1 1 0;
    }
`, NM = {
  root: function(e) {
    var n = e.props, o = e.instance;
    return ["p-selectbutton p-component", {
      "p-invalid": o.$invalid,
      // @todo: check
      "p-selectbutton-fluid": n.fluid
    }];
  }
}, jM = te.extend({
  name: "selectbutton",
  style: FM,
  classes: NM
}), VM = {
  name: "BaseSelectButton",
  extends: gc,
  props: {
    options: Array,
    optionLabel: null,
    optionValue: null,
    optionDisabled: null,
    multiple: Boolean,
    allowEmpty: {
      type: Boolean,
      default: !0
    },
    dataKey: null,
    ariaLabelledby: {
      type: String,
      default: null
    },
    size: {
      type: String,
      default: null
    },
    fluid: {
      type: Boolean,
      default: null
    }
  },
  style: jM,
  provide: function() {
    return {
      $pcSelectButton: this,
      $parentInstance: this
    };
  }
};
function _M(t, e) {
  var n = typeof Symbol < "u" && t[Symbol.iterator] || t["@@iterator"];
  if (!n) {
    if (Array.isArray(t) || (n = Rg(t)) || e) {
      n && (t = n);
      var o = 0, i = function() {
      };
      return { s: i, n: function() {
        return o >= t.length ? { done: !0 } : { done: !1, value: t[o++] };
      }, e: function(d) {
        throw d;
      }, f: i };
    }
    throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
  }
  var r, a = !0, l = !1;
  return { s: function() {
    n = n.call(t);
  }, n: function() {
    var d = n.next();
    return a = d.done, d;
  }, e: function(d) {
    l = !0, r = d;
  }, f: function() {
    try {
      a || n.return == null || n.return();
    } finally {
      if (l) throw r;
    }
  } };
}
function KM(t) {
  return UM(t) || WM(t) || Rg(t) || HM();
}
function HM() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function Rg(t, e) {
  if (t) {
    if (typeof t == "string") return Ld(t, e);
    var n = {}.toString.call(t).slice(8, -1);
    return n === "Object" && t.constructor && (n = t.constructor.name), n === "Map" || n === "Set" ? Array.from(t) : n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ld(t, e) : void 0;
  }
}
function WM(t) {
  if (typeof Symbol < "u" && t[Symbol.iterator] != null || t["@@iterator"] != null) return Array.from(t);
}
function UM(t) {
  if (Array.isArray(t)) return Ld(t);
}
function Ld(t, e) {
  (e == null || e > t.length) && (e = t.length);
  for (var n = 0, o = Array(e); n < e; n++) o[n] = t[n];
  return o;
}
var Bg = {
  name: "SelectButton",
  extends: VM,
  inheritAttrs: !1,
  emits: ["change"],
  methods: {
    getOptionLabel: function(e) {
      return this.optionLabel ? be(e, this.optionLabel) : e;
    },
    getOptionValue: function(e) {
      return this.optionValue ? be(e, this.optionValue) : e;
    },
    getOptionRenderKey: function(e) {
      return this.dataKey ? be(e, this.dataKey) : this.getOptionLabel(e);
    },
    isOptionDisabled: function(e) {
      return this.optionDisabled ? be(e, this.optionDisabled) : !1;
    },
    isOptionReadonly: function(e) {
      if (this.allowEmpty) return !1;
      var n = this.isSelected(e);
      return this.multiple ? n && this.d_value.length === 1 : n;
    },
    onOptionSelect: function(e, n, o) {
      var i = this;
      if (!(this.disabled || this.isOptionDisabled(n) || this.isOptionReadonly(n))) {
        var r = this.isSelected(n), a = this.getOptionValue(n), l;
        if (this.multiple)
          if (r) {
            if (l = this.d_value.filter(function(s) {
              return !Kt(s, a, i.equalityKey);
            }), !this.allowEmpty && l.length === 0) return;
          } else
            l = this.d_value ? [].concat(KM(this.d_value), [a]) : [a];
        else {
          if (r && !this.allowEmpty) return;
          l = r ? null : a;
        }
        this.writeValue(l, e), this.$emit("change", {
          event: e,
          value: l
        });
      }
    },
    isSelected: function(e) {
      var n = !1, o = this.getOptionValue(e);
      if (this.multiple) {
        if (this.d_value) {
          var i = _M(this.d_value), r;
          try {
            for (i.s(); !(r = i.n()).done; ) {
              var a = r.value;
              if (Kt(a, o, this.equalityKey)) {
                n = !0;
                break;
              }
            }
          } catch (l) {
            i.e(l);
          } finally {
            i.f();
          }
        }
      } else
        n = Kt(this.d_value, o, this.equalityKey);
      return n;
    }
  },
  computed: {
    equalityKey: function() {
      return this.optionValue ? null : this.dataKey;
    },
    dataP: function() {
      return Te({
        invalid: this.$invalid
      });
    }
  },
  directives: {
    ripple: mt
  },
  components: {
    ToggleButton: Tg
  }
}, GM = ["aria-labelledby", "data-p"];
function qM(t, e, n, o, i, r) {
  var a = $("ToggleButton");
  return m(), y("div", k({
    class: t.cx("root"),
    role: "group",
    "aria-labelledby": t.ariaLabelledby
  }, t.ptmi("root"), {
    "data-p": r.dataP
  }), [(m(!0), y(_, null, fe(t.options, function(l, s) {
    return m(), O(a, {
      key: r.getOptionRenderKey(l),
      modelValue: r.isSelected(l),
      onLabel: r.getOptionLabel(l),
      offLabel: r.getOptionLabel(l),
      disabled: t.disabled || r.isOptionDisabled(l),
      unstyled: t.unstyled,
      size: t.size,
      readonly: r.isOptionReadonly(l),
      onChange: function(c) {
        return r.onOptionSelect(c, l, s);
      },
      pt: t.ptm("pcToggleButton")
    }, On({
      _: 2
    }, [t.$slots.option ? {
      name: "default",
      fn: E(function() {
        return [L(t.$slots, "option", {
          option: l,
          index: s
        }, function() {
          return [v("span", k({
            ref_for: !0
          }, t.ptm("pcToggleButton").label), re(r.getOptionLabel(l)), 17)];
        })];
      }),
      key: "0"
    } : void 0]), 1032, ["modelValue", "onLabel", "offLabel", "disabled", "unstyled", "size", "readonly", "onChange", "pt"]);
  }), 128))], 16, GM);
}
Bg.render = qM;
var JM = `
    .p-inplace-display {
        display: inline-block;
        cursor: pointer;
        border: 1px solid transparent;
        padding: dt('inplace.padding');
        border-radius: dt('inplace.border.radius');
        transition:
            background dt('inplace.transition.duration'),
            color dt('inplace.transition.duration'),
            outline-color dt('inplace.transition.duration'),
            box-shadow dt('inplace.transition.duration');
        outline-color: transparent;
    }

    .p-inplace-display:not(.p-disabled):hover {
        background: dt('inplace.display.hover.background');
        color: dt('inplace.display.hover.color');
    }

    .p-inplace-display:focus-visible {
        box-shadow: dt('inplace.focus.ring.shadow');
        outline: dt('inplace.focus.ring.width') dt('inplace.focus.ring.style') dt('inplace.focus.ring.color');
        outline-offset: dt('inplace.focus.ring.offset');
    }

    .p-inplace-content {
        display: block;
    }
`, YM = {
  root: "p-inplace p-component",
  display: function(e) {
    var n = e.props;
    return ["p-inplace-display", {
      "p-disabled": n.disabled
    }];
  },
  content: "p-inplace-content"
}, XM = te.extend({
  name: "inplace",
  style: JM,
  classes: YM
}), ZM = {
  name: "BaseInplace",
  extends: ne,
  props: {
    active: {
      type: Boolean,
      default: !1
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    displayProps: {
      type: null,
      default: null
    }
  },
  style: XM,
  provide: function() {
    return {
      $pcInplace: this,
      $parentInstance: this
    };
  }
}, Eg = {
  name: "Inplace",
  extends: ZM,
  inheritAttrs: !1,
  emits: ["open", "close", "update:active"],
  data: function() {
    return {
      d_active: this.active
    };
  },
  watch: {
    active: function(e) {
      this.d_active = e;
    }
  },
  methods: {
    open: function(e) {
      this.disabled || (this.d_active = !0, this.$emit("open", e), this.$emit("update:active", !0));
    },
    close: function(e) {
      var n = this;
      this.d_active = !1, this.$emit("close", e), this.$emit("update:active", !1), setTimeout(function() {
        n.$refs.display.focus();
      }, 0);
    }
  }
};
function Ni(t) {
  "@babel/helpers - typeof";
  return Ni = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, Ni(t);
}
function rf(t, e) {
  var n = Object.keys(t);
  if (Object.getOwnPropertySymbols) {
    var o = Object.getOwnPropertySymbols(t);
    e && (o = o.filter(function(i) {
      return Object.getOwnPropertyDescriptor(t, i).enumerable;
    })), n.push.apply(n, o);
  }
  return n;
}
function af(t) {
  for (var e = 1; e < arguments.length; e++) {
    var n = arguments[e] != null ? arguments[e] : {};
    e % 2 ? rf(Object(n), !0).forEach(function(o) {
      QM(t, o, n[o]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : rf(Object(n)).forEach(function(o) {
      Object.defineProperty(t, o, Object.getOwnPropertyDescriptor(n, o));
    });
  }
  return t;
}
function QM(t, e, n) {
  return (e = eA(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function eA(t) {
  var e = tA(t, "string");
  return Ni(e) == "symbol" ? e : e + "";
}
function tA(t, e) {
  if (Ni(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (Ni(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var nA = ["tabindex", "data-p-disabled"];
function oA(t, e, n, o, i, r) {
  return m(), y("div", k({
    class: t.cx("root"),
    "aria-live": "polite"
  }, t.ptmi("root")), [i.d_active ? (m(), y("div", k({
    key: 1,
    class: t.cx("content")
  }, t.ptm("content")), [L(t.$slots, "content", {
    closeCallback: r.close
  })], 16)) : (m(), y("div", k({
    key: 0,
    ref: "display",
    class: t.cx("display"),
    tabindex: t.$attrs.tabindex || "0",
    role: "button",
    onClick: e[0] || (e[0] = function() {
      return r.open && r.open.apply(r, arguments);
    }),
    onKeydown: e[1] || (e[1] = ja(function() {
      return r.open && r.open.apply(r, arguments);
    }, ["enter"])),
    "data-p-disabled": t.disabled
  }, af(af({}, t.displayProps), t.ptm("display"))), [L(t.$slots, "display")], 16, nA))], 16);
}
Eg.render = oA;
var rA = `
    .p-textarea {
        font-family: inherit;
        font-feature-settings: inherit;
        font-size: 1rem;
        color: dt('textarea.color');
        background: dt('textarea.background');
        padding-block: dt('textarea.padding.y');
        padding-inline: dt('textarea.padding.x');
        border: 1px solid dt('textarea.border.color');
        transition:
            background dt('textarea.transition.duration'),
            color dt('textarea.transition.duration'),
            border-color dt('textarea.transition.duration'),
            outline-color dt('textarea.transition.duration'),
            box-shadow dt('textarea.transition.duration');
        appearance: none;
        border-radius: dt('textarea.border.radius');
        outline-color: transparent;
        box-shadow: dt('textarea.shadow');
    }

    .p-textarea:enabled:hover {
        border-color: dt('textarea.hover.border.color');
    }

    .p-textarea:enabled:focus {
        border-color: dt('textarea.focus.border.color');
        box-shadow: dt('textarea.focus.ring.shadow');
        outline: dt('textarea.focus.ring.width') dt('textarea.focus.ring.style') dt('textarea.focus.ring.color');
        outline-offset: dt('textarea.focus.ring.offset');
    }

    .p-textarea.p-invalid {
        border-color: dt('textarea.invalid.border.color');
    }

    .p-textarea.p-variant-filled {
        background: dt('textarea.filled.background');
    }

    .p-textarea.p-variant-filled:enabled:hover {
        background: dt('textarea.filled.hover.background');
    }

    .p-textarea.p-variant-filled:enabled:focus {
        background: dt('textarea.filled.focus.background');
    }

    .p-textarea:disabled {
        opacity: 1;
        background: dt('textarea.disabled.background');
        color: dt('textarea.disabled.color');
    }

    .p-textarea::placeholder {
        color: dt('textarea.placeholder.color');
    }

    .p-textarea.p-invalid::placeholder {
        color: dt('textarea.invalid.placeholder.color');
    }

    .p-textarea-fluid {
        width: 100%;
    }

    .p-textarea-resizable {
        overflow: hidden;
        resize: none;
    }

    .p-textarea-sm {
        font-size: dt('textarea.sm.font.size');
        padding-block: dt('textarea.sm.padding.y');
        padding-inline: dt('textarea.sm.padding.x');
    }

    .p-textarea-lg {
        font-size: dt('textarea.lg.font.size');
        padding-block: dt('textarea.lg.padding.y');
        padding-inline: dt('textarea.lg.padding.x');
    }
`, iA = {
  root: function(e) {
    var n = e.instance, o = e.props;
    return ["p-textarea p-component", {
      "p-filled": n.$filled,
      "p-textarea-resizable ": o.autoResize,
      "p-textarea-sm p-inputfield-sm": o.size === "small",
      "p-textarea-lg p-inputfield-lg": o.size === "large",
      "p-invalid": n.$invalid,
      "p-variant-filled": n.$variant === "filled",
      "p-textarea-fluid": n.$fluid
    }];
  }
}, aA = te.extend({
  name: "textarea",
  style: rA,
  classes: iA
}), lA = {
  name: "BaseTextarea",
  extends: gr,
  props: {
    autoResize: Boolean
  },
  style: aA,
  provide: function() {
    return {
      $pcTextarea: this,
      $parentInstance: this
    };
  }
};
function ji(t) {
  "@babel/helpers - typeof";
  return ji = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(e) {
    return typeof e;
  } : function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, ji(t);
}
function sA(t, e, n) {
  return (e = dA(e)) in t ? Object.defineProperty(t, e, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = n, t;
}
function dA(t) {
  var e = cA(t, "string");
  return ji(e) == "symbol" ? e : e + "";
}
function cA(t, e) {
  if (ji(t) != "object" || !t) return t;
  var n = t[Symbol.toPrimitive];
  if (n !== void 0) {
    var o = n.call(t, e);
    if (ji(o) != "object") return o;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (e === "string" ? String : Number)(t);
}
var Mg = {
  name: "Textarea",
  extends: lA,
  inheritAttrs: !1,
  observer: null,
  mounted: function() {
    var e = this;
    this.autoResize && (this.observer = new ResizeObserver(function() {
      requestAnimationFrame(function() {
        e.resize();
      });
    }), this.observer.observe(this.$el));
  },
  updated: function() {
    this.autoResize && this.resize();
  },
  beforeUnmount: function() {
    this.observer && this.observer.disconnect();
  },
  methods: {
    resize: function() {
      if (this.$el.offsetParent) {
        var e = this.$el.style.height, n = parseInt(e) || 0, o = this.$el.scrollHeight, i = !n || o > n, r = n && o < n;
        r ? (this.$el.style.height = "auto", this.$el.style.height = "".concat(this.$el.scrollHeight, "px")) : i && (this.$el.style.height = "".concat(o, "px"));
      }
    },
    onInput: function(e) {
      this.autoResize && this.resize(), this.writeValue(e.target.value, e);
    }
  },
  computed: {
    attrs: function() {
      return k(this.ptmi("root", {
        context: {
          filled: this.$filled,
          disabled: this.disabled
        }
      }), this.formField);
    },
    dataP: function() {
      return Te(sA({
        invalid: this.$invalid,
        fluid: this.$fluid,
        filled: this.$variant === "filled"
      }, this.size, this.size));
    }
  }
}, uA = ["value", "name", "disabled", "aria-invalid", "data-p"];
function pA(t, e, n, o, i, r) {
  return m(), y("textarea", k({
    class: t.cx("root"),
    value: t.d_value,
    name: t.name,
    disabled: t.disabled,
    "aria-invalid": t.invalid || void 0,
    "data-p": r.dataP,
    onInput: e[0] || (e[0] = function() {
      return r.onInput && r.onInput.apply(r, arguments);
    })
  }, r.attrs), null, 16, uA);
}
Mg.render = pA;
var Ag = Symbol();
function Rl() {
  var t = Zn(Ag);
  if (!t)
    throw new Error("No PrimeVue Toast provided!");
  return t;
}
var fA = {
  install: function(e) {
    var n = {
      add: function(i) {
        Nt.emit("add", i);
      },
      remove: function(i) {
        Nt.emit("remove", i);
      },
      removeGroup: function(i) {
        Nt.emit("remove-group", i);
      },
      removeAllGroups: function() {
        Nt.emit("remove-all-groups");
      }
    };
    e.config.globalProperties.$toast = n, e.provide(Ag, n);
  }
}, Dg = Symbol();
function hA() {
  var t = Zn(Dg);
  if (!t)
    throw new Error("No PrimeVue Confirmation provided!");
  return t;
}
var mA = {
  install: function(e) {
    var n = {
      require: function(i) {
        Jo.emit("confirm", i);
      },
      close: function() {
        Jo.emit("close");
      }
    };
    e.config.globalProperties.$confirm = n, e.provide(Dg, n);
  }
};
const gA = { class: "card flex flex-wrap gap-2 justify-center" }, bA = {
  __name: "Dialogsample",
  setup(t) {
    const e = hA(), n = Rl();
    z(!1);
    const o = () => {
      e.require({
        message: "Are you sure you want to proceed?",
        header: "Confirmation",
        icon: "pi pi-exclamation-triangle",
        closeButtonProps: {
          label: "NO"
        },
        rejectProps: {
          label: "close",
          severity: "secondary",
          outlined: !0
        },
        acceptProps: {
          label: "test"
        },
        accept: () => {
          n.add({ severity: "info", summary: "Confirmed", detail: "You have accepted", life: 3e3 });
        },
        reject: () => {
          n.add({ severity: "error", summary: "Rejected", detail: "You have rejected", life: 3e3 });
        }
      });
    }, i = () => {
      e.require({
        message: "Do you want to delete this record?",
        header: "Danger Zone",
        icon: "pi pi-info-circle",
        rejectProps: {
          label: "Cancel",
          severity: "secondary",
          outlined: !0
        },
        acceptProps: {
          label: "Delete",
          severity: "danger"
        },
        accept: () => {
          n.add({ severity: "info", summary: "Confirmed", detail: "Record deleted", life: 3e3 });
        },
        reject: () => {
          n.add({ severity: "error", summary: "Rejected", detail: "You have rejected", life: 3e3 });
        }
      });
    };
    return (r, a) => {
      const l = $("Toast"), s = $("ConfirmDialog"), d = $("Button");
      return m(), y(_, null, [
        P(l),
        P(s, { closeButtonProps: { label: "關閉" } }),
        v("div", gA, [
          P(d, {
            onClick: a[0] || (a[0] = (c) => o()),
            label: "Save",
            outlined: ""
          }),
          P(d, {
            onClick: a[1] || (a[1] = (c) => i()),
            label: "Delete",
            severity: "danger",
            outlined: ""
          })
        ])
      ], 64);
    };
  }
}, vA = { class: "flex items-start" }, yA = { class: "flex flex-row gap-2" }, kA = {
  key: 0,
  class: "flex flex-wrap gap-x-4"
}, wA = { class: "font-bold text-purple-700 ml-1" }, CA = /* @__PURE__ */ Be({
  __name: "PatientInfo",
  props: {
    patientFields: {}
  },
  setup(t) {
    const e = z(!0);
    return (n, o) => (m(), y("div", vA, [
      o[1] || (o[1] = v("div", { class: "mr-6 flex shrink-0 items-center" }, [
        v("div", { class: "mr-2 flex h-6 w-6 items-center justify-center rounded-sm bg-blue-100 p-3" }, [
          v("i", { class: "pi pi-user text-primary" })
        ]),
        v("p", { class: "text-primary" }, "病人資訊")
      ], -1)),
      v("div", yA, [
        e.value ? (m(), y("dl", kA, [
          (m(!0), y(_, null, fe(n.patientFields, (i, r) => (m(), y("div", {
            class: "flex flex-nowrap",
            key: r
          }, [
            v("dt", null, re(i.label) + "：", 1),
            v("dd", wA, re(i.value), 1)
          ]))), 128))
        ])) : M("", !0),
        o[0] || (o[0] = v("div", { class: "flex gap-x-2 mt-1" }, [
          v("div", { class: "cursor-pointer rounded-sm border border-blue-300 px-1 py-1 text-blue-700 underline" }, "管理"),
          v("div", { class: "cursor-pointer rounded-sm border border-blue-300 px-1 py-1 text-blue-700 underline" }, "重大"),
          v("div", { class: "cursor-pointer rounded-sm border border-blue-300 px-1 py-1 text-blue-700 underline" }, "藥敏")
        ], -1))
      ])
    ]));
  }
}), xA = { class: "card flex m-2" }, SA = { class: "card flex m-2" }, IA = { class: "card flex justify-center" }, OA = { class: "card flex m-2" }, PA = { class: "card flex m-2" }, $A = { class: "card flex m-2" }, TA = { class: "fixed top-4 right-4 z-50" }, RA = /* @__PURE__ */ Be({
  __name: "Home",
  setup(t) {
    const e = z(null), n = z(null), o = z(null), i = z(""), r = z(!1), a = z(), l = z([
      { name: "New York", code: "NY" },
      { name: "Rome", code: "RM" },
      { name: "Londonaaaaaaaaaaaaaaaaaaa", code: "LDN" },
      { name: "Istanbul", code: "IST" },
      { name: "Paris", code: "PRS" }
    ]);
    return (s, d) => {
      const c = $("InputGroupAddon"), u = $("InputText"), f = $("InputGroup"), p = $("Button"), h = $("Textarea"), g = $("Select"), b = $("FloatLabel"), C = $("Drawer");
      return m(), y(_, null, [
        v("div", xA, [
          P(f, { size: "small" }, {
            default: E(() => [
              P(c, { size: "small" }, {
                default: E(() => [...d[7] || (d[7] = [
                  v("i", {
                    class: "pi pi-user",
                    size: "small"
                  }, null, -1)
                ])]),
                _: 1
              }),
              P(u, {
                modelValue: e.value,
                "onUpdate:modelValue": d[0] || (d[0] = (x) => e.value = x),
                placeholder: "Username",
                size: "small"
              }, null, 8, ["modelValue"])
            ]),
            _: 1
          })
        ]),
        v("div", SA, [
          P(u, {
            type: "text",
            modelValue: n.value,
            "onUpdate:modelValue": d[1] || (d[1] = (x) => n.value = x)
          }, null, 8, ["modelValue"]),
          P(p, { label: "test" }),
          P(p, {
            label: "disabled",
            disabled: ""
          }),
          v("div", IA, [
            P(h, {
              modelValue: i.value,
              "onUpdate:modelValue": d[2] || (d[2] = (x) => i.value = x),
              variant: "filled",
              rows: "2",
              cols: "30"
            }, null, 8, ["modelValue"])
          ])
        ]),
        v("div", OA, [
          P(g, {
            modelValue: a.value,
            "onUpdate:modelValue": d[3] || (d[3] = (x) => a.value = x),
            options: l.value,
            showClear: "",
            optionLabel: "name",
            placeholder: "Select a City",
            class: "w-full md:w-56"
          }, null, 8, ["modelValue", "options"])
        ]),
        v("div", PA, [
          P(b, { variant: "on" }, {
            default: E(() => [
              P(u, {
                id: "on_label",
                modelValue: o.value,
                "onUpdate:modelValue": d[4] || (d[4] = (x) => o.value = x),
                autocomplete: "off"
              }, null, 8, ["modelValue"]),
              d[8] || (d[8] = v("label", { for: "on_label" }, "就醫序號", -1))
            ]),
            _: 1
          })
        ]),
        v("div", $A, [
          P(bA)
        ]),
        v("div", null, [
          P(CA, { patientFields: [
            { label: "病歷號", value: "0201234" },
            { label: "就醫號", value: "IA130798" },
            { label: "姓名", value: "林偉哲" },
            { label: "性別", value: "男" },
            { label: "出生日期", value: "1971-08-30 (52y11m17d)" },
            { label: "身分證號", value: "E123456789" }
          ] })
        ]),
        v("div", TA, [
          P(p, {
            label: "?",
            onClick: d[5] || (d[5] = (x) => r.value = !0),
            severity: "danger",
            rounded: "",
            raised: "",
            "aria-label": "QA",
            text: "",
            pt: {
              root: {
                class: "bg-transparent hover:bg-gray-300 border-none shadow-none"
              }
            }
          }),
          P(C, {
            visible: r.value,
            "onUpdate:visible": d[6] || (d[6] = (x) => r.value = x),
            header: "作業說明",
            position: "bottom",
            style: { height: "auto" }
          }, {
            default: E(() => [...d[9] || (d[9] = [
              v("p", null, "作業操作及作業規則問題： 宿舍：楊璧慈 #1122。 停車/分機：許怡婷 #1103。 制服：侯佳妤 #1104。 公會費：鄭乃 #1146。 手術室訂餐：營養科(組)。 合約書/合約用印：馬蘊淇 #1703。 系統維護：方誌緯 #1541/潘財文 #1519 ", -1)
            ])]),
            _: 1
          }, 8, ["visible"])
        ])
      ], 64);
    };
  }
});
function ot(t) {
  this.content = t;
}
ot.prototype = {
  constructor: ot,
  find: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      if (this.content[e] === t) return e;
    return -1;
  },
  // :: (string) → ?any
  // Retrieve the value stored under `key`, or return undefined when
  // no such key exists.
  get: function(t) {
    var e = this.find(t);
    return e == -1 ? void 0 : this.content[e + 1];
  },
  // :: (string, any, ?string) → OrderedMap
  // Create a new map by replacing the value of `key` with a new
  // value, or adding a binding to the end of the map. If `newKey` is
  // given, the key of the binding will be replaced with that key.
  update: function(t, e, n) {
    var o = n && n != t ? this.remove(n) : this, i = o.find(t), r = o.content.slice();
    return i == -1 ? r.push(n || t, e) : (r[i + 1] = e, n && (r[i] = n)), new ot(r);
  },
  // :: (string) → OrderedMap
  // Return a map with the given key removed, if it existed.
  remove: function(t) {
    var e = this.find(t);
    if (e == -1) return this;
    var n = this.content.slice();
    return n.splice(e, 2), new ot(n);
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the start of the map.
  addToStart: function(t, e) {
    return new ot([t, e].concat(this.remove(t).content));
  },
  // :: (string, any) → OrderedMap
  // Add a new key to the end of the map.
  addToEnd: function(t, e) {
    var n = this.remove(t).content.slice();
    return n.push(t, e), new ot(n);
  },
  // :: (string, string, any) → OrderedMap
  // Add a key after the given key. If `place` is not found, the new
  // key is added to the end.
  addBefore: function(t, e, n) {
    var o = this.remove(e), i = o.content.slice(), r = o.find(t);
    return i.splice(r == -1 ? i.length : r, 0, e, n), new ot(i);
  },
  // :: ((key: string, value: any))
  // Call the given function for each key/value pair in the map, in
  // order.
  forEach: function(t) {
    for (var e = 0; e < this.content.length; e += 2)
      t(this.content[e], this.content[e + 1]);
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by prepending the keys in this map that don't
  // appear in `map` before the keys in `map`.
  prepend: function(t) {
    return t = ot.from(t), t.size ? new ot(t.content.concat(this.subtract(t).content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a new map by appending the keys in this map that don't
  // appear in `map` after the keys in `map`.
  append: function(t) {
    return t = ot.from(t), t.size ? new ot(this.subtract(t).content.concat(t.content)) : this;
  },
  // :: (union<Object, OrderedMap>) → OrderedMap
  // Create a map containing all the keys in this map that don't
  // appear in `map`.
  subtract: function(t) {
    var e = this;
    t = ot.from(t);
    for (var n = 0; n < t.content.length; n += 2)
      e = e.remove(t.content[n]);
    return e;
  },
  // :: () → Object
  // Turn ordered map into a plain object.
  toObject: function() {
    var t = {};
    return this.forEach(function(e, n) {
      t[e] = n;
    }), t;
  },
  // :: number
  // The amount of keys in this map.
  get size() {
    return this.content.length >> 1;
  }
};
ot.from = function(t) {
  if (t instanceof ot) return t;
  var e = [];
  if (t) for (var n in t) e.push(n, t[n]);
  return new ot(e);
};
function Lg(t, e, n) {
  for (let o = 0; ; o++) {
    if (o == t.childCount || o == e.childCount)
      return t.childCount == e.childCount ? null : n;
    let i = t.child(o), r = e.child(o);
    if (i == r) {
      n += i.nodeSize;
      continue;
    }
    if (!i.sameMarkup(r))
      return n;
    if (i.isText && i.text != r.text) {
      for (let a = 0; i.text[a] == r.text[a]; a++)
        n++;
      return n;
    }
    if (i.content.size || r.content.size) {
      let a = Lg(i.content, r.content, n + 1);
      if (a != null)
        return a;
    }
    n += i.nodeSize;
  }
}
function zg(t, e, n, o) {
  for (let i = t.childCount, r = e.childCount; ; ) {
    if (i == 0 || r == 0)
      return i == r ? null : { a: n, b: o };
    let a = t.child(--i), l = e.child(--r), s = a.nodeSize;
    if (a == l) {
      n -= s, o -= s;
      continue;
    }
    if (!a.sameMarkup(l))
      return { a: n, b: o };
    if (a.isText && a.text != l.text) {
      let d = 0, c = Math.min(a.text.length, l.text.length);
      for (; d < c && a.text[a.text.length - d - 1] == l.text[l.text.length - d - 1]; )
        d++, n--, o--;
      return { a: n, b: o };
    }
    if (a.content.size || l.content.size) {
      let d = zg(a.content, l.content, n - 1, o - 1);
      if (d)
        return d;
    }
    n -= s, o -= s;
  }
}
class N {
  /**
  @internal
  */
  constructor(e, n) {
    if (this.content = e, this.size = n || 0, n == null)
      for (let o = 0; o < e.length; o++)
        this.size += e[o].nodeSize;
  }
  /**
  Invoke a callback for all descendant nodes between the given two
  positions (relative to start of this fragment). Doesn't descend
  into a node when the callback returns `false`.
  */
  nodesBetween(e, n, o, i = 0, r) {
    for (let a = 0, l = 0; l < n; a++) {
      let s = this.content[a], d = l + s.nodeSize;
      if (d > e && o(s, i + l, r || null, a) !== !1 && s.content.size) {
        let c = l + 1;
        s.nodesBetween(Math.max(0, e - c), Math.min(s.content.size, n - c), o, i + c);
      }
      l = d;
    }
  }
  /**
  Call the given callback for every descendant node. `pos` will be
  relative to the start of the fragment. The callback may return
  `false` to prevent traversal of a given node's children.
  */
  descendants(e) {
    this.nodesBetween(0, this.size, e);
  }
  /**
  Extract the text between `from` and `to`. See the same method on
  [`Node`](https://prosemirror.net/docs/ref/#model.Node.textBetween).
  */
  textBetween(e, n, o, i) {
    let r = "", a = !0;
    return this.nodesBetween(e, n, (l, s) => {
      let d = l.isText ? l.text.slice(Math.max(e, s) - s, n - s) : l.isLeaf ? i ? typeof i == "function" ? i(l) : i : l.type.spec.leafText ? l.type.spec.leafText(l) : "" : "";
      l.isBlock && (l.isLeaf && d || l.isTextblock) && o && (a ? a = !1 : r += o), r += d;
    }, 0), r;
  }
  /**
  Create a new fragment containing the combined content of this
  fragment and the other.
  */
  append(e) {
    if (!e.size)
      return this;
    if (!this.size)
      return e;
    let n = this.lastChild, o = e.firstChild, i = this.content.slice(), r = 0;
    for (n.isText && n.sameMarkup(o) && (i[i.length - 1] = n.withText(n.text + o.text), r = 1); r < e.content.length; r++)
      i.push(e.content[r]);
    return new N(i, this.size + e.size);
  }
  /**
  Cut out the sub-fragment between the two given positions.
  */
  cut(e, n = this.size) {
    if (e == 0 && n == this.size)
      return this;
    let o = [], i = 0;
    if (n > e)
      for (let r = 0, a = 0; a < n; r++) {
        let l = this.content[r], s = a + l.nodeSize;
        s > e && ((a < e || s > n) && (l.isText ? l = l.cut(Math.max(0, e - a), Math.min(l.text.length, n - a)) : l = l.cut(Math.max(0, e - a - 1), Math.min(l.content.size, n - a - 1))), o.push(l), i += l.nodeSize), a = s;
      }
    return new N(o, i);
  }
  /**
  @internal
  */
  cutByIndex(e, n) {
    return e == n ? N.empty : e == 0 && n == this.content.length ? this : new N(this.content.slice(e, n));
  }
  /**
  Create a new fragment in which the node at the given index is
  replaced by the given node.
  */
  replaceChild(e, n) {
    let o = this.content[e];
    if (o == n)
      return this;
    let i = this.content.slice(), r = this.size + n.nodeSize - o.nodeSize;
    return i[e] = n, new N(i, r);
  }
  /**
  Create a new fragment by prepending the given node to this
  fragment.
  */
  addToStart(e) {
    return new N([e].concat(this.content), this.size + e.nodeSize);
  }
  /**
  Create a new fragment by appending the given node to this
  fragment.
  */
  addToEnd(e) {
    return new N(this.content.concat(e), this.size + e.nodeSize);
  }
  /**
  Compare this fragment to another one.
  */
  eq(e) {
    if (this.content.length != e.content.length)
      return !1;
    for (let n = 0; n < this.content.length; n++)
      if (!this.content[n].eq(e.content[n]))
        return !1;
    return !0;
  }
  /**
  The first child of the fragment, or `null` if it is empty.
  */
  get firstChild() {
    return this.content.length ? this.content[0] : null;
  }
  /**
  The last child of the fragment, or `null` if it is empty.
  */
  get lastChild() {
    return this.content.length ? this.content[this.content.length - 1] : null;
  }
  /**
  The number of child nodes in this fragment.
  */
  get childCount() {
    return this.content.length;
  }
  /**
  Get the child node at the given index. Raise an error when the
  index is out of range.
  */
  child(e) {
    let n = this.content[e];
    if (!n)
      throw new RangeError("Index " + e + " out of range for " + this);
    return n;
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content[e] || null;
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    for (let n = 0, o = 0; n < this.content.length; n++) {
      let i = this.content[n];
      e(i, o, n), o += i.nodeSize;
    }
  }
  /**
  Find the first position at which this fragment and another
  fragment differ, or `null` if they are the same.
  */
  findDiffStart(e, n = 0) {
    return Lg(this, e, n);
  }
  /**
  Find the first position, searching from the end, at which this
  fragment and the given fragment differ, or `null` if they are
  the same. Since this position will not be the same in both
  nodes, an object with two separate positions is returned.
  */
  findDiffEnd(e, n = this.size, o = e.size) {
    return zg(this, e, n, o);
  }
  /**
  Find the index and inner offset corresponding to a given relative
  position in this fragment. The result object will be reused
  (overwritten) the next time the function is called. @internal
  */
  findIndex(e) {
    if (e == 0)
      return Ta(0, e);
    if (e == this.size)
      return Ta(this.content.length, e);
    if (e > this.size || e < 0)
      throw new RangeError(`Position ${e} outside of fragment (${this})`);
    for (let n = 0, o = 0; ; n++) {
      let i = this.child(n), r = o + i.nodeSize;
      if (r >= e)
        return r == e ? Ta(n + 1, r) : Ta(n, o);
      o = r;
    }
  }
  /**
  Return a debugging string that describes this fragment.
  */
  toString() {
    return "<" + this.toStringInner() + ">";
  }
  /**
  @internal
  */
  toStringInner() {
    return this.content.join(", ");
  }
  /**
  Create a JSON-serializeable representation of this fragment.
  */
  toJSON() {
    return this.content.length ? this.content.map((e) => e.toJSON()) : null;
  }
  /**
  Deserialize a fragment from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return N.empty;
    if (!Array.isArray(n))
      throw new RangeError("Invalid input for Fragment.fromJSON");
    return new N(n.map(e.nodeFromJSON));
  }
  /**
  Build a fragment from an array of nodes. Ensures that adjacent
  text nodes with the same marks are joined together.
  */
  static fromArray(e) {
    if (!e.length)
      return N.empty;
    let n, o = 0;
    for (let i = 0; i < e.length; i++) {
      let r = e[i];
      o += r.nodeSize, i && r.isText && e[i - 1].sameMarkup(r) ? (n || (n = e.slice(0, i)), n[n.length - 1] = r.withText(n[n.length - 1].text + r.text)) : n && n.push(r);
    }
    return new N(n || e, o);
  }
  /**
  Create a fragment from something that can be interpreted as a
  set of nodes. For `null`, it returns the empty fragment. For a
  fragment, the fragment itself. For a node or array of nodes, a
  fragment containing those nodes.
  */
  static from(e) {
    if (!e)
      return N.empty;
    if (e instanceof N)
      return e;
    if (Array.isArray(e))
      return this.fromArray(e);
    if (e.attrs)
      return new N([e], e.nodeSize);
    throw new RangeError("Can not convert " + e + " to a Fragment" + (e.nodesBetween ? " (looks like multiple versions of prosemirror-model were loaded)" : ""));
  }
}
N.empty = new N([], 0);
const is = { index: 0, offset: 0 };
function Ta(t, e) {
  return is.index = t, is.offset = e, is;
}
function tl(t, e) {
  if (t === e)
    return !0;
  if (!(t && typeof t == "object") || !(e && typeof e == "object"))
    return !1;
  let n = Array.isArray(t);
  if (Array.isArray(e) != n)
    return !1;
  if (n) {
    if (t.length != e.length)
      return !1;
    for (let o = 0; o < t.length; o++)
      if (!tl(t[o], e[o]))
        return !1;
  } else {
    for (let o in t)
      if (!(o in e) || !tl(t[o], e[o]))
        return !1;
    for (let o in e)
      if (!(o in t))
        return !1;
  }
  return !0;
}
let Ae = class zd {
  /**
  @internal
  */
  constructor(e, n) {
    this.type = e, this.attrs = n;
  }
  /**
  Given a set of marks, create a new set which contains this one as
  well, in the right position. If this mark is already in the set,
  the set itself is returned. If any marks that are set to be
  [exclusive](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) with this mark are present,
  those are replaced by this one.
  */
  addToSet(e) {
    let n, o = !1;
    for (let i = 0; i < e.length; i++) {
      let r = e[i];
      if (this.eq(r))
        return e;
      if (this.type.excludes(r.type))
        n || (n = e.slice(0, i));
      else {
        if (r.type.excludes(this.type))
          return e;
        !o && r.type.rank > this.type.rank && (n || (n = e.slice(0, i)), n.push(this), o = !0), n && n.push(r);
      }
    }
    return n || (n = e.slice()), o || n.push(this), n;
  }
  /**
  Remove this mark from the given set, returning a new set. If this
  mark is not in the set, the set itself is returned.
  */
  removeFromSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return e.slice(0, n).concat(e.slice(n + 1));
    return e;
  }
  /**
  Test whether this mark is in the given set of marks.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (this.eq(e[n]))
        return !0;
    return !1;
  }
  /**
  Test whether this mark has the same type and attributes as
  another mark.
  */
  eq(e) {
    return this == e || this.type == e.type && tl(this.attrs, e.attrs);
  }
  /**
  Convert this mark to a JSON-serializeable representation.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return e;
  }
  /**
  Deserialize a mark from JSON.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Mark.fromJSON");
    let o = e.marks[n.type];
    if (!o)
      throw new RangeError(`There is no mark type ${n.type} in this schema`);
    let i = o.create(n.attrs);
    return o.checkAttrs(i.attrs), i;
  }
  /**
  Test whether two sets of marks are identical.
  */
  static sameSet(e, n) {
    if (e == n)
      return !0;
    if (e.length != n.length)
      return !1;
    for (let o = 0; o < e.length; o++)
      if (!e[o].eq(n[o]))
        return !1;
    return !0;
  }
  /**
  Create a properly sorted mark set from null, a single mark, or an
  unsorted array of marks.
  */
  static setFrom(e) {
    if (!e || Array.isArray(e) && e.length == 0)
      return zd.none;
    if (e instanceof zd)
      return [e];
    let n = e.slice();
    return n.sort((o, i) => o.type.rank - i.type.rank), n;
  }
};
Ae.none = [];
class nl extends Error {
}
class J {
  /**
  Create a slice. When specifying a non-zero open depth, you must
  make sure that there are nodes of at least that depth at the
  appropriate side of the fragment—i.e. if the fragment is an
  empty paragraph node, `openStart` and `openEnd` can't be greater
  than 1.
  
  It is not necessary for the content of open nodes to conform to
  the schema's content constraints, though it should be a valid
  start/end/middle for such a node, depending on which sides are
  open.
  */
  constructor(e, n, o) {
    this.content = e, this.openStart = n, this.openEnd = o;
  }
  /**
  The size this slice would add when inserted into a document.
  */
  get size() {
    return this.content.size - this.openStart - this.openEnd;
  }
  /**
  @internal
  */
  insertAt(e, n) {
    let o = Ng(this.content, e + this.openStart, n);
    return o && new J(o, this.openStart, this.openEnd);
  }
  /**
  @internal
  */
  removeBetween(e, n) {
    return new J(Fg(this.content, e + this.openStart, n + this.openStart), this.openStart, this.openEnd);
  }
  /**
  Tests whether this slice is equal to another slice.
  */
  eq(e) {
    return this.content.eq(e.content) && this.openStart == e.openStart && this.openEnd == e.openEnd;
  }
  /**
  @internal
  */
  toString() {
    return this.content + "(" + this.openStart + "," + this.openEnd + ")";
  }
  /**
  Convert a slice to a JSON-serializable representation.
  */
  toJSON() {
    if (!this.content.size)
      return null;
    let e = { content: this.content.toJSON() };
    return this.openStart > 0 && (e.openStart = this.openStart), this.openEnd > 0 && (e.openEnd = this.openEnd), e;
  }
  /**
  Deserialize a slice from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      return J.empty;
    let o = n.openStart || 0, i = n.openEnd || 0;
    if (typeof o != "number" || typeof i != "number")
      throw new RangeError("Invalid input for Slice.fromJSON");
    return new J(N.fromJSON(e, n.content), o, i);
  }
  /**
  Create a slice from a fragment by taking the maximum possible
  open value on both side of the fragment.
  */
  static maxOpen(e, n = !0) {
    let o = 0, i = 0;
    for (let r = e.firstChild; r && !r.isLeaf && (n || !r.type.spec.isolating); r = r.firstChild)
      o++;
    for (let r = e.lastChild; r && !r.isLeaf && (n || !r.type.spec.isolating); r = r.lastChild)
      i++;
    return new J(e, o, i);
  }
}
J.empty = new J(N.empty, 0, 0);
function Fg(t, e, n) {
  let { index: o, offset: i } = t.findIndex(e), r = t.maybeChild(o), { index: a, offset: l } = t.findIndex(n);
  if (i == e || r.isText) {
    if (l != n && !t.child(a).isText)
      throw new RangeError("Removing non-flat range");
    return t.cut(0, e).append(t.cut(n));
  }
  if (o != a)
    throw new RangeError("Removing non-flat range");
  return t.replaceChild(o, r.copy(Fg(r.content, e - i - 1, n - i - 1)));
}
function Ng(t, e, n, o) {
  let { index: i, offset: r } = t.findIndex(e), a = t.maybeChild(i);
  if (r == e || a.isText)
    return o && !o.canReplace(i, i, n) ? null : t.cut(0, e).append(n).append(t.cut(e));
  let l = Ng(a.content, e - r - 1, n, a);
  return l && t.replaceChild(i, a.copy(l));
}
function BA(t, e, n) {
  if (n.openStart > t.depth)
    throw new nl("Inserted content deeper than insertion position");
  if (t.depth - n.openStart != e.depth - n.openEnd)
    throw new nl("Inconsistent open depths");
  return jg(t, e, n, 0);
}
function jg(t, e, n, o) {
  let i = t.index(o), r = t.node(o);
  if (i == e.index(o) && o < t.depth - n.openStart) {
    let a = jg(t, e, n, o + 1);
    return r.copy(r.content.replaceChild(i, a));
  } else if (n.content.size)
    if (!n.openStart && !n.openEnd && t.depth == o && e.depth == o) {
      let a = t.parent, l = a.content;
      return wo(a, l.cut(0, t.parentOffset).append(n.content).append(l.cut(e.parentOffset)));
    } else {
      let { start: a, end: l } = EA(n, t);
      return wo(r, _g(t, a, l, e, o));
    }
  else return wo(r, ol(t, e, o));
}
function Vg(t, e) {
  if (!e.type.compatibleContent(t.type))
    throw new nl("Cannot join " + e.type.name + " onto " + t.type.name);
}
function Fd(t, e, n) {
  let o = t.node(n);
  return Vg(o, e.node(n)), o;
}
function ko(t, e) {
  let n = e.length - 1;
  n >= 0 && t.isText && t.sameMarkup(e[n]) ? e[n] = t.withText(e[n].text + t.text) : e.push(t);
}
function Lr(t, e, n, o) {
  let i = (e || t).node(n), r = 0, a = e ? e.index(n) : i.childCount;
  t && (r = t.index(n), t.depth > n ? r++ : t.textOffset && (ko(t.nodeAfter, o), r++));
  for (let l = r; l < a; l++)
    ko(i.child(l), o);
  e && e.depth == n && e.textOffset && ko(e.nodeBefore, o);
}
function wo(t, e) {
  return t.type.checkContent(e), t.copy(e);
}
function _g(t, e, n, o, i) {
  let r = t.depth > i && Fd(t, e, i + 1), a = o.depth > i && Fd(n, o, i + 1), l = [];
  return Lr(null, t, i, l), r && a && e.index(i) == n.index(i) ? (Vg(r, a), ko(wo(r, _g(t, e, n, o, i + 1)), l)) : (r && ko(wo(r, ol(t, e, i + 1)), l), Lr(e, n, i, l), a && ko(wo(a, ol(n, o, i + 1)), l)), Lr(o, null, i, l), new N(l);
}
function ol(t, e, n) {
  let o = [];
  if (Lr(null, t, n, o), t.depth > n) {
    let i = Fd(t, e, n + 1);
    ko(wo(i, ol(t, e, n + 1)), o);
  }
  return Lr(e, null, n, o), new N(o);
}
function EA(t, e) {
  let n = e.depth - t.openStart, i = e.node(n).copy(t.content);
  for (let r = n - 1; r >= 0; r--)
    i = e.node(r).copy(N.from(i));
  return {
    start: i.resolveNoCache(t.openStart + n),
    end: i.resolveNoCache(i.content.size - t.openEnd - n)
  };
}
class Vi {
  /**
  @internal
  */
  constructor(e, n, o) {
    this.pos = e, this.path = n, this.parentOffset = o, this.depth = n.length / 3 - 1;
  }
  /**
  @internal
  */
  resolveDepth(e) {
    return e == null ? this.depth : e < 0 ? this.depth + e : e;
  }
  /**
  The parent node that the position points into. Note that even if
  a position points into a text node, that node is not considered
  the parent—text nodes are ‘flat’ in this model, and have no content.
  */
  get parent() {
    return this.node(this.depth);
  }
  /**
  The root node in which the position was resolved.
  */
  get doc() {
    return this.node(0);
  }
  /**
  The ancestor node at the given level. `p.node(p.depth)` is the
  same as `p.parent`.
  */
  node(e) {
    return this.path[this.resolveDepth(e) * 3];
  }
  /**
  The index into the ancestor at the given level. If this points
  at the 3rd node in the 2nd paragraph on the top level, for
  example, `p.index(0)` is 1 and `p.index(1)` is 2.
  */
  index(e) {
    return this.path[this.resolveDepth(e) * 3 + 1];
  }
  /**
  The index pointing after this position into the ancestor at the
  given level.
  */
  indexAfter(e) {
    return e = this.resolveDepth(e), this.index(e) + (e == this.depth && !this.textOffset ? 0 : 1);
  }
  /**
  The (absolute) position at the start of the node at the given
  level.
  */
  start(e) {
    return e = this.resolveDepth(e), e == 0 ? 0 : this.path[e * 3 - 1] + 1;
  }
  /**
  The (absolute) position at the end of the node at the given
  level.
  */
  end(e) {
    return e = this.resolveDepth(e), this.start(e) + this.node(e).content.size;
  }
  /**
  The (absolute) position directly before the wrapping node at the
  given level, or, when `depth` is `this.depth + 1`, the original
  position.
  */
  before(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position before the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1];
  }
  /**
  The (absolute) position directly after the wrapping node at the
  given level, or the original position when `depth` is `this.depth + 1`.
  */
  after(e) {
    if (e = this.resolveDepth(e), !e)
      throw new RangeError("There is no position after the top-level node");
    return e == this.depth + 1 ? this.pos : this.path[e * 3 - 1] + this.path[e * 3].nodeSize;
  }
  /**
  When this position points into a text node, this returns the
  distance between the position and the start of the text node.
  Will be zero for positions that point between nodes.
  */
  get textOffset() {
    return this.pos - this.path[this.path.length - 1];
  }
  /**
  Get the node directly after the position, if any. If the position
  points into a text node, only the part of that node after the
  position is returned.
  */
  get nodeAfter() {
    let e = this.parent, n = this.index(this.depth);
    if (n == e.childCount)
      return null;
    let o = this.pos - this.path[this.path.length - 1], i = e.child(n);
    return o ? e.child(n).cut(o) : i;
  }
  /**
  Get the node directly before the position, if any. If the
  position points into a text node, only the part of that node
  before the position is returned.
  */
  get nodeBefore() {
    let e = this.index(this.depth), n = this.pos - this.path[this.path.length - 1];
    return n ? this.parent.child(e).cut(0, n) : e == 0 ? null : this.parent.child(e - 1);
  }
  /**
  Get the position at the given index in the parent node at the
  given depth (which defaults to `this.depth`).
  */
  posAtIndex(e, n) {
    n = this.resolveDepth(n);
    let o = this.path[n * 3], i = n == 0 ? 0 : this.path[n * 3 - 1] + 1;
    for (let r = 0; r < e; r++)
      i += o.child(r).nodeSize;
    return i;
  }
  /**
  Get the marks at this position, factoring in the surrounding
  marks' [`inclusive`](https://prosemirror.net/docs/ref/#model.MarkSpec.inclusive) property. If the
  position is at the start of a non-empty node, the marks of the
  node after it (if any) are returned.
  */
  marks() {
    let e = this.parent, n = this.index();
    if (e.content.size == 0)
      return Ae.none;
    if (this.textOffset)
      return e.child(n).marks;
    let o = e.maybeChild(n - 1), i = e.maybeChild(n);
    if (!o) {
      let l = o;
      o = i, i = l;
    }
    let r = o.marks;
    for (var a = 0; a < r.length; a++)
      r[a].type.spec.inclusive === !1 && (!i || !r[a].isInSet(i.marks)) && (r = r[a--].removeFromSet(r));
    return r;
  }
  /**
  Get the marks after the current position, if any, except those
  that are non-inclusive and not present at position `$end`. This
  is mostly useful for getting the set of marks to preserve after a
  deletion. Will return `null` if this position is at the end of
  its parent node or its parent node isn't a textblock (in which
  case no marks should be preserved).
  */
  marksAcross(e) {
    let n = this.parent.maybeChild(this.index());
    if (!n || !n.isInline)
      return null;
    let o = n.marks, i = e.parent.maybeChild(e.index());
    for (var r = 0; r < o.length; r++)
      o[r].type.spec.inclusive === !1 && (!i || !o[r].isInSet(i.marks)) && (o = o[r--].removeFromSet(o));
    return o;
  }
  /**
  The depth up to which this position and the given (non-resolved)
  position share the same parent nodes.
  */
  sharedDepth(e) {
    for (let n = this.depth; n > 0; n--)
      if (this.start(n) <= e && this.end(n) >= e)
        return n;
    return 0;
  }
  /**
  Returns a range based on the place where this position and the
  given position diverge around block content. If both point into
  the same textblock, for example, a range around that textblock
  will be returned. If they point into different blocks, the range
  around those blocks in their shared ancestor is returned. You can
  pass in an optional predicate that will be called with a parent
  node to see if a range into that parent is acceptable.
  */
  blockRange(e = this, n) {
    if (e.pos < this.pos)
      return e.blockRange(this);
    for (let o = this.depth - (this.parent.inlineContent || this.pos == e.pos ? 1 : 0); o >= 0; o--)
      if (e.pos <= this.end(o) && (!n || n(this.node(o))))
        return new rl(this, e, o);
    return null;
  }
  /**
  Query whether the given position shares the same parent node.
  */
  sameParent(e) {
    return this.pos - this.parentOffset == e.pos - e.parentOffset;
  }
  /**
  Return the greater of this and the given position.
  */
  max(e) {
    return e.pos > this.pos ? e : this;
  }
  /**
  Return the smaller of this and the given position.
  */
  min(e) {
    return e.pos < this.pos ? e : this;
  }
  /**
  @internal
  */
  toString() {
    let e = "";
    for (let n = 1; n <= this.depth; n++)
      e += (e ? "/" : "") + this.node(n).type.name + "_" + this.index(n - 1);
    return e + ":" + this.parentOffset;
  }
  /**
  @internal
  */
  static resolve(e, n) {
    if (!(n >= 0 && n <= e.content.size))
      throw new RangeError("Position " + n + " out of range");
    let o = [], i = 0, r = n;
    for (let a = e; ; ) {
      let { index: l, offset: s } = a.content.findIndex(r), d = r - s;
      if (o.push(a, l, i + s), !d || (a = a.child(l), a.isText))
        break;
      r = d - 1, i += s + 1;
    }
    return new Vi(n, o, r);
  }
  /**
  @internal
  */
  static resolveCached(e, n) {
    let o = lf.get(e);
    if (o)
      for (let r = 0; r < o.elts.length; r++) {
        let a = o.elts[r];
        if (a.pos == n)
          return a;
      }
    else
      lf.set(e, o = new MA());
    let i = o.elts[o.i] = Vi.resolve(e, n);
    return o.i = (o.i + 1) % AA, i;
  }
}
class MA {
  constructor() {
    this.elts = [], this.i = 0;
  }
}
const AA = 12, lf = /* @__PURE__ */ new WeakMap();
class rl {
  /**
  Construct a node range. `$from` and `$to` should point into the
  same node until at least the given `depth`, since a node range
  denotes an adjacent set of nodes in a single parent node.
  */
  constructor(e, n, o) {
    this.$from = e, this.$to = n, this.depth = o;
  }
  /**
  The position at the start of the range.
  */
  get start() {
    return this.$from.before(this.depth + 1);
  }
  /**
  The position at the end of the range.
  */
  get end() {
    return this.$to.after(this.depth + 1);
  }
  /**
  The parent node that the range points into.
  */
  get parent() {
    return this.$from.node(this.depth);
  }
  /**
  The start index of the range in the parent node.
  */
  get startIndex() {
    return this.$from.index(this.depth);
  }
  /**
  The end index of the range in the parent node.
  */
  get endIndex() {
    return this.$to.indexAfter(this.depth);
  }
}
const DA = /* @__PURE__ */ Object.create(null);
let qn = class Nd {
  /**
  @internal
  */
  constructor(e, n, o, i = Ae.none) {
    this.type = e, this.attrs = n, this.marks = i, this.content = o || N.empty;
  }
  /**
  The array of this node's child nodes.
  */
  get children() {
    return this.content.content;
  }
  /**
  The size of this node, as defined by the integer-based [indexing
  scheme](https://prosemirror.net/docs/guide/#doc.indexing). For text nodes, this is the
  amount of characters. For other leaf nodes, it is one. For
  non-leaf nodes, it is the size of the content plus two (the
  start and end token).
  */
  get nodeSize() {
    return this.isLeaf ? 1 : 2 + this.content.size;
  }
  /**
  The number of children that the node has.
  */
  get childCount() {
    return this.content.childCount;
  }
  /**
  Get the child node at the given index. Raises an error when the
  index is out of range.
  */
  child(e) {
    return this.content.child(e);
  }
  /**
  Get the child node at the given index, if it exists.
  */
  maybeChild(e) {
    return this.content.maybeChild(e);
  }
  /**
  Call `f` for every child node, passing the node, its offset
  into this parent node, and its index.
  */
  forEach(e) {
    this.content.forEach(e);
  }
  /**
  Invoke a callback for all descendant nodes recursively between
  the given two positions that are relative to start of this
  node's content. The callback is invoked with the node, its
  position relative to the original node (method receiver),
  its parent node, and its child index. When the callback returns
  false for a given node, that node's children will not be
  recursed over. The last parameter can be used to specify a
  starting position to count from.
  */
  nodesBetween(e, n, o, i = 0) {
    this.content.nodesBetween(e, n, o, i, this);
  }
  /**
  Call the given callback for every descendant node. Doesn't
  descend into a node when the callback returns `false`.
  */
  descendants(e) {
    this.nodesBetween(0, this.content.size, e);
  }
  /**
  Concatenates all the text nodes found in this fragment and its
  children.
  */
  get textContent() {
    return this.isLeaf && this.type.spec.leafText ? this.type.spec.leafText(this) : this.textBetween(0, this.content.size, "");
  }
  /**
  Get all text between positions `from` and `to`. When
  `blockSeparator` is given, it will be inserted to separate text
  from different block nodes. If `leafText` is given, it'll be
  inserted for every non-text leaf node encountered, otherwise
  [`leafText`](https://prosemirror.net/docs/ref/#model.NodeSpec.leafText) will be used.
  */
  textBetween(e, n, o, i) {
    return this.content.textBetween(e, n, o, i);
  }
  /**
  Returns this node's first child, or `null` if there are no
  children.
  */
  get firstChild() {
    return this.content.firstChild;
  }
  /**
  Returns this node's last child, or `null` if there are no
  children.
  */
  get lastChild() {
    return this.content.lastChild;
  }
  /**
  Test whether two nodes represent the same piece of document.
  */
  eq(e) {
    return this == e || this.sameMarkup(e) && this.content.eq(e.content);
  }
  /**
  Compare the markup (type, attributes, and marks) of this node to
  those of another. Returns `true` if both have the same markup.
  */
  sameMarkup(e) {
    return this.hasMarkup(e.type, e.attrs, e.marks);
  }
  /**
  Check whether this node's markup correspond to the given type,
  attributes, and marks.
  */
  hasMarkup(e, n, o) {
    return this.type == e && tl(this.attrs, n || e.defaultAttrs || DA) && Ae.sameSet(this.marks, o || Ae.none);
  }
  /**
  Create a new node with the same markup as this node, containing
  the given content (or empty, if no content is given).
  */
  copy(e = null) {
    return e == this.content ? this : new Nd(this.type, this.attrs, e, this.marks);
  }
  /**
  Create a copy of this node, with the given set of marks instead
  of the node's own marks.
  */
  mark(e) {
    return e == this.marks ? this : new Nd(this.type, this.attrs, this.content, e);
  }
  /**
  Create a copy of this node with only the content between the
  given positions. If `to` is not given, it defaults to the end of
  the node.
  */
  cut(e, n = this.content.size) {
    return e == 0 && n == this.content.size ? this : this.copy(this.content.cut(e, n));
  }
  /**
  Cut out the part of the document between the given positions, and
  return it as a `Slice` object.
  */
  slice(e, n = this.content.size, o = !1) {
    if (e == n)
      return J.empty;
    let i = this.resolve(e), r = this.resolve(n), a = o ? 0 : i.sharedDepth(n), l = i.start(a), d = i.node(a).content.cut(i.pos - l, r.pos - l);
    return new J(d, i.depth - a, r.depth - a);
  }
  /**
  Replace the part of the document between the given positions with
  the given slice. The slice must 'fit', meaning its open sides
  must be able to connect to the surrounding content, and its
  content nodes must be valid children for the node they are placed
  into. If any of this is violated, an error of type
  [`ReplaceError`](https://prosemirror.net/docs/ref/#model.ReplaceError) is thrown.
  */
  replace(e, n, o) {
    return BA(this.resolve(e), this.resolve(n), o);
  }
  /**
  Find the node directly after the given position.
  */
  nodeAt(e) {
    for (let n = this; ; ) {
      let { index: o, offset: i } = n.content.findIndex(e);
      if (n = n.maybeChild(o), !n)
        return null;
      if (i == e || n.isText)
        return n;
      e -= i + 1;
    }
  }
  /**
  Find the (direct) child node after the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childAfter(e) {
    let { index: n, offset: o } = this.content.findIndex(e);
    return { node: this.content.maybeChild(n), index: n, offset: o };
  }
  /**
  Find the (direct) child node before the given offset, if any,
  and return it along with its index and offset relative to this
  node.
  */
  childBefore(e) {
    if (e == 0)
      return { node: null, index: 0, offset: 0 };
    let { index: n, offset: o } = this.content.findIndex(e);
    if (o < e)
      return { node: this.content.child(n), index: n, offset: o };
    let i = this.content.child(n - 1);
    return { node: i, index: n - 1, offset: o - i.nodeSize };
  }
  /**
  Resolve the given position in the document, returning an
  [object](https://prosemirror.net/docs/ref/#model.ResolvedPos) with information about its context.
  */
  resolve(e) {
    return Vi.resolveCached(this, e);
  }
  /**
  @internal
  */
  resolveNoCache(e) {
    return Vi.resolve(this, e);
  }
  /**
  Test whether a given mark or mark type occurs in this document
  between the two given positions.
  */
  rangeHasMark(e, n, o) {
    let i = !1;
    return n > e && this.nodesBetween(e, n, (r) => (o.isInSet(r.marks) && (i = !0), !i)), i;
  }
  /**
  True when this is a block (non-inline node)
  */
  get isBlock() {
    return this.type.isBlock;
  }
  /**
  True when this is a textblock node, a block node with inline
  content.
  */
  get isTextblock() {
    return this.type.isTextblock;
  }
  /**
  True when this node allows inline content.
  */
  get inlineContent() {
    return this.type.inlineContent;
  }
  /**
  True when this is an inline node (a text node or a node that can
  appear among text).
  */
  get isInline() {
    return this.type.isInline;
  }
  /**
  True when this is a text node.
  */
  get isText() {
    return this.type.isText;
  }
  /**
  True when this is a leaf node.
  */
  get isLeaf() {
    return this.type.isLeaf;
  }
  /**
  True when this is an atom, i.e. when it does not have directly
  editable content. This is usually the same as `isLeaf`, but can
  be configured with the [`atom` property](https://prosemirror.net/docs/ref/#model.NodeSpec.atom)
  on a node's spec (typically used when the node is displayed as
  an uneditable [node view](https://prosemirror.net/docs/ref/#view.NodeView)).
  */
  get isAtom() {
    return this.type.isAtom;
  }
  /**
  Return a string representation of this node for debugging
  purposes.
  */
  toString() {
    if (this.type.spec.toDebugString)
      return this.type.spec.toDebugString(this);
    let e = this.type.name;
    return this.content.size && (e += "(" + this.content.toStringInner() + ")"), Kg(this.marks, e);
  }
  /**
  Get the content match in this node at the given index.
  */
  contentMatchAt(e) {
    let n = this.type.contentMatch.matchFragment(this.content, 0, e);
    if (!n)
      throw new Error("Called contentMatchAt on a node with invalid content");
    return n;
  }
  /**
  Test whether replacing the range between `from` and `to` (by
  child index) with the given replacement fragment (which defaults
  to the empty fragment) would leave the node's content valid. You
  can optionally pass `start` and `end` indices into the
  replacement fragment.
  */
  canReplace(e, n, o = N.empty, i = 0, r = o.childCount) {
    let a = this.contentMatchAt(e).matchFragment(o, i, r), l = a && a.matchFragment(this.content, n);
    if (!l || !l.validEnd)
      return !1;
    for (let s = i; s < r; s++)
      if (!this.type.allowsMarks(o.child(s).marks))
        return !1;
    return !0;
  }
  /**
  Test whether replacing the range `from` to `to` (by index) with
  a node of the given type would leave the node's content valid.
  */
  canReplaceWith(e, n, o, i) {
    if (i && !this.type.allowsMarks(i))
      return !1;
    let r = this.contentMatchAt(e).matchType(o), a = r && r.matchFragment(this.content, n);
    return a ? a.validEnd : !1;
  }
  /**
  Test whether the given node's content could be appended to this
  node. If that node is empty, this will only return true if there
  is at least one node type that can appear in both nodes (to avoid
  merging completely incompatible nodes).
  */
  canAppend(e) {
    return e.content.size ? this.canReplace(this.childCount, this.childCount, e.content) : this.type.compatibleContent(e.type);
  }
  /**
  Check whether this node and its descendants conform to the
  schema, and raise an exception when they do not.
  */
  check() {
    this.type.checkContent(this.content), this.type.checkAttrs(this.attrs);
    let e = Ae.none;
    for (let n = 0; n < this.marks.length; n++) {
      let o = this.marks[n];
      o.type.checkAttrs(o.attrs), e = o.addToSet(e);
    }
    if (!Ae.sameSet(e, this.marks))
      throw new RangeError(`Invalid collection of marks for node ${this.type.name}: ${this.marks.map((n) => n.type.name)}`);
    this.content.forEach((n) => n.check());
  }
  /**
  Return a JSON-serializeable representation of this node.
  */
  toJSON() {
    let e = { type: this.type.name };
    for (let n in this.attrs) {
      e.attrs = this.attrs;
      break;
    }
    return this.content.size && (e.content = this.content.toJSON()), this.marks.length && (e.marks = this.marks.map((n) => n.toJSON())), e;
  }
  /**
  Deserialize a node from its JSON representation.
  */
  static fromJSON(e, n) {
    if (!n)
      throw new RangeError("Invalid input for Node.fromJSON");
    let o;
    if (n.marks) {
      if (!Array.isArray(n.marks))
        throw new RangeError("Invalid mark data for Node.fromJSON");
      o = n.marks.map(e.markFromJSON);
    }
    if (n.type == "text") {
      if (typeof n.text != "string")
        throw new RangeError("Invalid text node in JSON");
      return e.text(n.text, o);
    }
    let i = N.fromJSON(e, n.content), r = e.nodeType(n.type).create(n.attrs, i, o);
    return r.type.checkAttrs(r.attrs), r;
  }
};
qn.prototype.text = void 0;
class il extends qn {
  /**
  @internal
  */
  constructor(e, n, o, i) {
    if (super(e, n, null, i), !o)
      throw new RangeError("Empty text nodes are not allowed");
    this.text = o;
  }
  toString() {
    return this.type.spec.toDebugString ? this.type.spec.toDebugString(this) : Kg(this.marks, JSON.stringify(this.text));
  }
  get textContent() {
    return this.text;
  }
  textBetween(e, n) {
    return this.text.slice(e, n);
  }
  get nodeSize() {
    return this.text.length;
  }
  mark(e) {
    return e == this.marks ? this : new il(this.type, this.attrs, this.text, e);
  }
  withText(e) {
    return e == this.text ? this : new il(this.type, this.attrs, e, this.marks);
  }
  cut(e = 0, n = this.text.length) {
    return e == 0 && n == this.text.length ? this : this.withText(this.text.slice(e, n));
  }
  eq(e) {
    return this.sameMarkup(e) && this.text == e.text;
  }
  toJSON() {
    let e = super.toJSON();
    return e.text = this.text, e;
  }
}
function Kg(t, e) {
  for (let n = t.length - 1; n >= 0; n--)
    e = t[n].type.name + "(" + e + ")";
  return e;
}
class Oo {
  /**
  @internal
  */
  constructor(e) {
    this.validEnd = e, this.next = [], this.wrapCache = [];
  }
  /**
  @internal
  */
  static parse(e, n) {
    let o = new LA(e, n);
    if (o.next == null)
      return Oo.empty;
    let i = Hg(o);
    o.next && o.err("Unexpected trailing text");
    let r = KA(_A(i));
    return HA(r, o), r;
  }
  /**
  Match a node type, returning a match after that node if
  successful.
  */
  matchType(e) {
    for (let n = 0; n < this.next.length; n++)
      if (this.next[n].type == e)
        return this.next[n].next;
    return null;
  }
  /**
  Try to match a fragment. Returns the resulting match when
  successful.
  */
  matchFragment(e, n = 0, o = e.childCount) {
    let i = this;
    for (let r = n; i && r < o; r++)
      i = i.matchType(e.child(r).type);
    return i;
  }
  /**
  @internal
  */
  get inlineContent() {
    return this.next.length != 0 && this.next[0].type.isInline;
  }
  /**
  Get the first matching node type at this match position that can
  be generated.
  */
  get defaultType() {
    for (let e = 0; e < this.next.length; e++) {
      let { type: n } = this.next[e];
      if (!(n.isText || n.hasRequiredAttrs()))
        return n;
    }
    return null;
  }
  /**
  @internal
  */
  compatible(e) {
    for (let n = 0; n < this.next.length; n++)
      for (let o = 0; o < e.next.length; o++)
        if (this.next[n].type == e.next[o].type)
          return !0;
    return !1;
  }
  /**
  Try to match the given fragment, and if that fails, see if it can
  be made to match by inserting nodes in front of it. When
  successful, return a fragment of inserted nodes (which may be
  empty if nothing had to be inserted). When `toEnd` is true, only
  return a fragment if the resulting match goes to the end of the
  content expression.
  */
  fillBefore(e, n = !1, o = 0) {
    let i = [this];
    function r(a, l) {
      let s = a.matchFragment(e, o);
      if (s && (!n || s.validEnd))
        return N.from(l.map((d) => d.createAndFill()));
      for (let d = 0; d < a.next.length; d++) {
        let { type: c, next: u } = a.next[d];
        if (!(c.isText || c.hasRequiredAttrs()) && i.indexOf(u) == -1) {
          i.push(u);
          let f = r(u, l.concat(c));
          if (f)
            return f;
        }
      }
      return null;
    }
    return r(this, []);
  }
  /**
  Find a set of wrapping node types that would allow a node of the
  given type to appear at this position. The result may be empty
  (when it fits directly) and will be null when no such wrapping
  exists.
  */
  findWrapping(e) {
    for (let o = 0; o < this.wrapCache.length; o += 2)
      if (this.wrapCache[o] == e)
        return this.wrapCache[o + 1];
    let n = this.computeWrapping(e);
    return this.wrapCache.push(e, n), n;
  }
  /**
  @internal
  */
  computeWrapping(e) {
    let n = /* @__PURE__ */ Object.create(null), o = [{ match: this, type: null, via: null }];
    for (; o.length; ) {
      let i = o.shift(), r = i.match;
      if (r.matchType(e)) {
        let a = [];
        for (let l = i; l.type; l = l.via)
          a.push(l.type);
        return a.reverse();
      }
      for (let a = 0; a < r.next.length; a++) {
        let { type: l, next: s } = r.next[a];
        !l.isLeaf && !l.hasRequiredAttrs() && !(l.name in n) && (!i.type || s.validEnd) && (o.push({ match: l.contentMatch, type: l, via: i }), n[l.name] = !0);
      }
    }
    return null;
  }
  /**
  The number of outgoing edges this node has in the finite
  automaton that describes the content expression.
  */
  get edgeCount() {
    return this.next.length;
  }
  /**
  Get the _n_​th outgoing edge from this node in the finite
  automaton that describes the content expression.
  */
  edge(e) {
    if (e >= this.next.length)
      throw new RangeError(`There's no ${e}th edge in this content match`);
    return this.next[e];
  }
  /**
  @internal
  */
  toString() {
    let e = [];
    function n(o) {
      e.push(o);
      for (let i = 0; i < o.next.length; i++)
        e.indexOf(o.next[i].next) == -1 && n(o.next[i].next);
    }
    return n(this), e.map((o, i) => {
      let r = i + (o.validEnd ? "*" : " ") + " ";
      for (let a = 0; a < o.next.length; a++)
        r += (a ? ", " : "") + o.next[a].type.name + "->" + e.indexOf(o.next[a].next);
      return r;
    }).join(`
`);
  }
}
Oo.empty = new Oo(!0);
class LA {
  constructor(e, n) {
    this.string = e, this.nodeTypes = n, this.inline = null, this.pos = 0, this.tokens = e.split(/\s*(?=\b|\W|$)/), this.tokens[this.tokens.length - 1] == "" && this.tokens.pop(), this.tokens[0] == "" && this.tokens.shift();
  }
  get next() {
    return this.tokens[this.pos];
  }
  eat(e) {
    return this.next == e && (this.pos++ || !0);
  }
  err(e) {
    throw new SyntaxError(e + " (in content expression '" + this.string + "')");
  }
}
function Hg(t) {
  let e = [];
  do
    e.push(zA(t));
  while (t.eat("|"));
  return e.length == 1 ? e[0] : { type: "choice", exprs: e };
}
function zA(t) {
  let e = [];
  do
    e.push(FA(t));
  while (t.next && t.next != ")" && t.next != "|");
  return e.length == 1 ? e[0] : { type: "seq", exprs: e };
}
function FA(t) {
  let e = VA(t);
  for (; ; )
    if (t.eat("+"))
      e = { type: "plus", expr: e };
    else if (t.eat("*"))
      e = { type: "star", expr: e };
    else if (t.eat("?"))
      e = { type: "opt", expr: e };
    else if (t.eat("{"))
      e = NA(t, e);
    else
      break;
  return e;
}
function sf(t) {
  /\D/.test(t.next) && t.err("Expected number, got '" + t.next + "'");
  let e = Number(t.next);
  return t.pos++, e;
}
function NA(t, e) {
  let n = sf(t), o = n;
  return t.eat(",") && (t.next != "}" ? o = sf(t) : o = -1), t.eat("}") || t.err("Unclosed braced range"), { type: "range", min: n, max: o, expr: e };
}
function jA(t, e) {
  let n = t.nodeTypes, o = n[e];
  if (o)
    return [o];
  let i = [];
  for (let r in n) {
    let a = n[r];
    a.isInGroup(e) && i.push(a);
  }
  return i.length == 0 && t.err("No node type or group '" + e + "' found"), i;
}
function VA(t) {
  if (t.eat("(")) {
    let e = Hg(t);
    return t.eat(")") || t.err("Missing closing paren"), e;
  } else if (/\W/.test(t.next))
    t.err("Unexpected token '" + t.next + "'");
  else {
    let e = jA(t, t.next).map((n) => (t.inline == null ? t.inline = n.isInline : t.inline != n.isInline && t.err("Mixing inline and block content"), { type: "name", value: n }));
    return t.pos++, e.length == 1 ? e[0] : { type: "choice", exprs: e };
  }
}
function _A(t) {
  let e = [[]];
  return i(r(t, 0), n()), e;
  function n() {
    return e.push([]) - 1;
  }
  function o(a, l, s) {
    let d = { term: s, to: l };
    return e[a].push(d), d;
  }
  function i(a, l) {
    a.forEach((s) => s.to = l);
  }
  function r(a, l) {
    if (a.type == "choice")
      return a.exprs.reduce((s, d) => s.concat(r(d, l)), []);
    if (a.type == "seq")
      for (let s = 0; ; s++) {
        let d = r(a.exprs[s], l);
        if (s == a.exprs.length - 1)
          return d;
        i(d, l = n());
      }
    else if (a.type == "star") {
      let s = n();
      return o(l, s), i(r(a.expr, s), s), [o(s)];
    } else if (a.type == "plus") {
      let s = n();
      return i(r(a.expr, l), s), i(r(a.expr, s), s), [o(s)];
    } else {
      if (a.type == "opt")
        return [o(l)].concat(r(a.expr, l));
      if (a.type == "range") {
        let s = l;
        for (let d = 0; d < a.min; d++) {
          let c = n();
          i(r(a.expr, s), c), s = c;
        }
        if (a.max == -1)
          i(r(a.expr, s), s);
        else
          for (let d = a.min; d < a.max; d++) {
            let c = n();
            o(s, c), i(r(a.expr, s), c), s = c;
          }
        return [o(s)];
      } else {
        if (a.type == "name")
          return [o(l, void 0, a.value)];
        throw new Error("Unknown expr type");
      }
    }
  }
}
function Wg(t, e) {
  return e - t;
}
function df(t, e) {
  let n = [];
  return o(e), n.sort(Wg);
  function o(i) {
    let r = t[i];
    if (r.length == 1 && !r[0].term)
      return o(r[0].to);
    n.push(i);
    for (let a = 0; a < r.length; a++) {
      let { term: l, to: s } = r[a];
      !l && n.indexOf(s) == -1 && o(s);
    }
  }
}
function KA(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return n(df(t, 0));
  function n(o) {
    let i = [];
    o.forEach((a) => {
      t[a].forEach(({ term: l, to: s }) => {
        if (!l)
          return;
        let d;
        for (let c = 0; c < i.length; c++)
          i[c][0] == l && (d = i[c][1]);
        df(t, s).forEach((c) => {
          d || i.push([l, d = []]), d.indexOf(c) == -1 && d.push(c);
        });
      });
    });
    let r = e[o.join(",")] = new Oo(o.indexOf(t.length - 1) > -1);
    for (let a = 0; a < i.length; a++) {
      let l = i[a][1].sort(Wg);
      r.next.push({ type: i[a][0], next: e[l.join(",")] || n(l) });
    }
    return r;
  }
}
function HA(t, e) {
  for (let n = 0, o = [t]; n < o.length; n++) {
    let i = o[n], r = !i.validEnd, a = [];
    for (let l = 0; l < i.next.length; l++) {
      let { type: s, next: d } = i.next[l];
      a.push(s.name), r && !(s.isText || s.hasRequiredAttrs()) && (r = !1), o.indexOf(d) == -1 && o.push(d);
    }
    r && e.err("Only non-generatable nodes (" + a.join(", ") + ") in a required position (see https://prosemirror.net/docs/guide/#generatable)");
  }
}
function Ug(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t) {
    let o = t[n];
    if (!o.hasDefault)
      return null;
    e[n] = o.default;
  }
  return e;
}
function Gg(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  for (let o in t) {
    let i = e && e[o];
    if (i === void 0) {
      let r = t[o];
      if (r.hasDefault)
        i = r.default;
      else
        throw new RangeError("No value supplied for attribute " + o);
    }
    n[o] = i;
  }
  return n;
}
function qg(t, e, n, o) {
  for (let i in e)
    if (!(i in t))
      throw new RangeError(`Unsupported attribute ${i} for ${n} of type ${i}`);
  for (let i in t) {
    let r = t[i];
    r.validate && r.validate(e[i]);
  }
}
function Jg(t, e) {
  let n = /* @__PURE__ */ Object.create(null);
  if (e)
    for (let o in e)
      n[o] = new UA(t, o, e[o]);
  return n;
}
let cf = class Yg {
  /**
  @internal
  */
  constructor(e, n, o) {
    this.name = e, this.schema = n, this.spec = o, this.markSet = null, this.groups = o.group ? o.group.split(" ") : [], this.attrs = Jg(e, o.attrs), this.defaultAttrs = Ug(this.attrs), this.contentMatch = null, this.inlineContent = null, this.isBlock = !(o.inline || e == "text"), this.isText = e == "text";
  }
  /**
  True if this is an inline type.
  */
  get isInline() {
    return !this.isBlock;
  }
  /**
  True if this is a textblock type, a block that contains inline
  content.
  */
  get isTextblock() {
    return this.isBlock && this.inlineContent;
  }
  /**
  True for node types that allow no content.
  */
  get isLeaf() {
    return this.contentMatch == Oo.empty;
  }
  /**
  True when this node is an atom, i.e. when it does not have
  directly editable content.
  */
  get isAtom() {
    return this.isLeaf || !!this.spec.atom;
  }
  /**
  Return true when this node type is part of the given
  [group](https://prosemirror.net/docs/ref/#model.NodeSpec.group).
  */
  isInGroup(e) {
    return this.groups.indexOf(e) > -1;
  }
  /**
  The node type's [whitespace](https://prosemirror.net/docs/ref/#model.NodeSpec.whitespace) option.
  */
  get whitespace() {
    return this.spec.whitespace || (this.spec.code ? "pre" : "normal");
  }
  /**
  Tells you whether this node type has any required attributes.
  */
  hasRequiredAttrs() {
    for (let e in this.attrs)
      if (this.attrs[e].isRequired)
        return !0;
    return !1;
  }
  /**
  Indicates whether this node allows some of the same content as
  the given node type.
  */
  compatibleContent(e) {
    return this == e || this.contentMatch.compatible(e.contentMatch);
  }
  /**
  @internal
  */
  computeAttrs(e) {
    return !e && this.defaultAttrs ? this.defaultAttrs : Gg(this.attrs, e);
  }
  /**
  Create a `Node` of this type. The given attributes are
  checked and defaulted (you can pass `null` to use the type's
  defaults entirely, if no required attributes exist). `content`
  may be a `Fragment`, a node, an array of nodes, or
  `null`. Similarly `marks` may be `null` to default to the empty
  set of marks.
  */
  create(e = null, n, o) {
    if (this.isText)
      throw new Error("NodeType.create can't construct text nodes");
    return new qn(this, this.computeAttrs(e), N.from(n), Ae.setFrom(o));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but check the given content
  against the node type's content restrictions, and throw an error
  if it doesn't match.
  */
  createChecked(e = null, n, o) {
    return n = N.from(n), this.checkContent(n), new qn(this, this.computeAttrs(e), n, Ae.setFrom(o));
  }
  /**
  Like [`create`](https://prosemirror.net/docs/ref/#model.NodeType.create), but see if it is
  necessary to add nodes to the start or end of the given fragment
  to make it fit the node. If no fitting wrapping can be found,
  return null. Note that, due to the fact that required nodes can
  always be created, this will always succeed if you pass null or
  `Fragment.empty` as content.
  */
  createAndFill(e = null, n, o) {
    if (e = this.computeAttrs(e), n = N.from(n), n.size) {
      let a = this.contentMatch.fillBefore(n);
      if (!a)
        return null;
      n = a.append(n);
    }
    let i = this.contentMatch.matchFragment(n), r = i && i.fillBefore(N.empty, !0);
    return r ? new qn(this, e, n.append(r), Ae.setFrom(o)) : null;
  }
  /**
  Returns true if the given fragment is valid content for this node
  type.
  */
  validContent(e) {
    let n = this.contentMatch.matchFragment(e);
    if (!n || !n.validEnd)
      return !1;
    for (let o = 0; o < e.childCount; o++)
      if (!this.allowsMarks(e.child(o).marks))
        return !1;
    return !0;
  }
  /**
  Throws a RangeError if the given fragment is not valid content for this
  node type.
  @internal
  */
  checkContent(e) {
    if (!this.validContent(e))
      throw new RangeError(`Invalid content for node ${this.name}: ${e.toString().slice(0, 50)}`);
  }
  /**
  @internal
  */
  checkAttrs(e) {
    qg(this.attrs, e, "node", this.name);
  }
  /**
  Check whether the given mark type is allowed in this node.
  */
  allowsMarkType(e) {
    return this.markSet == null || this.markSet.indexOf(e) > -1;
  }
  /**
  Test whether the given set of marks are allowed in this node.
  */
  allowsMarks(e) {
    if (this.markSet == null)
      return !0;
    for (let n = 0; n < e.length; n++)
      if (!this.allowsMarkType(e[n].type))
        return !1;
    return !0;
  }
  /**
  Removes the marks that are not allowed in this node from the given set.
  */
  allowedMarks(e) {
    if (this.markSet == null)
      return e;
    let n;
    for (let o = 0; o < e.length; o++)
      this.allowsMarkType(e[o].type) ? n && n.push(e[o]) : n || (n = e.slice(0, o));
    return n ? n.length ? n : Ae.none : e;
  }
  /**
  @internal
  */
  static compile(e, n) {
    let o = /* @__PURE__ */ Object.create(null);
    e.forEach((r, a) => o[r] = new Yg(r, n, a));
    let i = n.spec.topNode || "doc";
    if (!o[i])
      throw new RangeError("Schema is missing its top node type ('" + i + "')");
    if (!o.text)
      throw new RangeError("Every schema needs a 'text' type");
    for (let r in o.text.attrs)
      throw new RangeError("The text node type should not have attributes");
    return o;
  }
};
function WA(t, e, n) {
  let o = n.split("|");
  return (i) => {
    let r = i === null ? "null" : typeof i;
    if (o.indexOf(r) < 0)
      throw new RangeError(`Expected value of type ${o} for attribute ${e} on type ${t}, got ${r}`);
  };
}
class UA {
  constructor(e, n, o) {
    this.hasDefault = Object.prototype.hasOwnProperty.call(o, "default"), this.default = o.default, this.validate = typeof o.validate == "string" ? WA(e, n, o.validate) : o.validate;
  }
  get isRequired() {
    return !this.hasDefault;
  }
}
class Bl {
  /**
  @internal
  */
  constructor(e, n, o, i) {
    this.name = e, this.rank = n, this.schema = o, this.spec = i, this.attrs = Jg(e, i.attrs), this.excluded = null;
    let r = Ug(this.attrs);
    this.instance = r ? new Ae(this, r) : null;
  }
  /**
  Create a mark of this type. `attrs` may be `null` or an object
  containing only some of the mark's attributes. The others, if
  they have defaults, will be added.
  */
  create(e = null) {
    return !e && this.instance ? this.instance : new Ae(this, Gg(this.attrs, e));
  }
  /**
  @internal
  */
  static compile(e, n) {
    let o = /* @__PURE__ */ Object.create(null), i = 0;
    return e.forEach((r, a) => o[r] = new Bl(r, i++, n, a)), o;
  }
  /**
  When there is a mark of this type in the given set, a new set
  without it is returned. Otherwise, the input set is returned.
  */
  removeFromSet(e) {
    for (var n = 0; n < e.length; n++)
      e[n].type == this && (e = e.slice(0, n).concat(e.slice(n + 1)), n--);
    return e;
  }
  /**
  Tests whether there is a mark of this type in the given set.
  */
  isInSet(e) {
    for (let n = 0; n < e.length; n++)
      if (e[n].type == this)
        return e[n];
  }
  /**
  @internal
  */
  checkAttrs(e) {
    qg(this.attrs, e, "mark", this.name);
  }
  /**
  Queries whether a given mark type is
  [excluded](https://prosemirror.net/docs/ref/#model.MarkSpec.excludes) by this one.
  */
  excludes(e) {
    return this.excluded.indexOf(e) > -1;
  }
}
class Xg {
  /**
  Construct a schema from a schema [specification](https://prosemirror.net/docs/ref/#model.SchemaSpec).
  */
  constructor(e) {
    this.linebreakReplacement = null, this.cached = /* @__PURE__ */ Object.create(null);
    let n = this.spec = {};
    for (let i in e)
      n[i] = e[i];
    n.nodes = ot.from(e.nodes), n.marks = ot.from(e.marks || {}), this.nodes = cf.compile(this.spec.nodes, this), this.marks = Bl.compile(this.spec.marks, this);
    let o = /* @__PURE__ */ Object.create(null);
    for (let i in this.nodes) {
      if (i in this.marks)
        throw new RangeError(i + " can not be both a node and a mark");
      let r = this.nodes[i], a = r.spec.content || "", l = r.spec.marks;
      if (r.contentMatch = o[a] || (o[a] = Oo.parse(a, this.nodes)), r.inlineContent = r.contentMatch.inlineContent, r.spec.linebreakReplacement) {
        if (this.linebreakReplacement)
          throw new RangeError("Multiple linebreak nodes defined");
        if (!r.isInline || !r.isLeaf)
          throw new RangeError("Linebreak replacement nodes must be inline leaf nodes");
        this.linebreakReplacement = r;
      }
      r.markSet = l == "_" ? null : l ? uf(this, l.split(" ")) : l == "" || !r.inlineContent ? [] : null;
    }
    for (let i in this.marks) {
      let r = this.marks[i], a = r.spec.excludes;
      r.excluded = a == null ? [r] : a == "" ? [] : uf(this, a.split(" "));
    }
    this.nodeFromJSON = (i) => qn.fromJSON(this, i), this.markFromJSON = (i) => Ae.fromJSON(this, i), this.topNodeType = this.nodes[this.spec.topNode || "doc"], this.cached.wrappings = /* @__PURE__ */ Object.create(null);
  }
  /**
  Create a node in this schema. The `type` may be a string or a
  `NodeType` instance. Attributes will be extended with defaults,
  `content` may be a `Fragment`, `null`, a `Node`, or an array of
  nodes.
  */
  node(e, n = null, o, i) {
    if (typeof e == "string")
      e = this.nodeType(e);
    else if (e instanceof cf) {
      if (e.schema != this)
        throw new RangeError("Node type from different schema used (" + e.name + ")");
    } else throw new RangeError("Invalid node type: " + e);
    return e.createChecked(n, o, i);
  }
  /**
  Create a text node in the schema. Empty text nodes are not
  allowed.
  */
  text(e, n) {
    let o = this.nodes.text;
    return new il(o, o.defaultAttrs, e, Ae.setFrom(n));
  }
  /**
  Create a mark with the given type and attributes.
  */
  mark(e, n) {
    return typeof e == "string" && (e = this.marks[e]), e.create(n);
  }
  /**
  @internal
  */
  nodeType(e) {
    let n = this.nodes[e];
    if (!n)
      throw new RangeError("Unknown node type: " + e);
    return n;
  }
}
function uf(t, e) {
  let n = [];
  for (let o = 0; o < e.length; o++) {
    let i = e[o], r = t.marks[i], a = r;
    if (r)
      n.push(r);
    else
      for (let l in t.marks) {
        let s = t.marks[l];
        (i == "_" || s.spec.group && s.spec.group.split(" ").indexOf(i) > -1) && n.push(a = s);
      }
    if (!a)
      throw new SyntaxError("Unknown mark type: '" + e[o] + "'");
  }
  return n;
}
function GA(t) {
  return t.tag != null;
}
function qA(t) {
  return t.style != null;
}
let zr = class jd {
  /**
  Create a parser that targets the given schema, using the given
  parsing rules.
  */
  constructor(e, n) {
    this.schema = e, this.rules = n, this.tags = [], this.styles = [];
    let o = this.matchedStyles = [];
    n.forEach((i) => {
      if (GA(i))
        this.tags.push(i);
      else if (qA(i)) {
        let r = /[^=]*/.exec(i.style)[0];
        o.indexOf(r) < 0 && o.push(r), this.styles.push(i);
      }
    }), this.normalizeLists = !this.tags.some((i) => {
      if (!/^(ul|ol)\b/.test(i.tag) || !i.node)
        return !1;
      let r = e.nodes[i.node];
      return r.contentMatch.matchType(r);
    });
  }
  /**
  Parse a document from the content of a DOM node.
  */
  parse(e, n = {}) {
    let o = new ff(this, n, !1);
    return o.addAll(e, Ae.none, n.from, n.to), o.finish();
  }
  /**
  Parses the content of the given DOM node, like
  [`parse`](https://prosemirror.net/docs/ref/#model.DOMParser.parse), and takes the same set of
  options. But unlike that method, which produces a whole node,
  this one returns a slice that is open at the sides, meaning that
  the schema constraints aren't applied to the start of nodes to
  the left of the input and the end of nodes at the end.
  */
  parseSlice(e, n = {}) {
    let o = new ff(this, n, !0);
    return o.addAll(e, Ae.none, n.from, n.to), J.maxOpen(o.finish());
  }
  /**
  @internal
  */
  matchTag(e, n, o) {
    for (let i = o ? this.tags.indexOf(o) + 1 : 0; i < this.tags.length; i++) {
      let r = this.tags[i];
      if (XA(e, r.tag) && (r.namespace === void 0 || e.namespaceURI == r.namespace) && (!r.context || n.matchesContext(r.context))) {
        if (r.getAttrs) {
          let a = r.getAttrs(e);
          if (a === !1)
            continue;
          r.attrs = a || void 0;
        }
        return r;
      }
    }
  }
  /**
  @internal
  */
  matchStyle(e, n, o, i) {
    for (let r = i ? this.styles.indexOf(i) + 1 : 0; r < this.styles.length; r++) {
      let a = this.styles[r], l = a.style;
      if (!(l.indexOf(e) != 0 || a.context && !o.matchesContext(a.context) || // Test that the style string either precisely matches the prop,
      // or has an '=' sign after the prop, followed by the given
      // value.
      l.length > e.length && (l.charCodeAt(e.length) != 61 || l.slice(e.length + 1) != n))) {
        if (a.getAttrs) {
          let s = a.getAttrs(n);
          if (s === !1)
            continue;
          a.attrs = s || void 0;
        }
        return a;
      }
    }
  }
  /**
  @internal
  */
  static schemaRules(e) {
    let n = [];
    function o(i) {
      let r = i.priority == null ? 50 : i.priority, a = 0;
      for (; a < n.length; a++) {
        let l = n[a];
        if ((l.priority == null ? 50 : l.priority) < r)
          break;
      }
      n.splice(a, 0, i);
    }
    for (let i in e.marks) {
      let r = e.marks[i].spec.parseDOM;
      r && r.forEach((a) => {
        o(a = hf(a)), a.mark || a.ignore || a.clearMark || (a.mark = i);
      });
    }
    for (let i in e.nodes) {
      let r = e.nodes[i].spec.parseDOM;
      r && r.forEach((a) => {
        o(a = hf(a)), a.node || a.ignore || a.mark || (a.node = i);
      });
    }
    return n;
  }
  /**
  Construct a DOM parser using the parsing rules listed in a
  schema's [node specs](https://prosemirror.net/docs/ref/#model.NodeSpec.parseDOM), reordered by
  [priority](https://prosemirror.net/docs/ref/#model.GenericParseRule.priority).
  */
  static fromSchema(e) {
    return e.cached.domParser || (e.cached.domParser = new jd(e, jd.schemaRules(e)));
  }
};
const Zg = {
  address: !0,
  article: !0,
  aside: !0,
  blockquote: !0,
  canvas: !0,
  dd: !0,
  div: !0,
  dl: !0,
  fieldset: !0,
  figcaption: !0,
  figure: !0,
  footer: !0,
  form: !0,
  h1: !0,
  h2: !0,
  h3: !0,
  h4: !0,
  h5: !0,
  h6: !0,
  header: !0,
  hgroup: !0,
  hr: !0,
  li: !0,
  noscript: !0,
  ol: !0,
  output: !0,
  p: !0,
  pre: !0,
  section: !0,
  table: !0,
  tfoot: !0,
  ul: !0
}, JA = {
  head: !0,
  noscript: !0,
  object: !0,
  script: !0,
  style: !0,
  title: !0
}, Qg = { ol: !0, ul: !0 }, _i = 1, Vd = 2, Fr = 4;
function pf(t, e, n) {
  return e != null ? (e ? _i : 0) | (e === "full" ? Vd : 0) : t && t.whitespace == "pre" ? _i | Vd : n & ~Fr;
}
class Ra {
  constructor(e, n, o, i, r, a) {
    this.type = e, this.attrs = n, this.marks = o, this.solid = i, this.options = a, this.content = [], this.activeMarks = Ae.none, this.match = r || (a & Fr ? null : e.contentMatch);
  }
  findWrapping(e) {
    if (!this.match) {
      if (!this.type)
        return [];
      let n = this.type.contentMatch.fillBefore(N.from(e));
      if (n)
        this.match = this.type.contentMatch.matchFragment(n);
      else {
        let o = this.type.contentMatch, i;
        return (i = o.findWrapping(e.type)) ? (this.match = o, i) : null;
      }
    }
    return this.match.findWrapping(e.type);
  }
  finish(e) {
    if (!(this.options & _i)) {
      let o = this.content[this.content.length - 1], i;
      if (o && o.isText && (i = /[ \t\r\n\u000c]+$/.exec(o.text))) {
        let r = o;
        o.text.length == i[0].length ? this.content.pop() : this.content[this.content.length - 1] = r.withText(r.text.slice(0, r.text.length - i[0].length));
      }
    }
    let n = N.from(this.content);
    return !e && this.match && (n = n.append(this.match.fillBefore(N.empty, !0))), this.type ? this.type.create(this.attrs, n, this.marks) : n;
  }
  inlineContext(e) {
    return this.type ? this.type.inlineContent : this.content.length ? this.content[0].isInline : e.parentNode && !Zg.hasOwnProperty(e.parentNode.nodeName.toLowerCase());
  }
}
class ff {
  constructor(e, n, o) {
    this.parser = e, this.options = n, this.isOpen = o, this.open = 0, this.localPreserveWS = !1;
    let i = n.topNode, r, a = pf(null, n.preserveWhitespace, 0) | (o ? Fr : 0);
    i ? r = new Ra(i.type, i.attrs, Ae.none, !0, n.topMatch || i.type.contentMatch, a) : o ? r = new Ra(null, null, Ae.none, !0, null, a) : r = new Ra(e.schema.topNodeType, null, Ae.none, !0, null, a), this.nodes = [r], this.find = n.findPositions, this.needsBlock = !1;
  }
  get top() {
    return this.nodes[this.open];
  }
  // Add a DOM node to the content. Text is inserted as text node,
  // otherwise, the node is passed to `addElement` or, if it has a
  // `style` attribute, `addElementWithStyles`.
  addDOM(e, n) {
    e.nodeType == 3 ? this.addTextNode(e, n) : e.nodeType == 1 && this.addElement(e, n);
  }
  addTextNode(e, n) {
    let o = e.nodeValue, i = this.top, r = i.options & Vd ? "full" : this.localPreserveWS || (i.options & _i) > 0;
    if (r === "full" || i.inlineContext(e) || /[^ \t\r\n\u000c]/.test(o)) {
      if (r)
        r !== "full" ? o = o.replace(/\r?\n|\r/g, " ") : o = o.replace(/\r\n?/g, `
`);
      else if (o = o.replace(/[ \t\r\n\u000c]+/g, " "), /^[ \t\r\n\u000c]/.test(o) && this.open == this.nodes.length - 1) {
        let a = i.content[i.content.length - 1], l = e.previousSibling;
        (!a || l && l.nodeName == "BR" || a.isText && /[ \t\r\n\u000c]$/.test(a.text)) && (o = o.slice(1));
      }
      o && this.insertNode(this.parser.schema.text(o), n, !/\S/.test(o)), this.findInText(e);
    } else
      this.findInside(e);
  }
  // Try to find a handler for the given tag and use that to parse. If
  // none is found, the element's content nodes are added directly.
  addElement(e, n, o) {
    let i = this.localPreserveWS, r = this.top;
    (e.tagName == "PRE" || /pre/.test(e.style && e.style.whiteSpace)) && (this.localPreserveWS = !0);
    let a = e.nodeName.toLowerCase(), l;
    Qg.hasOwnProperty(a) && this.parser.normalizeLists && YA(e);
    let s = this.options.ruleFromNode && this.options.ruleFromNode(e) || (l = this.parser.matchTag(e, this, o));
    e: if (s ? s.ignore : JA.hasOwnProperty(a))
      this.findInside(e), this.ignoreFallback(e, n);
    else if (!s || s.skip || s.closeParent) {
      s && s.closeParent ? this.open = Math.max(0, this.open - 1) : s && s.skip.nodeType && (e = s.skip);
      let d, c = this.needsBlock;
      if (Zg.hasOwnProperty(a))
        r.content.length && r.content[0].isInline && this.open && (this.open--, r = this.top), d = !0, r.type || (this.needsBlock = !0);
      else if (!e.firstChild) {
        this.leafFallback(e, n);
        break e;
      }
      let u = s && s.skip ? n : this.readStyles(e, n);
      u && this.addAll(e, u), d && this.sync(r), this.needsBlock = c;
    } else {
      let d = this.readStyles(e, n);
      d && this.addElementByRule(e, s, d, s.consuming === !1 ? l : void 0);
    }
    this.localPreserveWS = i;
  }
  // Called for leaf DOM nodes that would otherwise be ignored
  leafFallback(e, n) {
    e.nodeName == "BR" && this.top.type && this.top.type.inlineContent && this.addTextNode(e.ownerDocument.createTextNode(`
`), n);
  }
  // Called for ignored nodes
  ignoreFallback(e, n) {
    e.nodeName == "BR" && (!this.top.type || !this.top.type.inlineContent) && this.findPlace(this.parser.schema.text("-"), n, !0);
  }
  // Run any style parser associated with the node's styles. Either
  // return an updated array of marks, or null to indicate some of the
  // styles had a rule with `ignore` set.
  readStyles(e, n) {
    let o = e.style;
    if (o && o.length)
      for (let i = 0; i < this.parser.matchedStyles.length; i++) {
        let r = this.parser.matchedStyles[i], a = o.getPropertyValue(r);
        if (a)
          for (let l = void 0; ; ) {
            let s = this.parser.matchStyle(r, a, this, l);
            if (!s)
              break;
            if (s.ignore)
              return null;
            if (s.clearMark ? n = n.filter((d) => !s.clearMark(d)) : n = n.concat(this.parser.schema.marks[s.mark].create(s.attrs)), s.consuming === !1)
              l = s;
            else
              break;
          }
      }
    return n;
  }
  // Look up a handler for the given node. If none are found, return
  // false. Otherwise, apply it, use its return value to drive the way
  // the node's content is wrapped, and return true.
  addElementByRule(e, n, o, i) {
    let r, a;
    if (n.node)
      if (a = this.parser.schema.nodes[n.node], a.isLeaf)
        this.insertNode(a.create(n.attrs), o, e.nodeName == "BR") || this.leafFallback(e, o);
      else {
        let s = this.enter(a, n.attrs || null, o, n.preserveWhitespace);
        s && (r = !0, o = s);
      }
    else {
      let s = this.parser.schema.marks[n.mark];
      o = o.concat(s.create(n.attrs));
    }
    let l = this.top;
    if (a && a.isLeaf)
      this.findInside(e);
    else if (i)
      this.addElement(e, o, i);
    else if (n.getContent)
      this.findInside(e), n.getContent(e, this.parser.schema).forEach((s) => this.insertNode(s, o, !1));
    else {
      let s = e;
      typeof n.contentElement == "string" ? s = e.querySelector(n.contentElement) : typeof n.contentElement == "function" ? s = n.contentElement(e) : n.contentElement && (s = n.contentElement), this.findAround(e, s, !0), this.addAll(s, o), this.findAround(e, s, !1);
    }
    r && this.sync(l) && this.open--;
  }
  // Add all child nodes between `startIndex` and `endIndex` (or the
  // whole node, if not given). If `sync` is passed, use it to
  // synchronize after every block element.
  addAll(e, n, o, i) {
    let r = o || 0;
    for (let a = o ? e.childNodes[o] : e.firstChild, l = i == null ? null : e.childNodes[i]; a != l; a = a.nextSibling, ++r)
      this.findAtPoint(e, r), this.addDOM(a, n);
    this.findAtPoint(e, r);
  }
  // Try to find a way to fit the given node type into the current
  // context. May add intermediate wrappers and/or leave non-solid
  // nodes that we're in.
  findPlace(e, n, o) {
    let i, r;
    for (let a = this.open, l = 0; a >= 0; a--) {
      let s = this.nodes[a], d = s.findWrapping(e);
      if (d && (!i || i.length > d.length + l) && (i = d, r = s, !d.length))
        break;
      if (s.solid) {
        if (o)
          break;
        l += 2;
      }
    }
    if (!i)
      return null;
    this.sync(r);
    for (let a = 0; a < i.length; a++)
      n = this.enterInner(i[a], null, n, !1);
    return n;
  }
  // Try to insert the given node, adjusting the context when needed.
  insertNode(e, n, o) {
    if (e.isInline && this.needsBlock && !this.top.type) {
      let r = this.textblockFromContext();
      r && (n = this.enterInner(r, null, n));
    }
    let i = this.findPlace(e, n, o);
    if (i) {
      this.closeExtra();
      let r = this.top;
      r.match && (r.match = r.match.matchType(e.type));
      let a = Ae.none;
      for (let l of i.concat(e.marks))
        (r.type ? r.type.allowsMarkType(l.type) : mf(l.type, e.type)) && (a = l.addToSet(a));
      return r.content.push(e.mark(a)), !0;
    }
    return !1;
  }
  // Try to start a node of the given type, adjusting the context when
  // necessary.
  enter(e, n, o, i) {
    let r = this.findPlace(e.create(n), o, !1);
    return r && (r = this.enterInner(e, n, o, !0, i)), r;
  }
  // Open a node of the given type
  enterInner(e, n, o, i = !1, r) {
    this.closeExtra();
    let a = this.top;
    a.match = a.match && a.match.matchType(e);
    let l = pf(e, r, a.options);
    a.options & Fr && a.content.length == 0 && (l |= Fr);
    let s = Ae.none;
    return o = o.filter((d) => (a.type ? a.type.allowsMarkType(d.type) : mf(d.type, e)) ? (s = d.addToSet(s), !1) : !0), this.nodes.push(new Ra(e, n, s, i, null, l)), this.open++, o;
  }
  // Make sure all nodes above this.open are finished and added to
  // their parents
  closeExtra(e = !1) {
    let n = this.nodes.length - 1;
    if (n > this.open) {
      for (; n > this.open; n--)
        this.nodes[n - 1].content.push(this.nodes[n].finish(e));
      this.nodes.length = this.open + 1;
    }
  }
  finish() {
    return this.open = 0, this.closeExtra(this.isOpen), this.nodes[0].finish(!!(this.isOpen || this.options.topOpen));
  }
  sync(e) {
    for (let n = this.open; n >= 0; n--) {
      if (this.nodes[n] == e)
        return this.open = n, !0;
      this.localPreserveWS && (this.nodes[n].options |= _i);
    }
    return !1;
  }
  get currentPos() {
    this.closeExtra();
    let e = 0;
    for (let n = this.open; n >= 0; n--) {
      let o = this.nodes[n].content;
      for (let i = o.length - 1; i >= 0; i--)
        e += o[i].nodeSize;
      n && e++;
    }
    return e;
  }
  findAtPoint(e, n) {
    if (this.find)
      for (let o = 0; o < this.find.length; o++)
        this.find[o].node == e && this.find[o].offset == n && (this.find[o].pos = this.currentPos);
  }
  findInside(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].pos == null && e.nodeType == 1 && e.contains(this.find[n].node) && (this.find[n].pos = this.currentPos);
  }
  findAround(e, n, o) {
    if (e != n && this.find)
      for (let i = 0; i < this.find.length; i++)
        this.find[i].pos == null && e.nodeType == 1 && e.contains(this.find[i].node) && n.compareDocumentPosition(this.find[i].node) & (o ? 2 : 4) && (this.find[i].pos = this.currentPos);
  }
  findInText(e) {
    if (this.find)
      for (let n = 0; n < this.find.length; n++)
        this.find[n].node == e && (this.find[n].pos = this.currentPos - (e.nodeValue.length - this.find[n].offset));
  }
  // Determines whether the given context string matches this context.
  matchesContext(e) {
    if (e.indexOf("|") > -1)
      return e.split(/\s*\|\s*/).some(this.matchesContext, this);
    let n = e.split("/"), o = this.options.context, i = !this.isOpen && (!o || o.parent.type == this.nodes[0].type), r = -(o ? o.depth + 1 : 0) + (i ? 0 : 1), a = (l, s) => {
      for (; l >= 0; l--) {
        let d = n[l];
        if (d == "") {
          if (l == n.length - 1 || l == 0)
            continue;
          for (; s >= r; s--)
            if (a(l - 1, s))
              return !0;
          return !1;
        } else {
          let c = s > 0 || s == 0 && i ? this.nodes[s].type : o && s >= r ? o.node(s - r).type : null;
          if (!c || c.name != d && !c.isInGroup(d))
            return !1;
          s--;
        }
      }
      return !0;
    };
    return a(n.length - 1, this.open);
  }
  textblockFromContext() {
    let e = this.options.context;
    if (e)
      for (let n = e.depth; n >= 0; n--) {
        let o = e.node(n).contentMatchAt(e.indexAfter(n)).defaultType;
        if (o && o.isTextblock && o.defaultAttrs)
          return o;
      }
    for (let n in this.parser.schema.nodes) {
      let o = this.parser.schema.nodes[n];
      if (o.isTextblock && o.defaultAttrs)
        return o;
    }
  }
}
function YA(t) {
  for (let e = t.firstChild, n = null; e; e = e.nextSibling) {
    let o = e.nodeType == 1 ? e.nodeName.toLowerCase() : null;
    o && Qg.hasOwnProperty(o) && n ? (n.appendChild(e), e = n) : o == "li" ? n = e : o && (n = null);
  }
}
function XA(t, e) {
  return (t.matches || t.msMatchesSelector || t.webkitMatchesSelector || t.mozMatchesSelector).call(t, e);
}
function hf(t) {
  let e = {};
  for (let n in t)
    e[n] = t[n];
  return e;
}
function mf(t, e) {
  let n = e.schema.nodes;
  for (let o in n) {
    let i = n[o];
    if (!i.allowsMarkType(t))
      continue;
    let r = [], a = (l) => {
      r.push(l);
      for (let s = 0; s < l.edgeCount; s++) {
        let { type: d, next: c } = l.edge(s);
        if (d == e || r.indexOf(c) < 0 && a(c))
          return !0;
      }
    };
    if (a(i.contentMatch))
      return !0;
  }
}
class Do {
  /**
  Create a serializer. `nodes` should map node names to functions
  that take a node and return a description of the corresponding
  DOM. `marks` does the same for mark names, but also gets an
  argument that tells it whether the mark's content is block or
  inline content (for typical use, it'll always be inline). A mark
  serializer may be `null` to indicate that marks of that type
  should not be serialized.
  */
  constructor(e, n) {
    this.nodes = e, this.marks = n;
  }
  /**
  Serialize the content of this fragment to a DOM fragment. When
  not in the browser, the `document` option, containing a DOM
  document, should be passed so that the serializer can create
  nodes.
  */
  serializeFragment(e, n = {}, o) {
    o || (o = as(n).createDocumentFragment());
    let i = o, r = [];
    return e.forEach((a) => {
      if (r.length || a.marks.length) {
        let l = 0, s = 0;
        for (; l < r.length && s < a.marks.length; ) {
          let d = a.marks[s];
          if (!this.marks[d.type.name]) {
            s++;
            continue;
          }
          if (!d.eq(r[l][0]) || d.type.spec.spanning === !1)
            break;
          l++, s++;
        }
        for (; l < r.length; )
          i = r.pop()[1];
        for (; s < a.marks.length; ) {
          let d = a.marks[s++], c = this.serializeMark(d, a.isInline, n);
          c && (r.push([d, i]), i.appendChild(c.dom), i = c.contentDOM || c.dom);
        }
      }
      i.appendChild(this.serializeNodeInner(a, n));
    }), o;
  }
  /**
  @internal
  */
  serializeNodeInner(e, n) {
    let { dom: o, contentDOM: i } = Ha(as(n), this.nodes[e.type.name](e), null, e.attrs);
    if (i) {
      if (e.isLeaf)
        throw new RangeError("Content hole not allowed in a leaf node spec");
      this.serializeFragment(e.content, n, i);
    }
    return o;
  }
  /**
  Serialize this node to a DOM node. This can be useful when you
  need to serialize a part of a document, as opposed to the whole
  document. To serialize a whole document, use
  [`serializeFragment`](https://prosemirror.net/docs/ref/#model.DOMSerializer.serializeFragment) on
  its [content](https://prosemirror.net/docs/ref/#model.Node.content).
  */
  serializeNode(e, n = {}) {
    let o = this.serializeNodeInner(e, n);
    for (let i = e.marks.length - 1; i >= 0; i--) {
      let r = this.serializeMark(e.marks[i], e.isInline, n);
      r && ((r.contentDOM || r.dom).appendChild(o), o = r.dom);
    }
    return o;
  }
  /**
  @internal
  */
  serializeMark(e, n, o = {}) {
    let i = this.marks[e.type.name];
    return i && Ha(as(o), i(e, n), null, e.attrs);
  }
  static renderSpec(e, n, o = null, i) {
    return Ha(e, n, o, i);
  }
  /**
  Build a serializer using the [`toDOM`](https://prosemirror.net/docs/ref/#model.NodeSpec.toDOM)
  properties in a schema's node and mark specs.
  */
  static fromSchema(e) {
    return e.cached.domSerializer || (e.cached.domSerializer = new Do(this.nodesFromSchema(e), this.marksFromSchema(e)));
  }
  /**
  Gather the serializers in a schema's node specs into an object.
  This can be useful as a base to build a custom serializer from.
  */
  static nodesFromSchema(e) {
    let n = gf(e.nodes);
    return n.text || (n.text = (o) => o.text), n;
  }
  /**
  Gather the serializers in a schema's mark specs into an object.
  */
  static marksFromSchema(e) {
    return gf(e.marks);
  }
}
function gf(t) {
  let e = {};
  for (let n in t) {
    let o = t[n].spec.toDOM;
    o && (e[n] = o);
  }
  return e;
}
function as(t) {
  return t.document || window.document;
}
const bf = /* @__PURE__ */ new WeakMap();
function ZA(t) {
  let e = bf.get(t);
  return e === void 0 && bf.set(t, e = QA(t)), e;
}
function QA(t) {
  let e = null;
  function n(o) {
    if (o && typeof o == "object")
      if (Array.isArray(o))
        if (typeof o[0] == "string")
          e || (e = []), e.push(o);
        else
          for (let i = 0; i < o.length; i++)
            n(o[i]);
      else
        for (let i in o)
          n(o[i]);
  }
  return n(t), e;
}
function Ha(t, e, n, o) {
  if (typeof e == "string")
    return { dom: t.createTextNode(e) };
  if (e.nodeType != null)
    return { dom: e };
  if (e.dom && e.dom.nodeType != null)
    return e;
  let i = e[0], r;
  if (typeof i != "string")
    throw new RangeError("Invalid array passed to renderSpec");
  if (o && (r = ZA(o)) && r.indexOf(e) > -1)
    throw new RangeError("Using an array from an attribute object as a DOM spec. This may be an attempted cross site scripting attack.");
  let a = i.indexOf(" ");
  a > 0 && (n = i.slice(0, a), i = i.slice(a + 1));
  let l, s = n ? t.createElementNS(n, i) : t.createElement(i), d = e[1], c = 1;
  if (d && typeof d == "object" && d.nodeType == null && !Array.isArray(d)) {
    c = 2;
    for (let u in d)
      if (d[u] != null) {
        let f = u.indexOf(" ");
        f > 0 ? s.setAttributeNS(u.slice(0, f), u.slice(f + 1), d[u]) : u == "style" && s.style ? s.style.cssText = d[u] : s.setAttribute(u, d[u]);
      }
  }
  for (let u = c; u < e.length; u++) {
    let f = e[u];
    if (f === 0) {
      if (u < e.length - 1 || u > c)
        throw new RangeError("Content hole must be the only child of its parent node");
      return { dom: s, contentDOM: s };
    } else {
      let { dom: p, contentDOM: h } = Ha(t, f, n, o);
      if (s.appendChild(p), h) {
        if (l)
          throw new RangeError("Multiple content holes");
        l = h;
      }
    }
  }
  return { dom: s, contentDOM: l };
}
const eb = 65535, tb = Math.pow(2, 16);
function eD(t, e) {
  return t + e * tb;
}
function vf(t) {
  return t & eb;
}
function tD(t) {
  return (t - (t & eb)) / tb;
}
const nb = 1, ob = 2, Wa = 4, rb = 8;
class _d {
  /**
  @internal
  */
  constructor(e, n, o) {
    this.pos = e, this.delInfo = n, this.recover = o;
  }
  /**
  Tells you whether the position was deleted, that is, whether the
  step removed the token on the side queried (via the `assoc`)
  argument from the document.
  */
  get deleted() {
    return (this.delInfo & rb) > 0;
  }
  /**
  Tells you whether the token before the mapped position was deleted.
  */
  get deletedBefore() {
    return (this.delInfo & (nb | Wa)) > 0;
  }
  /**
  True when the token after the mapped position was deleted.
  */
  get deletedAfter() {
    return (this.delInfo & (ob | Wa)) > 0;
  }
  /**
  Tells whether any of the steps mapped through deletes across the
  position (including both the token before and after the
  position).
  */
  get deletedAcross() {
    return (this.delInfo & Wa) > 0;
  }
}
class Et {
  /**
  Create a position map. The modifications to the document are
  represented as an array of numbers, in which each group of three
  represents a modified chunk as `[start, oldSize, newSize]`.
  */
  constructor(e, n = !1) {
    if (this.ranges = e, this.inverted = n, !e.length && Et.empty)
      return Et.empty;
  }
  /**
  @internal
  */
  recover(e) {
    let n = 0, o = vf(e);
    if (!this.inverted)
      for (let i = 0; i < o; i++)
        n += this.ranges[i * 3 + 2] - this.ranges[i * 3 + 1];
    return this.ranges[o * 3] + n + tD(e);
  }
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  map(e, n = 1) {
    return this._map(e, n, !0);
  }
  /**
  @internal
  */
  _map(e, n, o) {
    let i = 0, r = this.inverted ? 2 : 1, a = this.inverted ? 1 : 2;
    for (let l = 0; l < this.ranges.length; l += 3) {
      let s = this.ranges[l] - (this.inverted ? i : 0);
      if (s > e)
        break;
      let d = this.ranges[l + r], c = this.ranges[l + a], u = s + d;
      if (e <= u) {
        let f = d ? e == s ? -1 : e == u ? 1 : n : n, p = s + i + (f < 0 ? 0 : c);
        if (o)
          return p;
        let h = e == (n < 0 ? s : u) ? null : eD(l / 3, e - s), g = e == s ? ob : e == u ? nb : Wa;
        return (n < 0 ? e != s : e != u) && (g |= rb), new _d(p, g, h);
      }
      i += c - d;
    }
    return o ? e + i : new _d(e + i, 0, null);
  }
  /**
  @internal
  */
  touches(e, n) {
    let o = 0, i = vf(n), r = this.inverted ? 2 : 1, a = this.inverted ? 1 : 2;
    for (let l = 0; l < this.ranges.length; l += 3) {
      let s = this.ranges[l] - (this.inverted ? o : 0);
      if (s > e)
        break;
      let d = this.ranges[l + r], c = s + d;
      if (e <= c && l == i * 3)
        return !0;
      o += this.ranges[l + a] - d;
    }
    return !1;
  }
  /**
  Calls the given function on each of the changed ranges included in
  this map.
  */
  forEach(e) {
    let n = this.inverted ? 2 : 1, o = this.inverted ? 1 : 2;
    for (let i = 0, r = 0; i < this.ranges.length; i += 3) {
      let a = this.ranges[i], l = a - (this.inverted ? r : 0), s = a + (this.inverted ? 0 : r), d = this.ranges[i + n], c = this.ranges[i + o];
      e(l, l + d, s, s + c), r += c - d;
    }
  }
  /**
  Create an inverted version of this map. The result can be used to
  map positions in the post-step document to the pre-step document.
  */
  invert() {
    return new Et(this.ranges, !this.inverted);
  }
  /**
  @internal
  */
  toString() {
    return (this.inverted ? "-" : "") + JSON.stringify(this.ranges);
  }
  /**
  Create a map that moves all positions by offset `n` (which may be
  negative). This can be useful when applying steps meant for a
  sub-document to a larger document, or vice-versa.
  */
  static offset(e) {
    return e == 0 ? Et.empty : new Et(e < 0 ? [0, -e, 0] : [0, 0, e]);
  }
}
Et.empty = new Et([]);
class Ki {
  /**
  Create a new mapping with the given position maps.
  */
  constructor(e, n, o = 0, i = e ? e.length : 0) {
    this.mirror = n, this.from = o, this.to = i, this._maps = e || [], this.ownData = !(e || n);
  }
  /**
  The step maps in this mapping.
  */
  get maps() {
    return this._maps;
  }
  /**
  Create a mapping that maps only through a part of this one.
  */
  slice(e = 0, n = this.maps.length) {
    return new Ki(this._maps, this.mirror, e, n);
  }
  /**
  Add a step map to the end of this mapping. If `mirrors` is
  given, it should be the index of the step map that is the mirror
  image of this one.
  */
  appendMap(e, n) {
    this.ownData || (this._maps = this._maps.slice(), this.mirror = this.mirror && this.mirror.slice(), this.ownData = !0), this.to = this._maps.push(e), n != null && this.setMirror(this._maps.length - 1, n);
  }
  /**
  Add all the step maps in a given mapping to this one (preserving
  mirroring information).
  */
  appendMapping(e) {
    for (let n = 0, o = this._maps.length; n < e._maps.length; n++) {
      let i = e.getMirror(n);
      this.appendMap(e._maps[n], i != null && i < n ? o + i : void 0);
    }
  }
  /**
  Finds the offset of the step map that mirrors the map at the
  given offset, in this mapping (as per the second argument to
  `appendMap`).
  */
  getMirror(e) {
    if (this.mirror) {
      for (let n = 0; n < this.mirror.length; n++)
        if (this.mirror[n] == e)
          return this.mirror[n + (n % 2 ? -1 : 1)];
    }
  }
  /**
  @internal
  */
  setMirror(e, n) {
    this.mirror || (this.mirror = []), this.mirror.push(e, n);
  }
  /**
  Append the inverse of the given mapping to this one.
  */
  appendMappingInverted(e) {
    for (let n = e.maps.length - 1, o = this._maps.length + e._maps.length; n >= 0; n--) {
      let i = e.getMirror(n);
      this.appendMap(e._maps[n].invert(), i != null && i > n ? o - i - 1 : void 0);
    }
  }
  /**
  Create an inverted version of this mapping.
  */
  invert() {
    let e = new Ki();
    return e.appendMappingInverted(this), e;
  }
  /**
  Map a position through this mapping.
  */
  map(e, n = 1) {
    if (this.mirror)
      return this._map(e, n, !0);
    for (let o = this.from; o < this.to; o++)
      e = this._maps[o].map(e, n);
    return e;
  }
  /**
  Map a position through this mapping, returning a mapping
  result.
  */
  mapResult(e, n = 1) {
    return this._map(e, n, !1);
  }
  /**
  @internal
  */
  _map(e, n, o) {
    let i = 0;
    for (let r = this.from; r < this.to; r++) {
      let a = this._maps[r], l = a.mapResult(e, n);
      if (l.recover != null) {
        let s = this.getMirror(r);
        if (s != null && s > r && s < this.to) {
          r = s, e = this._maps[s].recover(l.recover);
          continue;
        }
      }
      i |= l.delInfo, e = l.pos;
    }
    return o ? e : new _d(e, i, null);
  }
}
const ls = /* @__PURE__ */ Object.create(null);
class gt {
  /**
  Get the step map that represents the changes made by this step,
  and which can be used to transform between positions in the old
  and the new document.
  */
  getMap() {
    return Et.empty;
  }
  /**
  Try to merge this step with another one, to be applied directly
  after it. Returns the merged step when possible, null if the
  steps can't be merged.
  */
  merge(e) {
    return null;
  }
  /**
  Deserialize a step from its JSON representation. Will call
  through to the step class' own implementation of this method.
  */
  static fromJSON(e, n) {
    if (!n || !n.stepType)
      throw new RangeError("Invalid input for Step.fromJSON");
    let o = ls[n.stepType];
    if (!o)
      throw new RangeError(`No step type ${n.stepType} defined`);
    return o.fromJSON(e, n);
  }
  /**
  To be able to serialize steps to JSON, each step needs a string
  ID to attach to its JSON representation. Use this method to
  register an ID for your step classes. Try to pick something
  that's unlikely to clash with steps from other modules.
  */
  static jsonID(e, n) {
    if (e in ls)
      throw new RangeError("Duplicate use of step JSON ID " + e);
    return ls[e] = n, n.prototype.jsonID = e, n;
  }
}
class Ue {
  /**
  @internal
  */
  constructor(e, n) {
    this.doc = e, this.failed = n;
  }
  /**
  Create a successful step result.
  */
  static ok(e) {
    return new Ue(e, null);
  }
  /**
  Create a failed step result.
  */
  static fail(e) {
    return new Ue(null, e);
  }
  /**
  Call [`Node.replace`](https://prosemirror.net/docs/ref/#model.Node.replace) with the given
  arguments. Create a successful result if it succeeds, and a
  failed one if it throws a `ReplaceError`.
  */
  static fromReplace(e, n, o, i) {
    try {
      return Ue.ok(e.replace(n, o, i));
    } catch (r) {
      if (r instanceof nl)
        return Ue.fail(r.message);
      throw r;
    }
  }
}
function Rc(t, e, n) {
  let o = [];
  for (let i = 0; i < t.childCount; i++) {
    let r = t.child(i);
    r.content.size && (r = r.copy(Rc(r.content, e, r))), r.isInline && (r = e(r, n, i)), o.push(r);
  }
  return N.fromArray(o);
}
class Wn extends gt {
  /**
  Create a mark step.
  */
  constructor(e, n, o) {
    super(), this.from = e, this.to = n, this.mark = o;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), o = e.resolve(this.from), i = o.node(o.sharedDepth(this.to)), r = new J(Rc(n.content, (a, l) => !a.isAtom || !l.type.allowsMarkType(this.mark.type) ? a : a.mark(this.mark.addToSet(a.marks)), i), n.openStart, n.openEnd);
    return Ue.fromReplace(e, this.from, this.to, r);
  }
  invert() {
    return new un(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), o = e.mapResult(this.to, -1);
    return n.deleted && o.deleted || n.pos >= o.pos ? null : new Wn(n.pos, o.pos, this.mark);
  }
  merge(e) {
    return e instanceof Wn && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new Wn(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "addMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for AddMarkStep.fromJSON");
    return new Wn(n.from, n.to, e.markFromJSON(n.mark));
  }
}
gt.jsonID("addMark", Wn);
class un extends gt {
  /**
  Create a mark-removing step.
  */
  constructor(e, n, o) {
    super(), this.from = e, this.to = n, this.mark = o;
  }
  apply(e) {
    let n = e.slice(this.from, this.to), o = new J(Rc(n.content, (i) => i.mark(this.mark.removeFromSet(i.marks)), e), n.openStart, n.openEnd);
    return Ue.fromReplace(e, this.from, this.to, o);
  }
  invert() {
    return new Wn(this.from, this.to, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), o = e.mapResult(this.to, -1);
    return n.deleted && o.deleted || n.pos >= o.pos ? null : new un(n.pos, o.pos, this.mark);
  }
  merge(e) {
    return e instanceof un && e.mark.eq(this.mark) && this.from <= e.to && this.to >= e.from ? new un(Math.min(this.from, e.from), Math.max(this.to, e.to), this.mark) : null;
  }
  toJSON() {
    return {
      stepType: "removeMark",
      mark: this.mark.toJSON(),
      from: this.from,
      to: this.to
    };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for RemoveMarkStep.fromJSON");
    return new un(n.from, n.to, e.markFromJSON(n.mark));
  }
}
gt.jsonID("removeMark", un);
class Un extends gt {
  /**
  Create a node mark step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return Ue.fail("No node at mark step's position");
    let o = n.type.create(n.attrs, null, this.mark.addToSet(n.marks));
    return Ue.fromReplace(e, this.pos, this.pos + 1, new J(N.from(o), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    if (n) {
      let o = this.mark.addToSet(n.marks);
      if (o.length == n.marks.length) {
        for (let i = 0; i < n.marks.length; i++)
          if (!n.marks[i].isInSet(o))
            return new Un(this.pos, n.marks[i]);
        return new Un(this.pos, this.mark);
      }
    }
    return new Po(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new Un(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "addNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for AddNodeMarkStep.fromJSON");
    return new Un(n.pos, e.markFromJSON(n.mark));
  }
}
gt.jsonID("addNodeMark", Un);
class Po extends gt {
  /**
  Create a mark-removing step.
  */
  constructor(e, n) {
    super(), this.pos = e, this.mark = n;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return Ue.fail("No node at mark step's position");
    let o = n.type.create(n.attrs, null, this.mark.removeFromSet(n.marks));
    return Ue.fromReplace(e, this.pos, this.pos + 1, new J(N.from(o), 0, n.isLeaf ? 0 : 1));
  }
  invert(e) {
    let n = e.nodeAt(this.pos);
    return !n || !this.mark.isInSet(n.marks) ? this : new Un(this.pos, this.mark);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new Po(n.pos, this.mark);
  }
  toJSON() {
    return { stepType: "removeNodeMark", pos: this.pos, mark: this.mark.toJSON() };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for RemoveNodeMarkStep.fromJSON");
    return new Po(n.pos, e.markFromJSON(n.mark));
  }
}
gt.jsonID("removeNodeMark", Po);
class Ye extends gt {
  /**
  The given `slice` should fit the 'gap' between `from` and
  `to`—the depths must line up, and the surrounding nodes must be
  able to be joined with the open sides of the slice. When
  `structure` is true, the step will fail if the content between
  from and to is not just a sequence of closing and then opening
  tokens (this is to guard against rebased replace steps
  overwriting something they weren't supposed to).
  */
  constructor(e, n, o, i = !1) {
    super(), this.from = e, this.to = n, this.slice = o, this.structure = i;
  }
  apply(e) {
    return this.structure && Kd(e, this.from, this.to) ? Ue.fail("Structure replace would overwrite content") : Ue.fromReplace(e, this.from, this.to, this.slice);
  }
  getMap() {
    return new Et([this.from, this.to - this.from, this.slice.size]);
  }
  invert(e) {
    return new Ye(this.from, this.from + this.slice.size, e.slice(this.from, this.to));
  }
  map(e) {
    let n = e.mapResult(this.from, 1), o = e.mapResult(this.to, -1);
    return n.deletedAcross && o.deletedAcross ? null : new Ye(n.pos, Math.max(n.pos, o.pos), this.slice, this.structure);
  }
  merge(e) {
    if (!(e instanceof Ye) || e.structure || this.structure)
      return null;
    if (this.from + this.slice.size == e.from && !this.slice.openEnd && !e.slice.openStart) {
      let n = this.slice.size + e.slice.size == 0 ? J.empty : new J(this.slice.content.append(e.slice.content), this.slice.openStart, e.slice.openEnd);
      return new Ye(this.from, this.to + (e.to - e.from), n, this.structure);
    } else if (e.to == this.from && !this.slice.openStart && !e.slice.openEnd) {
      let n = this.slice.size + e.slice.size == 0 ? J.empty : new J(e.slice.content.append(this.slice.content), e.slice.openStart, this.slice.openEnd);
      return new Ye(e.from, this.to, n, this.structure);
    } else
      return null;
  }
  toJSON() {
    let e = { stepType: "replace", from: this.from, to: this.to };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number")
      throw new RangeError("Invalid input for ReplaceStep.fromJSON");
    return new Ye(n.from, n.to, J.fromJSON(e, n.slice), !!n.structure);
  }
}
gt.jsonID("replace", Ye);
class Ze extends gt {
  /**
  Create a replace-around step with the given range and gap.
  `insert` should be the point in the slice into which the content
  of the gap should be moved. `structure` has the same meaning as
  it has in the [`ReplaceStep`](https://prosemirror.net/docs/ref/#transform.ReplaceStep) class.
  */
  constructor(e, n, o, i, r, a, l = !1) {
    super(), this.from = e, this.to = n, this.gapFrom = o, this.gapTo = i, this.slice = r, this.insert = a, this.structure = l;
  }
  apply(e) {
    if (this.structure && (Kd(e, this.from, this.gapFrom) || Kd(e, this.gapTo, this.to)))
      return Ue.fail("Structure gap-replace would overwrite content");
    let n = e.slice(this.gapFrom, this.gapTo);
    if (n.openStart || n.openEnd)
      return Ue.fail("Gap is not a flat range");
    let o = this.slice.insertAt(this.insert, n.content);
    return o ? Ue.fromReplace(e, this.from, this.to, o) : Ue.fail("Content does not fit in gap");
  }
  getMap() {
    return new Et([
      this.from,
      this.gapFrom - this.from,
      this.insert,
      this.gapTo,
      this.to - this.gapTo,
      this.slice.size - this.insert
    ]);
  }
  invert(e) {
    let n = this.gapTo - this.gapFrom;
    return new Ze(this.from, this.from + this.slice.size + n, this.from + this.insert, this.from + this.insert + n, e.slice(this.from, this.to).removeBetween(this.gapFrom - this.from, this.gapTo - this.from), this.gapFrom - this.from, this.structure);
  }
  map(e) {
    let n = e.mapResult(this.from, 1), o = e.mapResult(this.to, -1), i = this.from == this.gapFrom ? n.pos : e.map(this.gapFrom, -1), r = this.to == this.gapTo ? o.pos : e.map(this.gapTo, 1);
    return n.deletedAcross && o.deletedAcross || i < n.pos || r > o.pos ? null : new Ze(n.pos, o.pos, i, r, this.slice, this.insert, this.structure);
  }
  toJSON() {
    let e = {
      stepType: "replaceAround",
      from: this.from,
      to: this.to,
      gapFrom: this.gapFrom,
      gapTo: this.gapTo,
      insert: this.insert
    };
    return this.slice.size && (e.slice = this.slice.toJSON()), this.structure && (e.structure = !0), e;
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.from != "number" || typeof n.to != "number" || typeof n.gapFrom != "number" || typeof n.gapTo != "number" || typeof n.insert != "number")
      throw new RangeError("Invalid input for ReplaceAroundStep.fromJSON");
    return new Ze(n.from, n.to, n.gapFrom, n.gapTo, J.fromJSON(e, n.slice), n.insert, !!n.structure);
  }
}
gt.jsonID("replaceAround", Ze);
function Kd(t, e, n) {
  let o = t.resolve(e), i = n - e, r = o.depth;
  for (; i > 0 && r > 0 && o.indexAfter(r) == o.node(r).childCount; )
    r--, i--;
  if (i > 0) {
    let a = o.node(r).maybeChild(o.indexAfter(r));
    for (; i > 0; ) {
      if (!a || a.isLeaf)
        return !0;
      a = a.firstChild, i--;
    }
  }
  return !1;
}
function nD(t, e, n, o) {
  let i = [], r = [], a, l;
  t.doc.nodesBetween(e, n, (s, d, c) => {
    if (!s.isInline)
      return;
    let u = s.marks;
    if (!o.isInSet(u) && c.type.allowsMarkType(o.type)) {
      let f = Math.max(d, e), p = Math.min(d + s.nodeSize, n), h = o.addToSet(u);
      for (let g = 0; g < u.length; g++)
        u[g].isInSet(h) || (a && a.to == f && a.mark.eq(u[g]) ? a.to = p : i.push(a = new un(f, p, u[g])));
      l && l.to == f ? l.to = p : r.push(l = new Wn(f, p, o));
    }
  }), i.forEach((s) => t.step(s)), r.forEach((s) => t.step(s));
}
function oD(t, e, n, o) {
  let i = [], r = 0;
  t.doc.nodesBetween(e, n, (a, l) => {
    if (!a.isInline)
      return;
    r++;
    let s = null;
    if (o instanceof Bl) {
      let d = a.marks, c;
      for (; c = o.isInSet(d); )
        (s || (s = [])).push(c), d = c.removeFromSet(d);
    } else o ? o.isInSet(a.marks) && (s = [o]) : s = a.marks;
    if (s && s.length) {
      let d = Math.min(l + a.nodeSize, n);
      for (let c = 0; c < s.length; c++) {
        let u = s[c], f;
        for (let p = 0; p < i.length; p++) {
          let h = i[p];
          h.step == r - 1 && u.eq(i[p].style) && (f = h);
        }
        f ? (f.to = d, f.step = r) : i.push({ style: u, from: Math.max(l, e), to: d, step: r });
      }
    }
  }), i.forEach((a) => t.step(new un(a.from, a.to, a.style)));
}
function Bc(t, e, n, o = n.contentMatch, i = !0) {
  let r = t.doc.nodeAt(e), a = [], l = e + 1;
  for (let s = 0; s < r.childCount; s++) {
    let d = r.child(s), c = l + d.nodeSize, u = o.matchType(d.type);
    if (!u)
      a.push(new Ye(l, c, J.empty));
    else {
      o = u;
      for (let f = 0; f < d.marks.length; f++)
        n.allowsMarkType(d.marks[f].type) || t.step(new un(l, c, d.marks[f]));
      if (i && d.isText && n.whitespace != "pre") {
        let f, p = /\r?\n|\r/g, h;
        for (; f = p.exec(d.text); )
          h || (h = new J(N.from(n.schema.text(" ", n.allowedMarks(d.marks))), 0, 0)), a.push(new Ye(l + f.index, l + f.index + f[0].length, h));
      }
    }
    l = c;
  }
  if (!o.validEnd) {
    let s = o.fillBefore(N.empty, !0);
    t.replace(l, l, new J(s, 0, 0));
  }
  for (let s = a.length - 1; s >= 0; s--)
    t.step(a[s]);
}
function rD(t, e, n) {
  return (e == 0 || t.canReplace(e, t.childCount)) && (n == t.childCount || t.canReplace(0, n));
}
function yr(t) {
  let n = t.parent.content.cutByIndex(t.startIndex, t.endIndex);
  for (let o = t.depth; ; --o) {
    let i = t.$from.node(o), r = t.$from.index(o), a = t.$to.indexAfter(o);
    if (o < t.depth && i.canReplace(r, a, n))
      return o;
    if (o == 0 || i.type.spec.isolating || !rD(i, r, a))
      break;
  }
  return null;
}
function iD(t, e, n) {
  let { $from: o, $to: i, depth: r } = e, a = o.before(r + 1), l = i.after(r + 1), s = a, d = l, c = N.empty, u = 0;
  for (let h = r, g = !1; h > n; h--)
    g || o.index(h) > 0 ? (g = !0, c = N.from(o.node(h).copy(c)), u++) : s--;
  let f = N.empty, p = 0;
  for (let h = r, g = !1; h > n; h--)
    g || i.after(h + 1) < i.end(h) ? (g = !0, f = N.from(i.node(h).copy(f)), p++) : d++;
  t.step(new Ze(s, d, a, l, new J(c.append(f), u, p), c.size - u, !0));
}
function Ec(t, e, n = null, o = t) {
  let i = aD(t, e), r = i && lD(o, e);
  return r ? i.map(yf).concat({ type: e, attrs: n }).concat(r.map(yf)) : null;
}
function yf(t) {
  return { type: t, attrs: null };
}
function aD(t, e) {
  let { parent: n, startIndex: o, endIndex: i } = t, r = n.contentMatchAt(o).findWrapping(e);
  if (!r)
    return null;
  let a = r.length ? r[0] : e;
  return n.canReplaceWith(o, i, a) ? r : null;
}
function lD(t, e) {
  let { parent: n, startIndex: o, endIndex: i } = t, r = n.child(o), a = e.contentMatch.findWrapping(r.type);
  if (!a)
    return null;
  let s = (a.length ? a[a.length - 1] : e).contentMatch;
  for (let d = o; s && d < i; d++)
    s = s.matchType(n.child(d).type);
  return !s || !s.validEnd ? null : a;
}
function sD(t, e, n) {
  let o = N.empty;
  for (let a = n.length - 1; a >= 0; a--) {
    if (o.size) {
      let l = n[a].type.contentMatch.matchFragment(o);
      if (!l || !l.validEnd)
        throw new RangeError("Wrapper type given to Transform.wrap does not form valid content of its parent wrapper");
    }
    o = N.from(n[a].type.create(n[a].attrs, o));
  }
  let i = e.start, r = e.end;
  t.step(new Ze(i, r, i, r, new J(o, 0, 0), n.length, !0));
}
function dD(t, e, n, o, i) {
  if (!o.isTextblock)
    throw new RangeError("Type given to setBlockType should be a textblock");
  let r = t.steps.length;
  t.doc.nodesBetween(e, n, (a, l) => {
    let s = typeof i == "function" ? i(a) : i;
    if (a.isTextblock && !a.hasMarkup(o, s) && cD(t.doc, t.mapping.slice(r).map(l), o)) {
      let d = null;
      if (o.schema.linebreakReplacement) {
        let p = o.whitespace == "pre", h = !!o.contentMatch.matchType(o.schema.linebreakReplacement);
        p && !h ? d = !1 : !p && h && (d = !0);
      }
      d === !1 && ab(t, a, l, r), Bc(t, t.mapping.slice(r).map(l, 1), o, void 0, d === null);
      let c = t.mapping.slice(r), u = c.map(l, 1), f = c.map(l + a.nodeSize, 1);
      return t.step(new Ze(u, f, u + 1, f - 1, new J(N.from(o.create(s, null, a.marks)), 0, 0), 1, !0)), d === !0 && ib(t, a, l, r), !1;
    }
  });
}
function ib(t, e, n, o) {
  e.forEach((i, r) => {
    if (i.isText) {
      let a, l = /\r?\n|\r/g;
      for (; a = l.exec(i.text); ) {
        let s = t.mapping.slice(o).map(n + 1 + r + a.index);
        t.replaceWith(s, s + 1, e.type.schema.linebreakReplacement.create());
      }
    }
  });
}
function ab(t, e, n, o) {
  e.forEach((i, r) => {
    if (i.type == i.type.schema.linebreakReplacement) {
      let a = t.mapping.slice(o).map(n + 1 + r);
      t.replaceWith(a, a + 1, e.type.schema.text(`
`));
    }
  });
}
function cD(t, e, n) {
  let o = t.resolve(e), i = o.index();
  return o.parent.canReplaceWith(i, i + 1, n);
}
function uD(t, e, n, o, i) {
  let r = t.doc.nodeAt(e);
  if (!r)
    throw new RangeError("No node at given position");
  n || (n = r.type);
  let a = n.create(o, null, i || r.marks);
  if (r.isLeaf)
    return t.replaceWith(e, e + r.nodeSize, a);
  if (!n.validContent(r.content))
    throw new RangeError("Invalid content for node type " + n.name);
  t.step(new Ze(e, e + r.nodeSize, e + 1, e + r.nodeSize - 1, new J(N.from(a), 0, 0), 1, !0));
}
function Pn(t, e, n = 1, o) {
  let i = t.resolve(e), r = i.depth - n, a = o && o[o.length - 1] || i.parent;
  if (r < 0 || i.parent.type.spec.isolating || !i.parent.canReplace(i.index(), i.parent.childCount) || !a.type.validContent(i.parent.content.cutByIndex(i.index(), i.parent.childCount)))
    return !1;
  for (let d = i.depth - 1, c = n - 2; d > r; d--, c--) {
    let u = i.node(d), f = i.index(d);
    if (u.type.spec.isolating)
      return !1;
    let p = u.content.cutByIndex(f, u.childCount), h = o && o[c + 1];
    h && (p = p.replaceChild(0, h.type.create(h.attrs)));
    let g = o && o[c] || u;
    if (!u.canReplace(f + 1, u.childCount) || !g.type.validContent(p))
      return !1;
  }
  let l = i.indexAfter(r), s = o && o[0];
  return i.node(r).canReplaceWith(l, l, s ? s.type : i.node(r + 1).type);
}
function pD(t, e, n = 1, o) {
  let i = t.doc.resolve(e), r = N.empty, a = N.empty;
  for (let l = i.depth, s = i.depth - n, d = n - 1; l > s; l--, d--) {
    r = N.from(i.node(l).copy(r));
    let c = o && o[d];
    a = N.from(c ? c.type.create(c.attrs, a) : i.node(l).copy(a));
  }
  t.step(new Ye(e, e, new J(r.append(a), n, n), !0));
}
function to(t, e) {
  let n = t.resolve(e), o = n.index();
  return lb(n.nodeBefore, n.nodeAfter) && n.parent.canReplace(o, o + 1);
}
function fD(t, e) {
  e.content.size || t.type.compatibleContent(e.type);
  let n = t.contentMatchAt(t.childCount), { linebreakReplacement: o } = t.type.schema;
  for (let i = 0; i < e.childCount; i++) {
    let r = e.child(i), a = r.type == o ? t.type.schema.nodes.text : r.type;
    if (n = n.matchType(a), !n || !t.type.allowsMarks(r.marks))
      return !1;
  }
  return n.validEnd;
}
function lb(t, e) {
  return !!(t && e && !t.isLeaf && fD(t, e));
}
function El(t, e, n = -1) {
  let o = t.resolve(e);
  for (let i = o.depth; ; i--) {
    let r, a, l = o.index(i);
    if (i == o.depth ? (r = o.nodeBefore, a = o.nodeAfter) : n > 0 ? (r = o.node(i + 1), l++, a = o.node(i).maybeChild(l)) : (r = o.node(i).maybeChild(l - 1), a = o.node(i + 1)), r && !r.isTextblock && lb(r, a) && o.node(i).canReplace(l, l + 1))
      return e;
    if (i == 0)
      break;
    e = n < 0 ? o.before(i) : o.after(i);
  }
}
function hD(t, e, n) {
  let o = null, { linebreakReplacement: i } = t.doc.type.schema, r = t.doc.resolve(e - n), a = r.node().type;
  if (i && a.inlineContent) {
    let c = a.whitespace == "pre", u = !!a.contentMatch.matchType(i);
    c && !u ? o = !1 : !c && u && (o = !0);
  }
  let l = t.steps.length;
  if (o === !1) {
    let c = t.doc.resolve(e + n);
    ab(t, c.node(), c.before(), l);
  }
  a.inlineContent && Bc(t, e + n - 1, a, r.node().contentMatchAt(r.index()), o == null);
  let s = t.mapping.slice(l), d = s.map(e - n);
  if (t.step(new Ye(d, s.map(e + n, -1), J.empty, !0)), o === !0) {
    let c = t.doc.resolve(d);
    ib(t, c.node(), c.before(), t.steps.length);
  }
  return t;
}
function mD(t, e, n) {
  let o = t.resolve(e);
  if (o.parent.canReplaceWith(o.index(), o.index(), n))
    return e;
  if (o.parentOffset == 0)
    for (let i = o.depth - 1; i >= 0; i--) {
      let r = o.index(i);
      if (o.node(i).canReplaceWith(r, r, n))
        return o.before(i + 1);
      if (r > 0)
        return null;
    }
  if (o.parentOffset == o.parent.content.size)
    for (let i = o.depth - 1; i >= 0; i--) {
      let r = o.indexAfter(i);
      if (o.node(i).canReplaceWith(r, r, n))
        return o.after(i + 1);
      if (r < o.node(i).childCount)
        return null;
    }
  return null;
}
function sb(t, e, n) {
  let o = t.resolve(e);
  if (!n.content.size)
    return e;
  let i = n.content;
  for (let r = 0; r < n.openStart; r++)
    i = i.firstChild.content;
  for (let r = 1; r <= (n.openStart == 0 && n.size ? 2 : 1); r++)
    for (let a = o.depth; a >= 0; a--) {
      let l = a == o.depth ? 0 : o.pos <= (o.start(a + 1) + o.end(a + 1)) / 2 ? -1 : 1, s = o.index(a) + (l > 0 ? 1 : 0), d = o.node(a), c = !1;
      if (r == 1)
        c = d.canReplace(s, s, i);
      else {
        let u = d.contentMatchAt(s).findWrapping(i.firstChild.type);
        c = u && d.canReplaceWith(s, s, u[0]);
      }
      if (c)
        return l == 0 ? o.pos : l < 0 ? o.before(a + 1) : o.after(a + 1);
    }
  return null;
}
function Ml(t, e, n = e, o = J.empty) {
  if (e == n && !o.size)
    return null;
  let i = t.resolve(e), r = t.resolve(n);
  return db(i, r, o) ? new Ye(e, n, o) : new gD(i, r, o).fit();
}
function db(t, e, n) {
  return !n.openStart && !n.openEnd && t.start() == e.start() && t.parent.canReplace(t.index(), e.index(), n.content);
}
class gD {
  constructor(e, n, o) {
    this.$from = e, this.$to = n, this.unplaced = o, this.frontier = [], this.placed = N.empty;
    for (let i = 0; i <= e.depth; i++) {
      let r = e.node(i);
      this.frontier.push({
        type: r.type,
        match: r.contentMatchAt(e.indexAfter(i))
      });
    }
    for (let i = e.depth; i > 0; i--)
      this.placed = N.from(e.node(i).copy(this.placed));
  }
  get depth() {
    return this.frontier.length - 1;
  }
  fit() {
    for (; this.unplaced.size; ) {
      let d = this.findFittable();
      d ? this.placeNodes(d) : this.openMore() || this.dropNode();
    }
    let e = this.mustMoveInline(), n = this.placed.size - this.depth - this.$from.depth, o = this.$from, i = this.close(e < 0 ? this.$to : o.doc.resolve(e));
    if (!i)
      return null;
    let r = this.placed, a = o.depth, l = i.depth;
    for (; a && l && r.childCount == 1; )
      r = r.firstChild.content, a--, l--;
    let s = new J(r, a, l);
    return e > -1 ? new Ze(o.pos, e, this.$to.pos, this.$to.end(), s, n) : s.size || o.pos != this.$to.pos ? new Ye(o.pos, i.pos, s) : null;
  }
  // Find a position on the start spine of `this.unplaced` that has
  // content that can be moved somewhere on the frontier. Returns two
  // depths, one for the slice and one for the frontier.
  findFittable() {
    let e = this.unplaced.openStart;
    for (let n = this.unplaced.content, o = 0, i = this.unplaced.openEnd; o < e; o++) {
      let r = n.firstChild;
      if (n.childCount > 1 && (i = 0), r.type.spec.isolating && i <= o) {
        e = o;
        break;
      }
      n = r.content;
    }
    for (let n = 1; n <= 2; n++)
      for (let o = n == 1 ? e : this.unplaced.openStart; o >= 0; o--) {
        let i, r = null;
        o ? (r = ss(this.unplaced.content, o - 1).firstChild, i = r.content) : i = this.unplaced.content;
        let a = i.firstChild;
        for (let l = this.depth; l >= 0; l--) {
          let { type: s, match: d } = this.frontier[l], c, u = null;
          if (n == 1 && (a ? d.matchType(a.type) || (u = d.fillBefore(N.from(a), !1)) : r && s.compatibleContent(r.type)))
            return { sliceDepth: o, frontierDepth: l, parent: r, inject: u };
          if (n == 2 && a && (c = d.findWrapping(a.type)))
            return { sliceDepth: o, frontierDepth: l, parent: r, wrap: c };
          if (r && d.matchType(r.type))
            break;
        }
      }
  }
  openMore() {
    let { content: e, openStart: n, openEnd: o } = this.unplaced, i = ss(e, n);
    return !i.childCount || i.firstChild.isLeaf ? !1 : (this.unplaced = new J(e, n + 1, Math.max(o, i.size + n >= e.size - o ? n + 1 : 0)), !0);
  }
  dropNode() {
    let { content: e, openStart: n, openEnd: o } = this.unplaced, i = ss(e, n);
    if (i.childCount <= 1 && n > 0) {
      let r = e.size - n <= n + i.size;
      this.unplaced = new J(Rr(e, n - 1, 1), n - 1, r ? n - 1 : o);
    } else
      this.unplaced = new J(Rr(e, n, 1), n, o);
  }
  // Move content from the unplaced slice at `sliceDepth` to the
  // frontier node at `frontierDepth`. Close that frontier node when
  // applicable.
  placeNodes({ sliceDepth: e, frontierDepth: n, parent: o, inject: i, wrap: r }) {
    for (; this.depth > n; )
      this.closeFrontierNode();
    if (r)
      for (let g = 0; g < r.length; g++)
        this.openFrontierNode(r[g]);
    let a = this.unplaced, l = o ? o.content : a.content, s = a.openStart - e, d = 0, c = [], { match: u, type: f } = this.frontier[n];
    if (i) {
      for (let g = 0; g < i.childCount; g++)
        c.push(i.child(g));
      u = u.matchFragment(i);
    }
    let p = l.size + e - (a.content.size - a.openEnd);
    for (; d < l.childCount; ) {
      let g = l.child(d), b = u.matchType(g.type);
      if (!b)
        break;
      d++, (d > 1 || s == 0 || g.content.size) && (u = b, c.push(cb(g.mark(f.allowedMarks(g.marks)), d == 1 ? s : 0, d == l.childCount ? p : -1)));
    }
    let h = d == l.childCount;
    h || (p = -1), this.placed = Br(this.placed, n, N.from(c)), this.frontier[n].match = u, h && p < 0 && o && o.type == this.frontier[this.depth].type && this.frontier.length > 1 && this.closeFrontierNode();
    for (let g = 0, b = l; g < p; g++) {
      let C = b.lastChild;
      this.frontier.push({ type: C.type, match: C.contentMatchAt(C.childCount) }), b = C.content;
    }
    this.unplaced = h ? e == 0 ? J.empty : new J(Rr(a.content, e - 1, 1), e - 1, p < 0 ? a.openEnd : e - 1) : new J(Rr(a.content, e, d), a.openStart, a.openEnd);
  }
  mustMoveInline() {
    if (!this.$to.parent.isTextblock)
      return -1;
    let e = this.frontier[this.depth], n;
    if (!e.type.isTextblock || !ds(this.$to, this.$to.depth, e.type, e.match, !1) || this.$to.depth == this.depth && (n = this.findCloseLevel(this.$to)) && n.depth == this.depth)
      return -1;
    let { depth: o } = this.$to, i = this.$to.after(o);
    for (; o > 1 && i == this.$to.end(--o); )
      ++i;
    return i;
  }
  findCloseLevel(e) {
    e: for (let n = Math.min(this.depth, e.depth); n >= 0; n--) {
      let { match: o, type: i } = this.frontier[n], r = n < e.depth && e.end(n + 1) == e.pos + (e.depth - (n + 1)), a = ds(e, n, i, o, r);
      if (a) {
        for (let l = n - 1; l >= 0; l--) {
          let { match: s, type: d } = this.frontier[l], c = ds(e, l, d, s, !0);
          if (!c || c.childCount)
            continue e;
        }
        return { depth: n, fit: a, move: r ? e.doc.resolve(e.after(n + 1)) : e };
      }
    }
  }
  close(e) {
    let n = this.findCloseLevel(e);
    if (!n)
      return null;
    for (; this.depth > n.depth; )
      this.closeFrontierNode();
    n.fit.childCount && (this.placed = Br(this.placed, n.depth, n.fit)), e = n.move;
    for (let o = n.depth + 1; o <= e.depth; o++) {
      let i = e.node(o), r = i.type.contentMatch.fillBefore(i.content, !0, e.index(o));
      this.openFrontierNode(i.type, i.attrs, r);
    }
    return e;
  }
  openFrontierNode(e, n = null, o) {
    let i = this.frontier[this.depth];
    i.match = i.match.matchType(e), this.placed = Br(this.placed, this.depth, N.from(e.create(n, o))), this.frontier.push({ type: e, match: e.contentMatch });
  }
  closeFrontierNode() {
    let n = this.frontier.pop().match.fillBefore(N.empty, !0);
    n.childCount && (this.placed = Br(this.placed, this.frontier.length, n));
  }
}
function Rr(t, e, n) {
  return e == 0 ? t.cutByIndex(n, t.childCount) : t.replaceChild(0, t.firstChild.copy(Rr(t.firstChild.content, e - 1, n)));
}
function Br(t, e, n) {
  return e == 0 ? t.append(n) : t.replaceChild(t.childCount - 1, t.lastChild.copy(Br(t.lastChild.content, e - 1, n)));
}
function ss(t, e) {
  for (let n = 0; n < e; n++)
    t = t.firstChild.content;
  return t;
}
function cb(t, e, n) {
  if (e <= 0)
    return t;
  let o = t.content;
  return e > 1 && (o = o.replaceChild(0, cb(o.firstChild, e - 1, o.childCount == 1 ? n - 1 : 0))), e > 0 && (o = t.type.contentMatch.fillBefore(o).append(o), n <= 0 && (o = o.append(t.type.contentMatch.matchFragment(o).fillBefore(N.empty, !0)))), t.copy(o);
}
function ds(t, e, n, o, i) {
  let r = t.node(e), a = i ? t.indexAfter(e) : t.index(e);
  if (a == r.childCount && !n.compatibleContent(r.type))
    return null;
  let l = o.fillBefore(r.content, !0, a);
  return l && !bD(n, r.content, a) ? l : null;
}
function bD(t, e, n) {
  for (let o = n; o < e.childCount; o++)
    if (!t.allowsMarks(e.child(o).marks))
      return !0;
  return !1;
}
function vD(t) {
  return t.spec.defining || t.spec.definingForContent;
}
function yD(t, e, n, o) {
  if (!o.size)
    return t.deleteRange(e, n);
  let i = t.doc.resolve(e), r = t.doc.resolve(n);
  if (db(i, r, o))
    return t.step(new Ye(e, n, o));
  let a = pb(i, t.doc.resolve(n));
  a[a.length - 1] == 0 && a.pop();
  let l = -(i.depth + 1);
  a.unshift(l);
  for (let f = i.depth, p = i.pos - 1; f > 0; f--, p--) {
    let h = i.node(f).type.spec;
    if (h.defining || h.definingAsContext || h.isolating)
      break;
    a.indexOf(f) > -1 ? l = f : i.before(f) == p && a.splice(1, 0, -f);
  }
  let s = a.indexOf(l), d = [], c = o.openStart;
  for (let f = o.content, p = 0; ; p++) {
    let h = f.firstChild;
    if (d.push(h), p == o.openStart)
      break;
    f = h.content;
  }
  for (let f = c - 1; f >= 0; f--) {
    let p = d[f], h = vD(p.type);
    if (h && !p.sameMarkup(i.node(Math.abs(l) - 1)))
      c = f;
    else if (h || !p.type.isTextblock)
      break;
  }
  for (let f = o.openStart; f >= 0; f--) {
    let p = (f + c + 1) % (o.openStart + 1), h = d[p];
    if (h)
      for (let g = 0; g < a.length; g++) {
        let b = a[(g + s) % a.length], C = !0;
        b < 0 && (C = !1, b = -b);
        let x = i.node(b - 1), R = i.index(b - 1);
        if (x.canReplaceWith(R, R, h.type, h.marks))
          return t.replace(i.before(b), C ? r.after(b) : n, new J(ub(o.content, 0, o.openStart, p), p, o.openEnd));
      }
  }
  let u = t.steps.length;
  for (let f = a.length - 1; f >= 0 && (t.replace(e, n, o), !(t.steps.length > u)); f--) {
    let p = a[f];
    p < 0 || (e = i.before(p), n = r.after(p));
  }
}
function ub(t, e, n, o, i) {
  if (e < n) {
    let r = t.firstChild;
    t = t.replaceChild(0, r.copy(ub(r.content, e + 1, n, o, r)));
  }
  if (e > o) {
    let r = i.contentMatchAt(0), a = r.fillBefore(t).append(t);
    t = a.append(r.matchFragment(a).fillBefore(N.empty, !0));
  }
  return t;
}
function kD(t, e, n, o) {
  if (!o.isInline && e == n && t.doc.resolve(e).parent.content.size) {
    let i = mD(t.doc, e, o.type);
    i != null && (e = n = i);
  }
  t.replaceRange(e, n, new J(N.from(o), 0, 0));
}
function wD(t, e, n) {
  let o = t.doc.resolve(e), i = t.doc.resolve(n), r = pb(o, i);
  for (let a = 0; a < r.length; a++) {
    let l = r[a], s = a == r.length - 1;
    if (s && l == 0 || o.node(l).type.contentMatch.validEnd)
      return t.delete(o.start(l), i.end(l));
    if (l > 0 && (s || o.node(l - 1).canReplace(o.index(l - 1), i.indexAfter(l - 1))))
      return t.delete(o.before(l), i.after(l));
  }
  for (let a = 1; a <= o.depth && a <= i.depth; a++)
    if (e - o.start(a) == o.depth - a && n > o.end(a) && i.end(a) - n != i.depth - a && o.start(a - 1) == i.start(a - 1) && o.node(a - 1).canReplace(o.index(a - 1), i.index(a - 1)))
      return t.delete(o.before(a), n);
  t.delete(e, n);
}
function pb(t, e) {
  let n = [], o = Math.min(t.depth, e.depth);
  for (let i = o; i >= 0; i--) {
    let r = t.start(i);
    if (r < t.pos - (t.depth - i) || e.end(i) > e.pos + (e.depth - i) || t.node(i).type.spec.isolating || e.node(i).type.spec.isolating)
      break;
    (r == e.start(i) || i == t.depth && i == e.depth && t.parent.inlineContent && e.parent.inlineContent && i && e.start(i - 1) == r - 1) && n.push(i);
  }
  return n;
}
class Zo extends gt {
  /**
  Construct an attribute step.
  */
  constructor(e, n, o) {
    super(), this.pos = e, this.attr = n, this.value = o;
  }
  apply(e) {
    let n = e.nodeAt(this.pos);
    if (!n)
      return Ue.fail("No node at attribute step's position");
    let o = /* @__PURE__ */ Object.create(null);
    for (let r in n.attrs)
      o[r] = n.attrs[r];
    o[this.attr] = this.value;
    let i = n.type.create(o, null, n.marks);
    return Ue.fromReplace(e, this.pos, this.pos + 1, new J(N.from(i), 0, n.isLeaf ? 0 : 1));
  }
  getMap() {
    return Et.empty;
  }
  invert(e) {
    return new Zo(this.pos, this.attr, e.nodeAt(this.pos).attrs[this.attr]);
  }
  map(e) {
    let n = e.mapResult(this.pos, 1);
    return n.deletedAfter ? null : new Zo(n.pos, this.attr, this.value);
  }
  toJSON() {
    return { stepType: "attr", pos: this.pos, attr: this.attr, value: this.value };
  }
  static fromJSON(e, n) {
    if (typeof n.pos != "number" || typeof n.attr != "string")
      throw new RangeError("Invalid input for AttrStep.fromJSON");
    return new Zo(n.pos, n.attr, n.value);
  }
}
gt.jsonID("attr", Zo);
class Hi extends gt {
  /**
  Construct an attribute step.
  */
  constructor(e, n) {
    super(), this.attr = e, this.value = n;
  }
  apply(e) {
    let n = /* @__PURE__ */ Object.create(null);
    for (let i in e.attrs)
      n[i] = e.attrs[i];
    n[this.attr] = this.value;
    let o = e.type.create(n, e.content, e.marks);
    return Ue.ok(o);
  }
  getMap() {
    return Et.empty;
  }
  invert(e) {
    return new Hi(this.attr, e.attrs[this.attr]);
  }
  map(e) {
    return this;
  }
  toJSON() {
    return { stepType: "docAttr", attr: this.attr, value: this.value };
  }
  static fromJSON(e, n) {
    if (typeof n.attr != "string")
      throw new RangeError("Invalid input for DocAttrStep.fromJSON");
    return new Hi(n.attr, n.value);
  }
}
gt.jsonID("docAttr", Hi);
let rr = class extends Error {
};
rr = function t(e) {
  let n = Error.call(this, e);
  return n.__proto__ = t.prototype, n;
};
rr.prototype = Object.create(Error.prototype);
rr.prototype.constructor = rr;
rr.prototype.name = "TransformError";
class CD {
  /**
  Create a transform that starts with the given document.
  */
  constructor(e) {
    this.doc = e, this.steps = [], this.docs = [], this.mapping = new Ki();
  }
  /**
  The starting document.
  */
  get before() {
    return this.docs.length ? this.docs[0] : this.doc;
  }
  /**
  Apply a new step in this transform, saving the result. Throws an
  error when the step fails.
  */
  step(e) {
    let n = this.maybeStep(e);
    if (n.failed)
      throw new rr(n.failed);
    return this;
  }
  /**
  Try to apply a step in this transformation, ignoring it if it
  fails. Returns the step result.
  */
  maybeStep(e) {
    let n = e.apply(this.doc);
    return n.failed || this.addStep(e, n.doc), n;
  }
  /**
  True when the document has been changed (when there are any
  steps).
  */
  get docChanged() {
    return this.steps.length > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    this.docs.push(this.doc), this.steps.push(e), this.mapping.appendMap(e.getMap()), this.doc = n;
  }
  /**
  Replace the part of the document between `from` and `to` with the
  given `slice`.
  */
  replace(e, n = e, o = J.empty) {
    let i = Ml(this.doc, e, n, o);
    return i && this.step(i), this;
  }
  /**
  Replace the given range with the given content, which may be a
  fragment, node, or array of nodes.
  */
  replaceWith(e, n, o) {
    return this.replace(e, n, new J(N.from(o), 0, 0));
  }
  /**
  Delete the content between the given positions.
  */
  delete(e, n) {
    return this.replace(e, n, J.empty);
  }
  /**
  Insert the given content at the given position.
  */
  insert(e, n) {
    return this.replaceWith(e, e, n);
  }
  /**
  Replace a range of the document with a given slice, using
  `from`, `to`, and the slice's
  [`openStart`](https://prosemirror.net/docs/ref/#model.Slice.openStart) property as hints, rather
  than fixed start and end points. This method may grow the
  replaced area or close open nodes in the slice in order to get a
  fit that is more in line with WYSIWYG expectations, by dropping
  fully covered parent nodes of the replaced region when they are
  marked [non-defining as
  context](https://prosemirror.net/docs/ref/#model.NodeSpec.definingAsContext), or including an
  open parent node from the slice that _is_ marked as [defining
  its content](https://prosemirror.net/docs/ref/#model.NodeSpec.definingForContent).
  
  This is the method, for example, to handle paste. The similar
  [`replace`](https://prosemirror.net/docs/ref/#transform.Transform.replace) method is a more
  primitive tool which will _not_ move the start and end of its given
  range, and is useful in situations where you need more precise
  control over what happens.
  */
  replaceRange(e, n, o) {
    return yD(this, e, n, o), this;
  }
  /**
  Replace the given range with a node, but use `from` and `to` as
  hints, rather than precise positions. When from and to are the same
  and are at the start or end of a parent node in which the given
  node doesn't fit, this method may _move_ them out towards a parent
  that does allow the given node to be placed. When the given range
  completely covers a parent node, this method may completely replace
  that parent node.
  */
  replaceRangeWith(e, n, o) {
    return kD(this, e, n, o), this;
  }
  /**
  Delete the given range, expanding it to cover fully covered
  parent nodes until a valid replace is found.
  */
  deleteRange(e, n) {
    return wD(this, e, n), this;
  }
  /**
  Split the content in the given range off from its parent, if there
  is sibling content before or after it, and move it up the tree to
  the depth specified by `target`. You'll probably want to use
  [`liftTarget`](https://prosemirror.net/docs/ref/#transform.liftTarget) to compute `target`, to make
  sure the lift is valid.
  */
  lift(e, n) {
    return iD(this, e, n), this;
  }
  /**
  Join the blocks around the given position. If depth is 2, their
  last and first siblings are also joined, and so on.
  */
  join(e, n = 1) {
    return hD(this, e, n), this;
  }
  /**
  Wrap the given [range](https://prosemirror.net/docs/ref/#model.NodeRange) in the given set of wrappers.
  The wrappers are assumed to be valid in this position, and should
  probably be computed with [`findWrapping`](https://prosemirror.net/docs/ref/#transform.findWrapping).
  */
  wrap(e, n) {
    return sD(this, e, n), this;
  }
  /**
  Set the type of all textblocks (partly) between `from` and `to` to
  the given node type with the given attributes.
  */
  setBlockType(e, n = e, o, i = null) {
    return dD(this, e, n, o, i), this;
  }
  /**
  Change the type, attributes, and/or marks of the node at `pos`.
  When `type` isn't given, the existing node type is preserved,
  */
  setNodeMarkup(e, n, o = null, i) {
    return uD(this, e, n, o, i), this;
  }
  /**
  Set a single attribute on a given node to a new value.
  The `pos` addresses the document content. Use `setDocAttribute`
  to set attributes on the document itself.
  */
  setNodeAttribute(e, n, o) {
    return this.step(new Zo(e, n, o)), this;
  }
  /**
  Set a single attribute on the document to a new value.
  */
  setDocAttribute(e, n) {
    return this.step(new Hi(e, n)), this;
  }
  /**
  Add a mark to the node at position `pos`.
  */
  addNodeMark(e, n) {
    return this.step(new Un(e, n)), this;
  }
  /**
  Remove a mark (or all marks of the given type) from the node at
  position `pos`.
  */
  removeNodeMark(e, n) {
    let o = this.doc.nodeAt(e);
    if (!o)
      throw new RangeError("No node at position " + e);
    if (n instanceof Ae)
      n.isInSet(o.marks) && this.step(new Po(e, n));
    else {
      let i = o.marks, r, a = [];
      for (; r = n.isInSet(i); )
        a.push(new Po(e, r)), i = r.removeFromSet(i);
      for (let l = a.length - 1; l >= 0; l--)
        this.step(a[l]);
    }
    return this;
  }
  /**
  Split the node at the given position, and optionally, if `depth` is
  greater than one, any number of nodes above that. By default, the
  parts split off will inherit the node type of the original node.
  This can be changed by passing an array of types and attributes to
  use after the split (with the outermost nodes coming first).
  */
  split(e, n = 1, o) {
    return pD(this, e, n, o), this;
  }
  /**
  Add the given mark to the inline content between `from` and `to`.
  */
  addMark(e, n, o) {
    return nD(this, e, n, o), this;
  }
  /**
  Remove marks from inline nodes between `from` and `to`. When
  `mark` is a single mark, remove precisely that mark. When it is
  a mark type, remove all marks of that type. When it is null,
  remove all marks of any type.
  */
  removeMark(e, n, o) {
    return oD(this, e, n, o), this;
  }
  /**
  Removes all marks and nodes from the content of the node at
  `pos` that don't match the given new parent node type. Accepts
  an optional starting [content match](https://prosemirror.net/docs/ref/#model.ContentMatch) as
  third argument.
  */
  clearIncompatible(e, n, o) {
    return Bc(this, e, n, o), this;
  }
}
const cs = /* @__PURE__ */ Object.create(null);
class ve {
  /**
  Initialize a selection with the head and anchor and ranges. If no
  ranges are given, constructs a single range across `$anchor` and
  `$head`.
  */
  constructor(e, n, o) {
    this.$anchor = e, this.$head = n, this.ranges = o || [new xD(e.min(n), e.max(n))];
  }
  /**
  The selection's anchor, as an unresolved position.
  */
  get anchor() {
    return this.$anchor.pos;
  }
  /**
  The selection's head.
  */
  get head() {
    return this.$head.pos;
  }
  /**
  The lower bound of the selection's main range.
  */
  get from() {
    return this.$from.pos;
  }
  /**
  The upper bound of the selection's main range.
  */
  get to() {
    return this.$to.pos;
  }
  /**
  The resolved lower  bound of the selection's main range.
  */
  get $from() {
    return this.ranges[0].$from;
  }
  /**
  The resolved upper bound of the selection's main range.
  */
  get $to() {
    return this.ranges[0].$to;
  }
  /**
  Indicates whether the selection contains any content.
  */
  get empty() {
    let e = this.ranges;
    for (let n = 0; n < e.length; n++)
      if (e[n].$from.pos != e[n].$to.pos)
        return !1;
    return !0;
  }
  /**
  Get the content of this selection as a slice.
  */
  content() {
    return this.$from.doc.slice(this.from, this.to, !0);
  }
  /**
  Replace the selection with a slice or, if no slice is given,
  delete the selection. Will append to the given transaction.
  */
  replace(e, n = J.empty) {
    let o = n.content.lastChild, i = null;
    for (let l = 0; l < n.openEnd; l++)
      i = o, o = o.lastChild;
    let r = e.steps.length, a = this.ranges;
    for (let l = 0; l < a.length; l++) {
      let { $from: s, $to: d } = a[l], c = e.mapping.slice(r);
      e.replaceRange(c.map(s.pos), c.map(d.pos), l ? J.empty : n), l == 0 && Cf(e, r, (o ? o.isInline : i && i.isTextblock) ? -1 : 1);
    }
  }
  /**
  Replace the selection with the given node, appending the changes
  to the given transaction.
  */
  replaceWith(e, n) {
    let o = e.steps.length, i = this.ranges;
    for (let r = 0; r < i.length; r++) {
      let { $from: a, $to: l } = i[r], s = e.mapping.slice(o), d = s.map(a.pos), c = s.map(l.pos);
      r ? e.deleteRange(d, c) : (e.replaceRangeWith(d, c, n), Cf(e, o, n.isInline ? -1 : 1));
    }
  }
  /**
  Find a valid cursor or leaf node selection starting at the given
  position and searching back if `dir` is negative, and forward if
  positive. When `textOnly` is true, only consider cursor
  selections. Will return null when no valid selection position is
  found.
  */
  static findFrom(e, n, o = !1) {
    let i = e.parent.inlineContent ? new he(e) : Ho(e.node(0), e.parent, e.pos, e.index(), n, o);
    if (i)
      return i;
    for (let r = e.depth - 1; r >= 0; r--) {
      let a = n < 0 ? Ho(e.node(0), e.node(r), e.before(r + 1), e.index(r), n, o) : Ho(e.node(0), e.node(r), e.after(r + 1), e.index(r) + 1, n, o);
      if (a)
        return a;
    }
    return null;
  }
  /**
  Find a valid cursor or leaf node selection near the given
  position. Searches forward first by default, but if `bias` is
  negative, it will search backwards first.
  */
  static near(e, n = 1) {
    return this.findFrom(e, n) || this.findFrom(e, -n) || new Mt(e.node(0));
  }
  /**
  Find the cursor or leaf node selection closest to the start of
  the given document. Will return an
  [`AllSelection`](https://prosemirror.net/docs/ref/#state.AllSelection) if no valid position
  exists.
  */
  static atStart(e) {
    return Ho(e, e, 0, 0, 1) || new Mt(e);
  }
  /**
  Find the cursor or leaf node selection closest to the end of the
  given document.
  */
  static atEnd(e) {
    return Ho(e, e, e.content.size, e.childCount, -1) || new Mt(e);
  }
  /**
  Deserialize the JSON representation of a selection. Must be
  implemented for custom classes (as a static class method).
  */
  static fromJSON(e, n) {
    if (!n || !n.type)
      throw new RangeError("Invalid input for Selection.fromJSON");
    let o = cs[n.type];
    if (!o)
      throw new RangeError(`No selection type ${n.type} defined`);
    return o.fromJSON(e, n);
  }
  /**
  To be able to deserialize selections from JSON, custom selection
  classes must register themselves with an ID string, so that they
  can be disambiguated. Try to pick something that's unlikely to
  clash with classes from other modules.
  */
  static jsonID(e, n) {
    if (e in cs)
      throw new RangeError("Duplicate use of selection JSON ID " + e);
    return cs[e] = n, n.prototype.jsonID = e, n;
  }
  /**
  Get a [bookmark](https://prosemirror.net/docs/ref/#state.SelectionBookmark) for this selection,
  which is a value that can be mapped without having access to a
  current document, and later resolved to a real selection for a
  given document again. (This is used mostly by the history to
  track and restore old selections.) The default implementation of
  this method just converts the selection to a text selection and
  returns the bookmark for that.
  */
  getBookmark() {
    return he.between(this.$anchor, this.$head).getBookmark();
  }
}
ve.prototype.visible = !0;
class xD {
  /**
  Create a range.
  */
  constructor(e, n) {
    this.$from = e, this.$to = n;
  }
}
let kf = !1;
function wf(t) {
  !kf && !t.parent.inlineContent && (kf = !0, console.warn("TextSelection endpoint not pointing into a node with inline content (" + t.parent.type.name + ")"));
}
class he extends ve {
  /**
  Construct a text selection between the given points.
  */
  constructor(e, n = e) {
    wf(e), wf(n), super(e, n);
  }
  /**
  Returns a resolved position if this is a cursor selection (an
  empty text selection), and null otherwise.
  */
  get $cursor() {
    return this.$anchor.pos == this.$head.pos ? this.$head : null;
  }
  map(e, n) {
    let o = e.resolve(n.map(this.head));
    if (!o.parent.inlineContent)
      return ve.near(o);
    let i = e.resolve(n.map(this.anchor));
    return new he(i.parent.inlineContent ? i : o, o);
  }
  replace(e, n = J.empty) {
    if (super.replace(e, n), n == J.empty) {
      let o = this.$from.marksAcross(this.$to);
      o && e.ensureMarks(o);
    }
  }
  eq(e) {
    return e instanceof he && e.anchor == this.anchor && e.head == this.head;
  }
  getBookmark() {
    return new Al(this.anchor, this.head);
  }
  toJSON() {
    return { type: "text", anchor: this.anchor, head: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number" || typeof n.head != "number")
      throw new RangeError("Invalid input for TextSelection.fromJSON");
    return new he(e.resolve(n.anchor), e.resolve(n.head));
  }
  /**
  Create a text selection from non-resolved positions.
  */
  static create(e, n, o = n) {
    let i = e.resolve(n);
    return new this(i, o == n ? i : e.resolve(o));
  }
  /**
  Return a text selection that spans the given positions or, if
  they aren't text positions, find a text selection near them.
  `bias` determines whether the method searches forward (default)
  or backwards (negative number) first. Will fall back to calling
  [`Selection.near`](https://prosemirror.net/docs/ref/#state.Selection^near) when the document
  doesn't contain a valid text position.
  */
  static between(e, n, o) {
    let i = e.pos - n.pos;
    if ((!o || i) && (o = i >= 0 ? 1 : -1), !n.parent.inlineContent) {
      let r = ve.findFrom(n, o, !0) || ve.findFrom(n, -o, !0);
      if (r)
        n = r.$head;
      else
        return ve.near(n, o);
    }
    return e.parent.inlineContent || (i == 0 ? e = n : (e = (ve.findFrom(e, -o, !0) || ve.findFrom(e, o, !0)).$anchor, e.pos < n.pos != i < 0 && (e = n))), new he(e, n);
  }
}
ve.jsonID("text", he);
class Al {
  constructor(e, n) {
    this.anchor = e, this.head = n;
  }
  map(e) {
    return new Al(e.map(this.anchor), e.map(this.head));
  }
  resolve(e) {
    return he.between(e.resolve(this.anchor), e.resolve(this.head));
  }
}
class oe extends ve {
  /**
  Create a node selection. Does not verify the validity of its
  argument.
  */
  constructor(e) {
    let n = e.nodeAfter, o = e.node(0).resolve(e.pos + n.nodeSize);
    super(e, o), this.node = n;
  }
  map(e, n) {
    let { deleted: o, pos: i } = n.mapResult(this.anchor), r = e.resolve(i);
    return o ? ve.near(r) : new oe(r);
  }
  content() {
    return new J(N.from(this.node), 0, 0);
  }
  eq(e) {
    return e instanceof oe && e.anchor == this.anchor;
  }
  toJSON() {
    return { type: "node", anchor: this.anchor };
  }
  getBookmark() {
    return new Mc(this.anchor);
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.anchor != "number")
      throw new RangeError("Invalid input for NodeSelection.fromJSON");
    return new oe(e.resolve(n.anchor));
  }
  /**
  Create a node selection from non-resolved positions.
  */
  static create(e, n) {
    return new oe(e.resolve(n));
  }
  /**
  Determines whether the given node may be selected as a node
  selection.
  */
  static isSelectable(e) {
    return !e.isText && e.type.spec.selectable !== !1;
  }
}
oe.prototype.visible = !1;
ve.jsonID("node", oe);
class Mc {
  constructor(e) {
    this.anchor = e;
  }
  map(e) {
    let { deleted: n, pos: o } = e.mapResult(this.anchor);
    return n ? new Al(o, o) : new Mc(o);
  }
  resolve(e) {
    let n = e.resolve(this.anchor), o = n.nodeAfter;
    return o && oe.isSelectable(o) ? new oe(n) : ve.near(n);
  }
}
class Mt extends ve {
  /**
  Create an all-selection over the given document.
  */
  constructor(e) {
    super(e.resolve(0), e.resolve(e.content.size));
  }
  replace(e, n = J.empty) {
    if (n == J.empty) {
      e.delete(0, e.doc.content.size);
      let o = ve.atStart(e.doc);
      o.eq(e.selection) || e.setSelection(o);
    } else
      super.replace(e, n);
  }
  toJSON() {
    return { type: "all" };
  }
  /**
  @internal
  */
  static fromJSON(e) {
    return new Mt(e);
  }
  map(e) {
    return new Mt(e);
  }
  eq(e) {
    return e instanceof Mt;
  }
  getBookmark() {
    return SD;
  }
}
ve.jsonID("all", Mt);
const SD = {
  map() {
    return this;
  },
  resolve(t) {
    return new Mt(t);
  }
};
function Ho(t, e, n, o, i, r = !1) {
  if (e.inlineContent)
    return he.create(t, n);
  for (let a = o - (i > 0 ? 0 : 1); i > 0 ? a < e.childCount : a >= 0; a += i) {
    let l = e.child(a);
    if (l.isAtom) {
      if (!r && oe.isSelectable(l))
        return oe.create(t, n - (i < 0 ? l.nodeSize : 0));
    } else {
      let s = Ho(t, l, n + i, i < 0 ? l.childCount : 0, i, r);
      if (s)
        return s;
    }
    n += l.nodeSize * i;
  }
  return null;
}
function Cf(t, e, n) {
  let o = t.steps.length - 1;
  if (o < e)
    return;
  let i = t.steps[o];
  if (!(i instanceof Ye || i instanceof Ze))
    return;
  let r = t.mapping.maps[o], a;
  r.forEach((l, s, d, c) => {
    a == null && (a = c);
  }), t.setSelection(ve.near(t.doc.resolve(a), n));
}
const xf = 1, Ba = 2, Sf = 4;
class ID extends CD {
  /**
  @internal
  */
  constructor(e) {
    super(e.doc), this.curSelectionFor = 0, this.updated = 0, this.meta = /* @__PURE__ */ Object.create(null), this.time = Date.now(), this.curSelection = e.selection, this.storedMarks = e.storedMarks;
  }
  /**
  The transaction's current selection. This defaults to the editor
  selection [mapped](https://prosemirror.net/docs/ref/#state.Selection.map) through the steps in the
  transaction, but can be overwritten with
  [`setSelection`](https://prosemirror.net/docs/ref/#state.Transaction.setSelection).
  */
  get selection() {
    return this.curSelectionFor < this.steps.length && (this.curSelection = this.curSelection.map(this.doc, this.mapping.slice(this.curSelectionFor)), this.curSelectionFor = this.steps.length), this.curSelection;
  }
  /**
  Update the transaction's current selection. Will determine the
  selection that the editor gets when the transaction is applied.
  */
  setSelection(e) {
    if (e.$from.doc != this.doc)
      throw new RangeError("Selection passed to setSelection must point at the current document");
    return this.curSelection = e, this.curSelectionFor = this.steps.length, this.updated = (this.updated | xf) & ~Ba, this.storedMarks = null, this;
  }
  /**
  Whether the selection was explicitly updated by this transaction.
  */
  get selectionSet() {
    return (this.updated & xf) > 0;
  }
  /**
  Set the current stored marks.
  */
  setStoredMarks(e) {
    return this.storedMarks = e, this.updated |= Ba, this;
  }
  /**
  Make sure the current stored marks or, if that is null, the marks
  at the selection, match the given set of marks. Does nothing if
  this is already the case.
  */
  ensureMarks(e) {
    return Ae.sameSet(this.storedMarks || this.selection.$from.marks(), e) || this.setStoredMarks(e), this;
  }
  /**
  Add a mark to the set of stored marks.
  */
  addStoredMark(e) {
    return this.ensureMarks(e.addToSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Remove a mark or mark type from the set of stored marks.
  */
  removeStoredMark(e) {
    return this.ensureMarks(e.removeFromSet(this.storedMarks || this.selection.$head.marks()));
  }
  /**
  Whether the stored marks were explicitly set for this transaction.
  */
  get storedMarksSet() {
    return (this.updated & Ba) > 0;
  }
  /**
  @internal
  */
  addStep(e, n) {
    super.addStep(e, n), this.updated = this.updated & ~Ba, this.storedMarks = null;
  }
  /**
  Update the timestamp for the transaction.
  */
  setTime(e) {
    return this.time = e, this;
  }
  /**
  Replace the current selection with the given slice.
  */
  replaceSelection(e) {
    return this.selection.replace(this, e), this;
  }
  /**
  Replace the selection with the given node. When `inheritMarks` is
  true and the content is inline, it inherits the marks from the
  place where it is inserted.
  */
  replaceSelectionWith(e, n = !0) {
    let o = this.selection;
    return n && (e = e.mark(this.storedMarks || (o.empty ? o.$from.marks() : o.$from.marksAcross(o.$to) || Ae.none))), o.replaceWith(this, e), this;
  }
  /**
  Delete the selection.
  */
  deleteSelection() {
    return this.selection.replace(this), this;
  }
  /**
  Replace the given range, or the selection if no range is given,
  with a text node containing the given string.
  */
  insertText(e, n, o) {
    let i = this.doc.type.schema;
    if (n == null)
      return e ? this.replaceSelectionWith(i.text(e), !0) : this.deleteSelection();
    {
      if (o == null && (o = n), o = o ?? n, !e)
        return this.deleteRange(n, o);
      let r = this.storedMarks;
      if (!r) {
        let a = this.doc.resolve(n);
        r = o == n ? a.marks() : a.marksAcross(this.doc.resolve(o));
      }
      return this.replaceRangeWith(n, o, i.text(e, r)), this.selection.empty || this.setSelection(ve.near(this.selection.$to)), this;
    }
  }
  /**
  Store a metadata property in this transaction, keyed either by
  name or by plugin.
  */
  setMeta(e, n) {
    return this.meta[typeof e == "string" ? e : e.key] = n, this;
  }
  /**
  Retrieve a metadata property for a given name or plugin.
  */
  getMeta(e) {
    return this.meta[typeof e == "string" ? e : e.key];
  }
  /**
  Returns true if this transaction doesn't contain any metadata,
  and can thus safely be extended.
  */
  get isGeneric() {
    for (let e in this.meta)
      return !1;
    return !0;
  }
  /**
  Indicate that the editor should scroll the selection into view
  when updated to the state produced by this transaction.
  */
  scrollIntoView() {
    return this.updated |= Sf, this;
  }
  /**
  True when this transaction has had `scrollIntoView` called on it.
  */
  get scrolledIntoView() {
    return (this.updated & Sf) > 0;
  }
}
function If(t, e) {
  return !e || !t ? t : t.bind(e);
}
class Er {
  constructor(e, n, o) {
    this.name = e, this.init = If(n.init, o), this.apply = If(n.apply, o);
  }
}
const OD = [
  new Er("doc", {
    init(t) {
      return t.doc || t.schema.topNodeType.createAndFill();
    },
    apply(t) {
      return t.doc;
    }
  }),
  new Er("selection", {
    init(t, e) {
      return t.selection || ve.atStart(e.doc);
    },
    apply(t) {
      return t.selection;
    }
  }),
  new Er("storedMarks", {
    init(t) {
      return t.storedMarks || null;
    },
    apply(t, e, n, o) {
      return o.selection.$cursor ? t.storedMarks : null;
    }
  }),
  new Er("scrollToSelection", {
    init() {
      return 0;
    },
    apply(t, e) {
      return t.scrolledIntoView ? e + 1 : e;
    }
  })
];
class us {
  constructor(e, n) {
    this.schema = e, this.plugins = [], this.pluginsByKey = /* @__PURE__ */ Object.create(null), this.fields = OD.slice(), n && n.forEach((o) => {
      if (this.pluginsByKey[o.key])
        throw new RangeError("Adding different instances of a keyed plugin (" + o.key + ")");
      this.plugins.push(o), this.pluginsByKey[o.key] = o, o.spec.state && this.fields.push(new Er(o.key, o.spec.state, o));
    });
  }
}
class Yo {
  /**
  @internal
  */
  constructor(e) {
    this.config = e;
  }
  /**
  The schema of the state's document.
  */
  get schema() {
    return this.config.schema;
  }
  /**
  The plugins that are active in this state.
  */
  get plugins() {
    return this.config.plugins;
  }
  /**
  Apply the given transaction to produce a new state.
  */
  apply(e) {
    return this.applyTransaction(e).state;
  }
  /**
  @internal
  */
  filterTransaction(e, n = -1) {
    for (let o = 0; o < this.config.plugins.length; o++)
      if (o != n) {
        let i = this.config.plugins[o];
        if (i.spec.filterTransaction && !i.spec.filterTransaction.call(i, e, this))
          return !1;
      }
    return !0;
  }
  /**
  Verbose variant of [`apply`](https://prosemirror.net/docs/ref/#state.EditorState.apply) that
  returns the precise transactions that were applied (which might
  be influenced by the [transaction
  hooks](https://prosemirror.net/docs/ref/#state.PluginSpec.filterTransaction) of
  plugins) along with the new state.
  */
  applyTransaction(e) {
    if (!this.filterTransaction(e))
      return { state: this, transactions: [] };
    let n = [e], o = this.applyInner(e), i = null;
    for (; ; ) {
      let r = !1;
      for (let a = 0; a < this.config.plugins.length; a++) {
        let l = this.config.plugins[a];
        if (l.spec.appendTransaction) {
          let s = i ? i[a].n : 0, d = i ? i[a].state : this, c = s < n.length && l.spec.appendTransaction.call(l, s ? n.slice(s) : n, d, o);
          if (c && o.filterTransaction(c, a)) {
            if (c.setMeta("appendedTransaction", e), !i) {
              i = [];
              for (let u = 0; u < this.config.plugins.length; u++)
                i.push(u < a ? { state: o, n: n.length } : { state: this, n: 0 });
            }
            n.push(c), o = o.applyInner(c), r = !0;
          }
          i && (i[a] = { state: o, n: n.length });
        }
      }
      if (!r)
        return { state: o, transactions: n };
    }
  }
  /**
  @internal
  */
  applyInner(e) {
    if (!e.before.eq(this.doc))
      throw new RangeError("Applying a mismatched transaction");
    let n = new Yo(this.config), o = this.config.fields;
    for (let i = 0; i < o.length; i++) {
      let r = o[i];
      n[r.name] = r.apply(e, this[r.name], this, n);
    }
    return n;
  }
  /**
  Start a [transaction](https://prosemirror.net/docs/ref/#state.Transaction) from this state.
  */
  get tr() {
    return new ID(this);
  }
  /**
  Create a new state.
  */
  static create(e) {
    let n = new us(e.doc ? e.doc.type.schema : e.schema, e.plugins), o = new Yo(n);
    for (let i = 0; i < n.fields.length; i++)
      o[n.fields[i].name] = n.fields[i].init(e, o);
    return o;
  }
  /**
  Create a new state based on this one, but with an adjusted set
  of active plugins. State fields that exist in both sets of
  plugins are kept unchanged. Those that no longer exist are
  dropped, and those that are new are initialized using their
  [`init`](https://prosemirror.net/docs/ref/#state.StateField.init) method, passing in the new
  configuration object..
  */
  reconfigure(e) {
    let n = new us(this.schema, e.plugins), o = n.fields, i = new Yo(n);
    for (let r = 0; r < o.length; r++) {
      let a = o[r].name;
      i[a] = this.hasOwnProperty(a) ? this[a] : o[r].init(e, i);
    }
    return i;
  }
  /**
  Serialize this state to JSON. If you want to serialize the state
  of plugins, pass an object mapping property names to use in the
  resulting JSON object to plugin objects. The argument may also be
  a string or number, in which case it is ignored, to support the
  way `JSON.stringify` calls `toString` methods.
  */
  toJSON(e) {
    let n = { doc: this.doc.toJSON(), selection: this.selection.toJSON() };
    if (this.storedMarks && (n.storedMarks = this.storedMarks.map((o) => o.toJSON())), e && typeof e == "object")
      for (let o in e) {
        if (o == "doc" || o == "selection")
          throw new RangeError("The JSON fields `doc` and `selection` are reserved");
        let i = e[o], r = i.spec.state;
        r && r.toJSON && (n[o] = r.toJSON.call(i, this[i.key]));
      }
    return n;
  }
  /**
  Deserialize a JSON representation of a state. `config` should
  have at least a `schema` field, and should contain array of
  plugins to initialize the state with. `pluginFields` can be used
  to deserialize the state of plugins, by associating plugin
  instances with the property names they use in the JSON object.
  */
  static fromJSON(e, n, o) {
    if (!n)
      throw new RangeError("Invalid input for EditorState.fromJSON");
    if (!e.schema)
      throw new RangeError("Required config field 'schema' missing");
    let i = new us(e.schema, e.plugins), r = new Yo(i);
    return i.fields.forEach((a) => {
      if (a.name == "doc")
        r.doc = qn.fromJSON(e.schema, n.doc);
      else if (a.name == "selection")
        r.selection = ve.fromJSON(r.doc, n.selection);
      else if (a.name == "storedMarks")
        n.storedMarks && (r.storedMarks = n.storedMarks.map(e.schema.markFromJSON));
      else {
        if (o)
          for (let l in o) {
            let s = o[l], d = s.spec.state;
            if (s.key == a.name && d && d.fromJSON && Object.prototype.hasOwnProperty.call(n, l)) {
              r[a.name] = d.fromJSON.call(s, e, n[l], r);
              return;
            }
          }
        r[a.name] = a.init(e, r);
      }
    }), r;
  }
}
function fb(t, e, n) {
  for (let o in t) {
    let i = t[o];
    i instanceof Function ? i = i.bind(e) : o == "handleDOMEvents" && (i = fb(i, e, {})), n[o] = i;
  }
  return n;
}
class dt {
  /**
  Create a plugin.
  */
  constructor(e) {
    this.spec = e, this.props = {}, e.props && fb(e.props, this, this.props), this.key = e.key ? e.key.key : hb("plugin");
  }
  /**
  Extract the plugin's state field from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const ps = /* @__PURE__ */ Object.create(null);
function hb(t) {
  return t in ps ? t + "$" + ++ps[t] : (ps[t] = 0, t + "$");
}
class Lt {
  /**
  Create a plugin key.
  */
  constructor(e = "key") {
    this.key = hb(e);
  }
  /**
  Get the active plugin with this key, if any, from an editor
  state.
  */
  get(e) {
    return e.config.pluginsByKey[this.key];
  }
  /**
  Get the plugin's state from an editor state.
  */
  getState(e) {
    return e[this.key];
  }
}
const it = function(t) {
  for (var e = 0; ; e++)
    if (t = t.previousSibling, !t)
      return e;
}, ir = function(t) {
  let e = t.assignedSlot || t.parentNode;
  return e && e.nodeType == 11 ? e.host : e;
};
let Hd = null;
const Cn = function(t, e, n) {
  let o = Hd || (Hd = document.createRange());
  return o.setEnd(t, n ?? t.nodeValue.length), o.setStart(t, e || 0), o;
}, PD = function() {
  Hd = null;
}, $o = function(t, e, n, o) {
  return n && (Of(t, e, n, o, -1) || Of(t, e, n, o, 1));
}, $D = /^(img|br|input|textarea|hr)$/i;
function Of(t, e, n, o, i) {
  for (var r; ; ) {
    if (t == n && e == o)
      return !0;
    if (e == (i < 0 ? 0 : Vt(t))) {
      let a = t.parentNode;
      if (!a || a.nodeType != 1 || sa(t) || $D.test(t.nodeName) || t.contentEditable == "false")
        return !1;
      e = it(t) + (i < 0 ? 0 : 1), t = a;
    } else if (t.nodeType == 1) {
      let a = t.childNodes[e + (i < 0 ? -1 : 0)];
      if (a.nodeType == 1 && a.contentEditable == "false")
        if (!((r = a.pmViewDesc) === null || r === void 0) && r.ignoreForSelection)
          e += i;
        else
          return !1;
      else
        t = a, e = i < 0 ? Vt(t) : 0;
    } else
      return !1;
  }
}
function Vt(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function TD(t, e) {
  for (; ; ) {
    if (t.nodeType == 3 && e)
      return t;
    if (t.nodeType == 1 && e > 0) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[e - 1], e = Vt(t);
    } else if (t.parentNode && !sa(t))
      e = it(t), t = t.parentNode;
    else
      return null;
  }
}
function RD(t, e) {
  for (; ; ) {
    if (t.nodeType == 3 && e < t.nodeValue.length)
      return t;
    if (t.nodeType == 1 && e < t.childNodes.length) {
      if (t.contentEditable == "false")
        return null;
      t = t.childNodes[e], e = 0;
    } else if (t.parentNode && !sa(t))
      e = it(t) + 1, t = t.parentNode;
    else
      return null;
  }
}
function BD(t, e, n) {
  for (let o = e == 0, i = e == Vt(t); o || i; ) {
    if (t == n)
      return !0;
    let r = it(t);
    if (t = t.parentNode, !t)
      return !1;
    o = o && r == 0, i = i && r == Vt(t);
  }
}
function sa(t) {
  let e;
  for (let n = t; n && !(e = n.pmViewDesc); n = n.parentNode)
    ;
  return e && e.node && e.node.isBlock && (e.dom == t || e.contentDOM == t);
}
const Dl = function(t) {
  return t.focusNode && $o(t.focusNode, t.focusOffset, t.anchorNode, t.anchorOffset);
};
function ho(t, e) {
  let n = document.createEvent("Event");
  return n.initEvent("keydown", !0, !0), n.keyCode = t, n.key = n.code = e, n;
}
function ED(t) {
  let e = t.activeElement;
  for (; e && e.shadowRoot; )
    e = e.shadowRoot.activeElement;
  return e;
}
function MD(t, e, n) {
  if (t.caretPositionFromPoint)
    try {
      let o = t.caretPositionFromPoint(e, n);
      if (o)
        return { node: o.offsetNode, offset: Math.min(Vt(o.offsetNode), o.offset) };
    } catch {
    }
  if (t.caretRangeFromPoint) {
    let o = t.caretRangeFromPoint(e, n);
    if (o)
      return { node: o.startContainer, offset: Math.min(Vt(o.startContainer), o.startOffset) };
  }
}
const hn = typeof navigator < "u" ? navigator : null, Pf = typeof document < "u" ? document : null, no = hn && hn.userAgent || "", Wd = /Edge\/(\d+)/.exec(no), mb = /MSIE \d/.exec(no), Ud = /Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(no), It = !!(mb || Ud || Wd), Jn = mb ? document.documentMode : Ud ? +Ud[1] : Wd ? +Wd[1] : 0, Ht = !It && /gecko\/(\d+)/i.test(no);
Ht && +(/Firefox\/(\d+)/.exec(no) || [0, 0])[1];
const Gd = !It && /Chrome\/(\d+)/.exec(no), ht = !!Gd, gb = Gd ? +Gd[1] : 0, kt = !It && !!hn && /Apple Computer/.test(hn.vendor), ar = kt && (/Mobile\/\w+/.test(no) || !!hn && hn.maxTouchPoints > 2), jt = ar || (hn ? /Mac/.test(hn.platform) : !1), AD = hn ? /Win/.test(hn.platform) : !1, Sn = /Android \d/.test(no), da = !!Pf && "webkitFontSmoothing" in Pf.documentElement.style, DD = da ? +(/\bAppleWebKit\/(\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0;
function LD(t) {
  let e = t.defaultView && t.defaultView.visualViewport;
  return e ? {
    left: 0,
    right: e.width,
    top: 0,
    bottom: e.height
  } : {
    left: 0,
    right: t.documentElement.clientWidth,
    top: 0,
    bottom: t.documentElement.clientHeight
  };
}
function wn(t, e) {
  return typeof t == "number" ? t : t[e];
}
function zD(t) {
  let e = t.getBoundingClientRect(), n = e.width / t.offsetWidth || 1, o = e.height / t.offsetHeight || 1;
  return {
    left: e.left,
    right: e.left + t.clientWidth * n,
    top: e.top,
    bottom: e.top + t.clientHeight * o
  };
}
function $f(t, e, n) {
  let o = t.someProp("scrollThreshold") || 0, i = t.someProp("scrollMargin") || 5, r = t.dom.ownerDocument;
  for (let a = n || t.dom; a; ) {
    if (a.nodeType != 1) {
      a = ir(a);
      continue;
    }
    let l = a, s = l == r.body, d = s ? LD(r) : zD(l), c = 0, u = 0;
    if (e.top < d.top + wn(o, "top") ? u = -(d.top - e.top + wn(i, "top")) : e.bottom > d.bottom - wn(o, "bottom") && (u = e.bottom - e.top > d.bottom - d.top ? e.top + wn(i, "top") - d.top : e.bottom - d.bottom + wn(i, "bottom")), e.left < d.left + wn(o, "left") ? c = -(d.left - e.left + wn(i, "left")) : e.right > d.right - wn(o, "right") && (c = e.right - d.right + wn(i, "right")), c || u)
      if (s)
        r.defaultView.scrollBy(c, u);
      else {
        let p = l.scrollLeft, h = l.scrollTop;
        u && (l.scrollTop += u), c && (l.scrollLeft += c);
        let g = l.scrollLeft - p, b = l.scrollTop - h;
        e = { left: e.left - g, top: e.top - b, right: e.right - g, bottom: e.bottom - b };
      }
    let f = s ? "fixed" : getComputedStyle(a).position;
    if (/^(fixed|sticky)$/.test(f))
      break;
    a = f == "absolute" ? a.offsetParent : ir(a);
  }
}
function FD(t) {
  let e = t.dom.getBoundingClientRect(), n = Math.max(0, e.top), o, i;
  for (let r = (e.left + e.right) / 2, a = n + 1; a < Math.min(innerHeight, e.bottom); a += 5) {
    let l = t.root.elementFromPoint(r, a);
    if (!l || l == t.dom || !t.dom.contains(l))
      continue;
    let s = l.getBoundingClientRect();
    if (s.top >= n - 20) {
      o = l, i = s.top;
      break;
    }
  }
  return { refDOM: o, refTop: i, stack: bb(t.dom) };
}
function bb(t) {
  let e = [], n = t.ownerDocument;
  for (let o = t; o && (e.push({ dom: o, top: o.scrollTop, left: o.scrollLeft }), t != n); o = ir(o))
    ;
  return e;
}
function ND({ refDOM: t, refTop: e, stack: n }) {
  let o = t ? t.getBoundingClientRect().top : 0;
  vb(n, o == 0 ? 0 : o - e);
}
function vb(t, e) {
  for (let n = 0; n < t.length; n++) {
    let { dom: o, top: i, left: r } = t[n];
    o.scrollTop != i + e && (o.scrollTop = i + e), o.scrollLeft != r && (o.scrollLeft = r);
  }
}
let jo = null;
function jD(t) {
  if (t.setActive)
    return t.setActive();
  if (jo)
    return t.focus(jo);
  let e = bb(t);
  t.focus(jo == null ? {
    get preventScroll() {
      return jo = { preventScroll: !0 }, !0;
    }
  } : void 0), jo || (jo = !1, vb(e, 0));
}
function yb(t, e) {
  let n, o = 2e8, i, r = 0, a = e.top, l = e.top, s, d;
  for (let c = t.firstChild, u = 0; c; c = c.nextSibling, u++) {
    let f;
    if (c.nodeType == 1)
      f = c.getClientRects();
    else if (c.nodeType == 3)
      f = Cn(c).getClientRects();
    else
      continue;
    for (let p = 0; p < f.length; p++) {
      let h = f[p];
      if (h.top <= a && h.bottom >= l) {
        a = Math.max(h.bottom, a), l = Math.min(h.top, l);
        let g = h.left > e.left ? h.left - e.left : h.right < e.left ? e.left - h.right : 0;
        if (g < o) {
          n = c, o = g, i = g && n.nodeType == 3 ? {
            left: h.right < e.left ? h.right : h.left,
            top: e.top
          } : e, c.nodeType == 1 && g && (r = u + (e.left >= (h.left + h.right) / 2 ? 1 : 0));
          continue;
        }
      } else h.top > e.top && !s && h.left <= e.left && h.right >= e.left && (s = c, d = { left: Math.max(h.left, Math.min(h.right, e.left)), top: h.top });
      !n && (e.left >= h.right && e.top >= h.top || e.left >= h.left && e.top >= h.bottom) && (r = u + 1);
    }
  }
  return !n && s && (n = s, i = d, o = 0), n && n.nodeType == 3 ? VD(n, i) : !n || o && n.nodeType == 1 ? { node: t, offset: r } : yb(n, i);
}
function VD(t, e) {
  let n = t.nodeValue.length, o = document.createRange();
  for (let i = 0; i < n; i++) {
    o.setEnd(t, i + 1), o.setStart(t, i);
    let r = Dn(o, 1);
    if (r.top != r.bottom && Ac(e, r))
      return { node: t, offset: i + (e.left >= (r.left + r.right) / 2 ? 1 : 0) };
  }
  return { node: t, offset: 0 };
}
function Ac(t, e) {
  return t.left >= e.left - 1 && t.left <= e.right + 1 && t.top >= e.top - 1 && t.top <= e.bottom + 1;
}
function _D(t, e) {
  let n = t.parentNode;
  return n && /^li$/i.test(n.nodeName) && e.left < t.getBoundingClientRect().left ? n : t;
}
function KD(t, e, n) {
  let { node: o, offset: i } = yb(e, n), r = -1;
  if (o.nodeType == 1 && !o.firstChild) {
    let a = o.getBoundingClientRect();
    r = a.left != a.right && n.left > (a.left + a.right) / 2 ? 1 : -1;
  }
  return t.docView.posFromDOM(o, i, r);
}
function HD(t, e, n, o) {
  let i = -1;
  for (let r = e, a = !1; r != t.dom; ) {
    let l = t.docView.nearestDesc(r, !0), s;
    if (!l)
      return null;
    if (l.dom.nodeType == 1 && (l.node.isBlock && l.parent || !l.contentDOM) && // Ignore elements with zero-size bounding rectangles
    ((s = l.dom.getBoundingClientRect()).width || s.height) && (l.node.isBlock && l.parent && !/^T(R|BODY|HEAD|FOOT)$/.test(l.dom.nodeName) && (!a && s.left > o.left || s.top > o.top ? i = l.posBefore : (!a && s.right < o.left || s.bottom < o.top) && (i = l.posAfter), a = !0), !l.contentDOM && i < 0 && !l.node.isText))
      return (l.node.isBlock ? o.top < (s.top + s.bottom) / 2 : o.left < (s.left + s.right) / 2) ? l.posBefore : l.posAfter;
    r = l.dom.parentNode;
  }
  return i > -1 ? i : t.docView.posFromDOM(e, n, -1);
}
function kb(t, e, n) {
  let o = t.childNodes.length;
  if (o && n.top < n.bottom)
    for (let i = Math.max(0, Math.min(o - 1, Math.floor(o * (e.top - n.top) / (n.bottom - n.top)) - 2)), r = i; ; ) {
      let a = t.childNodes[r];
      if (a.nodeType == 1) {
        let l = a.getClientRects();
        for (let s = 0; s < l.length; s++) {
          let d = l[s];
          if (Ac(e, d))
            return kb(a, e, d);
        }
      }
      if ((r = (r + 1) % o) == i)
        break;
    }
  return t;
}
function WD(t, e) {
  let n = t.dom.ownerDocument, o, i = 0, r = MD(n, e.left, e.top);
  r && ({ node: o, offset: i } = r);
  let a = (t.root.elementFromPoint ? t.root : n).elementFromPoint(e.left, e.top), l;
  if (!a || !t.dom.contains(a.nodeType != 1 ? a.parentNode : a)) {
    let d = t.dom.getBoundingClientRect();
    if (!Ac(e, d) || (a = kb(t.dom, e, d), !a))
      return null;
  }
  if (kt)
    for (let d = a; o && d; d = ir(d))
      d.draggable && (o = void 0);
  if (a = _D(a, e), o) {
    if (Ht && o.nodeType == 1 && (i = Math.min(i, o.childNodes.length), i < o.childNodes.length)) {
      let c = o.childNodes[i], u;
      c.nodeName == "IMG" && (u = c.getBoundingClientRect()).right <= e.left && u.bottom > e.top && i++;
    }
    let d;
    da && i && o.nodeType == 1 && (d = o.childNodes[i - 1]).nodeType == 1 && d.contentEditable == "false" && d.getBoundingClientRect().top >= e.top && i--, o == t.dom && i == o.childNodes.length - 1 && o.lastChild.nodeType == 1 && e.top > o.lastChild.getBoundingClientRect().bottom ? l = t.state.doc.content.size : (i == 0 || o.nodeType != 1 || o.childNodes[i - 1].nodeName != "BR") && (l = HD(t, o, i, e));
  }
  l == null && (l = KD(t, a, e));
  let s = t.docView.nearestDesc(a, !0);
  return { pos: l, inside: s ? s.posAtStart - s.border : -1 };
}
function Tf(t) {
  return t.top < t.bottom || t.left < t.right;
}
function Dn(t, e) {
  let n = t.getClientRects();
  if (n.length) {
    let o = n[e < 0 ? 0 : n.length - 1];
    if (Tf(o))
      return o;
  }
  return Array.prototype.find.call(n, Tf) || t.getBoundingClientRect();
}
const UD = /[\u0590-\u05f4\u0600-\u06ff\u0700-\u08ac]/;
function wb(t, e, n) {
  let { node: o, offset: i, atom: r } = t.docView.domFromPos(e, n < 0 ? -1 : 1), a = da || Ht;
  if (o.nodeType == 3)
    if (a && (UD.test(o.nodeValue) || (n < 0 ? !i : i == o.nodeValue.length))) {
      let s = Dn(Cn(o, i, i), n);
      if (Ht && i && /\s/.test(o.nodeValue[i - 1]) && i < o.nodeValue.length) {
        let d = Dn(Cn(o, i - 1, i - 1), -1);
        if (d.top == s.top) {
          let c = Dn(Cn(o, i, i + 1), -1);
          if (c.top != s.top)
            return Or(c, c.left < d.left);
        }
      }
      return s;
    } else {
      let s = i, d = i, c = n < 0 ? 1 : -1;
      return n < 0 && !i ? (d++, c = -1) : n >= 0 && i == o.nodeValue.length ? (s--, c = 1) : n < 0 ? s-- : d++, Or(Dn(Cn(o, s, d), c), c < 0);
    }
  if (!t.state.doc.resolve(e - (r || 0)).parent.inlineContent) {
    if (r == null && i && (n < 0 || i == Vt(o))) {
      let s = o.childNodes[i - 1];
      if (s.nodeType == 1)
        return fs(s.getBoundingClientRect(), !1);
    }
    if (r == null && i < Vt(o)) {
      let s = o.childNodes[i];
      if (s.nodeType == 1)
        return fs(s.getBoundingClientRect(), !0);
    }
    return fs(o.getBoundingClientRect(), n >= 0);
  }
  if (r == null && i && (n < 0 || i == Vt(o))) {
    let s = o.childNodes[i - 1], d = s.nodeType == 3 ? Cn(s, Vt(s) - (a ? 0 : 1)) : s.nodeType == 1 && (s.nodeName != "BR" || !s.nextSibling) ? s : null;
    if (d)
      return Or(Dn(d, 1), !1);
  }
  if (r == null && i < Vt(o)) {
    let s = o.childNodes[i];
    for (; s.pmViewDesc && s.pmViewDesc.ignoreForCoords; )
      s = s.nextSibling;
    let d = s ? s.nodeType == 3 ? Cn(s, 0, a ? 0 : 1) : s.nodeType == 1 ? s : null : null;
    if (d)
      return Or(Dn(d, -1), !0);
  }
  return Or(Dn(o.nodeType == 3 ? Cn(o) : o, -n), n >= 0);
}
function Or(t, e) {
  if (t.width == 0)
    return t;
  let n = e ? t.left : t.right;
  return { top: t.top, bottom: t.bottom, left: n, right: n };
}
function fs(t, e) {
  if (t.height == 0)
    return t;
  let n = e ? t.top : t.bottom;
  return { top: n, bottom: n, left: t.left, right: t.right };
}
function Cb(t, e, n) {
  let o = t.state, i = t.root.activeElement;
  o != e && t.updateState(e), i != t.dom && t.focus();
  try {
    return n();
  } finally {
    o != e && t.updateState(o), i != t.dom && i && i.focus();
  }
}
function GD(t, e, n) {
  let o = e.selection, i = n == "up" ? o.$from : o.$to;
  return Cb(t, e, () => {
    let { node: r } = t.docView.domFromPos(i.pos, n == "up" ? -1 : 1);
    for (; ; ) {
      let l = t.docView.nearestDesc(r, !0);
      if (!l)
        break;
      if (l.node.isBlock) {
        r = l.contentDOM || l.dom;
        break;
      }
      r = l.dom.parentNode;
    }
    let a = wb(t, i.pos, 1);
    for (let l = r.firstChild; l; l = l.nextSibling) {
      let s;
      if (l.nodeType == 1)
        s = l.getClientRects();
      else if (l.nodeType == 3)
        s = Cn(l, 0, l.nodeValue.length).getClientRects();
      else
        continue;
      for (let d = 0; d < s.length; d++) {
        let c = s[d];
        if (c.bottom > c.top + 1 && (n == "up" ? a.top - c.top > (c.bottom - a.top) * 2 : c.bottom - a.bottom > (a.bottom - c.top) * 2))
          return !1;
      }
    }
    return !0;
  });
}
const qD = /[\u0590-\u08ac]/;
function JD(t, e, n) {
  let { $head: o } = e.selection;
  if (!o.parent.isTextblock)
    return !1;
  let i = o.parentOffset, r = !i, a = i == o.parent.content.size, l = t.domSelection();
  return l ? !qD.test(o.parent.textContent) || !l.modify ? n == "left" || n == "backward" ? r : a : Cb(t, e, () => {
    let { focusNode: s, focusOffset: d, anchorNode: c, anchorOffset: u } = t.domSelectionRange(), f = l.caretBidiLevel;
    l.modify("move", n, "character");
    let p = o.depth ? t.docView.domAfterPos(o.before()) : t.dom, { focusNode: h, focusOffset: g } = t.domSelectionRange(), b = h && !p.contains(h.nodeType == 1 ? h : h.parentNode) || s == h && d == g;
    try {
      l.collapse(c, u), s && (s != c || d != u) && l.extend && l.extend(s, d);
    } catch {
    }
    return f != null && (l.caretBidiLevel = f), b;
  }) : o.pos == o.start() || o.pos == o.end();
}
let Rf = null, Bf = null, Ef = !1;
function YD(t, e, n) {
  return Rf == e && Bf == n ? Ef : (Rf = e, Bf = n, Ef = n == "up" || n == "down" ? GD(t, e, n) : JD(t, e, n));
}
const Wt = 0, Mf = 1, go = 2, mn = 3;
class ca {
  constructor(e, n, o, i) {
    this.parent = e, this.children = n, this.dom = o, this.contentDOM = i, this.dirty = Wt, o.pmViewDesc = this;
  }
  // Used to check whether a given description corresponds to a
  // widget/mark/node.
  matchesWidget(e) {
    return !1;
  }
  matchesMark(e) {
    return !1;
  }
  matchesNode(e, n, o) {
    return !1;
  }
  matchesHack(e) {
    return !1;
  }
  // When parsing in-editor content (in domchange.js), we allow
  // descriptions to determine the parse rules that should be used to
  // parse them.
  parseRule() {
    return null;
  }
  // Used by the editor's event handler to ignore events that come
  // from certain descs.
  stopEvent(e) {
    return !1;
  }
  // The size of the content represented by this desc.
  get size() {
    let e = 0;
    for (let n = 0; n < this.children.length; n++)
      e += this.children[n].size;
    return e;
  }
  // For block nodes, this represents the space taken up by their
  // start/end tokens.
  get border() {
    return 0;
  }
  destroy() {
    this.parent = void 0, this.dom.pmViewDesc == this && (this.dom.pmViewDesc = void 0);
    for (let e = 0; e < this.children.length; e++)
      this.children[e].destroy();
  }
  posBeforeChild(e) {
    for (let n = 0, o = this.posAtStart; ; n++) {
      let i = this.children[n];
      if (i == e)
        return o;
      o += i.size;
    }
  }
  get posBefore() {
    return this.parent.posBeforeChild(this);
  }
  get posAtStart() {
    return this.parent ? this.parent.posBeforeChild(this) + this.border : 0;
  }
  get posAfter() {
    return this.posBefore + this.size;
  }
  get posAtEnd() {
    return this.posAtStart + this.size - 2 * this.border;
  }
  localPosFromDOM(e, n, o) {
    if (this.contentDOM && this.contentDOM.contains(e.nodeType == 1 ? e : e.parentNode))
      if (o < 0) {
        let r, a;
        if (e == this.contentDOM)
          r = e.childNodes[n - 1];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          r = e.previousSibling;
        }
        for (; r && !((a = r.pmViewDesc) && a.parent == this); )
          r = r.previousSibling;
        return r ? this.posBeforeChild(a) + a.size : this.posAtStart;
      } else {
        let r, a;
        if (e == this.contentDOM)
          r = e.childNodes[n];
        else {
          for (; e.parentNode != this.contentDOM; )
            e = e.parentNode;
          r = e.nextSibling;
        }
        for (; r && !((a = r.pmViewDesc) && a.parent == this); )
          r = r.nextSibling;
        return r ? this.posBeforeChild(a) : this.posAtEnd;
      }
    let i;
    if (e == this.dom && this.contentDOM)
      i = n > it(this.contentDOM);
    else if (this.contentDOM && this.contentDOM != this.dom && this.dom.contains(this.contentDOM))
      i = e.compareDocumentPosition(this.contentDOM) & 2;
    else if (this.dom.firstChild) {
      if (n == 0)
        for (let r = e; ; r = r.parentNode) {
          if (r == this.dom) {
            i = !1;
            break;
          }
          if (r.previousSibling)
            break;
        }
      if (i == null && n == e.childNodes.length)
        for (let r = e; ; r = r.parentNode) {
          if (r == this.dom) {
            i = !0;
            break;
          }
          if (r.nextSibling)
            break;
        }
    }
    return i ?? o > 0 ? this.posAtEnd : this.posAtStart;
  }
  nearestDesc(e, n = !1) {
    for (let o = !0, i = e; i; i = i.parentNode) {
      let r = this.getDesc(i), a;
      if (r && (!n || r.node))
        if (o && (a = r.nodeDOM) && !(a.nodeType == 1 ? a.contains(e.nodeType == 1 ? e : e.parentNode) : a == e))
          o = !1;
        else
          return r;
    }
  }
  getDesc(e) {
    let n = e.pmViewDesc;
    for (let o = n; o; o = o.parent)
      if (o == this)
        return n;
  }
  posFromDOM(e, n, o) {
    for (let i = e; i; i = i.parentNode) {
      let r = this.getDesc(i);
      if (r)
        return r.localPosFromDOM(e, n, o);
    }
    return -1;
  }
  // Find the desc for the node after the given pos, if any. (When a
  // parent node overrode rendering, there might not be one.)
  descAt(e) {
    for (let n = 0, o = 0; n < this.children.length; n++) {
      let i = this.children[n], r = o + i.size;
      if (o == e && r != o) {
        for (; !i.border && i.children.length; )
          for (let a = 0; a < i.children.length; a++) {
            let l = i.children[a];
            if (l.size) {
              i = l;
              break;
            }
          }
        return i;
      }
      if (e < r)
        return i.descAt(e - o - i.border);
      o = r;
    }
  }
  domFromPos(e, n) {
    if (!this.contentDOM)
      return { node: this.dom, offset: 0, atom: e + 1 };
    let o = 0, i = 0;
    for (let r = 0; o < this.children.length; o++) {
      let a = this.children[o], l = r + a.size;
      if (l > e || a instanceof Sb) {
        i = e - r;
        break;
      }
      r = l;
    }
    if (i)
      return this.children[o].domFromPos(i - this.children[o].border, n);
    for (let r; o && !(r = this.children[o - 1]).size && r instanceof xb && r.side >= 0; o--)
      ;
    if (n <= 0) {
      let r, a = !0;
      for (; r = o ? this.children[o - 1] : null, !(!r || r.dom.parentNode == this.contentDOM); o--, a = !1)
        ;
      return r && n && a && !r.border && !r.domAtom ? r.domFromPos(r.size, n) : { node: this.contentDOM, offset: r ? it(r.dom) + 1 : 0 };
    } else {
      let r, a = !0;
      for (; r = o < this.children.length ? this.children[o] : null, !(!r || r.dom.parentNode == this.contentDOM); o++, a = !1)
        ;
      return r && a && !r.border && !r.domAtom ? r.domFromPos(0, n) : { node: this.contentDOM, offset: r ? it(r.dom) : this.contentDOM.childNodes.length };
    }
  }
  // Used to find a DOM range in a single parent for a given changed
  // range.
  parseRange(e, n, o = 0) {
    if (this.children.length == 0)
      return { node: this.contentDOM, from: e, to: n, fromOffset: 0, toOffset: this.contentDOM.childNodes.length };
    let i = -1, r = -1;
    for (let a = o, l = 0; ; l++) {
      let s = this.children[l], d = a + s.size;
      if (i == -1 && e <= d) {
        let c = a + s.border;
        if (e >= c && n <= d - s.border && s.node && s.contentDOM && this.contentDOM.contains(s.contentDOM))
          return s.parseRange(e, n, c);
        e = a;
        for (let u = l; u > 0; u--) {
          let f = this.children[u - 1];
          if (f.size && f.dom.parentNode == this.contentDOM && !f.emptyChildAt(1)) {
            i = it(f.dom) + 1;
            break;
          }
          e -= f.size;
        }
        i == -1 && (i = 0);
      }
      if (i > -1 && (d > n || l == this.children.length - 1)) {
        n = d;
        for (let c = l + 1; c < this.children.length; c++) {
          let u = this.children[c];
          if (u.size && u.dom.parentNode == this.contentDOM && !u.emptyChildAt(-1)) {
            r = it(u.dom);
            break;
          }
          n += u.size;
        }
        r == -1 && (r = this.contentDOM.childNodes.length);
        break;
      }
      a = d;
    }
    return { node: this.contentDOM, from: e, to: n, fromOffset: i, toOffset: r };
  }
  emptyChildAt(e) {
    if (this.border || !this.contentDOM || !this.children.length)
      return !1;
    let n = this.children[e < 0 ? 0 : this.children.length - 1];
    return n.size == 0 || n.emptyChildAt(e);
  }
  domAfterPos(e) {
    let { node: n, offset: o } = this.domFromPos(e, 0);
    if (n.nodeType != 1 || o == n.childNodes.length)
      throw new RangeError("No node after pos " + e);
    return n.childNodes[o];
  }
  // View descs are responsible for setting any selection that falls
  // entirely inside of them, so that custom implementations can do
  // custom things with the selection. Note that this falls apart when
  // a selection starts in such a node and ends in another, in which
  // case we just use whatever domFromPos produces as a best effort.
  setSelection(e, n, o, i = !1) {
    let r = Math.min(e, n), a = Math.max(e, n);
    for (let p = 0, h = 0; p < this.children.length; p++) {
      let g = this.children[p], b = h + g.size;
      if (r > h && a < b)
        return g.setSelection(e - h - g.border, n - h - g.border, o, i);
      h = b;
    }
    let l = this.domFromPos(e, e ? -1 : 1), s = n == e ? l : this.domFromPos(n, n ? -1 : 1), d = o.root.getSelection(), c = o.domSelectionRange(), u = !1;
    if ((Ht || kt) && e == n) {
      let { node: p, offset: h } = l;
      if (p.nodeType == 3) {
        if (u = !!(h && p.nodeValue[h - 1] == `
`), u && h == p.nodeValue.length)
          for (let g = p, b; g; g = g.parentNode) {
            if (b = g.nextSibling) {
              b.nodeName == "BR" && (l = s = { node: b.parentNode, offset: it(b) + 1 });
              break;
            }
            let C = g.pmViewDesc;
            if (C && C.node && C.node.isBlock)
              break;
          }
      } else {
        let g = p.childNodes[h - 1];
        u = g && (g.nodeName == "BR" || g.contentEditable == "false");
      }
    }
    if (Ht && c.focusNode && c.focusNode != s.node && c.focusNode.nodeType == 1) {
      let p = c.focusNode.childNodes[c.focusOffset];
      p && p.contentEditable == "false" && (i = !0);
    }
    if (!(i || u && kt) && $o(l.node, l.offset, c.anchorNode, c.anchorOffset) && $o(s.node, s.offset, c.focusNode, c.focusOffset))
      return;
    let f = !1;
    if ((d.extend || e == n) && !(u && Ht)) {
      d.collapse(l.node, l.offset);
      try {
        e != n && d.extend(s.node, s.offset), f = !0;
      } catch {
      }
    }
    if (!f) {
      if (e > n) {
        let h = l;
        l = s, s = h;
      }
      let p = document.createRange();
      p.setEnd(s.node, s.offset), p.setStart(l.node, l.offset), d.removeAllRanges(), d.addRange(p);
    }
  }
  ignoreMutation(e) {
    return !this.contentDOM && e.type != "selection";
  }
  get contentLost() {
    return this.contentDOM && this.contentDOM != this.dom && !this.dom.contains(this.contentDOM);
  }
  // Remove a subtree of the element tree that has been touched
  // by a DOM change, so that the next update will redraw it.
  markDirty(e, n) {
    for (let o = 0, i = 0; i < this.children.length; i++) {
      let r = this.children[i], a = o + r.size;
      if (o == a ? e <= a && n >= o : e < a && n > o) {
        let l = o + r.border, s = a - r.border;
        if (e >= l && n <= s) {
          this.dirty = e == o || n == a ? go : Mf, e == l && n == s && (r.contentLost || r.dom.parentNode != this.contentDOM) ? r.dirty = mn : r.markDirty(e - l, n - l);
          return;
        } else
          r.dirty = r.dom == r.contentDOM && r.dom.parentNode == this.contentDOM && !r.children.length ? go : mn;
      }
      o = a;
    }
    this.dirty = go;
  }
  markParentsDirty() {
    let e = 1;
    for (let n = this.parent; n; n = n.parent, e++) {
      let o = e == 1 ? go : Mf;
      n.dirty < o && (n.dirty = o);
    }
  }
  get domAtom() {
    return !1;
  }
  get ignoreForCoords() {
    return !1;
  }
  get ignoreForSelection() {
    return !1;
  }
  isText(e) {
    return !1;
  }
}
class xb extends ca {
  constructor(e, n, o, i) {
    let r, a = n.type.toDOM;
    if (typeof a == "function" && (a = a(o, () => {
      if (!r)
        return i;
      if (r.parent)
        return r.parent.posBeforeChild(r);
    })), !n.type.spec.raw) {
      if (a.nodeType != 1) {
        let l = document.createElement("span");
        l.appendChild(a), a = l;
      }
      a.contentEditable = "false", a.classList.add("ProseMirror-widget");
    }
    super(e, [], a, null), this.widget = n, this.widget = n, r = this;
  }
  matchesWidget(e) {
    return this.dirty == Wt && e.type.eq(this.widget.type);
  }
  parseRule() {
    return { ignore: !0 };
  }
  stopEvent(e) {
    let n = this.widget.spec.stopEvent;
    return n ? n(e) : !1;
  }
  ignoreMutation(e) {
    return e.type != "selection" || this.widget.spec.ignoreSelection;
  }
  destroy() {
    this.widget.type.destroy(this.dom), super.destroy();
  }
  get domAtom() {
    return !0;
  }
  get ignoreForSelection() {
    return !!this.widget.type.spec.relaxedSide;
  }
  get side() {
    return this.widget.type.side;
  }
}
class XD extends ca {
  constructor(e, n, o, i) {
    super(e, [], n, null), this.textDOM = o, this.text = i;
  }
  get size() {
    return this.text.length;
  }
  localPosFromDOM(e, n) {
    return e != this.textDOM ? this.posAtStart + (n ? this.size : 0) : this.posAtStart + n;
  }
  domFromPos(e) {
    return { node: this.textDOM, offset: e };
  }
  ignoreMutation(e) {
    return e.type === "characterData" && e.target.nodeValue == e.oldValue;
  }
}
class To extends ca {
  constructor(e, n, o, i, r) {
    super(e, [], o, i), this.mark = n, this.spec = r;
  }
  static create(e, n, o, i) {
    let r = i.nodeViews[n.type.name], a = r && r(n, i, o);
    return (!a || !a.dom) && (a = Do.renderSpec(document, n.type.spec.toDOM(n, o), null, n.attrs)), new To(e, n, a.dom, a.contentDOM || a.dom, a);
  }
  parseRule() {
    return this.dirty & mn || this.mark.type.spec.reparseInView ? null : { mark: this.mark.type.name, attrs: this.mark.attrs, contentElement: this.contentDOM };
  }
  matchesMark(e) {
    return this.dirty != mn && this.mark.eq(e);
  }
  markDirty(e, n) {
    if (super.markDirty(e, n), this.dirty != Wt) {
      let o = this.parent;
      for (; !o.node; )
        o = o.parent;
      o.dirty < this.dirty && (o.dirty = this.dirty), this.dirty = Wt;
    }
  }
  slice(e, n, o) {
    let i = To.create(this.parent, this.mark, !0, o), r = this.children, a = this.size;
    n < a && (r = Jd(r, n, a, o)), e > 0 && (r = Jd(r, 0, e, o));
    for (let l = 0; l < r.length; l++)
      r[l].parent = i;
    return i.children = r, i;
  }
  ignoreMutation(e) {
    return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e);
  }
  destroy() {
    this.spec.destroy && this.spec.destroy(), super.destroy();
  }
}
class Yn extends ca {
  constructor(e, n, o, i, r, a, l, s, d) {
    super(e, [], r, a), this.node = n, this.outerDeco = o, this.innerDeco = i, this.nodeDOM = l;
  }
  // By default, a node is rendered using the `toDOM` method from the
  // node type spec. But client code can use the `nodeViews` spec to
  // supply a custom node view, which can influence various aspects of
  // the way the node works.
  //
  // (Using subclassing for this was intentionally decided against,
  // since it'd require exposing a whole slew of finicky
  // implementation details to the user code that they probably will
  // never need.)
  static create(e, n, o, i, r, a) {
    let l = r.nodeViews[n.type.name], s, d = l && l(n, r, () => {
      if (!s)
        return a;
      if (s.parent)
        return s.parent.posBeforeChild(s);
    }, o, i), c = d && d.dom, u = d && d.contentDOM;
    if (n.isText) {
      if (!c)
        c = document.createTextNode(n.text);
      else if (c.nodeType != 3)
        throw new RangeError("Text must be rendered as a DOM text node");
    } else c || ({ dom: c, contentDOM: u } = Do.renderSpec(document, n.type.spec.toDOM(n), null, n.attrs));
    !u && !n.isText && c.nodeName != "BR" && (c.hasAttribute("contenteditable") || (c.contentEditable = "false"), n.type.spec.draggable && (c.draggable = !0));
    let f = c;
    return c = Pb(c, o, n), d ? s = new ZD(e, n, o, i, c, u || null, f, d, r, a + 1) : n.isText ? new Ll(e, n, o, i, c, f, r) : new Yn(e, n, o, i, c, u || null, f, r, a + 1);
  }
  parseRule() {
    if (this.node.type.spec.reparseInView)
      return null;
    let e = { node: this.node.type.name, attrs: this.node.attrs };
    if (this.node.type.whitespace == "pre" && (e.preserveWhitespace = "full"), !this.contentDOM)
      e.getContent = () => this.node.content;
    else if (!this.contentLost)
      e.contentElement = this.contentDOM;
    else {
      for (let n = this.children.length - 1; n >= 0; n--) {
        let o = this.children[n];
        if (this.dom.contains(o.dom.parentNode)) {
          e.contentElement = o.dom.parentNode;
          break;
        }
      }
      e.contentElement || (e.getContent = () => N.empty);
    }
    return e;
  }
  matchesNode(e, n, o) {
    return this.dirty == Wt && e.eq(this.node) && al(n, this.outerDeco) && o.eq(this.innerDeco);
  }
  get size() {
    return this.node.nodeSize;
  }
  get border() {
    return this.node.isLeaf ? 0 : 1;
  }
  // Syncs `this.children` to match `this.node.content` and the local
  // decorations, possibly introducing nesting for marks. Then, in a
  // separate step, syncs the DOM inside `this.contentDOM` to
  // `this.children`.
  updateChildren(e, n) {
    let o = this.node.inlineContent, i = n, r = e.composing ? this.localCompositionInfo(e, n) : null, a = r && r.pos > -1 ? r : null, l = r && r.pos < 0, s = new eL(this, a && a.node, e);
    oL(this.node, this.innerDeco, (d, c, u) => {
      d.spec.marks ? s.syncToMarks(d.spec.marks, o, e) : d.type.side >= 0 && !u && s.syncToMarks(c == this.node.childCount ? Ae.none : this.node.child(c).marks, o, e), s.placeWidget(d, e, i);
    }, (d, c, u, f) => {
      s.syncToMarks(d.marks, o, e);
      let p;
      s.findNodeMatch(d, c, u, f) || l && e.state.selection.from > i && e.state.selection.to < i + d.nodeSize && (p = s.findIndexWithChild(r.node)) > -1 && s.updateNodeAt(d, c, u, p, e) || s.updateNextNode(d, c, u, e, f, i) || s.addNode(d, c, u, e, i), i += d.nodeSize;
    }), s.syncToMarks([], o, e), this.node.isTextblock && s.addTextblockHacks(), s.destroyRest(), (s.changed || this.dirty == go) && (a && this.protectLocalComposition(e, a), Ib(this.contentDOM, this.children, e), ar && rL(this.dom));
  }
  localCompositionInfo(e, n) {
    let { from: o, to: i } = e.state.selection;
    if (!(e.state.selection instanceof he) || o < n || i > n + this.node.content.size)
      return null;
    let r = e.input.compositionNode;
    if (!r || !this.dom.contains(r.parentNode))
      return null;
    if (this.node.inlineContent) {
      let a = r.nodeValue, l = iL(this.node.content, a, o - n, i - n);
      return l < 0 ? null : { node: r, pos: l, text: a };
    } else
      return { node: r, pos: -1, text: "" };
  }
  protectLocalComposition(e, { node: n, pos: o, text: i }) {
    if (this.getDesc(n))
      return;
    let r = n;
    for (; r.parentNode != this.contentDOM; r = r.parentNode) {
      for (; r.previousSibling; )
        r.parentNode.removeChild(r.previousSibling);
      for (; r.nextSibling; )
        r.parentNode.removeChild(r.nextSibling);
      r.pmViewDesc && (r.pmViewDesc = void 0);
    }
    let a = new XD(this, r, n, i);
    e.input.compositionNodes.push(a), this.children = Jd(this.children, o, o + i.length, e, a);
  }
  // If this desc must be updated to match the given node decoration,
  // do so and return true.
  update(e, n, o, i) {
    return this.dirty == mn || !e.sameMarkup(this.node) ? !1 : (this.updateInner(e, n, o, i), !0);
  }
  updateInner(e, n, o, i) {
    this.updateOuterDeco(n), this.node = e, this.innerDeco = o, this.contentDOM && this.updateChildren(i, this.posAtStart), this.dirty = Wt;
  }
  updateOuterDeco(e) {
    if (al(e, this.outerDeco))
      return;
    let n = this.nodeDOM.nodeType != 1, o = this.dom;
    this.dom = Ob(this.dom, this.nodeDOM, qd(this.outerDeco, this.node, n), qd(e, this.node, n)), this.dom != o && (o.pmViewDesc = void 0, this.dom.pmViewDesc = this), this.outerDeco = e;
  }
  // Mark this node as being the selected node.
  selectNode() {
    this.nodeDOM.nodeType == 1 && this.nodeDOM.classList.add("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && (this.dom.draggable = !0);
  }
  // Remove selected node marking from this node.
  deselectNode() {
    this.nodeDOM.nodeType == 1 && (this.nodeDOM.classList.remove("ProseMirror-selectednode"), (this.contentDOM || !this.node.type.spec.draggable) && this.dom.removeAttribute("draggable"));
  }
  get domAtom() {
    return this.node.isAtom;
  }
}
function Af(t, e, n, o, i) {
  Pb(o, e, t);
  let r = new Yn(void 0, t, e, n, o, o, o, i, 0);
  return r.contentDOM && r.updateChildren(i, 0), r;
}
class Ll extends Yn {
  constructor(e, n, o, i, r, a, l) {
    super(e, n, o, i, r, null, a, l, 0);
  }
  parseRule() {
    let e = this.nodeDOM.parentNode;
    for (; e && e != this.dom && !e.pmIsDeco; )
      e = e.parentNode;
    return { skip: e || !0 };
  }
  update(e, n, o, i) {
    return this.dirty == mn || this.dirty != Wt && !this.inParent() || !e.sameMarkup(this.node) ? !1 : (this.updateOuterDeco(n), (this.dirty != Wt || e.text != this.node.text) && e.text != this.nodeDOM.nodeValue && (this.nodeDOM.nodeValue = e.text, i.trackWrites == this.nodeDOM && (i.trackWrites = null)), this.node = e, this.dirty = Wt, !0);
  }
  inParent() {
    let e = this.parent.contentDOM;
    for (let n = this.nodeDOM; n; n = n.parentNode)
      if (n == e)
        return !0;
    return !1;
  }
  domFromPos(e) {
    return { node: this.nodeDOM, offset: e };
  }
  localPosFromDOM(e, n, o) {
    return e == this.nodeDOM ? this.posAtStart + Math.min(n, this.node.text.length) : super.localPosFromDOM(e, n, o);
  }
  ignoreMutation(e) {
    return e.type != "characterData" && e.type != "selection";
  }
  slice(e, n, o) {
    let i = this.node.cut(e, n), r = document.createTextNode(i.text);
    return new Ll(this.parent, i, this.outerDeco, this.innerDeco, r, r, o);
  }
  markDirty(e, n) {
    super.markDirty(e, n), this.dom != this.nodeDOM && (e == 0 || n == this.nodeDOM.nodeValue.length) && (this.dirty = mn);
  }
  get domAtom() {
    return !1;
  }
  isText(e) {
    return this.node.text == e;
  }
}
class Sb extends ca {
  parseRule() {
    return { ignore: !0 };
  }
  matchesHack(e) {
    return this.dirty == Wt && this.dom.nodeName == e;
  }
  get domAtom() {
    return !0;
  }
  get ignoreForCoords() {
    return this.dom.nodeName == "IMG";
  }
}
class ZD extends Yn {
  constructor(e, n, o, i, r, a, l, s, d, c) {
    super(e, n, o, i, r, a, l, d, c), this.spec = s;
  }
  // A custom `update` method gets to decide whether the update goes
  // through. If it does, and there's a `contentDOM` node, our logic
  // updates the children.
  update(e, n, o, i) {
    if (this.dirty == mn)
      return !1;
    if (this.spec.update && (this.node.type == e.type || this.spec.multiType)) {
      let r = this.spec.update(e, n, o);
      return r && this.updateInner(e, n, o, i), r;
    } else return !this.contentDOM && !e.isLeaf ? !1 : super.update(e, n, o, i);
  }
  selectNode() {
    this.spec.selectNode ? this.spec.selectNode() : super.selectNode();
  }
  deselectNode() {
    this.spec.deselectNode ? this.spec.deselectNode() : super.deselectNode();
  }
  setSelection(e, n, o, i) {
    this.spec.setSelection ? this.spec.setSelection(e, n, o.root) : super.setSelection(e, n, o, i);
  }
  destroy() {
    this.spec.destroy && this.spec.destroy(), super.destroy();
  }
  stopEvent(e) {
    return this.spec.stopEvent ? this.spec.stopEvent(e) : !1;
  }
  ignoreMutation(e) {
    return this.spec.ignoreMutation ? this.spec.ignoreMutation(e) : super.ignoreMutation(e);
  }
}
function Ib(t, e, n) {
  let o = t.firstChild, i = !1;
  for (let r = 0; r < e.length; r++) {
    let a = e[r], l = a.dom;
    if (l.parentNode == t) {
      for (; l != o; )
        o = Df(o), i = !0;
      o = o.nextSibling;
    } else
      i = !0, t.insertBefore(l, o);
    if (a instanceof To) {
      let s = o ? o.previousSibling : t.lastChild;
      Ib(a.contentDOM, a.children, n), o = s ? s.nextSibling : t.firstChild;
    }
  }
  for (; o; )
    o = Df(o), i = !0;
  i && n.trackWrites == t && (n.trackWrites = null);
}
const Nr = function(t) {
  t && (this.nodeName = t);
};
Nr.prototype = /* @__PURE__ */ Object.create(null);
const bo = [new Nr()];
function qd(t, e, n) {
  if (t.length == 0)
    return bo;
  let o = n ? bo[0] : new Nr(), i = [o];
  for (let r = 0; r < t.length; r++) {
    let a = t[r].type.attrs;
    if (a) {
      a.nodeName && i.push(o = new Nr(a.nodeName));
      for (let l in a) {
        let s = a[l];
        s != null && (n && i.length == 1 && i.push(o = new Nr(e.isInline ? "span" : "div")), l == "class" ? o.class = (o.class ? o.class + " " : "") + s : l == "style" ? o.style = (o.style ? o.style + ";" : "") + s : l != "nodeName" && (o[l] = s));
      }
    }
  }
  return i;
}
function Ob(t, e, n, o) {
  if (n == bo && o == bo)
    return e;
  let i = e;
  for (let r = 0; r < o.length; r++) {
    let a = o[r], l = n[r];
    if (r) {
      let s;
      l && l.nodeName == a.nodeName && i != t && (s = i.parentNode) && s.nodeName.toLowerCase() == a.nodeName || (s = document.createElement(a.nodeName), s.pmIsDeco = !0, s.appendChild(i), l = bo[0]), i = s;
    }
    QD(i, l || bo[0], a);
  }
  return i;
}
function QD(t, e, n) {
  for (let o in e)
    o != "class" && o != "style" && o != "nodeName" && !(o in n) && t.removeAttribute(o);
  for (let o in n)
    o != "class" && o != "style" && o != "nodeName" && n[o] != e[o] && t.setAttribute(o, n[o]);
  if (e.class != n.class) {
    let o = e.class ? e.class.split(" ").filter(Boolean) : [], i = n.class ? n.class.split(" ").filter(Boolean) : [];
    for (let r = 0; r < o.length; r++)
      i.indexOf(o[r]) == -1 && t.classList.remove(o[r]);
    for (let r = 0; r < i.length; r++)
      o.indexOf(i[r]) == -1 && t.classList.add(i[r]);
    t.classList.length == 0 && t.removeAttribute("class");
  }
  if (e.style != n.style) {
    if (e.style) {
      let o = /\s*([\w\-\xa1-\uffff]+)\s*:(?:"(?:\\.|[^"])*"|'(?:\\.|[^'])*'|\(.*?\)|[^;])*/g, i;
      for (; i = o.exec(e.style); )
        t.style.removeProperty(i[1]);
    }
    n.style && (t.style.cssText += n.style);
  }
}
function Pb(t, e, n) {
  return Ob(t, t, bo, qd(e, n, t.nodeType != 1));
}
function al(t, e) {
  if (t.length != e.length)
    return !1;
  for (let n = 0; n < t.length; n++)
    if (!t[n].type.eq(e[n].type))
      return !1;
  return !0;
}
function Df(t) {
  let e = t.nextSibling;
  return t.parentNode.removeChild(t), e;
}
class eL {
  constructor(e, n, o) {
    this.lock = n, this.view = o, this.index = 0, this.stack = [], this.changed = !1, this.top = e, this.preMatch = tL(e.node.content, e);
  }
  // Destroy and remove the children between the given indices in
  // `this.top`.
  destroyBetween(e, n) {
    if (e != n) {
      for (let o = e; o < n; o++)
        this.top.children[o].destroy();
      this.top.children.splice(e, n - e), this.changed = !0;
    }
  }
  // Destroy all remaining children in `this.top`.
  destroyRest() {
    this.destroyBetween(this.index, this.top.children.length);
  }
  // Sync the current stack of mark descs with the given array of
  // marks, reusing existing mark descs when possible.
  syncToMarks(e, n, o) {
    let i = 0, r = this.stack.length >> 1, a = Math.min(r, e.length);
    for (; i < a && (i == r - 1 ? this.top : this.stack[i + 1 << 1]).matchesMark(e[i]) && e[i].type.spec.spanning !== !1; )
      i++;
    for (; i < r; )
      this.destroyRest(), this.top.dirty = Wt, this.index = this.stack.pop(), this.top = this.stack.pop(), r--;
    for (; r < e.length; ) {
      this.stack.push(this.top, this.index + 1);
      let l = -1;
      for (let s = this.index; s < Math.min(this.index + 3, this.top.children.length); s++) {
        let d = this.top.children[s];
        if (d.matchesMark(e[r]) && !this.isLocked(d.dom)) {
          l = s;
          break;
        }
      }
      if (l > -1)
        l > this.index && (this.changed = !0, this.destroyBetween(this.index, l)), this.top = this.top.children[this.index];
      else {
        let s = To.create(this.top, e[r], n, o);
        this.top.children.splice(this.index, 0, s), this.top = s, this.changed = !0;
      }
      this.index = 0, r++;
    }
  }
  // Try to find a node desc matching the given data. Skip over it and
  // return true when successful.
  findNodeMatch(e, n, o, i) {
    let r = -1, a;
    if (i >= this.preMatch.index && (a = this.preMatch.matches[i - this.preMatch.index]).parent == this.top && a.matchesNode(e, n, o))
      r = this.top.children.indexOf(a, this.index);
    else
      for (let l = this.index, s = Math.min(this.top.children.length, l + 5); l < s; l++) {
        let d = this.top.children[l];
        if (d.matchesNode(e, n, o) && !this.preMatch.matched.has(d)) {
          r = l;
          break;
        }
      }
    return r < 0 ? !1 : (this.destroyBetween(this.index, r), this.index++, !0);
  }
  updateNodeAt(e, n, o, i, r) {
    let a = this.top.children[i];
    return a.dirty == mn && a.dom == a.contentDOM && (a.dirty = go), a.update(e, n, o, r) ? (this.destroyBetween(this.index, i), this.index++, !0) : !1;
  }
  findIndexWithChild(e) {
    for (; ; ) {
      let n = e.parentNode;
      if (!n)
        return -1;
      if (n == this.top.contentDOM) {
        let o = e.pmViewDesc;
        if (o) {
          for (let i = this.index; i < this.top.children.length; i++)
            if (this.top.children[i] == o)
              return i;
        }
        return -1;
      }
      e = n;
    }
  }
  // Try to update the next node, if any, to the given data. Checks
  // pre-matches to avoid overwriting nodes that could still be used.
  updateNextNode(e, n, o, i, r, a) {
    for (let l = this.index; l < this.top.children.length; l++) {
      let s = this.top.children[l];
      if (s instanceof Yn) {
        let d = this.preMatch.matched.get(s);
        if (d != null && d != r)
          return !1;
        let c = s.dom, u, f = this.isLocked(c) && !(e.isText && s.node && s.node.isText && s.nodeDOM.nodeValue == e.text && s.dirty != mn && al(n, s.outerDeco));
        if (!f && s.update(e, n, o, i))
          return this.destroyBetween(this.index, l), s.dom != c && (this.changed = !0), this.index++, !0;
        if (!f && (u = this.recreateWrapper(s, e, n, o, i, a)))
          return this.destroyBetween(this.index, l), this.top.children[this.index] = u, u.contentDOM && (u.dirty = go, u.updateChildren(i, a + 1), u.dirty = Wt), this.changed = !0, this.index++, !0;
        break;
      }
    }
    return !1;
  }
  // When a node with content is replaced by a different node with
  // identical content, move over its children.
  recreateWrapper(e, n, o, i, r, a) {
    if (e.dirty || n.isAtom || !e.children.length || !e.node.content.eq(n.content) || !al(o, e.outerDeco) || !i.eq(e.innerDeco))
      return null;
    let l = Yn.create(this.top, n, o, i, r, a);
    if (l.contentDOM) {
      l.children = e.children, e.children = [];
      for (let s of l.children)
        s.parent = l;
    }
    return e.destroy(), l;
  }
  // Insert the node as a newly created node desc.
  addNode(e, n, o, i, r) {
    let a = Yn.create(this.top, e, n, o, i, r);
    a.contentDOM && a.updateChildren(i, r + 1), this.top.children.splice(this.index++, 0, a), this.changed = !0;
  }
  placeWidget(e, n, o) {
    let i = this.index < this.top.children.length ? this.top.children[this.index] : null;
    if (i && i.matchesWidget(e) && (e == i.widget || !i.widget.type.toDOM.parentNode))
      this.index++;
    else {
      let r = new xb(this.top, e, n, o);
      this.top.children.splice(this.index++, 0, r), this.changed = !0;
    }
  }
  // Make sure a textblock looks and behaves correctly in
  // contentEditable.
  addTextblockHacks() {
    let e = this.top.children[this.index - 1], n = this.top;
    for (; e instanceof To; )
      n = e, e = n.children[n.children.length - 1];
    (!e || // Empty textblock
    !(e instanceof Ll) || /\n$/.test(e.node.text) || this.view.requiresGeckoHackNode && /\s$/.test(e.node.text)) && ((kt || ht) && e && e.dom.contentEditable == "false" && this.addHackNode("IMG", n), this.addHackNode("BR", this.top));
  }
  addHackNode(e, n) {
    if (n == this.top && this.index < n.children.length && n.children[this.index].matchesHack(e))
      this.index++;
    else {
      let o = document.createElement(e);
      e == "IMG" && (o.className = "ProseMirror-separator", o.alt = ""), e == "BR" && (o.className = "ProseMirror-trailingBreak");
      let i = new Sb(this.top, [], o, null);
      n != this.top ? n.children.push(i) : n.children.splice(this.index++, 0, i), this.changed = !0;
    }
  }
  isLocked(e) {
    return this.lock && (e == this.lock || e.nodeType == 1 && e.contains(this.lock.parentNode));
  }
}
function tL(t, e) {
  let n = e, o = n.children.length, i = t.childCount, r = /* @__PURE__ */ new Map(), a = [];
  e: for (; i > 0; ) {
    let l;
    for (; ; )
      if (o) {
        let d = n.children[o - 1];
        if (d instanceof To)
          n = d, o = d.children.length;
        else {
          l = d, o--;
          break;
        }
      } else {
        if (n == e)
          break e;
        o = n.parent.children.indexOf(n), n = n.parent;
      }
    let s = l.node;
    if (s) {
      if (s != t.child(i - 1))
        break;
      --i, r.set(l, i), a.push(l);
    }
  }
  return { index: i, matched: r, matches: a.reverse() };
}
function nL(t, e) {
  return t.type.side - e.type.side;
}
function oL(t, e, n, o) {
  let i = e.locals(t), r = 0;
  if (i.length == 0) {
    for (let d = 0; d < t.childCount; d++) {
      let c = t.child(d);
      o(c, i, e.forChild(r, c), d), r += c.nodeSize;
    }
    return;
  }
  let a = 0, l = [], s = null;
  for (let d = 0; ; ) {
    let c, u;
    for (; a < i.length && i[a].to == r; ) {
      let b = i[a++];
      b.widget && (c ? (u || (u = [c])).push(b) : c = b);
    }
    if (c)
      if (u) {
        u.sort(nL);
        for (let b = 0; b < u.length; b++)
          n(u[b], d, !!s);
      } else
        n(c, d, !!s);
    let f, p;
    if (s)
      p = -1, f = s, s = null;
    else if (d < t.childCount)
      p = d, f = t.child(d++);
    else
      break;
    for (let b = 0; b < l.length; b++)
      l[b].to <= r && l.splice(b--, 1);
    for (; a < i.length && i[a].from <= r && i[a].to > r; )
      l.push(i[a++]);
    let h = r + f.nodeSize;
    if (f.isText) {
      let b = h;
      a < i.length && i[a].from < b && (b = i[a].from);
      for (let C = 0; C < l.length; C++)
        l[C].to < b && (b = l[C].to);
      b < h && (s = f.cut(b - r), f = f.cut(0, b - r), h = b, p = -1);
    } else
      for (; a < i.length && i[a].to < h; )
        a++;
    let g = f.isInline && !f.isLeaf ? l.filter((b) => !b.inline) : l.slice();
    o(f, g, e.forChild(r, f), p), r = h;
  }
}
function rL(t) {
  if (t.nodeName == "UL" || t.nodeName == "OL") {
    let e = t.style.cssText;
    t.style.cssText = e + "; list-style: square !important", window.getComputedStyle(t).listStyle, t.style.cssText = e;
  }
}
function iL(t, e, n, o) {
  for (let i = 0, r = 0; i < t.childCount && r <= o; ) {
    let a = t.child(i++), l = r;
    if (r += a.nodeSize, !a.isText)
      continue;
    let s = a.text;
    for (; i < t.childCount; ) {
      let d = t.child(i++);
      if (r += d.nodeSize, !d.isText)
        break;
      s += d.text;
    }
    if (r >= n) {
      if (r >= o && s.slice(o - e.length - l, o - l) == e)
        return o - e.length;
      let d = l < o ? s.lastIndexOf(e, o - l - 1) : -1;
      if (d >= 0 && d + e.length + l >= n)
        return l + d;
      if (n == o && s.length >= o + e.length - l && s.slice(o - l, o - l + e.length) == e)
        return o;
    }
  }
  return -1;
}
function Jd(t, e, n, o, i) {
  let r = [];
  for (let a = 0, l = 0; a < t.length; a++) {
    let s = t[a], d = l, c = l += s.size;
    d >= n || c <= e ? r.push(s) : (d < e && r.push(s.slice(0, e - d, o)), i && (r.push(i), i = void 0), c > n && r.push(s.slice(n - d, s.size, o)));
  }
  return r;
}
function Dc(t, e = null) {
  let n = t.domSelectionRange(), o = t.state.doc;
  if (!n.focusNode)
    return null;
  let i = t.docView.nearestDesc(n.focusNode), r = i && i.size == 0, a = t.docView.posFromDOM(n.focusNode, n.focusOffset, 1);
  if (a < 0)
    return null;
  let l = o.resolve(a), s, d;
  if (Dl(n)) {
    for (s = a; i && !i.node; )
      i = i.parent;
    let u = i.node;
    if (i && u.isAtom && oe.isSelectable(u) && i.parent && !(u.isInline && BD(n.focusNode, n.focusOffset, i.dom))) {
      let f = i.posBefore;
      d = new oe(a == f ? l : o.resolve(f));
    }
  } else {
    if (n instanceof t.dom.ownerDocument.defaultView.Selection && n.rangeCount > 1) {
      let u = a, f = a;
      for (let p = 0; p < n.rangeCount; p++) {
        let h = n.getRangeAt(p);
        u = Math.min(u, t.docView.posFromDOM(h.startContainer, h.startOffset, 1)), f = Math.max(f, t.docView.posFromDOM(h.endContainer, h.endOffset, -1));
      }
      if (u < 0)
        return null;
      [s, a] = f == t.state.selection.anchor ? [f, u] : [u, f], l = o.resolve(a);
    } else
      s = t.docView.posFromDOM(n.anchorNode, n.anchorOffset, 1);
    if (s < 0)
      return null;
  }
  let c = o.resolve(s);
  if (!d) {
    let u = e == "pointer" || t.state.selection.head < l.pos && !r ? 1 : -1;
    d = Lc(t, c, l, u);
  }
  return d;
}
function $b(t) {
  return t.editable ? t.hasFocus() : Rb(t) && document.activeElement && document.activeElement.contains(t.dom);
}
function $n(t, e = !1) {
  let n = t.state.selection;
  if (Tb(t, n), !!$b(t)) {
    if (!e && t.input.mouseDown && t.input.mouseDown.allowDefault && ht) {
      let o = t.domSelectionRange(), i = t.domObserver.currentSelection;
      if (o.anchorNode && i.anchorNode && $o(o.anchorNode, o.anchorOffset, i.anchorNode, i.anchorOffset)) {
        t.input.mouseDown.delayedSelectionSync = !0, t.domObserver.setCurSelection();
        return;
      }
    }
    if (t.domObserver.disconnectSelection(), t.cursorWrapper)
      lL(t);
    else {
      let { anchor: o, head: i } = n, r, a;
      Lf && !(n instanceof he) && (n.$from.parent.inlineContent || (r = zf(t, n.from)), !n.empty && !n.$from.parent.inlineContent && (a = zf(t, n.to))), t.docView.setSelection(o, i, t, e), Lf && (r && Ff(r), a && Ff(a)), n.visible ? t.dom.classList.remove("ProseMirror-hideselection") : (t.dom.classList.add("ProseMirror-hideselection"), "onselectionchange" in document && aL(t));
    }
    t.domObserver.setCurSelection(), t.domObserver.connectSelection();
  }
}
const Lf = kt || ht && gb < 63;
function zf(t, e) {
  let { node: n, offset: o } = t.docView.domFromPos(e, 0), i = o < n.childNodes.length ? n.childNodes[o] : null, r = o ? n.childNodes[o - 1] : null;
  if (kt && i && i.contentEditable == "false")
    return hs(i);
  if ((!i || i.contentEditable == "false") && (!r || r.contentEditable == "false")) {
    if (i)
      return hs(i);
    if (r)
      return hs(r);
  }
}
function hs(t) {
  return t.contentEditable = "true", kt && t.draggable && (t.draggable = !1, t.wasDraggable = !0), t;
}
function Ff(t) {
  t.contentEditable = "false", t.wasDraggable && (t.draggable = !0, t.wasDraggable = null);
}
function aL(t) {
  let e = t.dom.ownerDocument;
  e.removeEventListener("selectionchange", t.input.hideSelectionGuard);
  let n = t.domSelectionRange(), o = n.anchorNode, i = n.anchorOffset;
  e.addEventListener("selectionchange", t.input.hideSelectionGuard = () => {
    (n.anchorNode != o || n.anchorOffset != i) && (e.removeEventListener("selectionchange", t.input.hideSelectionGuard), setTimeout(() => {
      (!$b(t) || t.state.selection.visible) && t.dom.classList.remove("ProseMirror-hideselection");
    }, 20));
  });
}
function lL(t) {
  let e = t.domSelection();
  if (!e)
    return;
  let n = t.cursorWrapper.dom, o = n.nodeName == "IMG";
  o ? e.collapse(n.parentNode, it(n) + 1) : e.collapse(n, 0), !o && !t.state.selection.visible && It && Jn <= 11 && (n.disabled = !0, n.disabled = !1);
}
function Tb(t, e) {
  if (e instanceof oe) {
    let n = t.docView.descAt(e.from);
    n != t.lastSelectedViewDesc && (Nf(t), n && n.selectNode(), t.lastSelectedViewDesc = n);
  } else
    Nf(t);
}
function Nf(t) {
  t.lastSelectedViewDesc && (t.lastSelectedViewDesc.parent && t.lastSelectedViewDesc.deselectNode(), t.lastSelectedViewDesc = void 0);
}
function Lc(t, e, n, o) {
  return t.someProp("createSelectionBetween", (i) => i(t, e, n)) || he.between(e, n, o);
}
function jf(t) {
  return t.editable && !t.hasFocus() ? !1 : Rb(t);
}
function Rb(t) {
  let e = t.domSelectionRange();
  if (!e.anchorNode)
    return !1;
  try {
    return t.dom.contains(e.anchorNode.nodeType == 3 ? e.anchorNode.parentNode : e.anchorNode) && (t.editable || t.dom.contains(e.focusNode.nodeType == 3 ? e.focusNode.parentNode : e.focusNode));
  } catch {
    return !1;
  }
}
function sL(t) {
  let e = t.docView.domFromPos(t.state.selection.anchor, 0), n = t.domSelectionRange();
  return $o(e.node, e.offset, n.anchorNode, n.anchorOffset);
}
function Yd(t, e) {
  let { $anchor: n, $head: o } = t.selection, i = e > 0 ? n.max(o) : n.min(o), r = i.parent.inlineContent ? i.depth ? t.doc.resolve(e > 0 ? i.after() : i.before()) : null : i;
  return r && ve.findFrom(r, e);
}
function zn(t, e) {
  return t.dispatch(t.state.tr.setSelection(e).scrollIntoView()), !0;
}
function Vf(t, e, n) {
  let o = t.state.selection;
  if (o instanceof he)
    if (n.indexOf("s") > -1) {
      let { $head: i } = o, r = i.textOffset ? null : e < 0 ? i.nodeBefore : i.nodeAfter;
      if (!r || r.isText || !r.isLeaf)
        return !1;
      let a = t.state.doc.resolve(i.pos + r.nodeSize * (e < 0 ? -1 : 1));
      return zn(t, new he(o.$anchor, a));
    } else if (o.empty) {
      if (t.endOfTextblock(e > 0 ? "forward" : "backward")) {
        let i = Yd(t.state, e);
        return i && i instanceof oe ? zn(t, i) : !1;
      } else if (!(jt && n.indexOf("m") > -1)) {
        let i = o.$head, r = i.textOffset ? null : e < 0 ? i.nodeBefore : i.nodeAfter, a;
        if (!r || r.isText)
          return !1;
        let l = e < 0 ? i.pos - r.nodeSize : i.pos;
        return r.isAtom || (a = t.docView.descAt(l)) && !a.contentDOM ? oe.isSelectable(r) ? zn(t, new oe(e < 0 ? t.state.doc.resolve(i.pos - r.nodeSize) : i)) : da ? zn(t, new he(t.state.doc.resolve(e < 0 ? l : l + r.nodeSize))) : !1 : !1;
      }
    } else return !1;
  else {
    if (o instanceof oe && o.node.isInline)
      return zn(t, new he(e > 0 ? o.$to : o.$from));
    {
      let i = Yd(t.state, e);
      return i ? zn(t, i) : !1;
    }
  }
}
function ll(t) {
  return t.nodeType == 3 ? t.nodeValue.length : t.childNodes.length;
}
function jr(t, e) {
  let n = t.pmViewDesc;
  return n && n.size == 0 && (e < 0 || t.nextSibling || t.nodeName != "BR");
}
function Vo(t, e) {
  return e < 0 ? dL(t) : cL(t);
}
function dL(t) {
  let e = t.domSelectionRange(), n = e.focusNode, o = e.focusOffset;
  if (!n)
    return;
  let i, r, a = !1;
  for (Ht && n.nodeType == 1 && o < ll(n) && jr(n.childNodes[o], -1) && (a = !0); ; )
    if (o > 0) {
      if (n.nodeType != 1)
        break;
      {
        let l = n.childNodes[o - 1];
        if (jr(l, -1))
          i = n, r = --o;
        else if (l.nodeType == 3)
          n = l, o = n.nodeValue.length;
        else
          break;
      }
    } else {
      if (Bb(n))
        break;
      {
        let l = n.previousSibling;
        for (; l && jr(l, -1); )
          i = n.parentNode, r = it(l), l = l.previousSibling;
        if (l)
          n = l, o = ll(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          o = 0;
        }
      }
    }
  a ? Xd(t, n, o) : i && Xd(t, i, r);
}
function cL(t) {
  let e = t.domSelectionRange(), n = e.focusNode, o = e.focusOffset;
  if (!n)
    return;
  let i = ll(n), r, a;
  for (; ; )
    if (o < i) {
      if (n.nodeType != 1)
        break;
      let l = n.childNodes[o];
      if (jr(l, 1))
        r = n, a = ++o;
      else
        break;
    } else {
      if (Bb(n))
        break;
      {
        let l = n.nextSibling;
        for (; l && jr(l, 1); )
          r = l.parentNode, a = it(l) + 1, l = l.nextSibling;
        if (l)
          n = l, o = 0, i = ll(n);
        else {
          if (n = n.parentNode, n == t.dom)
            break;
          o = i = 0;
        }
      }
    }
  r && Xd(t, r, a);
}
function Bb(t) {
  let e = t.pmViewDesc;
  return e && e.node && e.node.isBlock;
}
function uL(t, e) {
  for (; t && e == t.childNodes.length && !sa(t); )
    e = it(t) + 1, t = t.parentNode;
  for (; t && e < t.childNodes.length; ) {
    let n = t.childNodes[e];
    if (n.nodeType == 3)
      return n;
    if (n.nodeType == 1 && n.contentEditable == "false")
      break;
    t = n, e = 0;
  }
}
function pL(t, e) {
  for (; t && !e && !sa(t); )
    e = it(t), t = t.parentNode;
  for (; t && e; ) {
    let n = t.childNodes[e - 1];
    if (n.nodeType == 3)
      return n;
    if (n.nodeType == 1 && n.contentEditable == "false")
      break;
    t = n, e = t.childNodes.length;
  }
}
function Xd(t, e, n) {
  if (e.nodeType != 3) {
    let r, a;
    (a = uL(e, n)) ? (e = a, n = 0) : (r = pL(e, n)) && (e = r, n = r.nodeValue.length);
  }
  let o = t.domSelection();
  if (!o)
    return;
  if (Dl(o)) {
    let r = document.createRange();
    r.setEnd(e, n), r.setStart(e, n), o.removeAllRanges(), o.addRange(r);
  } else o.extend && o.extend(e, n);
  t.domObserver.setCurSelection();
  let { state: i } = t;
  setTimeout(() => {
    t.state == i && $n(t);
  }, 50);
}
function _f(t, e) {
  let n = t.state.doc.resolve(e);
  if (!(ht || AD) && n.parent.inlineContent) {
    let i = t.coordsAtPos(e);
    if (e > n.start()) {
      let r = t.coordsAtPos(e - 1), a = (r.top + r.bottom) / 2;
      if (a > i.top && a < i.bottom && Math.abs(r.left - i.left) > 1)
        return r.left < i.left ? "ltr" : "rtl";
    }
    if (e < n.end()) {
      let r = t.coordsAtPos(e + 1), a = (r.top + r.bottom) / 2;
      if (a > i.top && a < i.bottom && Math.abs(r.left - i.left) > 1)
        return r.left > i.left ? "ltr" : "rtl";
    }
  }
  return getComputedStyle(t.dom).direction == "rtl" ? "rtl" : "ltr";
}
function Kf(t, e, n) {
  let o = t.state.selection;
  if (o instanceof he && !o.empty || n.indexOf("s") > -1 || jt && n.indexOf("m") > -1)
    return !1;
  let { $from: i, $to: r } = o;
  if (!i.parent.inlineContent || t.endOfTextblock(e < 0 ? "up" : "down")) {
    let a = Yd(t.state, e);
    if (a && a instanceof oe)
      return zn(t, a);
  }
  if (!i.parent.inlineContent) {
    let a = e < 0 ? i : r, l = o instanceof Mt ? ve.near(a, e) : ve.findFrom(a, e);
    return l ? zn(t, l) : !1;
  }
  return !1;
}
function Hf(t, e) {
  if (!(t.state.selection instanceof he))
    return !0;
  let { $head: n, $anchor: o, empty: i } = t.state.selection;
  if (!n.sameParent(o))
    return !0;
  if (!i)
    return !1;
  if (t.endOfTextblock(e > 0 ? "forward" : "backward"))
    return !0;
  let r = !n.textOffset && (e < 0 ? n.nodeBefore : n.nodeAfter);
  if (r && !r.isText) {
    let a = t.state.tr;
    return e < 0 ? a.delete(n.pos - r.nodeSize, n.pos) : a.delete(n.pos, n.pos + r.nodeSize), t.dispatch(a), !0;
  }
  return !1;
}
function Wf(t, e, n) {
  t.domObserver.stop(), e.contentEditable = n, t.domObserver.start();
}
function fL(t) {
  if (!kt || t.state.selection.$head.parentOffset > 0)
    return !1;
  let { focusNode: e, focusOffset: n } = t.domSelectionRange();
  if (e && e.nodeType == 1 && n == 0 && e.firstChild && e.firstChild.contentEditable == "false") {
    let o = e.firstChild;
    Wf(t, o, "true"), setTimeout(() => Wf(t, o, "false"), 20);
  }
  return !1;
}
function hL(t) {
  let e = "";
  return t.ctrlKey && (e += "c"), t.metaKey && (e += "m"), t.altKey && (e += "a"), t.shiftKey && (e += "s"), e;
}
function mL(t, e) {
  let n = e.keyCode, o = hL(e);
  if (n == 8 || jt && n == 72 && o == "c")
    return Hf(t, -1) || Vo(t, -1);
  if (n == 46 && !e.shiftKey || jt && n == 68 && o == "c")
    return Hf(t, 1) || Vo(t, 1);
  if (n == 13 || n == 27)
    return !0;
  if (n == 37 || jt && n == 66 && o == "c") {
    let i = n == 37 ? _f(t, t.state.selection.from) == "ltr" ? -1 : 1 : -1;
    return Vf(t, i, o) || Vo(t, i);
  } else if (n == 39 || jt && n == 70 && o == "c") {
    let i = n == 39 ? _f(t, t.state.selection.from) == "ltr" ? 1 : -1 : 1;
    return Vf(t, i, o) || Vo(t, i);
  } else {
    if (n == 38 || jt && n == 80 && o == "c")
      return Kf(t, -1, o) || Vo(t, -1);
    if (n == 40 || jt && n == 78 && o == "c")
      return fL(t) || Kf(t, 1, o) || Vo(t, 1);
    if (o == (jt ? "m" : "c") && (n == 66 || n == 73 || n == 89 || n == 90))
      return !0;
  }
  return !1;
}
function zc(t, e) {
  t.someProp("transformCopied", (p) => {
    e = p(e, t);
  });
  let n = [], { content: o, openStart: i, openEnd: r } = e;
  for (; i > 1 && r > 1 && o.childCount == 1 && o.firstChild.childCount == 1; ) {
    i--, r--;
    let p = o.firstChild;
    n.push(p.type.name, p.attrs != p.type.defaultAttrs ? p.attrs : null), o = p.content;
  }
  let a = t.someProp("clipboardSerializer") || Do.fromSchema(t.state.schema), l = zb(), s = l.createElement("div");
  s.appendChild(a.serializeFragment(o, { document: l }));
  let d = s.firstChild, c, u = 0;
  for (; d && d.nodeType == 1 && (c = Lb[d.nodeName.toLowerCase()]); ) {
    for (let p = c.length - 1; p >= 0; p--) {
      let h = l.createElement(c[p]);
      for (; s.firstChild; )
        h.appendChild(s.firstChild);
      s.appendChild(h), u++;
    }
    d = s.firstChild;
  }
  d && d.nodeType == 1 && d.setAttribute("data-pm-slice", `${i} ${r}${u ? ` -${u}` : ""} ${JSON.stringify(n)}`);
  let f = t.someProp("clipboardTextSerializer", (p) => p(e, t)) || e.content.textBetween(0, e.content.size, `

`);
  return { dom: s, text: f, slice: e };
}
function Eb(t, e, n, o, i) {
  let r = i.parent.type.spec.code, a, l;
  if (!n && !e)
    return null;
  let s = !!e && (o || r || !n);
  if (s) {
    if (t.someProp("transformPastedText", (f) => {
      e = f(e, r || o, t);
    }), r)
      return l = new J(N.from(t.state.schema.text(e.replace(/\r\n?/g, `
`))), 0, 0), t.someProp("transformPasted", (f) => {
        l = f(l, t, !0);
      }), l;
    let u = t.someProp("clipboardTextParser", (f) => f(e, i, o, t));
    if (u)
      l = u;
    else {
      let f = i.marks(), { schema: p } = t.state, h = Do.fromSchema(p);
      a = document.createElement("div"), e.split(/(?:\r\n?|\n)+/).forEach((g) => {
        let b = a.appendChild(document.createElement("p"));
        g && b.appendChild(h.serializeNode(p.text(g, f)));
      });
    }
  } else
    t.someProp("transformPastedHTML", (u) => {
      n = u(n, t);
    }), a = yL(n), da && kL(a);
  let d = a && a.querySelector("[data-pm-slice]"), c = d && /^(\d+) (\d+)(?: -(\d+))? (.*)/.exec(d.getAttribute("data-pm-slice") || "");
  if (c && c[3])
    for (let u = +c[3]; u > 0; u--) {
      let f = a.firstChild;
      for (; f && f.nodeType != 1; )
        f = f.nextSibling;
      if (!f)
        break;
      a = f;
    }
  if (l || (l = (t.someProp("clipboardParser") || t.someProp("domParser") || zr.fromSchema(t.state.schema)).parseSlice(a, {
    preserveWhitespace: !!(s || c),
    context: i,
    ruleFromNode(f) {
      return f.nodeName == "BR" && !f.nextSibling && f.parentNode && !gL.test(f.parentNode.nodeName) ? { ignore: !0 } : null;
    }
  })), c)
    l = wL(Uf(l, +c[1], +c[2]), c[4]);
  else if (l = J.maxOpen(bL(l.content, i), !0), l.openStart || l.openEnd) {
    let u = 0, f = 0;
    for (let p = l.content.firstChild; u < l.openStart && !p.type.spec.isolating; u++, p = p.firstChild)
      ;
    for (let p = l.content.lastChild; f < l.openEnd && !p.type.spec.isolating; f++, p = p.lastChild)
      ;
    l = Uf(l, u, f);
  }
  return t.someProp("transformPasted", (u) => {
    l = u(l, t, s);
  }), l;
}
const gL = /^(a|abbr|acronym|b|cite|code|del|em|i|ins|kbd|label|output|q|ruby|s|samp|span|strong|sub|sup|time|u|tt|var)$/i;
function bL(t, e) {
  if (t.childCount < 2)
    return t;
  for (let n = e.depth; n >= 0; n--) {
    let i = e.node(n).contentMatchAt(e.index(n)), r, a = [];
    if (t.forEach((l) => {
      if (!a)
        return;
      let s = i.findWrapping(l.type), d;
      if (!s)
        return a = null;
      if (d = a.length && r.length && Ab(s, r, l, a[a.length - 1], 0))
        a[a.length - 1] = d;
      else {
        a.length && (a[a.length - 1] = Db(a[a.length - 1], r.length));
        let c = Mb(l, s);
        a.push(c), i = i.matchType(c.type), r = s;
      }
    }), a)
      return N.from(a);
  }
  return t;
}
function Mb(t, e, n = 0) {
  for (let o = e.length - 1; o >= n; o--)
    t = e[o].create(null, N.from(t));
  return t;
}
function Ab(t, e, n, o, i) {
  if (i < t.length && i < e.length && t[i] == e[i]) {
    let r = Ab(t, e, n, o.lastChild, i + 1);
    if (r)
      return o.copy(o.content.replaceChild(o.childCount - 1, r));
    if (o.contentMatchAt(o.childCount).matchType(i == t.length - 1 ? n.type : t[i + 1]))
      return o.copy(o.content.append(N.from(Mb(n, t, i + 1))));
  }
}
function Db(t, e) {
  if (e == 0)
    return t;
  let n = t.content.replaceChild(t.childCount - 1, Db(t.lastChild, e - 1)), o = t.contentMatchAt(t.childCount).fillBefore(N.empty, !0);
  return t.copy(n.append(o));
}
function Zd(t, e, n, o, i, r) {
  let a = e < 0 ? t.firstChild : t.lastChild, l = a.content;
  return t.childCount > 1 && (r = 0), i < o - 1 && (l = Zd(l, e, n, o, i + 1, r)), i >= n && (l = e < 0 ? a.contentMatchAt(0).fillBefore(l, r <= i).append(l) : l.append(a.contentMatchAt(a.childCount).fillBefore(N.empty, !0))), t.replaceChild(e < 0 ? 0 : t.childCount - 1, a.copy(l));
}
function Uf(t, e, n) {
  return e < t.openStart && (t = new J(Zd(t.content, -1, e, t.openStart, 0, t.openEnd), e, t.openEnd)), n < t.openEnd && (t = new J(Zd(t.content, 1, n, t.openEnd, 0, 0), t.openStart, n)), t;
}
const Lb = {
  thead: ["table"],
  tbody: ["table"],
  tfoot: ["table"],
  caption: ["table"],
  colgroup: ["table"],
  col: ["table", "colgroup"],
  tr: ["table", "tbody"],
  td: ["table", "tbody", "tr"],
  th: ["table", "tbody", "tr"]
};
let Gf = null;
function zb() {
  return Gf || (Gf = document.implementation.createHTMLDocument("title"));
}
let ms = null;
function vL(t) {
  let e = window.trustedTypes;
  return e ? (ms || (ms = e.defaultPolicy || e.createPolicy("ProseMirrorClipboard", { createHTML: (n) => n })), ms.createHTML(t)) : t;
}
function yL(t) {
  let e = /^(\s*<meta [^>]*>)*/.exec(t);
  e && (t = t.slice(e[0].length));
  let n = zb().createElement("div"), o = /<([a-z][^>\s]+)/i.exec(t), i;
  if ((i = o && Lb[o[1].toLowerCase()]) && (t = i.map((r) => "<" + r + ">").join("") + t + i.map((r) => "</" + r + ">").reverse().join("")), n.innerHTML = vL(t), i)
    for (let r = 0; r < i.length; r++)
      n = n.querySelector(i[r]) || n;
  return n;
}
function kL(t) {
  let e = t.querySelectorAll(ht ? "span:not([class]):not([style])" : "span.Apple-converted-space");
  for (let n = 0; n < e.length; n++) {
    let o = e[n];
    o.childNodes.length == 1 && o.textContent == " " && o.parentNode && o.parentNode.replaceChild(t.ownerDocument.createTextNode(" "), o);
  }
}
function wL(t, e) {
  if (!t.size)
    return t;
  let n = t.content.firstChild.type.schema, o;
  try {
    o = JSON.parse(e);
  } catch {
    return t;
  }
  let { content: i, openStart: r, openEnd: a } = t;
  for (let l = o.length - 2; l >= 0; l -= 2) {
    let s = n.nodes[o[l]];
    if (!s || s.hasRequiredAttrs())
      break;
    i = N.from(s.create(o[l + 1], i)), r++, a++;
  }
  return new J(i, r, a);
}
const wt = {}, Ct = {}, CL = { touchstart: !0, touchmove: !0 };
class xL {
  constructor() {
    this.shiftKey = !1, this.mouseDown = null, this.lastKeyCode = null, this.lastKeyCodeTime = 0, this.lastClick = { time: 0, x: 0, y: 0, type: "", button: 0 }, this.lastSelectionOrigin = null, this.lastSelectionTime = 0, this.lastIOSEnter = 0, this.lastIOSEnterFallbackTimeout = -1, this.lastFocus = 0, this.lastTouch = 0, this.lastChromeDelete = 0, this.composing = !1, this.compositionNode = null, this.composingTimeout = -1, this.compositionNodes = [], this.compositionEndedAt = -2e8, this.compositionID = 1, this.compositionPendingChanges = 0, this.domChangeCount = 0, this.eventHandlers = /* @__PURE__ */ Object.create(null), this.hideSelectionGuard = null;
  }
}
function SL(t) {
  for (let e in wt) {
    let n = wt[e];
    t.dom.addEventListener(e, t.input.eventHandlers[e] = (o) => {
      OL(t, o) && !Fc(t, o) && (t.editable || !(o.type in Ct)) && n(t, o);
    }, CL[e] ? { passive: !0 } : void 0);
  }
  kt && t.dom.addEventListener("input", () => null), Qd(t);
}
function Gn(t, e) {
  t.input.lastSelectionOrigin = e, t.input.lastSelectionTime = Date.now();
}
function IL(t) {
  t.domObserver.stop();
  for (let e in t.input.eventHandlers)
    t.dom.removeEventListener(e, t.input.eventHandlers[e]);
  clearTimeout(t.input.composingTimeout), clearTimeout(t.input.lastIOSEnterFallbackTimeout);
}
function Qd(t) {
  t.someProp("handleDOMEvents", (e) => {
    for (let n in e)
      t.input.eventHandlers[n] || t.dom.addEventListener(n, t.input.eventHandlers[n] = (o) => Fc(t, o));
  });
}
function Fc(t, e) {
  return t.someProp("handleDOMEvents", (n) => {
    let o = n[e.type];
    return o ? o(t, e) || e.defaultPrevented : !1;
  });
}
function OL(t, e) {
  if (!e.bubbles)
    return !0;
  if (e.defaultPrevented)
    return !1;
  for (let n = e.target; n != t.dom; n = n.parentNode)
    if (!n || n.nodeType == 11 || n.pmViewDesc && n.pmViewDesc.stopEvent(e))
      return !1;
  return !0;
}
function PL(t, e) {
  !Fc(t, e) && wt[e.type] && (t.editable || !(e.type in Ct)) && wt[e.type](t, e);
}
Ct.keydown = (t, e) => {
  let n = e;
  if (t.input.shiftKey = n.keyCode == 16 || n.shiftKey, !Nb(t, n) && (t.input.lastKeyCode = n.keyCode, t.input.lastKeyCodeTime = Date.now(), !(Sn && ht && n.keyCode == 13)))
    if (n.keyCode != 229 && t.domObserver.forceFlush(), ar && n.keyCode == 13 && !n.ctrlKey && !n.altKey && !n.metaKey) {
      let o = Date.now();
      t.input.lastIOSEnter = o, t.input.lastIOSEnterFallbackTimeout = setTimeout(() => {
        t.input.lastIOSEnter == o && (t.someProp("handleKeyDown", (i) => i(t, ho(13, "Enter"))), t.input.lastIOSEnter = 0);
      }, 200);
    } else t.someProp("handleKeyDown", (o) => o(t, n)) || mL(t, n) ? n.preventDefault() : Gn(t, "key");
};
Ct.keyup = (t, e) => {
  e.keyCode == 16 && (t.input.shiftKey = !1);
};
Ct.keypress = (t, e) => {
  let n = e;
  if (Nb(t, n) || !n.charCode || n.ctrlKey && !n.altKey || jt && n.metaKey)
    return;
  if (t.someProp("handleKeyPress", (i) => i(t, n))) {
    n.preventDefault();
    return;
  }
  let o = t.state.selection;
  if (!(o instanceof he) || !o.$from.sameParent(o.$to)) {
    let i = String.fromCharCode(n.charCode), r = () => t.state.tr.insertText(i).scrollIntoView();
    !/[\r\n]/.test(i) && !t.someProp("handleTextInput", (a) => a(t, o.$from.pos, o.$to.pos, i, r)) && t.dispatch(r()), n.preventDefault();
  }
};
function zl(t) {
  return { left: t.clientX, top: t.clientY };
}
function $L(t, e) {
  let n = e.x - t.clientX, o = e.y - t.clientY;
  return n * n + o * o < 100;
}
function Nc(t, e, n, o, i) {
  if (o == -1)
    return !1;
  let r = t.state.doc.resolve(o);
  for (let a = r.depth + 1; a > 0; a--)
    if (t.someProp(e, (l) => a > r.depth ? l(t, n, r.nodeAfter, r.before(a), i, !0) : l(t, n, r.node(a), r.before(a), i, !1)))
      return !0;
  return !1;
}
function Qo(t, e, n) {
  if (t.focused || t.focus(), t.state.selection.eq(e))
    return;
  let o = t.state.tr.setSelection(e);
  o.setMeta("pointer", !0), t.dispatch(o);
}
function TL(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.doc.resolve(e), o = n.nodeAfter;
  return o && o.isAtom && oe.isSelectable(o) ? (Qo(t, new oe(n)), !0) : !1;
}
function RL(t, e) {
  if (e == -1)
    return !1;
  let n = t.state.selection, o, i;
  n instanceof oe && (o = n.node);
  let r = t.state.doc.resolve(e);
  for (let a = r.depth + 1; a > 0; a--) {
    let l = a > r.depth ? r.nodeAfter : r.node(a);
    if (oe.isSelectable(l)) {
      o && n.$from.depth > 0 && a >= n.$from.depth && r.before(n.$from.depth + 1) == n.$from.pos ? i = r.before(n.$from.depth) : i = r.before(a);
      break;
    }
  }
  return i != null ? (Qo(t, oe.create(t.state.doc, i)), !0) : !1;
}
function BL(t, e, n, o, i) {
  return Nc(t, "handleClickOn", e, n, o) || t.someProp("handleClick", (r) => r(t, e, o)) || (i ? RL(t, n) : TL(t, n));
}
function EL(t, e, n, o) {
  return Nc(t, "handleDoubleClickOn", e, n, o) || t.someProp("handleDoubleClick", (i) => i(t, e, o));
}
function ML(t, e, n, o) {
  return Nc(t, "handleTripleClickOn", e, n, o) || t.someProp("handleTripleClick", (i) => i(t, e, o)) || AL(t, n, o);
}
function AL(t, e, n) {
  if (n.button != 0)
    return !1;
  let o = t.state.doc;
  if (e == -1)
    return o.inlineContent ? (Qo(t, he.create(o, 0, o.content.size)), !0) : !1;
  let i = o.resolve(e);
  for (let r = i.depth + 1; r > 0; r--) {
    let a = r > i.depth ? i.nodeAfter : i.node(r), l = i.before(r);
    if (a.inlineContent)
      Qo(t, he.create(o, l + 1, l + 1 + a.content.size));
    else if (oe.isSelectable(a))
      Qo(t, oe.create(o, l));
    else
      continue;
    return !0;
  }
}
function jc(t) {
  return sl(t);
}
const Fb = jt ? "metaKey" : "ctrlKey";
wt.mousedown = (t, e) => {
  let n = e;
  t.input.shiftKey = n.shiftKey;
  let o = jc(t), i = Date.now(), r = "singleClick";
  i - t.input.lastClick.time < 500 && $L(n, t.input.lastClick) && !n[Fb] && t.input.lastClick.button == n.button && (t.input.lastClick.type == "singleClick" ? r = "doubleClick" : t.input.lastClick.type == "doubleClick" && (r = "tripleClick")), t.input.lastClick = { time: i, x: n.clientX, y: n.clientY, type: r, button: n.button };
  let a = t.posAtCoords(zl(n));
  a && (r == "singleClick" ? (t.input.mouseDown && t.input.mouseDown.done(), t.input.mouseDown = new DL(t, a, n, !!o)) : (r == "doubleClick" ? EL : ML)(t, a.pos, a.inside, n) ? n.preventDefault() : Gn(t, "pointer"));
};
class DL {
  constructor(e, n, o, i) {
    this.view = e, this.pos = n, this.event = o, this.flushed = i, this.delayedSelectionSync = !1, this.mightDrag = null, this.startDoc = e.state.doc, this.selectNode = !!o[Fb], this.allowDefault = o.shiftKey;
    let r, a;
    if (n.inside > -1)
      r = e.state.doc.nodeAt(n.inside), a = n.inside;
    else {
      let c = e.state.doc.resolve(n.pos);
      r = c.parent, a = c.depth ? c.before() : 0;
    }
    const l = i ? null : o.target, s = l ? e.docView.nearestDesc(l, !0) : null;
    this.target = s && s.dom.nodeType == 1 ? s.dom : null;
    let { selection: d } = e.state;
    (o.button == 0 && r.type.spec.draggable && r.type.spec.selectable !== !1 || d instanceof oe && d.from <= a && d.to > a) && (this.mightDrag = {
      node: r,
      pos: a,
      addAttr: !!(this.target && !this.target.draggable),
      setUneditable: !!(this.target && Ht && !this.target.hasAttribute("contentEditable"))
    }), this.target && this.mightDrag && (this.mightDrag.addAttr || this.mightDrag.setUneditable) && (this.view.domObserver.stop(), this.mightDrag.addAttr && (this.target.draggable = !0), this.mightDrag.setUneditable && setTimeout(() => {
      this.view.input.mouseDown == this && this.target.setAttribute("contentEditable", "false");
    }, 20), this.view.domObserver.start()), e.root.addEventListener("mouseup", this.up = this.up.bind(this)), e.root.addEventListener("mousemove", this.move = this.move.bind(this)), Gn(e, "pointer");
  }
  done() {
    this.view.root.removeEventListener("mouseup", this.up), this.view.root.removeEventListener("mousemove", this.move), this.mightDrag && this.target && (this.view.domObserver.stop(), this.mightDrag.addAttr && this.target.removeAttribute("draggable"), this.mightDrag.setUneditable && this.target.removeAttribute("contentEditable"), this.view.domObserver.start()), this.delayedSelectionSync && setTimeout(() => $n(this.view)), this.view.input.mouseDown = null;
  }
  up(e) {
    if (this.done(), !this.view.dom.contains(e.target))
      return;
    let n = this.pos;
    this.view.state.doc != this.startDoc && (n = this.view.posAtCoords(zl(e))), this.updateAllowDefault(e), this.allowDefault || !n ? Gn(this.view, "pointer") : BL(this.view, n.pos, n.inside, e, this.selectNode) ? e.preventDefault() : e.button == 0 && (this.flushed || // Safari ignores clicks on draggable elements
    kt && this.mightDrag && !this.mightDrag.node.isAtom || // Chrome will sometimes treat a node selection as a
    // cursor, but still report that the node is selected
    // when asked through getSelection. You'll then get a
    // situation where clicking at the point where that
    // (hidden) cursor is doesn't change the selection, and
    // thus doesn't get a reaction from ProseMirror. This
    // works around that.
    ht && !this.view.state.selection.visible && Math.min(Math.abs(n.pos - this.view.state.selection.from), Math.abs(n.pos - this.view.state.selection.to)) <= 2) ? (Qo(this.view, ve.near(this.view.state.doc.resolve(n.pos))), e.preventDefault()) : Gn(this.view, "pointer");
  }
  move(e) {
    this.updateAllowDefault(e), Gn(this.view, "pointer"), e.buttons == 0 && this.done();
  }
  updateAllowDefault(e) {
    !this.allowDefault && (Math.abs(this.event.x - e.clientX) > 4 || Math.abs(this.event.y - e.clientY) > 4) && (this.allowDefault = !0);
  }
}
wt.touchstart = (t) => {
  t.input.lastTouch = Date.now(), jc(t), Gn(t, "pointer");
};
wt.touchmove = (t) => {
  t.input.lastTouch = Date.now(), Gn(t, "pointer");
};
wt.contextmenu = (t) => jc(t);
function Nb(t, e) {
  return t.composing ? !0 : kt && Math.abs(e.timeStamp - t.input.compositionEndedAt) < 500 ? (t.input.compositionEndedAt = -2e8, !0) : !1;
}
const LL = Sn ? 5e3 : -1;
Ct.compositionstart = Ct.compositionupdate = (t) => {
  if (!t.composing) {
    t.domObserver.flush();
    let { state: e } = t, n = e.selection.$to;
    if (e.selection instanceof he && (e.storedMarks || !n.textOffset && n.parentOffset && n.nodeBefore.marks.some((o) => o.type.spec.inclusive === !1)))
      t.markCursor = t.state.storedMarks || n.marks(), sl(t, !0), t.markCursor = null;
    else if (sl(t, !e.selection.empty), Ht && e.selection.empty && n.parentOffset && !n.textOffset && n.nodeBefore.marks.length) {
      let o = t.domSelectionRange();
      for (let i = o.focusNode, r = o.focusOffset; i && i.nodeType == 1 && r != 0; ) {
        let a = r < 0 ? i.lastChild : i.childNodes[r - 1];
        if (!a)
          break;
        if (a.nodeType == 3) {
          let l = t.domSelection();
          l && l.collapse(a, a.nodeValue.length);
          break;
        } else
          i = a, r = -1;
      }
    }
    t.input.composing = !0;
  }
  jb(t, LL);
};
Ct.compositionend = (t, e) => {
  t.composing && (t.input.composing = !1, t.input.compositionEndedAt = e.timeStamp, t.input.compositionPendingChanges = t.domObserver.pendingRecords().length ? t.input.compositionID : 0, t.input.compositionNode = null, t.input.compositionPendingChanges && Promise.resolve().then(() => t.domObserver.flush()), t.input.compositionID++, jb(t, 20));
};
function jb(t, e) {
  clearTimeout(t.input.composingTimeout), e > -1 && (t.input.composingTimeout = setTimeout(() => sl(t), e));
}
function Vb(t) {
  for (t.composing && (t.input.composing = !1, t.input.compositionEndedAt = FL()); t.input.compositionNodes.length > 0; )
    t.input.compositionNodes.pop().markParentsDirty();
}
function zL(t) {
  let e = t.domSelectionRange();
  if (!e.focusNode)
    return null;
  let n = TD(e.focusNode, e.focusOffset), o = RD(e.focusNode, e.focusOffset);
  if (n && o && n != o) {
    let i = o.pmViewDesc, r = t.domObserver.lastChangedTextNode;
    if (n == r || o == r)
      return r;
    if (!i || !i.isText(o.nodeValue))
      return o;
    if (t.input.compositionNode == o) {
      let a = n.pmViewDesc;
      if (!(!a || !a.isText(n.nodeValue)))
        return o;
    }
  }
  return n || o;
}
function FL() {
  let t = document.createEvent("Event");
  return t.initEvent("event", !0, !0), t.timeStamp;
}
function sl(t, e = !1) {
  if (!(Sn && t.domObserver.flushingSoon >= 0)) {
    if (t.domObserver.forceFlush(), Vb(t), e || t.docView && t.docView.dirty) {
      let n = Dc(t), o = t.state.selection;
      return n && !n.eq(o) ? t.dispatch(t.state.tr.setSelection(n)) : (t.markCursor || e) && !o.$from.node(o.$from.sharedDepth(o.to)).inlineContent ? t.dispatch(t.state.tr.deleteSelection()) : t.updateState(t.state), !0;
    }
    return !1;
  }
}
function NL(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.dom.parentNode.appendChild(document.createElement("div"));
  n.appendChild(e), n.style.cssText = "position: fixed; left: -10000px; top: 10px";
  let o = getSelection(), i = document.createRange();
  i.selectNodeContents(e), t.dom.blur(), o.removeAllRanges(), o.addRange(i), setTimeout(() => {
    n.parentNode && n.parentNode.removeChild(n), t.focus();
  }, 50);
}
const Wi = It && Jn < 15 || ar && DD < 604;
wt.copy = Ct.cut = (t, e) => {
  let n = e, o = t.state.selection, i = n.type == "cut";
  if (o.empty)
    return;
  let r = Wi ? null : n.clipboardData, a = o.content(), { dom: l, text: s } = zc(t, a);
  r ? (n.preventDefault(), r.clearData(), r.setData("text/html", l.innerHTML), r.setData("text/plain", s)) : NL(t, l), i && t.dispatch(t.state.tr.deleteSelection().scrollIntoView().setMeta("uiEvent", "cut"));
};
function jL(t) {
  return t.openStart == 0 && t.openEnd == 0 && t.content.childCount == 1 ? t.content.firstChild : null;
}
function VL(t, e) {
  if (!t.dom.parentNode)
    return;
  let n = t.input.shiftKey || t.state.selection.$from.parent.type.spec.code, o = t.dom.parentNode.appendChild(document.createElement(n ? "textarea" : "div"));
  n || (o.contentEditable = "true"), o.style.cssText = "position: fixed; left: -10000px; top: 10px", o.focus();
  let i = t.input.shiftKey && t.input.lastKeyCode != 45;
  setTimeout(() => {
    t.focus(), o.parentNode && o.parentNode.removeChild(o), n ? Ui(t, o.value, null, i, e) : Ui(t, o.textContent, o.innerHTML, i, e);
  }, 50);
}
function Ui(t, e, n, o, i) {
  let r = Eb(t, e, n, o, t.state.selection.$from);
  if (t.someProp("handlePaste", (s) => s(t, i, r || J.empty)))
    return !0;
  if (!r)
    return !1;
  let a = jL(r), l = a ? t.state.tr.replaceSelectionWith(a, o) : t.state.tr.replaceSelection(r);
  return t.dispatch(l.scrollIntoView().setMeta("paste", !0).setMeta("uiEvent", "paste")), !0;
}
function _b(t) {
  let e = t.getData("text/plain") || t.getData("Text");
  if (e)
    return e;
  let n = t.getData("text/uri-list");
  return n ? n.replace(/\r?\n/g, " ") : "";
}
Ct.paste = (t, e) => {
  let n = e;
  if (t.composing && !Sn)
    return;
  let o = Wi ? null : n.clipboardData, i = t.input.shiftKey && t.input.lastKeyCode != 45;
  o && Ui(t, _b(o), o.getData("text/html"), i, n) ? n.preventDefault() : VL(t, n);
};
class Kb {
  constructor(e, n, o) {
    this.slice = e, this.move = n, this.node = o;
  }
}
const _L = jt ? "altKey" : "ctrlKey";
function Hb(t, e) {
  let n = t.someProp("dragCopies", (o) => !o(e));
  return n ?? !e[_L];
}
wt.dragstart = (t, e) => {
  let n = e, o = t.input.mouseDown;
  if (o && o.done(), !n.dataTransfer)
    return;
  let i = t.state.selection, r = i.empty ? null : t.posAtCoords(zl(n)), a;
  if (!(r && r.pos >= i.from && r.pos <= (i instanceof oe ? i.to - 1 : i.to))) {
    if (o && o.mightDrag)
      a = oe.create(t.state.doc, o.mightDrag.pos);
    else if (n.target && n.target.nodeType == 1) {
      let u = t.docView.nearestDesc(n.target, !0);
      u && u.node.type.spec.draggable && u != t.docView && (a = oe.create(t.state.doc, u.posBefore));
    }
  }
  let l = (a || t.state.selection).content(), { dom: s, text: d, slice: c } = zc(t, l);
  (!n.dataTransfer.files.length || !ht || gb > 120) && n.dataTransfer.clearData(), n.dataTransfer.setData(Wi ? "Text" : "text/html", s.innerHTML), n.dataTransfer.effectAllowed = "copyMove", Wi || n.dataTransfer.setData("text/plain", d), t.dragging = new Kb(c, Hb(t, n), a);
};
wt.dragend = (t) => {
  let e = t.dragging;
  window.setTimeout(() => {
    t.dragging == e && (t.dragging = null);
  }, 50);
};
Ct.dragover = Ct.dragenter = (t, e) => e.preventDefault();
Ct.drop = (t, e) => {
  let n = e, o = t.dragging;
  if (t.dragging = null, !n.dataTransfer)
    return;
  let i = t.posAtCoords(zl(n));
  if (!i)
    return;
  let r = t.state.doc.resolve(i.pos), a = o && o.slice;
  a ? t.someProp("transformPasted", (h) => {
    a = h(a, t, !1);
  }) : a = Eb(t, _b(n.dataTransfer), Wi ? null : n.dataTransfer.getData("text/html"), !1, r);
  let l = !!(o && Hb(t, n));
  if (t.someProp("handleDrop", (h) => h(t, n, a || J.empty, l))) {
    n.preventDefault();
    return;
  }
  if (!a)
    return;
  n.preventDefault();
  let s = a ? sb(t.state.doc, r.pos, a) : r.pos;
  s == null && (s = r.pos);
  let d = t.state.tr;
  if (l) {
    let { node: h } = o;
    h ? h.replace(d) : d.deleteSelection();
  }
  let c = d.mapping.map(s), u = a.openStart == 0 && a.openEnd == 0 && a.content.childCount == 1, f = d.doc;
  if (u ? d.replaceRangeWith(c, c, a.content.firstChild) : d.replaceRange(c, c, a), d.doc.eq(f))
    return;
  let p = d.doc.resolve(c);
  if (u && oe.isSelectable(a.content.firstChild) && p.nodeAfter && p.nodeAfter.sameMarkup(a.content.firstChild))
    d.setSelection(new oe(p));
  else {
    let h = d.mapping.map(s);
    d.mapping.maps[d.mapping.maps.length - 1].forEach((g, b, C, x) => h = x), d.setSelection(Lc(t, p, d.doc.resolve(h)));
  }
  t.focus(), t.dispatch(d.setMeta("uiEvent", "drop"));
};
wt.focus = (t) => {
  t.input.lastFocus = Date.now(), t.focused || (t.domObserver.stop(), t.dom.classList.add("ProseMirror-focused"), t.domObserver.start(), t.focused = !0, setTimeout(() => {
    t.docView && t.hasFocus() && !t.domObserver.currentSelection.eq(t.domSelectionRange()) && $n(t);
  }, 20));
};
wt.blur = (t, e) => {
  let n = e;
  t.focused && (t.domObserver.stop(), t.dom.classList.remove("ProseMirror-focused"), t.domObserver.start(), n.relatedTarget && t.dom.contains(n.relatedTarget) && t.domObserver.currentSelection.clear(), t.focused = !1);
};
wt.beforeinput = (t, e) => {
  if (ht && Sn && e.inputType == "deleteContentBackward") {
    t.domObserver.flushSoon();
    let { domChangeCount: o } = t.input;
    setTimeout(() => {
      if (t.input.domChangeCount != o || (t.dom.blur(), t.focus(), t.someProp("handleKeyDown", (r) => r(t, ho(8, "Backspace")))))
        return;
      let { $cursor: i } = t.state.selection;
      i && i.pos > 0 && t.dispatch(t.state.tr.delete(i.pos - 1, i.pos).scrollIntoView());
    }, 50);
  }
};
for (let t in Ct)
  wt[t] = Ct[t];
function Gi(t, e) {
  if (t == e)
    return !0;
  for (let n in t)
    if (t[n] !== e[n])
      return !1;
  for (let n in e)
    if (!(n in t))
      return !1;
  return !0;
}
class dl {
  constructor(e, n) {
    this.toDOM = e, this.spec = n || Co, this.side = this.spec.side || 0;
  }
  map(e, n, o, i) {
    let { pos: r, deleted: a } = e.mapResult(n.from + i, this.side < 0 ? -1 : 1);
    return a ? null : new _t(r - o, r - o, this);
  }
  valid() {
    return !0;
  }
  eq(e) {
    return this == e || e instanceof dl && (this.spec.key && this.spec.key == e.spec.key || this.toDOM == e.toDOM && Gi(this.spec, e.spec));
  }
  destroy(e) {
    this.spec.destroy && this.spec.destroy(e);
  }
}
class Xn {
  constructor(e, n) {
    this.attrs = e, this.spec = n || Co;
  }
  map(e, n, o, i) {
    let r = e.map(n.from + i, this.spec.inclusiveStart ? -1 : 1) - o, a = e.map(n.to + i, this.spec.inclusiveEnd ? 1 : -1) - o;
    return r >= a ? null : new _t(r, a, this);
  }
  valid(e, n) {
    return n.from < n.to;
  }
  eq(e) {
    return this == e || e instanceof Xn && Gi(this.attrs, e.attrs) && Gi(this.spec, e.spec);
  }
  static is(e) {
    return e.type instanceof Xn;
  }
  destroy() {
  }
}
class Vc {
  constructor(e, n) {
    this.attrs = e, this.spec = n || Co;
  }
  map(e, n, o, i) {
    let r = e.mapResult(n.from + i, 1);
    if (r.deleted)
      return null;
    let a = e.mapResult(n.to + i, -1);
    return a.deleted || a.pos <= r.pos ? null : new _t(r.pos - o, a.pos - o, this);
  }
  valid(e, n) {
    let { index: o, offset: i } = e.content.findIndex(n.from), r;
    return i == n.from && !(r = e.child(o)).isText && i + r.nodeSize == n.to;
  }
  eq(e) {
    return this == e || e instanceof Vc && Gi(this.attrs, e.attrs) && Gi(this.spec, e.spec);
  }
  destroy() {
  }
}
class _t {
  /**
  @internal
  */
  constructor(e, n, o) {
    this.from = e, this.to = n, this.type = o;
  }
  /**
  @internal
  */
  copy(e, n) {
    return new _t(e, n, this.type);
  }
  /**
  @internal
  */
  eq(e, n = 0) {
    return this.type.eq(e.type) && this.from + n == e.from && this.to + n == e.to;
  }
  /**
  @internal
  */
  map(e, n, o) {
    return this.type.map(e, this, n, o);
  }
  /**
  Creates a widget decoration, which is a DOM node that's shown in
  the document at the given position. It is recommended that you
  delay rendering the widget by passing a function that will be
  called when the widget is actually drawn in a view, but you can
  also directly pass a DOM node. `getPos` can be used to find the
  widget's current document position.
  */
  static widget(e, n, o) {
    return new _t(e, e, new dl(n, o));
  }
  /**
  Creates an inline decoration, which adds the given attributes to
  each inline node between `from` and `to`.
  */
  static inline(e, n, o, i) {
    return new _t(e, n, new Xn(o, i));
  }
  /**
  Creates a node decoration. `from` and `to` should point precisely
  before and after a node in the document. That node, and only that
  node, will receive the given attributes.
  */
  static node(e, n, o, i) {
    return new _t(e, n, new Vc(o, i));
  }
  /**
  The spec provided when creating this decoration. Can be useful
  if you've stored extra information in that object.
  */
  get spec() {
    return this.type.spec;
  }
  /**
  @internal
  */
  get inline() {
    return this.type instanceof Xn;
  }
  /**
  @internal
  */
  get widget() {
    return this.type instanceof dl;
  }
}
const Wo = [], Co = {};
class qe {
  /**
  @internal
  */
  constructor(e, n) {
    this.local = e.length ? e : Wo, this.children = n.length ? n : Wo;
  }
  /**
  Create a set of decorations, using the structure of the given
  document. This will consume (modify) the `decorations` array, so
  you must make a copy if you want need to preserve that.
  */
  static create(e, n) {
    return n.length ? cl(n, e, 0, Co) : ut;
  }
  /**
  Find all decorations in this set which touch the given range
  (including decorations that start or end directly at the
  boundaries) and match the given predicate on their spec. When
  `start` and `end` are omitted, all decorations in the set are
  considered. When `predicate` isn't given, all decorations are
  assumed to match.
  */
  find(e, n, o) {
    let i = [];
    return this.findInner(e ?? 0, n ?? 1e9, i, 0, o), i;
  }
  findInner(e, n, o, i, r) {
    for (let a = 0; a < this.local.length; a++) {
      let l = this.local[a];
      l.from <= n && l.to >= e && (!r || r(l.spec)) && o.push(l.copy(l.from + i, l.to + i));
    }
    for (let a = 0; a < this.children.length; a += 3)
      if (this.children[a] < n && this.children[a + 1] > e) {
        let l = this.children[a] + 1;
        this.children[a + 2].findInner(e - l, n - l, o, i + l, r);
      }
  }
  /**
  Map the set of decorations in response to a change in the
  document.
  */
  map(e, n, o) {
    return this == ut || e.maps.length == 0 ? this : this.mapInner(e, n, 0, 0, o || Co);
  }
  /**
  @internal
  */
  mapInner(e, n, o, i, r) {
    let a;
    for (let l = 0; l < this.local.length; l++) {
      let s = this.local[l].map(e, o, i);
      s && s.type.valid(n, s) ? (a || (a = [])).push(s) : r.onRemove && r.onRemove(this.local[l].spec);
    }
    return this.children.length ? KL(this.children, a || [], e, n, o, i, r) : a ? new qe(a.sort(xo), Wo) : ut;
  }
  /**
  Add the given array of decorations to the ones in the set,
  producing a new set. Consumes the `decorations` array. Needs
  access to the current document to create the appropriate tree
  structure.
  */
  add(e, n) {
    return n.length ? this == ut ? qe.create(e, n) : this.addInner(e, n, 0) : this;
  }
  addInner(e, n, o) {
    let i, r = 0;
    e.forEach((l, s) => {
      let d = s + o, c;
      if (c = Ub(n, l, d)) {
        for (i || (i = this.children.slice()); r < i.length && i[r] < s; )
          r += 3;
        i[r] == s ? i[r + 2] = i[r + 2].addInner(l, c, d + 1) : i.splice(r, 0, s, s + l.nodeSize, cl(c, l, d + 1, Co)), r += 3;
      }
    });
    let a = Wb(r ? Gb(n) : n, -o);
    for (let l = 0; l < a.length; l++)
      a[l].type.valid(e, a[l]) || a.splice(l--, 1);
    return new qe(a.length ? this.local.concat(a).sort(xo) : this.local, i || this.children);
  }
  /**
  Create a new set that contains the decorations in this set, minus
  the ones in the given array.
  */
  remove(e) {
    return e.length == 0 || this == ut ? this : this.removeInner(e, 0);
  }
  removeInner(e, n) {
    let o = this.children, i = this.local;
    for (let r = 0; r < o.length; r += 3) {
      let a, l = o[r] + n, s = o[r + 1] + n;
      for (let c = 0, u; c < e.length; c++)
        (u = e[c]) && u.from > l && u.to < s && (e[c] = null, (a || (a = [])).push(u));
      if (!a)
        continue;
      o == this.children && (o = this.children.slice());
      let d = o[r + 2].removeInner(a, l + 1);
      d != ut ? o[r + 2] = d : (o.splice(r, 3), r -= 3);
    }
    if (i.length) {
      for (let r = 0, a; r < e.length; r++)
        if (a = e[r])
          for (let l = 0; l < i.length; l++)
            i[l].eq(a, n) && (i == this.local && (i = this.local.slice()), i.splice(l--, 1));
    }
    return o == this.children && i == this.local ? this : i.length || o.length ? new qe(i, o) : ut;
  }
  forChild(e, n) {
    if (this == ut)
      return this;
    if (n.isLeaf)
      return qe.empty;
    let o, i;
    for (let l = 0; l < this.children.length; l += 3)
      if (this.children[l] >= e) {
        this.children[l] == e && (o = this.children[l + 2]);
        break;
      }
    let r = e + 1, a = r + n.content.size;
    for (let l = 0; l < this.local.length; l++) {
      let s = this.local[l];
      if (s.from < a && s.to > r && s.type instanceof Xn) {
        let d = Math.max(r, s.from) - r, c = Math.min(a, s.to) - r;
        d < c && (i || (i = [])).push(s.copy(d, c));
      }
    }
    if (i) {
      let l = new qe(i.sort(xo), Wo);
      return o ? new _n([l, o]) : l;
    }
    return o || ut;
  }
  /**
  @internal
  */
  eq(e) {
    if (this == e)
      return !0;
    if (!(e instanceof qe) || this.local.length != e.local.length || this.children.length != e.children.length)
      return !1;
    for (let n = 0; n < this.local.length; n++)
      if (!this.local[n].eq(e.local[n]))
        return !1;
    for (let n = 0; n < this.children.length; n += 3)
      if (this.children[n] != e.children[n] || this.children[n + 1] != e.children[n + 1] || !this.children[n + 2].eq(e.children[n + 2]))
        return !1;
    return !0;
  }
  /**
  @internal
  */
  locals(e) {
    return _c(this.localsInner(e));
  }
  /**
  @internal
  */
  localsInner(e) {
    if (this == ut)
      return Wo;
    if (e.inlineContent || !this.local.some(Xn.is))
      return this.local;
    let n = [];
    for (let o = 0; o < this.local.length; o++)
      this.local[o].type instanceof Xn || n.push(this.local[o]);
    return n;
  }
  forEachSet(e) {
    e(this);
  }
}
qe.empty = new qe([], []);
qe.removeOverlap = _c;
const ut = qe.empty;
class _n {
  constructor(e) {
    this.members = e;
  }
  map(e, n) {
    const o = this.members.map((i) => i.map(e, n, Co));
    return _n.from(o);
  }
  forChild(e, n) {
    if (n.isLeaf)
      return qe.empty;
    let o = [];
    for (let i = 0; i < this.members.length; i++) {
      let r = this.members[i].forChild(e, n);
      r != ut && (r instanceof _n ? o = o.concat(r.members) : o.push(r));
    }
    return _n.from(o);
  }
  eq(e) {
    if (!(e instanceof _n) || e.members.length != this.members.length)
      return !1;
    for (let n = 0; n < this.members.length; n++)
      if (!this.members[n].eq(e.members[n]))
        return !1;
    return !0;
  }
  locals(e) {
    let n, o = !0;
    for (let i = 0; i < this.members.length; i++) {
      let r = this.members[i].localsInner(e);
      if (r.length)
        if (!n)
          n = r;
        else {
          o && (n = n.slice(), o = !1);
          for (let a = 0; a < r.length; a++)
            n.push(r[a]);
        }
    }
    return n ? _c(o ? n : n.sort(xo)) : Wo;
  }
  // Create a group for the given array of decoration sets, or return
  // a single set when possible.
  static from(e) {
    switch (e.length) {
      case 0:
        return ut;
      case 1:
        return e[0];
      default:
        return new _n(e.every((n) => n instanceof qe) ? e : e.reduce((n, o) => n.concat(o instanceof qe ? o : o.members), []));
    }
  }
  forEachSet(e) {
    for (let n = 0; n < this.members.length; n++)
      this.members[n].forEachSet(e);
  }
}
function KL(t, e, n, o, i, r, a) {
  let l = t.slice();
  for (let d = 0, c = r; d < n.maps.length; d++) {
    let u = 0;
    n.maps[d].forEach((f, p, h, g) => {
      let b = g - h - (p - f);
      for (let C = 0; C < l.length; C += 3) {
        let x = l[C + 1];
        if (x < 0 || f > x + c - u)
          continue;
        let R = l[C] + c - u;
        p >= R ? l[C + 1] = f <= R ? -2 : -1 : f >= c && b && (l[C] += b, l[C + 1] += b);
      }
      u += b;
    }), c = n.maps[d].map(c, -1);
  }
  let s = !1;
  for (let d = 0; d < l.length; d += 3)
    if (l[d + 1] < 0) {
      if (l[d + 1] == -2) {
        s = !0, l[d + 1] = -1;
        continue;
      }
      let c = n.map(t[d] + r), u = c - i;
      if (u < 0 || u >= o.content.size) {
        s = !0;
        continue;
      }
      let f = n.map(t[d + 1] + r, -1), p = f - i, { index: h, offset: g } = o.content.findIndex(u), b = o.maybeChild(h);
      if (b && g == u && g + b.nodeSize == p) {
        let C = l[d + 2].mapInner(n, b, c + 1, t[d] + r + 1, a);
        C != ut ? (l[d] = u, l[d + 1] = p, l[d + 2] = C) : (l[d + 1] = -2, s = !0);
      } else
        s = !0;
    }
  if (s) {
    let d = HL(l, t, e, n, i, r, a), c = cl(d, o, 0, a);
    e = c.local;
    for (let u = 0; u < l.length; u += 3)
      l[u + 1] < 0 && (l.splice(u, 3), u -= 3);
    for (let u = 0, f = 0; u < c.children.length; u += 3) {
      let p = c.children[u];
      for (; f < l.length && l[f] < p; )
        f += 3;
      l.splice(f, 0, c.children[u], c.children[u + 1], c.children[u + 2]);
    }
  }
  return new qe(e.sort(xo), l);
}
function Wb(t, e) {
  if (!e || !t.length)
    return t;
  let n = [];
  for (let o = 0; o < t.length; o++) {
    let i = t[o];
    n.push(new _t(i.from + e, i.to + e, i.type));
  }
  return n;
}
function HL(t, e, n, o, i, r, a) {
  function l(s, d) {
    for (let c = 0; c < s.local.length; c++) {
      let u = s.local[c].map(o, i, d);
      u ? n.push(u) : a.onRemove && a.onRemove(s.local[c].spec);
    }
    for (let c = 0; c < s.children.length; c += 3)
      l(s.children[c + 2], s.children[c] + d + 1);
  }
  for (let s = 0; s < t.length; s += 3)
    t[s + 1] == -1 && l(t[s + 2], e[s] + r + 1);
  return n;
}
function Ub(t, e, n) {
  if (e.isLeaf)
    return null;
  let o = n + e.nodeSize, i = null;
  for (let r = 0, a; r < t.length; r++)
    (a = t[r]) && a.from > n && a.to < o && ((i || (i = [])).push(a), t[r] = null);
  return i;
}
function Gb(t) {
  let e = [];
  for (let n = 0; n < t.length; n++)
    t[n] != null && e.push(t[n]);
  return e;
}
function cl(t, e, n, o) {
  let i = [], r = !1;
  e.forEach((l, s) => {
    let d = Ub(t, l, s + n);
    if (d) {
      r = !0;
      let c = cl(d, l, n + s + 1, o);
      c != ut && i.push(s, s + l.nodeSize, c);
    }
  });
  let a = Wb(r ? Gb(t) : t, -n).sort(xo);
  for (let l = 0; l < a.length; l++)
    a[l].type.valid(e, a[l]) || (o.onRemove && o.onRemove(a[l].spec), a.splice(l--, 1));
  return a.length || i.length ? new qe(a, i) : ut;
}
function xo(t, e) {
  return t.from - e.from || t.to - e.to;
}
function _c(t) {
  let e = t;
  for (let n = 0; n < e.length - 1; n++) {
    let o = e[n];
    if (o.from != o.to)
      for (let i = n + 1; i < e.length; i++) {
        let r = e[i];
        if (r.from == o.from) {
          r.to != o.to && (e == t && (e = t.slice()), e[i] = r.copy(r.from, o.to), qf(e, i + 1, r.copy(o.to, r.to)));
          continue;
        } else {
          r.from < o.to && (e == t && (e = t.slice()), e[n] = o.copy(o.from, r.from), qf(e, i, o.copy(r.from, o.to)));
          break;
        }
      }
  }
  return e;
}
function qf(t, e, n) {
  for (; e < t.length && xo(n, t[e]) > 0; )
    e++;
  t.splice(e, 0, n);
}
function gs(t) {
  let e = [];
  return t.someProp("decorations", (n) => {
    let o = n(t.state);
    o && o != ut && e.push(o);
  }), t.cursorWrapper && e.push(qe.create(t.state.doc, [t.cursorWrapper.deco])), _n.from(e);
}
const WL = {
  childList: !0,
  characterData: !0,
  characterDataOldValue: !0,
  attributes: !0,
  attributeOldValue: !0,
  subtree: !0
}, UL = It && Jn <= 11;
class GL {
  constructor() {
    this.anchorNode = null, this.anchorOffset = 0, this.focusNode = null, this.focusOffset = 0;
  }
  set(e) {
    this.anchorNode = e.anchorNode, this.anchorOffset = e.anchorOffset, this.focusNode = e.focusNode, this.focusOffset = e.focusOffset;
  }
  clear() {
    this.anchorNode = this.focusNode = null;
  }
  eq(e) {
    return e.anchorNode == this.anchorNode && e.anchorOffset == this.anchorOffset && e.focusNode == this.focusNode && e.focusOffset == this.focusOffset;
  }
}
class qL {
  constructor(e, n) {
    this.view = e, this.handleDOMChange = n, this.queue = [], this.flushingSoon = -1, this.observer = null, this.currentSelection = new GL(), this.onCharData = null, this.suppressingSelectionUpdates = !1, this.lastChangedTextNode = null, this.observer = window.MutationObserver && new window.MutationObserver((o) => {
      for (let i = 0; i < o.length; i++)
        this.queue.push(o[i]);
      It && Jn <= 11 && o.some((i) => i.type == "childList" && i.removedNodes.length || i.type == "characterData" && i.oldValue.length > i.target.nodeValue.length) ? this.flushSoon() : this.flush();
    }), UL && (this.onCharData = (o) => {
      this.queue.push({ target: o.target, type: "characterData", oldValue: o.prevValue }), this.flushSoon();
    }), this.onSelectionChange = this.onSelectionChange.bind(this);
  }
  flushSoon() {
    this.flushingSoon < 0 && (this.flushingSoon = window.setTimeout(() => {
      this.flushingSoon = -1, this.flush();
    }, 20));
  }
  forceFlush() {
    this.flushingSoon > -1 && (window.clearTimeout(this.flushingSoon), this.flushingSoon = -1, this.flush());
  }
  start() {
    this.observer && (this.observer.takeRecords(), this.observer.observe(this.view.dom, WL)), this.onCharData && this.view.dom.addEventListener("DOMCharacterDataModified", this.onCharData), this.connectSelection();
  }
  stop() {
    if (this.observer) {
      let e = this.observer.takeRecords();
      if (e.length) {
        for (let n = 0; n < e.length; n++)
          this.queue.push(e[n]);
        window.setTimeout(() => this.flush(), 20);
      }
      this.observer.disconnect();
    }
    this.onCharData && this.view.dom.removeEventListener("DOMCharacterDataModified", this.onCharData), this.disconnectSelection();
  }
  connectSelection() {
    this.view.dom.ownerDocument.addEventListener("selectionchange", this.onSelectionChange);
  }
  disconnectSelection() {
    this.view.dom.ownerDocument.removeEventListener("selectionchange", this.onSelectionChange);
  }
  suppressSelectionUpdates() {
    this.suppressingSelectionUpdates = !0, setTimeout(() => this.suppressingSelectionUpdates = !1, 50);
  }
  onSelectionChange() {
    if (jf(this.view)) {
      if (this.suppressingSelectionUpdates)
        return $n(this.view);
      if (It && Jn <= 11 && !this.view.state.selection.empty) {
        let e = this.view.domSelectionRange();
        if (e.focusNode && $o(e.focusNode, e.focusOffset, e.anchorNode, e.anchorOffset))
          return this.flushSoon();
      }
      this.flush();
    }
  }
  setCurSelection() {
    this.currentSelection.set(this.view.domSelectionRange());
  }
  ignoreSelectionChange(e) {
    if (!e.focusNode)
      return !0;
    let n = /* @__PURE__ */ new Set(), o;
    for (let r = e.focusNode; r; r = ir(r))
      n.add(r);
    for (let r = e.anchorNode; r; r = ir(r))
      if (n.has(r)) {
        o = r;
        break;
      }
    let i = o && this.view.docView.nearestDesc(o);
    if (i && i.ignoreMutation({
      type: "selection",
      target: o.nodeType == 3 ? o.parentNode : o
    }))
      return this.setCurSelection(), !0;
  }
  pendingRecords() {
    if (this.observer)
      for (let e of this.observer.takeRecords())
        this.queue.push(e);
    return this.queue;
  }
  flush() {
    let { view: e } = this;
    if (!e.docView || this.flushingSoon > -1)
      return;
    let n = this.pendingRecords();
    n.length && (this.queue = []);
    let o = e.domSelectionRange(), i = !this.suppressingSelectionUpdates && !this.currentSelection.eq(o) && jf(e) && !this.ignoreSelectionChange(o), r = -1, a = -1, l = !1, s = [];
    if (e.editable)
      for (let c = 0; c < n.length; c++) {
        let u = this.registerMutation(n[c], s);
        u && (r = r < 0 ? u.from : Math.min(u.from, r), a = a < 0 ? u.to : Math.max(u.to, a), u.typeOver && (l = !0));
      }
    if (Ht && s.length) {
      let c = s.filter((u) => u.nodeName == "BR");
      if (c.length == 2) {
        let [u, f] = c;
        u.parentNode && u.parentNode.parentNode == f.parentNode ? f.remove() : u.remove();
      } else {
        let { focusNode: u } = this.currentSelection;
        for (let f of c) {
          let p = f.parentNode;
          p && p.nodeName == "LI" && (!u || XL(e, u) != p) && f.remove();
        }
      }
    }
    let d = null;
    r < 0 && i && e.input.lastFocus > Date.now() - 200 && Math.max(e.input.lastTouch, e.input.lastClick.time) < Date.now() - 300 && Dl(o) && (d = Dc(e)) && d.eq(ve.near(e.state.doc.resolve(0), 1)) ? (e.input.lastFocus = 0, $n(e), this.currentSelection.set(o), e.scrollToSelection()) : (r > -1 || i) && (r > -1 && (e.docView.markDirty(r, a), JL(e)), this.handleDOMChange(r, a, l, s), e.docView && e.docView.dirty ? e.updateState(e.state) : this.currentSelection.eq(o) || $n(e), this.currentSelection.set(o));
  }
  registerMutation(e, n) {
    if (n.indexOf(e.target) > -1)
      return null;
    let o = this.view.docView.nearestDesc(e.target);
    if (e.type == "attributes" && (o == this.view.docView || e.attributeName == "contenteditable" || // Firefox sometimes fires spurious events for null/empty styles
    e.attributeName == "style" && !e.oldValue && !e.target.getAttribute("style")) || !o || o.ignoreMutation(e))
      return null;
    if (e.type == "childList") {
      for (let c = 0; c < e.addedNodes.length; c++) {
        let u = e.addedNodes[c];
        n.push(u), u.nodeType == 3 && (this.lastChangedTextNode = u);
      }
      if (o.contentDOM && o.contentDOM != o.dom && !o.contentDOM.contains(e.target))
        return { from: o.posBefore, to: o.posAfter };
      let i = e.previousSibling, r = e.nextSibling;
      if (It && Jn <= 11 && e.addedNodes.length)
        for (let c = 0; c < e.addedNodes.length; c++) {
          let { previousSibling: u, nextSibling: f } = e.addedNodes[c];
          (!u || Array.prototype.indexOf.call(e.addedNodes, u) < 0) && (i = u), (!f || Array.prototype.indexOf.call(e.addedNodes, f) < 0) && (r = f);
        }
      let a = i && i.parentNode == e.target ? it(i) + 1 : 0, l = o.localPosFromDOM(e.target, a, -1), s = r && r.parentNode == e.target ? it(r) : e.target.childNodes.length, d = o.localPosFromDOM(e.target, s, 1);
      return { from: l, to: d };
    } else return e.type == "attributes" ? { from: o.posAtStart - o.border, to: o.posAtEnd + o.border } : (this.lastChangedTextNode = e.target, {
      from: o.posAtStart,
      to: o.posAtEnd,
      // An event was generated for a text change that didn't change
      // any text. Mark the dom change to fall back to assuming the
      // selection was typed over with an identical value if it can't
      // find another change.
      typeOver: e.target.nodeValue == e.oldValue
    });
  }
}
let Jf = /* @__PURE__ */ new WeakMap(), Yf = !1;
function JL(t) {
  if (!Jf.has(t) && (Jf.set(t, null), ["normal", "nowrap", "pre-line"].indexOf(getComputedStyle(t.dom).whiteSpace) !== -1)) {
    if (t.requiresGeckoHackNode = Ht, Yf)
      return;
    console.warn("ProseMirror expects the CSS white-space property to be set, preferably to 'pre-wrap'. It is recommended to load style/prosemirror.css from the prosemirror-view package."), Yf = !0;
  }
}
function Xf(t, e) {
  let n = e.startContainer, o = e.startOffset, i = e.endContainer, r = e.endOffset, a = t.domAtPos(t.state.selection.anchor);
  return $o(a.node, a.offset, i, r) && ([n, o, i, r] = [i, r, n, o]), { anchorNode: n, anchorOffset: o, focusNode: i, focusOffset: r };
}
function YL(t, e) {
  if (e.getComposedRanges) {
    let i = e.getComposedRanges(t.root)[0];
    if (i)
      return Xf(t, i);
  }
  let n;
  function o(i) {
    i.preventDefault(), i.stopImmediatePropagation(), n = i.getTargetRanges()[0];
  }
  return t.dom.addEventListener("beforeinput", o, !0), document.execCommand("indent"), t.dom.removeEventListener("beforeinput", o, !0), n ? Xf(t, n) : null;
}
function XL(t, e) {
  for (let n = e.parentNode; n && n != t.dom; n = n.parentNode) {
    let o = t.docView.nearestDesc(n, !0);
    if (o && o.node.isBlock)
      return n;
  }
  return null;
}
function ZL(t, e, n) {
  let { node: o, fromOffset: i, toOffset: r, from: a, to: l } = t.docView.parseRange(e, n), s = t.domSelectionRange(), d, c = s.anchorNode;
  if (c && t.dom.contains(c.nodeType == 1 ? c : c.parentNode) && (d = [{ node: c, offset: s.anchorOffset }], Dl(s) || d.push({ node: s.focusNode, offset: s.focusOffset })), ht && t.input.lastKeyCode === 8)
    for (let b = r; b > i; b--) {
      let C = o.childNodes[b - 1], x = C.pmViewDesc;
      if (C.nodeName == "BR" && !x) {
        r = b;
        break;
      }
      if (!x || x.size)
        break;
    }
  let u = t.state.doc, f = t.someProp("domParser") || zr.fromSchema(t.state.schema), p = u.resolve(a), h = null, g = f.parse(o, {
    topNode: p.parent,
    topMatch: p.parent.contentMatchAt(p.index()),
    topOpen: !0,
    from: i,
    to: r,
    preserveWhitespace: p.parent.type.whitespace == "pre" ? "full" : !0,
    findPositions: d,
    ruleFromNode: QL,
    context: p
  });
  if (d && d[0].pos != null) {
    let b = d[0].pos, C = d[1] && d[1].pos;
    C == null && (C = b), h = { anchor: b + a, head: C + a };
  }
  return { doc: g, sel: h, from: a, to: l };
}
function QL(t) {
  let e = t.pmViewDesc;
  if (e)
    return e.parseRule();
  if (t.nodeName == "BR" && t.parentNode) {
    if (kt && /^(ul|ol)$/i.test(t.parentNode.nodeName)) {
      let n = document.createElement("div");
      return n.appendChild(document.createElement("li")), { skip: n };
    } else if (t.parentNode.lastChild == t || kt && /^(tr|table)$/i.test(t.parentNode.nodeName))
      return { ignore: !0 };
  } else if (t.nodeName == "IMG" && t.getAttribute("mark-placeholder"))
    return { ignore: !0 };
  return null;
}
const ez = /^(a|abbr|acronym|b|bd[io]|big|br|button|cite|code|data(list)?|del|dfn|em|i|img|ins|kbd|label|map|mark|meter|output|q|ruby|s|samp|small|span|strong|su[bp]|time|u|tt|var)$/i;
function tz(t, e, n, o, i) {
  let r = t.input.compositionPendingChanges || (t.composing ? t.input.compositionID : 0);
  if (t.input.compositionPendingChanges = 0, e < 0) {
    let B = t.input.lastSelectionTime > Date.now() - 50 ? t.input.lastSelectionOrigin : null, H = Dc(t, B);
    if (H && !t.state.selection.eq(H)) {
      if (ht && Sn && t.input.lastKeyCode === 13 && Date.now() - 100 < t.input.lastKeyCodeTime && t.someProp("handleKeyDown", (j) => j(t, ho(13, "Enter"))))
        return;
      let K = t.state.tr.setSelection(H);
      B == "pointer" ? K.setMeta("pointer", !0) : B == "key" && K.scrollIntoView(), r && K.setMeta("composition", r), t.dispatch(K);
    }
    return;
  }
  let a = t.state.doc.resolve(e), l = a.sharedDepth(n);
  e = a.before(l + 1), n = t.state.doc.resolve(n).after(l + 1);
  let s = t.state.selection, d = ZL(t, e, n), c = t.state.doc, u = c.slice(d.from, d.to), f, p;
  t.input.lastKeyCode === 8 && Date.now() - 100 < t.input.lastKeyCodeTime ? (f = t.state.selection.to, p = "end") : (f = t.state.selection.from, p = "start"), t.input.lastKeyCode = null;
  let h = rz(u.content, d.doc.content, d.from, f, p);
  if (h && t.input.domChangeCount++, (ar && t.input.lastIOSEnter > Date.now() - 225 || Sn) && i.some((B) => B.nodeType == 1 && !ez.test(B.nodeName)) && (!h || h.endA >= h.endB) && t.someProp("handleKeyDown", (B) => B(t, ho(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (!h)
    if (o && s instanceof he && !s.empty && s.$head.sameParent(s.$anchor) && !t.composing && !(d.sel && d.sel.anchor != d.sel.head))
      h = { start: s.from, endA: s.to, endB: s.to };
    else {
      if (d.sel) {
        let B = Zf(t, t.state.doc, d.sel);
        if (B && !B.eq(t.state.selection)) {
          let H = t.state.tr.setSelection(B);
          r && H.setMeta("composition", r), t.dispatch(H);
        }
      }
      return;
    }
  t.state.selection.from < t.state.selection.to && h.start == h.endB && t.state.selection instanceof he && (h.start > t.state.selection.from && h.start <= t.state.selection.from + 2 && t.state.selection.from >= d.from ? h.start = t.state.selection.from : h.endA < t.state.selection.to && h.endA >= t.state.selection.to - 2 && t.state.selection.to <= d.to && (h.endB += t.state.selection.to - h.endA, h.endA = t.state.selection.to)), It && Jn <= 11 && h.endB == h.start + 1 && h.endA == h.start && h.start > d.from && d.doc.textBetween(h.start - d.from - 1, h.start - d.from + 1) == "  " && (h.start--, h.endA--, h.endB--);
  let g = d.doc.resolveNoCache(h.start - d.from), b = d.doc.resolveNoCache(h.endB - d.from), C = c.resolve(h.start), x = g.sameParent(b) && g.parent.inlineContent && C.end() >= h.endA, R;
  if ((ar && t.input.lastIOSEnter > Date.now() - 225 && (!x || i.some((B) => B.nodeName == "DIV" || B.nodeName == "P")) || !x && g.pos < d.doc.content.size && (!g.sameParent(b) || !g.parent.inlineContent) && !/\S/.test(d.doc.textBetween(g.pos, b.pos, "", "")) && (R = ve.findFrom(d.doc.resolve(g.pos + 1), 1, !0)) && R.head > g.pos) && t.someProp("handleKeyDown", (B) => B(t, ho(13, "Enter")))) {
    t.input.lastIOSEnter = 0;
    return;
  }
  if (t.state.selection.anchor > h.start && oz(c, h.start, h.endA, g, b) && t.someProp("handleKeyDown", (B) => B(t, ho(8, "Backspace")))) {
    Sn && ht && t.domObserver.suppressSelectionUpdates();
    return;
  }
  ht && h.endB == h.start && (t.input.lastChromeDelete = Date.now()), Sn && !x && g.start() != b.start() && b.parentOffset == 0 && g.depth == b.depth && d.sel && d.sel.anchor == d.sel.head && d.sel.head == h.endA && (h.endB -= 2, b = d.doc.resolveNoCache(h.endB - d.from), setTimeout(() => {
    t.someProp("handleKeyDown", function(B) {
      return B(t, ho(13, "Enter"));
    });
  }, 20));
  let w = h.start, T = h.endA, S = (B) => {
    let H = B || t.state.tr.replace(w, T, d.doc.slice(h.start - d.from, h.endB - d.from));
    if (d.sel) {
      let K = Zf(t, H.doc, d.sel);
      K && !(ht && t.composing && K.empty && (h.start != h.endB || t.input.lastChromeDelete < Date.now() - 100) && (K.head == w || K.head == H.mapping.map(T) - 1) || It && K.empty && K.head == w) && H.setSelection(K);
    }
    return r && H.setMeta("composition", r), H.scrollIntoView();
  }, I;
  if (x) {
    if (g.pos == b.pos) {
      It && Jn <= 11 && g.parentOffset == 0 && (t.domObserver.suppressSelectionUpdates(), setTimeout(() => $n(t), 20));
      let B = S(t.state.tr.delete(w, T)), H = c.resolve(h.start).marksAcross(c.resolve(h.endA));
      H && B.ensureMarks(H), t.dispatch(B);
    } else if (
      // Adding or removing a mark
      h.endA == h.endB && (I = nz(g.parent.content.cut(g.parentOffset, b.parentOffset), C.parent.content.cut(C.parentOffset, h.endA - C.start())))
    ) {
      let B = S(t.state.tr);
      I.type == "add" ? B.addMark(w, T, I.mark) : B.removeMark(w, T, I.mark), t.dispatch(B);
    } else if (g.parent.child(g.index()).isText && g.index() == b.index() - (b.textOffset ? 0 : 1)) {
      let B = g.parent.textBetween(g.parentOffset, b.parentOffset), H = () => S(t.state.tr.insertText(B, w, T));
      t.someProp("handleTextInput", (K) => K(t, w, T, B, H)) || t.dispatch(H());
    }
  } else
    t.dispatch(S());
}
function Zf(t, e, n) {
  return Math.max(n.anchor, n.head) > e.content.size ? null : Lc(t, e.resolve(n.anchor), e.resolve(n.head));
}
function nz(t, e) {
  let n = t.firstChild.marks, o = e.firstChild.marks, i = n, r = o, a, l, s;
  for (let c = 0; c < o.length; c++)
    i = o[c].removeFromSet(i);
  for (let c = 0; c < n.length; c++)
    r = n[c].removeFromSet(r);
  if (i.length == 1 && r.length == 0)
    l = i[0], a = "add", s = (c) => c.mark(l.addToSet(c.marks));
  else if (i.length == 0 && r.length == 1)
    l = r[0], a = "remove", s = (c) => c.mark(l.removeFromSet(c.marks));
  else
    return null;
  let d = [];
  for (let c = 0; c < e.childCount; c++)
    d.push(s(e.child(c)));
  if (N.from(d).eq(t))
    return { mark: l, type: a };
}
function oz(t, e, n, o, i) {
  if (
    // The content must have shrunk
    n - e <= i.pos - o.pos || // newEnd must point directly at or after the end of the block that newStart points into
    bs(o, !0, !1) < i.pos
  )
    return !1;
  let r = t.resolve(e);
  if (!o.parent.isTextblock) {
    let l = r.nodeAfter;
    return l != null && n == e + l.nodeSize;
  }
  if (r.parentOffset < r.parent.content.size || !r.parent.isTextblock)
    return !1;
  let a = t.resolve(bs(r, !0, !0));
  return !a.parent.isTextblock || a.pos > n || bs(a, !0, !1) < n ? !1 : o.parent.content.cut(o.parentOffset).eq(a.parent.content);
}
function bs(t, e, n) {
  let o = t.depth, i = e ? t.end() : t.pos;
  for (; o > 0 && (e || t.indexAfter(o) == t.node(o).childCount); )
    o--, i++, e = !1;
  if (n) {
    let r = t.node(o).maybeChild(t.indexAfter(o));
    for (; r && !r.isLeaf; )
      r = r.firstChild, i++;
  }
  return i;
}
function rz(t, e, n, o, i) {
  let r = t.findDiffStart(e, n);
  if (r == null)
    return null;
  let { a, b: l } = t.findDiffEnd(e, n + t.size, n + e.size);
  if (i == "end") {
    let s = Math.max(0, r - Math.min(a, l));
    o -= a + s - r;
  }
  if (a < r && t.size < e.size) {
    let s = o <= r && o >= a ? r - o : 0;
    r -= s, r && r < e.size && Qf(e.textBetween(r - 1, r + 1)) && (r += s ? 1 : -1), l = r + (l - a), a = r;
  } else if (l < r) {
    let s = o <= r && o >= l ? r - o : 0;
    r -= s, r && r < t.size && Qf(t.textBetween(r - 1, r + 1)) && (r += s ? 1 : -1), a = r + (a - l), l = r;
  }
  return { start: r, endA: a, endB: l };
}
function Qf(t) {
  if (t.length != 2)
    return !1;
  let e = t.charCodeAt(0), n = t.charCodeAt(1);
  return e >= 56320 && e <= 57343 && n >= 55296 && n <= 56319;
}
class qb {
  /**
  Create a view. `place` may be a DOM node that the editor should
  be appended to, a function that will place it into the document,
  or an object whose `mount` property holds the node to use as the
  document container. If it is `null`, the editor will not be
  added to the document.
  */
  constructor(e, n) {
    this._root = null, this.focused = !1, this.trackWrites = null, this.mounted = !1, this.markCursor = null, this.cursorWrapper = null, this.lastSelectedViewDesc = void 0, this.input = new xL(), this.prevDirectPlugins = [], this.pluginViews = [], this.requiresGeckoHackNode = !1, this.dragging = null, this._props = n, this.state = n.state, this.directPlugins = n.plugins || [], this.directPlugins.forEach(rh), this.dispatch = this.dispatch.bind(this), this.dom = e && e.mount || document.createElement("div"), e && (e.appendChild ? e.appendChild(this.dom) : typeof e == "function" ? e(this.dom) : e.mount && (this.mounted = !0)), this.editable = nh(this), th(this), this.nodeViews = oh(this), this.docView = Af(this.state.doc, eh(this), gs(this), this.dom, this), this.domObserver = new qL(this, (o, i, r, a) => tz(this, o, i, r, a)), this.domObserver.start(), SL(this), this.updatePluginViews();
  }
  /**
  Holds `true` when a
  [composition](https://w3c.github.io/uievents/#events-compositionevents)
  is active.
  */
  get composing() {
    return this.input.composing;
  }
  /**
  The view's current [props](https://prosemirror.net/docs/ref/#view.EditorProps).
  */
  get props() {
    if (this._props.state != this.state) {
      let e = this._props;
      this._props = {};
      for (let n in e)
        this._props[n] = e[n];
      this._props.state = this.state;
    }
    return this._props;
  }
  /**
  Update the view's props. Will immediately cause an update to
  the DOM.
  */
  update(e) {
    e.handleDOMEvents != this._props.handleDOMEvents && Qd(this);
    let n = this._props;
    this._props = e, e.plugins && (e.plugins.forEach(rh), this.directPlugins = e.plugins), this.updateStateInner(e.state, n);
  }
  /**
  Update the view by updating existing props object with the object
  given as argument. Equivalent to `view.update(Object.assign({},
  view.props, props))`.
  */
  setProps(e) {
    let n = {};
    for (let o in this._props)
      n[o] = this._props[o];
    n.state = this.state;
    for (let o in e)
      n[o] = e[o];
    this.update(n);
  }
  /**
  Update the editor's `state` prop, without touching any of the
  other props.
  */
  updateState(e) {
    this.updateStateInner(e, this._props);
  }
  updateStateInner(e, n) {
    var o;
    let i = this.state, r = !1, a = !1;
    e.storedMarks && this.composing && (Vb(this), a = !0), this.state = e;
    let l = i.plugins != e.plugins || this._props.plugins != n.plugins;
    if (l || this._props.plugins != n.plugins || this._props.nodeViews != n.nodeViews) {
      let p = oh(this);
      az(p, this.nodeViews) && (this.nodeViews = p, r = !0);
    }
    (l || n.handleDOMEvents != this._props.handleDOMEvents) && Qd(this), this.editable = nh(this), th(this);
    let s = gs(this), d = eh(this), c = i.plugins != e.plugins && !i.doc.eq(e.doc) ? "reset" : e.scrollToSelection > i.scrollToSelection ? "to selection" : "preserve", u = r || !this.docView.matchesNode(e.doc, d, s);
    (u || !e.selection.eq(i.selection)) && (a = !0);
    let f = c == "preserve" && a && this.dom.style.overflowAnchor == null && FD(this);
    if (a) {
      this.domObserver.stop();
      let p = u && (It || ht) && !this.composing && !i.selection.empty && !e.selection.empty && iz(i.selection, e.selection);
      if (u) {
        let h = ht ? this.trackWrites = this.domSelectionRange().focusNode : null;
        this.composing && (this.input.compositionNode = zL(this)), (r || !this.docView.update(e.doc, d, s, this)) && (this.docView.updateOuterDeco(d), this.docView.destroy(), this.docView = Af(e.doc, d, s, this.dom, this)), h && !this.trackWrites && (p = !0);
      }
      p || !(this.input.mouseDown && this.domObserver.currentSelection.eq(this.domSelectionRange()) && sL(this)) ? $n(this, p) : (Tb(this, e.selection), this.domObserver.setCurSelection()), this.domObserver.start();
    }
    this.updatePluginViews(i), !((o = this.dragging) === null || o === void 0) && o.node && !i.doc.eq(e.doc) && this.updateDraggedNode(this.dragging, i), c == "reset" ? this.dom.scrollTop = 0 : c == "to selection" ? this.scrollToSelection() : f && ND(f);
  }
  /**
  @internal
  */
  scrollToSelection() {
    let e = this.domSelectionRange().focusNode;
    if (!(!e || !this.dom.contains(e.nodeType == 1 ? e : e.parentNode))) {
      if (!this.someProp("handleScrollToSelection", (n) => n(this))) if (this.state.selection instanceof oe) {
        let n = this.docView.domAfterPos(this.state.selection.from);
        n.nodeType == 1 && $f(this, n.getBoundingClientRect(), e);
      } else
        $f(this, this.coordsAtPos(this.state.selection.head, 1), e);
    }
  }
  destroyPluginViews() {
    let e;
    for (; e = this.pluginViews.pop(); )
      e.destroy && e.destroy();
  }
  updatePluginViews(e) {
    if (!e || e.plugins != this.state.plugins || this.directPlugins != this.prevDirectPlugins) {
      this.prevDirectPlugins = this.directPlugins, this.destroyPluginViews();
      for (let n = 0; n < this.directPlugins.length; n++) {
        let o = this.directPlugins[n];
        o.spec.view && this.pluginViews.push(o.spec.view(this));
      }
      for (let n = 0; n < this.state.plugins.length; n++) {
        let o = this.state.plugins[n];
        o.spec.view && this.pluginViews.push(o.spec.view(this));
      }
    } else
      for (let n = 0; n < this.pluginViews.length; n++) {
        let o = this.pluginViews[n];
        o.update && o.update(this, e);
      }
  }
  updateDraggedNode(e, n) {
    let o = e.node, i = -1;
    if (this.state.doc.nodeAt(o.from) == o.node)
      i = o.from;
    else {
      let r = o.from + (this.state.doc.content.size - n.doc.content.size);
      (r > 0 && this.state.doc.nodeAt(r)) == o.node && (i = r);
    }
    this.dragging = new Kb(e.slice, e.move, i < 0 ? void 0 : oe.create(this.state.doc, i));
  }
  someProp(e, n) {
    let o = this._props && this._props[e], i;
    if (o != null && (i = n ? n(o) : o))
      return i;
    for (let a = 0; a < this.directPlugins.length; a++) {
      let l = this.directPlugins[a].props[e];
      if (l != null && (i = n ? n(l) : l))
        return i;
    }
    let r = this.state.plugins;
    if (r)
      for (let a = 0; a < r.length; a++) {
        let l = r[a].props[e];
        if (l != null && (i = n ? n(l) : l))
          return i;
      }
  }
  /**
  Query whether the view has focus.
  */
  hasFocus() {
    if (It) {
      let e = this.root.activeElement;
      if (e == this.dom)
        return !0;
      if (!e || !this.dom.contains(e))
        return !1;
      for (; e && this.dom != e && this.dom.contains(e); ) {
        if (e.contentEditable == "false")
          return !1;
        e = e.parentElement;
      }
      return !0;
    }
    return this.root.activeElement == this.dom;
  }
  /**
  Focus the editor.
  */
  focus() {
    this.domObserver.stop(), this.editable && jD(this.dom), $n(this), this.domObserver.start();
  }
  /**
  Get the document root in which the editor exists. This will
  usually be the top-level `document`, but might be a [shadow
  DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Shadow_DOM)
  root if the editor is inside one.
  */
  get root() {
    let e = this._root;
    if (e == null) {
      for (let n = this.dom.parentNode; n; n = n.parentNode)
        if (n.nodeType == 9 || n.nodeType == 11 && n.host)
          return n.getSelection || (Object.getPrototypeOf(n).getSelection = () => n.ownerDocument.getSelection()), this._root = n;
    }
    return e || document;
  }
  /**
  When an existing editor view is moved to a new document or
  shadow tree, call this to make it recompute its root.
  */
  updateRoot() {
    this._root = null;
  }
  /**
  Given a pair of viewport coordinates, return the document
  position that corresponds to them. May return null if the given
  coordinates aren't inside of the editor. When an object is
  returned, its `pos` property is the position nearest to the
  coordinates, and its `inside` property holds the position of the
  inner node that the position falls inside of, or -1 if it is at
  the top level, not in any node.
  */
  posAtCoords(e) {
    return WD(this, e);
  }
  /**
  Returns the viewport rectangle at a given document position.
  `left` and `right` will be the same number, as this returns a
  flat cursor-ish rectangle. If the position is between two things
  that aren't directly adjacent, `side` determines which element
  is used. When < 0, the element before the position is used,
  otherwise the element after.
  */
  coordsAtPos(e, n = 1) {
    return wb(this, e, n);
  }
  /**
  Find the DOM position that corresponds to the given document
  position. When `side` is negative, find the position as close as
  possible to the content before the position. When positive,
  prefer positions close to the content after the position. When
  zero, prefer as shallow a position as possible.
  
  Note that you should **not** mutate the editor's internal DOM,
  only inspect it (and even that is usually not necessary).
  */
  domAtPos(e, n = 0) {
    return this.docView.domFromPos(e, n);
  }
  /**
  Find the DOM node that represents the document node after the
  given position. May return `null` when the position doesn't point
  in front of a node or if the node is inside an opaque node view.
  
  This is intended to be able to call things like
  `getBoundingClientRect` on that DOM node. Do **not** mutate the
  editor DOM directly, or add styling this way, since that will be
  immediately overriden by the editor as it redraws the node.
  */
  nodeDOM(e) {
    let n = this.docView.descAt(e);
    return n ? n.nodeDOM : null;
  }
  /**
  Find the document position that corresponds to a given DOM
  position. (Whenever possible, it is preferable to inspect the
  document structure directly, rather than poking around in the
  DOM, but sometimes—for example when interpreting an event
  target—you don't have a choice.)
  
  The `bias` parameter can be used to influence which side of a DOM
  node to use when the position is inside a leaf node.
  */
  posAtDOM(e, n, o = -1) {
    let i = this.docView.posFromDOM(e, n, o);
    if (i == null)
      throw new RangeError("DOM position not inside the editor");
    return i;
  }
  /**
  Find out whether the selection is at the end of a textblock when
  moving in a given direction. When, for example, given `"left"`,
  it will return true if moving left from the current cursor
  position would leave that position's parent textblock. Will apply
  to the view's current state by default, but it is possible to
  pass a different state.
  */
  endOfTextblock(e, n) {
    return YD(this, n || this.state, e);
  }
  /**
  Run the editor's paste logic with the given HTML string. The
  `event`, if given, will be passed to the
  [`handlePaste`](https://prosemirror.net/docs/ref/#view.EditorProps.handlePaste) hook.
  */
  pasteHTML(e, n) {
    return Ui(this, "", e, !1, n || new ClipboardEvent("paste"));
  }
  /**
  Run the editor's paste logic with the given plain-text input.
  */
  pasteText(e, n) {
    return Ui(this, e, null, !0, n || new ClipboardEvent("paste"));
  }
  /**
  Serialize the given slice as it would be if it was copied from
  this editor. Returns a DOM element that contains a
  representation of the slice as its children, a textual
  representation, and the transformed slice (which can be
  different from the given input due to hooks like
  [`transformCopied`](https://prosemirror.net/docs/ref/#view.EditorProps.transformCopied)).
  */
  serializeForClipboard(e) {
    return zc(this, e);
  }
  /**
  Removes the editor from the DOM and destroys all [node
  views](https://prosemirror.net/docs/ref/#view.NodeView).
  */
  destroy() {
    this.docView && (IL(this), this.destroyPluginViews(), this.mounted ? (this.docView.update(this.state.doc, [], gs(this), this), this.dom.textContent = "") : this.dom.parentNode && this.dom.parentNode.removeChild(this.dom), this.docView.destroy(), this.docView = null, PD());
  }
  /**
  This is true when the view has been
  [destroyed](https://prosemirror.net/docs/ref/#view.EditorView.destroy) (and thus should not be
  used anymore).
  */
  get isDestroyed() {
    return this.docView == null;
  }
  /**
  Used for testing.
  */
  dispatchEvent(e) {
    return PL(this, e);
  }
  /**
  @internal
  */
  domSelectionRange() {
    let e = this.domSelection();
    return e ? kt && this.root.nodeType === 11 && ED(this.dom.ownerDocument) == this.dom && YL(this, e) || e : { focusNode: null, focusOffset: 0, anchorNode: null, anchorOffset: 0 };
  }
  /**
  @internal
  */
  domSelection() {
    return this.root.getSelection();
  }
}
qb.prototype.dispatch = function(t) {
  let e = this._props.dispatchTransaction;
  e ? e.call(this, t) : this.updateState(this.state.apply(t));
};
function eh(t) {
  let e = /* @__PURE__ */ Object.create(null);
  return e.class = "ProseMirror", e.contenteditable = String(t.editable), t.someProp("attributes", (n) => {
    if (typeof n == "function" && (n = n(t.state)), n)
      for (let o in n)
        o == "class" ? e.class += " " + n[o] : o == "style" ? e.style = (e.style ? e.style + ";" : "") + n[o] : !e[o] && o != "contenteditable" && o != "nodeName" && (e[o] = String(n[o]));
  }), e.translate || (e.translate = "no"), [_t.node(0, t.state.doc.content.size, e)];
}
function th(t) {
  if (t.markCursor) {
    let e = document.createElement("img");
    e.className = "ProseMirror-separator", e.setAttribute("mark-placeholder", "true"), e.setAttribute("alt", ""), t.cursorWrapper = { dom: e, deco: _t.widget(t.state.selection.from, e, { raw: !0, marks: t.markCursor }) };
  } else
    t.cursorWrapper = null;
}
function nh(t) {
  return !t.someProp("editable", (e) => e(t.state) === !1);
}
function iz(t, e) {
  let n = Math.min(t.$anchor.sharedDepth(t.head), e.$anchor.sharedDepth(e.head));
  return t.$anchor.start(n) != e.$anchor.start(n);
}
function oh(t) {
  let e = /* @__PURE__ */ Object.create(null);
  function n(o) {
    for (let i in o)
      Object.prototype.hasOwnProperty.call(e, i) || (e[i] = o[i]);
  }
  return t.someProp("nodeViews", n), t.someProp("markViews", n), e;
}
function az(t, e) {
  let n = 0, o = 0;
  for (let i in t) {
    if (t[i] != e[i])
      return !0;
    n++;
  }
  for (let i in e)
    o++;
  return n != o;
}
function rh(t) {
  if (t.spec.state || t.spec.filterTransaction || t.spec.appendTransaction)
    throw new RangeError("Plugins passed directly to the view must not have a state component");
}
var Qn = {
  8: "Backspace",
  9: "Tab",
  10: "Enter",
  12: "NumLock",
  13: "Enter",
  16: "Shift",
  17: "Control",
  18: "Alt",
  20: "CapsLock",
  27: "Escape",
  32: " ",
  33: "PageUp",
  34: "PageDown",
  35: "End",
  36: "Home",
  37: "ArrowLeft",
  38: "ArrowUp",
  39: "ArrowRight",
  40: "ArrowDown",
  44: "PrintScreen",
  45: "Insert",
  46: "Delete",
  59: ";",
  61: "=",
  91: "Meta",
  92: "Meta",
  106: "*",
  107: "+",
  108: ",",
  109: "-",
  110: ".",
  111: "/",
  144: "NumLock",
  145: "ScrollLock",
  160: "Shift",
  161: "Shift",
  162: "Control",
  163: "Control",
  164: "Alt",
  165: "Alt",
  173: "-",
  186: ";",
  187: "=",
  188: ",",
  189: "-",
  190: ".",
  191: "/",
  192: "`",
  219: "[",
  220: "\\",
  221: "]",
  222: "'"
}, ul = {
  48: ")",
  49: "!",
  50: "@",
  51: "#",
  52: "$",
  53: "%",
  54: "^",
  55: "&",
  56: "*",
  57: "(",
  59: ":",
  61: "+",
  173: "_",
  186: ":",
  187: "+",
  188: "<",
  189: "_",
  190: ">",
  191: "?",
  192: "~",
  219: "{",
  220: "|",
  221: "}",
  222: '"'
}, lz = typeof navigator < "u" && /Mac/.test(navigator.platform), sz = typeof navigator < "u" && /MSIE \d|Trident\/(?:[7-9]|\d{2,})\..*rv:(\d+)/.exec(navigator.userAgent);
for (var at = 0; at < 10; at++) Qn[48 + at] = Qn[96 + at] = String(at);
for (var at = 1; at <= 24; at++) Qn[at + 111] = "F" + at;
for (var at = 65; at <= 90; at++)
  Qn[at] = String.fromCharCode(at + 32), ul[at] = String.fromCharCode(at);
for (var vs in Qn) ul.hasOwnProperty(vs) || (ul[vs] = Qn[vs]);
function dz(t) {
  var e = lz && t.metaKey && t.shiftKey && !t.ctrlKey && !t.altKey || sz && t.shiftKey && t.key && t.key.length == 1 || t.key == "Unidentified", n = !e && t.key || (t.shiftKey ? ul : Qn)[t.keyCode] || t.key || "Unidentified";
  return n == "Esc" && (n = "Escape"), n == "Del" && (n = "Delete"), n == "Left" && (n = "ArrowLeft"), n == "Up" && (n = "ArrowUp"), n == "Right" && (n = "ArrowRight"), n == "Down" && (n = "ArrowDown"), n;
}
const cz = typeof navigator < "u" && /Mac|iP(hone|[oa]d)/.test(navigator.platform), uz = typeof navigator < "u" && /Win/.test(navigator.platform);
function pz(t) {
  let e = t.split(/-(?!$)/), n = e[e.length - 1];
  n == "Space" && (n = " ");
  let o, i, r, a;
  for (let l = 0; l < e.length - 1; l++) {
    let s = e[l];
    if (/^(cmd|meta|m)$/i.test(s))
      a = !0;
    else if (/^a(lt)?$/i.test(s))
      o = !0;
    else if (/^(c|ctrl|control)$/i.test(s))
      i = !0;
    else if (/^s(hift)?$/i.test(s))
      r = !0;
    else if (/^mod$/i.test(s))
      cz ? a = !0 : i = !0;
    else
      throw new Error("Unrecognized modifier name: " + s);
  }
  return o && (n = "Alt-" + n), i && (n = "Ctrl-" + n), a && (n = "Meta-" + n), r && (n = "Shift-" + n), n;
}
function fz(t) {
  let e = /* @__PURE__ */ Object.create(null);
  for (let n in t)
    e[pz(n)] = t[n];
  return e;
}
function ys(t, e, n = !0) {
  return e.altKey && (t = "Alt-" + t), e.ctrlKey && (t = "Ctrl-" + t), e.metaKey && (t = "Meta-" + t), n && e.shiftKey && (t = "Shift-" + t), t;
}
function hz(t) {
  return new dt({ props: { handleKeyDown: Jb(t) } });
}
function Jb(t) {
  let e = fz(t);
  return function(n, o) {
    let i = dz(o), r, a = e[ys(i, o)];
    if (a && a(n.state, n.dispatch, n))
      return !0;
    if (i.length == 1 && i != " ") {
      if (o.shiftKey) {
        let l = e[ys(i, o, !1)];
        if (l && l(n.state, n.dispatch, n))
          return !0;
      }
      if ((o.altKey || o.metaKey || o.ctrlKey) && // Ctrl-Alt may be used for AltGr on Windows
      !(uz && o.ctrlKey && o.altKey) && (r = Qn[o.keyCode]) && r != i) {
        let l = e[ys(r, o)];
        if (l && l(n.state, n.dispatch, n))
          return !0;
      }
    }
    return !1;
  };
}
const Kc = (t, e) => t.selection.empty ? !1 : (e && e(t.tr.deleteSelection().scrollIntoView()), !0);
function Yb(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("backward", t) : n.parentOffset > 0) ? null : n;
}
const Xb = (t, e, n) => {
  let o = Yb(t, n);
  if (!o)
    return !1;
  let i = Hc(o);
  if (!i) {
    let a = o.blockRange(), l = a && yr(a);
    return l == null ? !1 : (e && e(t.tr.lift(a, l).scrollIntoView()), !0);
  }
  let r = i.nodeBefore;
  if (a0(t, i, e, -1))
    return !0;
  if (o.parent.content.size == 0 && (lr(r, "end") || oe.isSelectable(r)))
    for (let a = o.depth; ; a--) {
      let l = Ml(t.doc, o.before(a), o.after(a), J.empty);
      if (l && l.slice.size < l.to - l.from) {
        if (e) {
          let s = t.tr.step(l);
          s.setSelection(lr(r, "end") ? ve.findFrom(s.doc.resolve(s.mapping.map(i.pos, -1)), -1) : oe.create(s.doc, i.pos - r.nodeSize)), e(s.scrollIntoView());
        }
        return !0;
      }
      if (a == 1 || o.node(a - 1).childCount > 1)
        break;
    }
  return r.isAtom && i.depth == o.depth - 1 ? (e && e(t.tr.delete(i.pos - r.nodeSize, i.pos).scrollIntoView()), !0) : !1;
}, mz = (t, e, n) => {
  let o = Yb(t, n);
  if (!o)
    return !1;
  let i = Hc(o);
  return i ? Zb(t, i, e) : !1;
}, gz = (t, e, n) => {
  let o = e0(t, n);
  if (!o)
    return !1;
  let i = Wc(o);
  return i ? Zb(t, i, e) : !1;
};
function Zb(t, e, n) {
  let o = e.nodeBefore, i = o, r = e.pos - 1;
  for (; !i.isTextblock; r--) {
    if (i.type.spec.isolating)
      return !1;
    let c = i.lastChild;
    if (!c)
      return !1;
    i = c;
  }
  let a = e.nodeAfter, l = a, s = e.pos + 1;
  for (; !l.isTextblock; s++) {
    if (l.type.spec.isolating)
      return !1;
    let c = l.firstChild;
    if (!c)
      return !1;
    l = c;
  }
  let d = Ml(t.doc, r, s, J.empty);
  if (!d || d.from != r || d instanceof Ye && d.slice.size >= s - r)
    return !1;
  if (n) {
    let c = t.tr.step(d);
    c.setSelection(he.create(c.doc, r)), n(c.scrollIntoView());
  }
  return !0;
}
function lr(t, e, n = !1) {
  for (let o = t; o; o = e == "start" ? o.firstChild : o.lastChild) {
    if (o.isTextblock)
      return !0;
    if (n && o.childCount != 1)
      return !1;
  }
  return !1;
}
const Qb = (t, e, n) => {
  let { $head: o, empty: i } = t.selection, r = o;
  if (!i)
    return !1;
  if (o.parent.isTextblock) {
    if (n ? !n.endOfTextblock("backward", t) : o.parentOffset > 0)
      return !1;
    r = Hc(o);
  }
  let a = r && r.nodeBefore;
  return !a || !oe.isSelectable(a) ? !1 : (e && e(t.tr.setSelection(oe.create(t.doc, r.pos - a.nodeSize)).scrollIntoView()), !0);
};
function Hc(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      if (t.index(e) > 0)
        return t.doc.resolve(t.before(e + 1));
      if (t.node(e).type.spec.isolating)
        break;
    }
  return null;
}
function e0(t, e) {
  let { $cursor: n } = t.selection;
  return !n || (e ? !e.endOfTextblock("forward", t) : n.parentOffset < n.parent.content.size) ? null : n;
}
const t0 = (t, e, n) => {
  let o = e0(t, n);
  if (!o)
    return !1;
  let i = Wc(o);
  if (!i)
    return !1;
  let r = i.nodeAfter;
  if (a0(t, i, e, 1))
    return !0;
  if (o.parent.content.size == 0 && (lr(r, "start") || oe.isSelectable(r))) {
    let a = Ml(t.doc, o.before(), o.after(), J.empty);
    if (a && a.slice.size < a.to - a.from) {
      if (e) {
        let l = t.tr.step(a);
        l.setSelection(lr(r, "start") ? ve.findFrom(l.doc.resolve(l.mapping.map(i.pos)), 1) : oe.create(l.doc, l.mapping.map(i.pos))), e(l.scrollIntoView());
      }
      return !0;
    }
  }
  return r.isAtom && i.depth == o.depth - 1 ? (e && e(t.tr.delete(i.pos, i.pos + r.nodeSize).scrollIntoView()), !0) : !1;
}, n0 = (t, e, n) => {
  let { $head: o, empty: i } = t.selection, r = o;
  if (!i)
    return !1;
  if (o.parent.isTextblock) {
    if (n ? !n.endOfTextblock("forward", t) : o.parentOffset < o.parent.content.size)
      return !1;
    r = Wc(o);
  }
  let a = r && r.nodeAfter;
  return !a || !oe.isSelectable(a) ? !1 : (e && e(t.tr.setSelection(oe.create(t.doc, r.pos)).scrollIntoView()), !0);
};
function Wc(t) {
  if (!t.parent.type.spec.isolating)
    for (let e = t.depth - 1; e >= 0; e--) {
      let n = t.node(e);
      if (t.index(e) + 1 < n.childCount)
        return t.doc.resolve(t.after(e + 1));
      if (n.type.spec.isolating)
        break;
    }
  return null;
}
const bz = (t, e) => {
  let n = t.selection, o = n instanceof oe, i;
  if (o) {
    if (n.node.isTextblock || !to(t.doc, n.from))
      return !1;
    i = n.from;
  } else if (i = El(t.doc, n.from, -1), i == null)
    return !1;
  if (e) {
    let r = t.tr.join(i);
    o && r.setSelection(oe.create(r.doc, i - t.doc.resolve(i).nodeBefore.nodeSize)), e(r.scrollIntoView());
  }
  return !0;
}, vz = (t, e) => {
  let n = t.selection, o;
  if (n instanceof oe) {
    if (n.node.isTextblock || !to(t.doc, n.to))
      return !1;
    o = n.to;
  } else if (o = El(t.doc, n.to, 1), o == null)
    return !1;
  return e && e(t.tr.join(o).scrollIntoView()), !0;
}, yz = (t, e) => {
  let { $from: n, $to: o } = t.selection, i = n.blockRange(o), r = i && yr(i);
  return r == null ? !1 : (e && e(t.tr.lift(i, r).scrollIntoView()), !0);
}, o0 = (t, e) => {
  let { $head: n, $anchor: o } = t.selection;
  return !n.parent.type.spec.code || !n.sameParent(o) ? !1 : (e && e(t.tr.insertText(`
`).scrollIntoView()), !0);
};
function Uc(t) {
  for (let e = 0; e < t.edgeCount; e++) {
    let { type: n } = t.edge(e);
    if (n.isTextblock && !n.hasRequiredAttrs())
      return n;
  }
  return null;
}
const kz = (t, e) => {
  let { $head: n, $anchor: o } = t.selection;
  if (!n.parent.type.spec.code || !n.sameParent(o))
    return !1;
  let i = n.node(-1), r = n.indexAfter(-1), a = Uc(i.contentMatchAt(r));
  if (!a || !i.canReplaceWith(r, r, a))
    return !1;
  if (e) {
    let l = n.after(), s = t.tr.replaceWith(l, l, a.createAndFill());
    s.setSelection(ve.near(s.doc.resolve(l), 1)), e(s.scrollIntoView());
  }
  return !0;
}, r0 = (t, e) => {
  let n = t.selection, { $from: o, $to: i } = n;
  if (n instanceof Mt || o.parent.inlineContent || i.parent.inlineContent)
    return !1;
  let r = Uc(i.parent.contentMatchAt(i.indexAfter()));
  if (!r || !r.isTextblock)
    return !1;
  if (e) {
    let a = (!o.parentOffset && i.index() < i.parent.childCount ? o : i).pos, l = t.tr.insert(a, r.createAndFill());
    l.setSelection(he.create(l.doc, a + 1)), e(l.scrollIntoView());
  }
  return !0;
}, i0 = (t, e) => {
  let { $cursor: n } = t.selection;
  if (!n || n.parent.content.size)
    return !1;
  if (n.depth > 1 && n.after() != n.end(-1)) {
    let r = n.before();
    if (Pn(t.doc, r))
      return e && e(t.tr.split(r).scrollIntoView()), !0;
  }
  let o = n.blockRange(), i = o && yr(o);
  return i == null ? !1 : (e && e(t.tr.lift(o, i).scrollIntoView()), !0);
};
function wz(t) {
  return (e, n) => {
    let { $from: o, $to: i } = e.selection;
    if (e.selection instanceof oe && e.selection.node.isBlock)
      return !o.parentOffset || !Pn(e.doc, o.pos) ? !1 : (n && n(e.tr.split(o.pos).scrollIntoView()), !0);
    if (!o.depth)
      return !1;
    let r = [], a, l, s = !1, d = !1;
    for (let p = o.depth; ; p--)
      if (o.node(p).isBlock) {
        s = o.end(p) == o.pos + (o.depth - p), d = o.start(p) == o.pos - (o.depth - p), l = Uc(o.node(p - 1).contentMatchAt(o.indexAfter(p - 1))), r.unshift(s && l ? { type: l } : null), a = p;
        break;
      } else {
        if (p == 1)
          return !1;
        r.unshift(null);
      }
    let c = e.tr;
    (e.selection instanceof he || e.selection instanceof Mt) && c.deleteSelection();
    let u = c.mapping.map(o.pos), f = Pn(c.doc, u, r.length, r);
    if (f || (r[0] = l ? { type: l } : null, f = Pn(c.doc, u, r.length, r)), !f)
      return !1;
    if (c.split(u, r.length, r), !s && d && o.node(a).type != l) {
      let p = c.mapping.map(o.before(a)), h = c.doc.resolve(p);
      l && o.node(a - 1).canReplaceWith(h.index(), h.index() + 1, l) && c.setNodeMarkup(c.mapping.map(o.before(a)), l);
    }
    return n && n(c.scrollIntoView()), !0;
  };
}
const Cz = wz(), xz = (t, e) => {
  let { $from: n, to: o } = t.selection, i, r = n.sharedDepth(o);
  return r == 0 ? !1 : (i = n.before(r), e && e(t.tr.setSelection(oe.create(t.doc, i))), !0);
};
function Sz(t, e, n) {
  let o = e.nodeBefore, i = e.nodeAfter, r = e.index();
  return !o || !i || !o.type.compatibleContent(i.type) ? !1 : !o.content.size && e.parent.canReplace(r - 1, r) ? (n && n(t.tr.delete(e.pos - o.nodeSize, e.pos).scrollIntoView()), !0) : !e.parent.canReplace(r, r + 1) || !(i.isTextblock || to(t.doc, e.pos)) ? !1 : (n && n(t.tr.join(e.pos).scrollIntoView()), !0);
}
function a0(t, e, n, o) {
  let i = e.nodeBefore, r = e.nodeAfter, a, l, s = i.type.spec.isolating || r.type.spec.isolating;
  if (!s && Sz(t, e, n))
    return !0;
  let d = !s && e.parent.canReplace(e.index(), e.index() + 1);
  if (d && (a = (l = i.contentMatchAt(i.childCount)).findWrapping(r.type)) && l.matchType(a[0] || r.type).validEnd) {
    if (n) {
      let p = e.pos + r.nodeSize, h = N.empty;
      for (let C = a.length - 1; C >= 0; C--)
        h = N.from(a[C].create(null, h));
      h = N.from(i.copy(h));
      let g = t.tr.step(new Ze(e.pos - 1, p, e.pos, p, new J(h, 1, 0), a.length, !0)), b = g.doc.resolve(p + 2 * a.length);
      b.nodeAfter && b.nodeAfter.type == i.type && to(g.doc, b.pos) && g.join(b.pos), n(g.scrollIntoView());
    }
    return !0;
  }
  let c = r.type.spec.isolating || o > 0 && s ? null : ve.findFrom(e, 1), u = c && c.$from.blockRange(c.$to), f = u && yr(u);
  if (f != null && f >= e.depth)
    return n && n(t.tr.lift(u, f).scrollIntoView()), !0;
  if (d && lr(r, "start", !0) && lr(i, "end")) {
    let p = i, h = [];
    for (; h.push(p), !p.isTextblock; )
      p = p.lastChild;
    let g = r, b = 1;
    for (; !g.isTextblock; g = g.firstChild)
      b++;
    if (p.canReplace(p.childCount, p.childCount, g.content)) {
      if (n) {
        let C = N.empty;
        for (let R = h.length - 1; R >= 0; R--)
          C = N.from(h[R].copy(C));
        let x = t.tr.step(new Ze(e.pos - h.length, e.pos + r.nodeSize, e.pos + b, e.pos + r.nodeSize - b, new J(C, h.length, 0), 0, !0));
        n(x.scrollIntoView());
      }
      return !0;
    }
  }
  return !1;
}
function l0(t) {
  return function(e, n) {
    let o = e.selection, i = t < 0 ? o.$from : o.$to, r = i.depth;
    for (; i.node(r).isInline; ) {
      if (!r)
        return !1;
      r--;
    }
    return i.node(r).isTextblock ? (n && n(e.tr.setSelection(he.create(e.doc, t < 0 ? i.start(r) : i.end(r)))), !0) : !1;
  };
}
const Iz = l0(-1), Oz = l0(1);
function Pz(t, e = null) {
  return function(n, o) {
    let { $from: i, $to: r } = n.selection, a = i.blockRange(r), l = a && Ec(a, t, e);
    return l ? (o && o(n.tr.wrap(a, l).scrollIntoView()), !0) : !1;
  };
}
function ih(t, e = null) {
  return function(n, o) {
    let i = !1;
    for (let r = 0; r < n.selection.ranges.length && !i; r++) {
      let { $from: { pos: a }, $to: { pos: l } } = n.selection.ranges[r];
      n.doc.nodesBetween(a, l, (s, d) => {
        if (i)
          return !1;
        if (!(!s.isTextblock || s.hasMarkup(t, e)))
          if (s.type == t)
            i = !0;
          else {
            let c = n.doc.resolve(d), u = c.index();
            i = c.parent.canReplaceWith(u, u + 1, t);
          }
      });
    }
    if (!i)
      return !1;
    if (o) {
      let r = n.tr;
      for (let a = 0; a < n.selection.ranges.length; a++) {
        let { $from: { pos: l }, $to: { pos: s } } = n.selection.ranges[a];
        r.setBlockType(l, s, t, e);
      }
      o(r.scrollIntoView());
    }
    return !0;
  };
}
function Gc(...t) {
  return function(e, n, o) {
    for (let i = 0; i < t.length; i++)
      if (t[i](e, n, o))
        return !0;
    return !1;
  };
}
Gc(Kc, Xb, Qb);
Gc(Kc, t0, n0);
Gc(o0, r0, i0, Cz);
typeof navigator < "u" ? /Mac|iP(hone|[oa]d)/.test(navigator.platform) : typeof os < "u" && os.platform && os.platform() == "darwin";
function $z(t, e = null) {
  return function(n, o) {
    let { $from: i, $to: r } = n.selection, a = i.blockRange(r);
    if (!a)
      return !1;
    let l = o ? n.tr : null;
    return Tz(l, a, t, e) ? (o && o(l.scrollIntoView()), !0) : !1;
  };
}
function Tz(t, e, n, o = null) {
  let i = !1, r = e, a = e.$from.doc;
  if (e.depth >= 2 && e.$from.node(e.depth - 1).type.compatibleContent(n) && e.startIndex == 0) {
    if (e.$from.index(e.depth - 1) == 0)
      return !1;
    let s = a.resolve(e.start - 2);
    r = new rl(s, s, e.depth), e.endIndex < e.parent.childCount && (e = new rl(e.$from, a.resolve(e.$to.end(e.depth)), e.depth)), i = !0;
  }
  let l = Ec(r, n, o, e);
  return l ? (t && Rz(t, e, l, i, n), !0) : !1;
}
function Rz(t, e, n, o, i) {
  let r = N.empty;
  for (let c = n.length - 1; c >= 0; c--)
    r = N.from(n[c].type.create(n[c].attrs, r));
  t.step(new Ze(e.start - (o ? 2 : 0), e.end, e.start, e.end, new J(r, 0, 0), n.length, !0));
  let a = 0;
  for (let c = 0; c < n.length; c++)
    n[c].type == i && (a = c + 1);
  let l = n.length - a, s = e.start + n.length - (o ? 2 : 0), d = e.parent;
  for (let c = e.startIndex, u = e.endIndex, f = !0; c < u; c++, f = !1)
    !f && Pn(t.doc, s, l) && (t.split(s, l), s += 2 * l), s += d.child(c).nodeSize;
  return t;
}
function Bz(t) {
  return function(e, n) {
    let { $from: o, $to: i } = e.selection, r = o.blockRange(i, (a) => a.childCount > 0 && a.firstChild.type == t);
    return r ? n ? o.node(r.depth - 1).type == t ? Ez(e, n, t, r) : Mz(e, n, r) : !0 : !1;
  };
}
function Ez(t, e, n, o) {
  let i = t.tr, r = o.end, a = o.$to.end(o.depth);
  r < a && (i.step(new Ze(r - 1, a, r, a, new J(N.from(n.create(null, o.parent.copy())), 1, 0), 1, !0)), o = new rl(i.doc.resolve(o.$from.pos), i.doc.resolve(a), o.depth));
  const l = yr(o);
  if (l == null)
    return !1;
  i.lift(o, l);
  let s = i.doc.resolve(i.mapping.map(r, -1) - 1);
  return to(i.doc, s.pos) && s.nodeBefore.type == s.nodeAfter.type && i.join(s.pos), e(i.scrollIntoView()), !0;
}
function Mz(t, e, n) {
  let o = t.tr, i = n.parent;
  for (let p = n.end, h = n.endIndex - 1, g = n.startIndex; h > g; h--)
    p -= i.child(h).nodeSize, o.delete(p - 1, p + 1);
  let r = o.doc.resolve(n.start), a = r.nodeAfter;
  if (o.mapping.map(n.end) != n.start + r.nodeAfter.nodeSize)
    return !1;
  let l = n.startIndex == 0, s = n.endIndex == i.childCount, d = r.node(-1), c = r.index(-1);
  if (!d.canReplace(c + (l ? 0 : 1), c + 1, a.content.append(s ? N.empty : N.from(i))))
    return !1;
  let u = r.pos, f = u + a.nodeSize;
  return o.step(new Ze(u - (l ? 1 : 0), f + (s ? 1 : 0), u + 1, f - 1, new J((l ? N.empty : N.from(i.copy(N.empty))).append(s ? N.empty : N.from(i.copy(N.empty))), l ? 0 : 1, s ? 0 : 1), l ? 0 : 1)), e(o.scrollIntoView()), !0;
}
function Az(t) {
  return function(e, n) {
    let { $from: o, $to: i } = e.selection, r = o.blockRange(i, (d) => d.childCount > 0 && d.firstChild.type == t);
    if (!r)
      return !1;
    let a = r.startIndex;
    if (a == 0)
      return !1;
    let l = r.parent, s = l.child(a - 1);
    if (s.type != t)
      return !1;
    if (n) {
      let d = s.lastChild && s.lastChild.type == l.type, c = N.from(d ? t.create() : null), u = new J(N.from(t.create(null, N.from(l.type.create(null, c)))), d ? 3 : 1, 0), f = r.start, p = r.end;
      n(e.tr.step(new Ze(f - (d ? 3 : 1), p, f, p, u, 1, !0)).scrollIntoView());
    }
    return !0;
  };
}
function Fl(t) {
  const { state: e, transaction: n } = t;
  let { selection: o } = n, { doc: i } = n, { storedMarks: r } = n;
  return {
    ...e,
    apply: e.apply.bind(e),
    applyTransaction: e.applyTransaction.bind(e),
    plugins: e.plugins,
    schema: e.schema,
    reconfigure: e.reconfigure.bind(e),
    toJSON: e.toJSON.bind(e),
    get storedMarks() {
      return r;
    },
    get selection() {
      return o;
    },
    get doc() {
      return i;
    },
    get tr() {
      return o = n.selection, i = n.doc, r = n.storedMarks, n;
    }
  };
}
class Nl {
  constructor(e) {
    this.editor = e.editor, this.rawCommands = this.editor.extensionManager.commands, this.customState = e.state;
  }
  get hasCustomState() {
    return !!this.customState;
  }
  get state() {
    return this.customState || this.editor.state;
  }
  get commands() {
    const { rawCommands: e, editor: n, state: o } = this, { view: i } = n, { tr: r } = o, a = this.buildProps(r);
    return Object.fromEntries(Object.entries(e).map(([l, s]) => [l, (...c) => {
      const u = s(...c)(a);
      return !r.getMeta("preventDispatch") && !this.hasCustomState && i.dispatch(r), u;
    }]));
  }
  get chain() {
    return () => this.createChain();
  }
  get can() {
    return () => this.createCan();
  }
  createChain(e, n = !0) {
    const { rawCommands: o, editor: i, state: r } = this, { view: a } = i, l = [], s = !!e, d = e || r.tr, c = () => (!s && n && !d.getMeta("preventDispatch") && !this.hasCustomState && a.dispatch(d), l.every((f) => f === !0)), u = {
      ...Object.fromEntries(Object.entries(o).map(([f, p]) => [f, (...g) => {
        const b = this.buildProps(d, n), C = p(...g)(b);
        return l.push(C), u;
      }])),
      run: c
    };
    return u;
  }
  createCan(e) {
    const { rawCommands: n, state: o } = this, i = !1, r = e || o.tr, a = this.buildProps(r, i);
    return {
      ...Object.fromEntries(Object.entries(n).map(([s, d]) => [s, (...c) => d(...c)({ ...a, dispatch: void 0 })])),
      chain: () => this.createChain(r, i)
    };
  }
  buildProps(e, n = !0) {
    const { rawCommands: o, editor: i, state: r } = this, { view: a } = i, l = {
      tr: e,
      editor: i,
      view: a,
      state: Fl({
        state: r,
        transaction: e
      }),
      dispatch: n ? () => {
      } : void 0,
      chain: () => this.createChain(e, n),
      can: () => this.createCan(e),
      get commands() {
        return Object.fromEntries(Object.entries(o).map(([s, d]) => [s, (...c) => d(...c)(l)]));
      }
    };
    return l;
  }
}
class Dz {
  constructor() {
    this.callbacks = {};
  }
  on(e, n) {
    return this.callbacks[e] || (this.callbacks[e] = []), this.callbacks[e].push(n), this;
  }
  emit(e, ...n) {
    const o = this.callbacks[e];
    return o && o.forEach((i) => i.apply(this, n)), this;
  }
  off(e, n) {
    const o = this.callbacks[e];
    return o && (n ? this.callbacks[e] = o.filter((i) => i !== n) : delete this.callbacks[e]), this;
  }
  once(e, n) {
    const o = (...i) => {
      this.off(e, o), n.apply(this, i);
    };
    return this.on(e, o);
  }
  removeAllListeners() {
    this.callbacks = {};
  }
}
function X(t, e, n) {
  return t.config[e] === void 0 && t.parent ? X(t.parent, e, n) : typeof t.config[e] == "function" ? t.config[e].bind({
    ...n,
    parent: t.parent ? X(t.parent, e, n) : null
  }) : t.config[e];
}
function jl(t) {
  const e = t.filter((i) => i.type === "extension"), n = t.filter((i) => i.type === "node"), o = t.filter((i) => i.type === "mark");
  return {
    baseExtensions: e,
    nodeExtensions: n,
    markExtensions: o
  };
}
function s0(t) {
  const e = [], { nodeExtensions: n, markExtensions: o } = jl(t), i = [...n, ...o], r = {
    default: null,
    rendered: !0,
    renderHTML: null,
    parseHTML: null,
    keepOnSplit: !0,
    isRequired: !1
  };
  return t.forEach((a) => {
    const l = {
      name: a.name,
      options: a.options,
      storage: a.storage,
      extensions: i
    }, s = X(a, "addGlobalAttributes", l);
    if (!s)
      return;
    s().forEach((c) => {
      c.types.forEach((u) => {
        Object.entries(c.attributes).forEach(([f, p]) => {
          e.push({
            type: u,
            name: f,
            attribute: {
              ...r,
              ...p
            }
          });
        });
      });
    });
  }), i.forEach((a) => {
    const l = {
      name: a.name,
      options: a.options,
      storage: a.storage
    }, s = X(a, "addAttributes", l);
    if (!s)
      return;
    const d = s();
    Object.entries(d).forEach(([c, u]) => {
      const f = {
        ...r,
        ...u
      };
      typeof (f == null ? void 0 : f.default) == "function" && (f.default = f.default()), f != null && f.isRequired && (f == null ? void 0 : f.default) === void 0 && delete f.default, e.push({
        type: a.name,
        name: c,
        attribute: f
      });
    });
  }), e;
}
function et(t, e) {
  if (typeof t == "string") {
    if (!e.nodes[t])
      throw Error(`There is no node type named '${t}'. Maybe you forgot to add the extension?`);
    return e.nodes[t];
  }
  return t;
}
function st(...t) {
  return t.filter((e) => !!e).reduce((e, n) => {
    const o = { ...e };
    return Object.entries(n).forEach(([i, r]) => {
      if (!o[i]) {
        o[i] = r;
        return;
      }
      if (i === "class") {
        const l = r ? String(r).split(" ") : [], s = o[i] ? o[i].split(" ") : [], d = l.filter((c) => !s.includes(c));
        o[i] = [...s, ...d].join(" ");
      } else if (i === "style") {
        const l = r ? r.split(";").map((c) => c.trim()).filter(Boolean) : [], s = o[i] ? o[i].split(";").map((c) => c.trim()).filter(Boolean) : [], d = /* @__PURE__ */ new Map();
        s.forEach((c) => {
          const [u, f] = c.split(":").map((p) => p.trim());
          d.set(u, f);
        }), l.forEach((c) => {
          const [u, f] = c.split(":").map((p) => p.trim());
          d.set(u, f);
        }), o[i] = Array.from(d.entries()).map(([c, u]) => `${c}: ${u}`).join("; ");
      } else
        o[i] = r;
    }), o;
  }, {});
}
function ec(t, e) {
  return e.filter((n) => n.type === t.type.name).filter((n) => n.attribute.rendered).map((n) => n.attribute.renderHTML ? n.attribute.renderHTML(t.attrs) || {} : {
    [n.name]: t.attrs[n.name]
  }).reduce((n, o) => st(n, o), {});
}
function d0(t) {
  return typeof t == "function";
}
function ye(t, e = void 0, ...n) {
  return d0(t) ? e ? t.bind(e)(...n) : t(...n) : t;
}
function Lz(t = {}) {
  return Object.keys(t).length === 0 && t.constructor === Object;
}
function zz(t) {
  return typeof t != "string" ? t : t.match(/^[+-]?(?:\d*\.)?\d+$/) ? Number(t) : t === "true" ? !0 : t === "false" ? !1 : t;
}
function ah(t, e) {
  return "style" in t ? t : {
    ...t,
    getAttrs: (n) => {
      const o = t.getAttrs ? t.getAttrs(n) : t.attrs;
      if (o === !1)
        return !1;
      const i = e.reduce((r, a) => {
        const l = a.attribute.parseHTML ? a.attribute.parseHTML(n) : zz(n.getAttribute(a.name));
        return l == null ? r : {
          ...r,
          [a.name]: l
        };
      }, {});
      return { ...o, ...i };
    }
  };
}
function lh(t) {
  return Object.fromEntries(
    // @ts-ignore
    Object.entries(t).filter(([e, n]) => e === "attrs" && Lz(n) ? !1 : n != null)
  );
}
function Fz(t, e) {
  var n;
  const o = s0(t), { nodeExtensions: i, markExtensions: r } = jl(t), a = (n = i.find((d) => X(d, "topNode"))) === null || n === void 0 ? void 0 : n.name, l = Object.fromEntries(i.map((d) => {
    const c = o.filter((C) => C.type === d.name), u = {
      name: d.name,
      options: d.options,
      storage: d.storage,
      editor: e
    }, f = t.reduce((C, x) => {
      const R = X(x, "extendNodeSchema", u);
      return {
        ...C,
        ...R ? R(d) : {}
      };
    }, {}), p = lh({
      ...f,
      content: ye(X(d, "content", u)),
      marks: ye(X(d, "marks", u)),
      group: ye(X(d, "group", u)),
      inline: ye(X(d, "inline", u)),
      atom: ye(X(d, "atom", u)),
      selectable: ye(X(d, "selectable", u)),
      draggable: ye(X(d, "draggable", u)),
      code: ye(X(d, "code", u)),
      whitespace: ye(X(d, "whitespace", u)),
      linebreakReplacement: ye(X(d, "linebreakReplacement", u)),
      defining: ye(X(d, "defining", u)),
      isolating: ye(X(d, "isolating", u)),
      attrs: Object.fromEntries(c.map((C) => {
        var x;
        return [C.name, { default: (x = C == null ? void 0 : C.attribute) === null || x === void 0 ? void 0 : x.default }];
      }))
    }), h = ye(X(d, "parseHTML", u));
    h && (p.parseDOM = h.map((C) => ah(C, c)));
    const g = X(d, "renderHTML", u);
    g && (p.toDOM = (C) => g({
      node: C,
      HTMLAttributes: ec(C, c)
    }));
    const b = X(d, "renderText", u);
    return b && (p.toText = b), [d.name, p];
  })), s = Object.fromEntries(r.map((d) => {
    const c = o.filter((b) => b.type === d.name), u = {
      name: d.name,
      options: d.options,
      storage: d.storage,
      editor: e
    }, f = t.reduce((b, C) => {
      const x = X(C, "extendMarkSchema", u);
      return {
        ...b,
        ...x ? x(d) : {}
      };
    }, {}), p = lh({
      ...f,
      inclusive: ye(X(d, "inclusive", u)),
      excludes: ye(X(d, "excludes", u)),
      group: ye(X(d, "group", u)),
      spanning: ye(X(d, "spanning", u)),
      code: ye(X(d, "code", u)),
      attrs: Object.fromEntries(c.map((b) => {
        var C;
        return [b.name, { default: (C = b == null ? void 0 : b.attribute) === null || C === void 0 ? void 0 : C.default }];
      }))
    }), h = ye(X(d, "parseHTML", u));
    h && (p.parseDOM = h.map((b) => ah(b, c)));
    const g = X(d, "renderHTML", u);
    return g && (p.toDOM = (b) => g({
      mark: b,
      HTMLAttributes: ec(b, c)
    })), [d.name, p];
  }));
  return new Xg({
    topNode: a,
    nodes: l,
    marks: s
  });
}
function ks(t, e) {
  return e.nodes[t] || e.marks[t] || null;
}
function sh(t, e) {
  return Array.isArray(e) ? e.some((n) => (typeof n == "string" ? n : n.name) === t.name) : e;
}
function qc(t, e) {
  const n = Do.fromSchema(e).serializeFragment(t), i = document.implementation.createHTMLDocument().createElement("div");
  return i.appendChild(n), i.innerHTML;
}
const Nz = (t, e = 500) => {
  let n = "";
  const o = t.parentOffset;
  return t.parent.nodesBetween(Math.max(0, o - e), o, (i, r, a, l) => {
    var s, d;
    const c = ((d = (s = i.type.spec).toText) === null || d === void 0 ? void 0 : d.call(s, {
      node: i,
      pos: r,
      parent: a,
      index: l
    })) || i.textContent || "%leaf%";
    n += i.isAtom && !i.isText ? c : c.slice(0, Math.max(0, o - r));
  }), n;
};
function Jc(t) {
  return Object.prototype.toString.call(t) === "[object RegExp]";
}
class Vl {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const jz = (t, e) => {
  if (Jc(e))
    return e.exec(t);
  const n = e(t);
  if (!n)
    return null;
  const o = [n.text];
  return o.index = n.index, o.input = t, o.data = n.data, n.replaceWith && (n.text.includes(n.replaceWith) || console.warn('[tiptap warn]: "inputRuleMatch.replaceWith" must be part of "inputRuleMatch.text".'), o.push(n.replaceWith)), o;
};
function Ea(t) {
  var e;
  const { editor: n, from: o, to: i, text: r, rules: a, plugin: l } = t, { view: s } = n;
  if (s.composing)
    return !1;
  const d = s.state.doc.resolve(o);
  if (
    // check for code node
    d.parent.type.spec.code || !((e = d.nodeBefore || d.nodeAfter) === null || e === void 0) && e.marks.find((f) => f.type.spec.code)
  )
    return !1;
  let c = !1;
  const u = Nz(d) + r;
  return a.forEach((f) => {
    if (c)
      return;
    const p = jz(u, f.find);
    if (!p)
      return;
    const h = s.state.tr, g = Fl({
      state: s.state,
      transaction: h
    }), b = {
      from: o - (p[0].length - r.length),
      to: i
    }, { commands: C, chain: x, can: R } = new Nl({
      editor: n,
      state: g
    });
    f.handler({
      state: g,
      range: b,
      match: p,
      commands: C,
      chain: x,
      can: R
    }) === null || !h.steps.length || (h.setMeta(l, {
      transform: h,
      from: o,
      to: i,
      text: r
    }), s.dispatch(h), c = !0);
  }), c;
}
function Vz(t) {
  const { editor: e, rules: n } = t, o = new dt({
    state: {
      init() {
        return null;
      },
      apply(i, r, a) {
        const l = i.getMeta(o);
        if (l)
          return l;
        const s = i.getMeta("applyInputRules");
        return !!s && setTimeout(() => {
          let { text: c } = s;
          typeof c == "string" ? c = c : c = qc(N.from(c), a.schema);
          const { from: u } = s, f = u + c.length;
          Ea({
            editor: e,
            from: u,
            to: f,
            text: c,
            rules: n,
            plugin: o
          });
        }), i.selectionSet || i.docChanged ? null : r;
      }
    },
    props: {
      handleTextInput(i, r, a, l) {
        return Ea({
          editor: e,
          from: r,
          to: a,
          text: l,
          rules: n,
          plugin: o
        });
      },
      handleDOMEvents: {
        compositionend: (i) => (setTimeout(() => {
          const { $cursor: r } = i.state.selection;
          r && Ea({
            editor: e,
            from: r.pos,
            to: r.pos,
            text: "",
            rules: n,
            plugin: o
          });
        }), !1)
      },
      // add support for input rules to trigger on enter
      // this is useful for example for code blocks
      handleKeyDown(i, r) {
        if (r.key !== "Enter")
          return !1;
        const { $cursor: a } = i.state.selection;
        return a ? Ea({
          editor: e,
          from: a.pos,
          to: a.pos,
          text: `
`,
          rules: n,
          plugin: o
        }) : !1;
      }
    },
    // @ts-ignore
    isInputRules: !0
  });
  return o;
}
function _z(t) {
  return Object.prototype.toString.call(t).slice(8, -1);
}
function Ma(t) {
  return _z(t) !== "Object" ? !1 : t.constructor === Object && Object.getPrototypeOf(t) === Object.prototype;
}
function _l(t, e) {
  const n = { ...t };
  return Ma(t) && Ma(e) && Object.keys(e).forEach((o) => {
    Ma(e[o]) && Ma(t[o]) ? n[o] = _l(t[o], e[o]) : n[o] = e[o];
  }), n;
}
class gn {
  constructor(e = {}) {
    this.type = "mark", this.name = "mark", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ye(X(this, "addOptions", {
      name: this.name
    }))), this.storage = ye(X(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new gn(e);
  }
  configure(e = {}) {
    const n = this.extend({
      ...this.config,
      addOptions: () => _l(this.options, e)
    });
    return n.name = this.name, n.parent = this.parent, n;
  }
  extend(e = {}) {
    const n = new gn(e);
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = ye(X(n, "addOptions", {
      name: n.name
    })), n.storage = ye(X(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
  static handleExit({ editor: e, mark: n }) {
    const { tr: o } = e.state, i = e.state.selection.$from;
    if (i.pos === i.end()) {
      const a = i.marks();
      if (!!!a.find((d) => (d == null ? void 0 : d.type.name) === n.name))
        return !1;
      const s = a.find((d) => (d == null ? void 0 : d.type.name) === n.name);
      return s && o.removeStoredMark(s), o.insertText(" ", i.pos), e.view.dispatch(o), !0;
    }
    return !1;
  }
}
function Kz(t) {
  return typeof t == "number";
}
class Hz {
  constructor(e) {
    this.find = e.find, this.handler = e.handler;
  }
}
const Wz = (t, e, n) => {
  if (Jc(e))
    return [...t.matchAll(e)];
  const o = e(t, n);
  return o ? o.map((i) => {
    const r = [i.text];
    return r.index = i.index, r.input = t, r.data = i.data, i.replaceWith && (i.text.includes(i.replaceWith) || console.warn('[tiptap warn]: "pasteRuleMatch.replaceWith" must be part of "pasteRuleMatch.text".'), r.push(i.replaceWith)), r;
  }) : [];
};
function Uz(t) {
  const { editor: e, state: n, from: o, to: i, rule: r, pasteEvent: a, dropEvent: l } = t, { commands: s, chain: d, can: c } = new Nl({
    editor: e,
    state: n
  }), u = [];
  return n.doc.nodesBetween(o, i, (p, h) => {
    if (!p.isTextblock || p.type.spec.code)
      return;
    const g = Math.max(o, h), b = Math.min(i, h + p.content.size), C = p.textBetween(g - h, b - h, void 0, "￼");
    Wz(C, r.find, a).forEach((R) => {
      if (R.index === void 0)
        return;
      const w = g + R.index + 1, T = w + R[0].length, S = {
        from: n.tr.mapping.map(w),
        to: n.tr.mapping.map(T)
      }, I = r.handler({
        state: n,
        range: S,
        match: R,
        commands: s,
        chain: d,
        can: c,
        pasteEvent: a,
        dropEvent: l
      });
      u.push(I);
    });
  }), u.every((p) => p !== null);
}
let Aa = null;
const Gz = (t) => {
  var e;
  const n = new ClipboardEvent("paste", {
    clipboardData: new DataTransfer()
  });
  return (e = n.clipboardData) === null || e === void 0 || e.setData("text/html", t), n;
};
function qz(t) {
  const { editor: e, rules: n } = t;
  let o = null, i = !1, r = !1, a = typeof ClipboardEvent < "u" ? new ClipboardEvent("paste") : null, l;
  try {
    l = typeof DragEvent < "u" ? new DragEvent("drop") : null;
  } catch {
    l = null;
  }
  const s = ({ state: c, from: u, to: f, rule: p, pasteEvt: h }) => {
    const g = c.tr, b = Fl({
      state: c,
      transaction: g
    });
    if (!(!Uz({
      editor: e,
      state: b,
      from: Math.max(u - 1, 0),
      to: f.b - 1,
      rule: p,
      pasteEvent: h,
      dropEvent: l
    }) || !g.steps.length)) {
      try {
        l = typeof DragEvent < "u" ? new DragEvent("drop") : null;
      } catch {
        l = null;
      }
      return a = typeof ClipboardEvent < "u" ? new ClipboardEvent("paste") : null, g;
    }
  };
  return n.map((c) => new dt({
    // we register a global drag handler to track the current drag source element
    view(u) {
      const f = (h) => {
        var g;
        o = !((g = u.dom.parentElement) === null || g === void 0) && g.contains(h.target) ? u.dom.parentElement : null, o && (Aa = e);
      }, p = () => {
        Aa && (Aa = null);
      };
      return window.addEventListener("dragstart", f), window.addEventListener("dragend", p), {
        destroy() {
          window.removeEventListener("dragstart", f), window.removeEventListener("dragend", p);
        }
      };
    },
    props: {
      handleDOMEvents: {
        drop: (u, f) => {
          if (r = o === u.dom.parentElement, l = f, !r) {
            const p = Aa;
            p != null && p.isEditable && setTimeout(() => {
              const h = p.state.selection;
              h && p.commands.deleteRange({ from: h.from, to: h.to });
            }, 10);
          }
          return !1;
        },
        paste: (u, f) => {
          var p;
          const h = (p = f.clipboardData) === null || p === void 0 ? void 0 : p.getData("text/html");
          return a = f, i = !!(h != null && h.includes("data-pm-slice")), !1;
        }
      }
    },
    appendTransaction: (u, f, p) => {
      const h = u[0], g = h.getMeta("uiEvent") === "paste" && !i, b = h.getMeta("uiEvent") === "drop" && !r, C = h.getMeta("applyPasteRules"), x = !!C;
      if (!g && !b && !x)
        return;
      if (x) {
        let { text: T } = C;
        typeof T == "string" ? T = T : T = qc(N.from(T), p.schema);
        const { from: S } = C, I = S + T.length, B = Gz(T);
        return s({
          rule: c,
          state: p,
          from: S,
          to: { b: I },
          pasteEvt: B
        });
      }
      const R = f.doc.content.findDiffStart(p.doc.content), w = f.doc.content.findDiffEnd(p.doc.content);
      if (!(!Kz(R) || !w || R === w.b))
        return s({
          rule: c,
          state: p,
          from: R,
          to: w,
          pasteEvt: a
        });
    }
  }));
}
function Jz(t) {
  const e = t.filter((n, o) => t.indexOf(n) !== o);
  return Array.from(new Set(e));
}
class Xo {
  constructor(e, n) {
    this.splittableMarks = [], this.editor = n, this.extensions = Xo.resolve(e), this.schema = Fz(this.extensions, n), this.setupExtensions();
  }
  /**
   * Returns a flattened and sorted extension list while
   * also checking for duplicated extensions and warns the user.
   * @param extensions An array of Tiptap extensions
   * @returns An flattened and sorted array of Tiptap extensions
   */
  static resolve(e) {
    const n = Xo.sort(Xo.flatten(e)), o = Jz(n.map((i) => i.name));
    return o.length && console.warn(`[tiptap warn]: Duplicate extension names found: [${o.map((i) => `'${i}'`).join(", ")}]. This can lead to issues.`), n;
  }
  /**
   * Create a flattened array of extensions by traversing the `addExtensions` field.
   * @param extensions An array of Tiptap extensions
   * @returns A flattened array of Tiptap extensions
   */
  static flatten(e) {
    return e.map((n) => {
      const o = {
        name: n.name,
        options: n.options,
        storage: n.storage
      }, i = X(n, "addExtensions", o);
      return i ? [n, ...this.flatten(i())] : n;
    }).flat(10);
  }
  /**
   * Sort extensions by priority.
   * @param extensions An array of Tiptap extensions
   * @returns A sorted array of Tiptap extensions by priority
   */
  static sort(e) {
    return e.sort((o, i) => {
      const r = X(o, "priority") || 100, a = X(i, "priority") || 100;
      return r > a ? -1 : r < a ? 1 : 0;
    });
  }
  /**
   * Get all commands from the extensions.
   * @returns An object with all commands where the key is the command name and the value is the command function
   */
  get commands() {
    return this.extensions.reduce((e, n) => {
      const o = {
        name: n.name,
        options: n.options,
        storage: n.storage,
        editor: this.editor,
        type: ks(n.name, this.schema)
      }, i = X(n, "addCommands", o);
      return i ? {
        ...e,
        ...i()
      } : e;
    }, {});
  }
  /**
   * Get all registered Prosemirror plugins from the extensions.
   * @returns An array of Prosemirror plugins
   */
  get plugins() {
    const { editor: e } = this, n = Xo.sort([...this.extensions].reverse()), o = [], i = [], r = n.map((a) => {
      const l = {
        name: a.name,
        options: a.options,
        storage: a.storage,
        editor: e,
        type: ks(a.name, this.schema)
      }, s = [], d = X(a, "addKeyboardShortcuts", l);
      let c = {};
      if (a.type === "mark" && X(a, "exitable", l) && (c.ArrowRight = () => gn.handleExit({ editor: e, mark: a })), d) {
        const g = Object.fromEntries(Object.entries(d()).map(([b, C]) => [b, () => C({ editor: e })]));
        c = { ...c, ...g };
      }
      const u = hz(c);
      s.push(u);
      const f = X(a, "addInputRules", l);
      sh(a, e.options.enableInputRules) && f && o.push(...f());
      const p = X(a, "addPasteRules", l);
      sh(a, e.options.enablePasteRules) && p && i.push(...p());
      const h = X(a, "addProseMirrorPlugins", l);
      if (h) {
        const g = h();
        s.push(...g);
      }
      return s;
    }).flat();
    return [
      Vz({
        editor: e,
        rules: o
      }),
      ...qz({
        editor: e,
        rules: i
      }),
      ...r
    ];
  }
  /**
   * Get all attributes from the extensions.
   * @returns An array of attributes
   */
  get attributes() {
    return s0(this.extensions);
  }
  /**
   * Get all node views from the extensions.
   * @returns An object with all node views where the key is the node name and the value is the node view function
   */
  get nodeViews() {
    const { editor: e } = this, { nodeExtensions: n } = jl(this.extensions);
    return Object.fromEntries(n.filter((o) => !!X(o, "addNodeView")).map((o) => {
      const i = this.attributes.filter((s) => s.type === o.name), r = {
        name: o.name,
        options: o.options,
        storage: o.storage,
        editor: e,
        type: et(o.name, this.schema)
      }, a = X(o, "addNodeView", r);
      if (!a)
        return [];
      const l = (s, d, c, u, f) => {
        const p = ec(s, i);
        return a()({
          // pass-through
          node: s,
          view: d,
          getPos: c,
          decorations: u,
          innerDecorations: f,
          // tiptap-specific
          editor: e,
          extension: o,
          HTMLAttributes: p
        });
      };
      return [o.name, l];
    }));
  }
  /**
   * Go through all extensions, create extension storages & setup marks
   * & bind editor event listener.
   */
  setupExtensions() {
    this.extensions.forEach((e) => {
      var n;
      this.editor.extensionStorage[e.name] = e.storage;
      const o = {
        name: e.name,
        options: e.options,
        storage: e.storage,
        editor: this.editor,
        type: ks(e.name, this.schema)
      };
      e.type === "mark" && (!((n = ye(X(e, "keepOnSplit", o))) !== null && n !== void 0) || n) && this.splittableMarks.push(e.name);
      const i = X(e, "onBeforeCreate", o), r = X(e, "onCreate", o), a = X(e, "onUpdate", o), l = X(e, "onSelectionUpdate", o), s = X(e, "onTransaction", o), d = X(e, "onFocus", o), c = X(e, "onBlur", o), u = X(e, "onDestroy", o);
      i && this.editor.on("beforeCreate", i), r && this.editor.on("create", r), a && this.editor.on("update", a), l && this.editor.on("selectionUpdate", l), s && this.editor.on("transaction", s), d && this.editor.on("focus", d), c && this.editor.on("blur", c), u && this.editor.on("destroy", u);
    });
  }
}
class Je {
  constructor(e = {}) {
    this.type = "extension", this.name = "extension", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ye(X(this, "addOptions", {
      name: this.name
    }))), this.storage = ye(X(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new Je(e);
  }
  configure(e = {}) {
    const n = this.extend({
      ...this.config,
      addOptions: () => _l(this.options, e)
    });
    return n.name = this.name, n.parent = this.parent, n;
  }
  extend(e = {}) {
    const n = new Je({ ...this.config, ...e });
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = ye(X(n, "addOptions", {
      name: n.name
    })), n.storage = ye(X(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
}
function c0(t, e, n) {
  const { from: o, to: i } = e, { blockSeparator: r = `

`, textSerializers: a = {} } = n || {};
  let l = "";
  return t.nodesBetween(o, i, (s, d, c, u) => {
    var f;
    s.isBlock && d > o && (l += r);
    const p = a == null ? void 0 : a[s.type.name];
    if (p)
      return c && (l += p({
        node: s,
        pos: d,
        parent: c,
        index: u,
        range: e
      })), !1;
    s.isText && (l += (f = s == null ? void 0 : s.text) === null || f === void 0 ? void 0 : f.slice(Math.max(o, d) - d, i - d));
  }), l;
}
function Yc(t) {
  return Object.fromEntries(Object.entries(t.nodes).filter(([, e]) => e.spec.toText).map(([e, n]) => [e, n.spec.toText]));
}
const Yz = Je.create({
  name: "clipboardTextSerializer",
  addOptions() {
    return {
      blockSeparator: void 0
    };
  },
  addProseMirrorPlugins() {
    return [
      new dt({
        key: new Lt("clipboardTextSerializer"),
        props: {
          clipboardTextSerializer: () => {
            const { editor: t } = this, { state: e, schema: n } = t, { doc: o, selection: i } = e, { ranges: r } = i, a = Math.min(...r.map((c) => c.$from.pos)), l = Math.max(...r.map((c) => c.$to.pos)), s = Yc(n);
            return c0(o, { from: a, to: l }, {
              ...this.options.blockSeparator !== void 0 ? { blockSeparator: this.options.blockSeparator } : {},
              textSerializers: s
            });
          }
        }
      })
    ];
  }
}), Xz = () => ({ editor: t, view: e }) => (requestAnimationFrame(() => {
  var n;
  t.isDestroyed || (e.dom.blur(), (n = window == null ? void 0 : window.getSelection()) === null || n === void 0 || n.removeAllRanges());
}), !0), Zz = (t = !1) => ({ commands: e }) => e.setContent("", t), Qz = () => ({ state: t, tr: e, dispatch: n }) => {
  const { selection: o } = e, { ranges: i } = o;
  return n && i.forEach(({ $from: r, $to: a }) => {
    t.doc.nodesBetween(r.pos, a.pos, (l, s) => {
      if (l.type.isText)
        return;
      const { doc: d, mapping: c } = e, u = d.resolve(c.map(s)), f = d.resolve(c.map(s + l.nodeSize)), p = u.blockRange(f);
      if (!p)
        return;
      const h = yr(p);
      if (l.type.isTextblock) {
        const { defaultType: g } = u.parent.contentMatchAt(u.index());
        e.setNodeMarkup(p.start, g);
      }
      (h || h === 0) && e.lift(p, h);
    });
  }), !0;
}, eF = (t) => (e) => t(e), tF = () => ({ state: t, dispatch: e }) => r0(t, e), nF = (t, e) => ({ editor: n, tr: o }) => {
  const { state: i } = n, r = i.doc.slice(t.from, t.to);
  o.deleteRange(t.from, t.to);
  const a = o.mapping.map(e);
  return o.insert(a, r.content), o.setSelection(new he(o.doc.resolve(Math.max(a - 1, 0)))), !0;
}, oF = () => ({ tr: t, dispatch: e }) => {
  const { selection: n } = t, o = n.$anchor.node();
  if (o.content.size > 0)
    return !1;
  const i = t.selection.$anchor;
  for (let r = i.depth; r > 0; r -= 1)
    if (i.node(r).type === o.type) {
      if (e) {
        const l = i.before(r), s = i.after(r);
        t.delete(l, s).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, rF = (t) => ({ tr: e, state: n, dispatch: o }) => {
  const i = et(t, n.schema), r = e.selection.$anchor;
  for (let a = r.depth; a > 0; a -= 1)
    if (r.node(a).type === i) {
      if (o) {
        const s = r.before(a), d = r.after(a);
        e.delete(s, d).scrollIntoView();
      }
      return !0;
    }
  return !1;
}, iF = (t) => ({ tr: e, dispatch: n }) => {
  const { from: o, to: i } = t;
  return n && e.delete(o, i), !0;
}, aF = () => ({ state: t, dispatch: e }) => Kc(t, e), lF = () => ({ commands: t }) => t.keyboardShortcut("Enter"), sF = () => ({ state: t, dispatch: e }) => kz(t, e);
function pl(t, e, n = { strict: !0 }) {
  const o = Object.keys(e);
  return o.length ? o.every((i) => n.strict ? e[i] === t[i] : Jc(e[i]) ? e[i].test(t[i]) : e[i] === t[i]) : !0;
}
function u0(t, e, n = {}) {
  return t.find((o) => o.type === e && pl(
    // Only check equality for the attributes that are provided
    Object.fromEntries(Object.keys(n).map((i) => [i, o.attrs[i]])),
    n
  ));
}
function dh(t, e, n = {}) {
  return !!u0(t, e, n);
}
function Xc(t, e, n) {
  var o;
  if (!t || !e)
    return;
  let i = t.parent.childAfter(t.parentOffset);
  if ((!i.node || !i.node.marks.some((c) => c.type === e)) && (i = t.parent.childBefore(t.parentOffset)), !i.node || !i.node.marks.some((c) => c.type === e) || (n = n || ((o = i.node.marks[0]) === null || o === void 0 ? void 0 : o.attrs), !u0([...i.node.marks], e, n)))
    return;
  let a = i.index, l = t.start() + i.offset, s = a + 1, d = l + i.node.nodeSize;
  for (; a > 0 && dh([...t.parent.child(a - 1).marks], e, n); )
    a -= 1, l -= t.parent.child(a).nodeSize;
  for (; s < t.parent.childCount && dh([...t.parent.child(s).marks], e, n); )
    d += t.parent.child(s).nodeSize, s += 1;
  return {
    from: l,
    to: d
  };
}
function oo(t, e) {
  if (typeof t == "string") {
    if (!e.marks[t])
      throw Error(`There is no mark type named '${t}'. Maybe you forgot to add the extension?`);
    return e.marks[t];
  }
  return t;
}
const dF = (t, e = {}) => ({ tr: n, state: o, dispatch: i }) => {
  const r = oo(t, o.schema), { doc: a, selection: l } = n, { $from: s, from: d, to: c } = l;
  if (i) {
    const u = Xc(s, r, e);
    if (u && u.from <= d && u.to >= c) {
      const f = he.create(a, u.from, u.to);
      n.setSelection(f);
    }
  }
  return !0;
}, cF = (t) => (e) => {
  const n = typeof t == "function" ? t(e) : t;
  for (let o = 0; o < n.length; o += 1)
    if (n[o](e))
      return !0;
  return !1;
};
function Zc(t) {
  return t instanceof he;
}
function In(t = 0, e = 0, n = 0) {
  return Math.min(Math.max(t, e), n);
}
function p0(t, e = null) {
  if (!e)
    return null;
  const n = ve.atStart(t), o = ve.atEnd(t);
  if (e === "start" || e === !0)
    return n;
  if (e === "end")
    return o;
  const i = n.from, r = o.to;
  return e === "all" ? he.create(t, In(0, i, r), In(t.content.size, i, r)) : he.create(t, In(e, i, r), In(e, i, r));
}
function uF() {
  return navigator.platform === "Android" || /android/i.test(navigator.userAgent);
}
function Qc() {
  return [
    "iPad Simulator",
    "iPhone Simulator",
    "iPod Simulator",
    "iPad",
    "iPhone",
    "iPod"
  ].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document;
}
const pF = (t = null, e = {}) => ({ editor: n, view: o, tr: i, dispatch: r }) => {
  e = {
    scrollIntoView: !0,
    ...e
  };
  const a = () => {
    (Qc() || uF()) && o.dom.focus(), requestAnimationFrame(() => {
      n.isDestroyed || (o.focus(), e != null && e.scrollIntoView && n.commands.scrollIntoView());
    });
  };
  if (o.hasFocus() && t === null || t === !1)
    return !0;
  if (r && t === null && !Zc(n.state.selection))
    return a(), !0;
  const l = p0(i.doc, t) || n.state.selection, s = n.state.selection.eq(l);
  return r && (s || i.setSelection(l), s && i.storedMarks && i.setStoredMarks(i.storedMarks), a()), !0;
}, fF = (t, e) => (n) => t.every((o, i) => e(o, { ...n, index: i })), hF = (t, e) => ({ tr: n, commands: o }) => o.insertContentAt({ from: n.selection.from, to: n.selection.to }, t, e), f0 = (t) => {
  const e = t.childNodes;
  for (let n = e.length - 1; n >= 0; n -= 1) {
    const o = e[n];
    o.nodeType === 3 && o.nodeValue && /^(\n\s\s|\n)$/.test(o.nodeValue) ? t.removeChild(o) : o.nodeType === 1 && f0(o);
  }
  return t;
};
function Da(t) {
  const e = `<body>${t}</body>`, n = new window.DOMParser().parseFromString(e, "text/html").body;
  return f0(n);
}
function qi(t, e, n) {
  if (t instanceof qn || t instanceof N)
    return t;
  n = {
    slice: !0,
    parseOptions: {},
    ...n
  };
  const o = typeof t == "object" && t !== null, i = typeof t == "string";
  if (o)
    try {
      if (Array.isArray(t) && t.length > 0)
        return N.fromArray(t.map((l) => e.nodeFromJSON(l)));
      const a = e.nodeFromJSON(t);
      return n.errorOnInvalidContent && a.check(), a;
    } catch (r) {
      if (n.errorOnInvalidContent)
        throw new Error("[tiptap error]: Invalid JSON content", { cause: r });
      return console.warn("[tiptap warn]: Invalid content.", "Passed value:", t, "Error:", r), qi("", e, n);
    }
  if (i) {
    if (n.errorOnInvalidContent) {
      let a = !1, l = "";
      const s = new Xg({
        topNode: e.spec.topNode,
        marks: e.spec.marks,
        // Prosemirror's schemas are executed such that: the last to execute, matches last
        // This means that we can add a catch-all node at the end of the schema to catch any content that we don't know how to handle
        nodes: e.spec.nodes.append({
          __tiptap__private__unknown__catch__all__node: {
            content: "inline*",
            group: "block",
            parseDOM: [
              {
                tag: "*",
                getAttrs: (d) => (a = !0, l = typeof d == "string" ? d : d.outerHTML, null)
              }
            ]
          }
        })
      });
      if (n.slice ? zr.fromSchema(s).parseSlice(Da(t), n.parseOptions) : zr.fromSchema(s).parse(Da(t), n.parseOptions), n.errorOnInvalidContent && a)
        throw new Error("[tiptap error]: Invalid HTML content", { cause: new Error(`Invalid element found: ${l}`) });
    }
    const r = zr.fromSchema(e);
    return n.slice ? r.parseSlice(Da(t), n.parseOptions).content : r.parse(Da(t), n.parseOptions);
  }
  return qi("", e, n);
}
function mF(t, e, n) {
  const o = t.steps.length - 1;
  if (o < e)
    return;
  const i = t.steps[o];
  if (!(i instanceof Ye || i instanceof Ze))
    return;
  const r = t.mapping.maps[o];
  let a = 0;
  r.forEach((l, s, d, c) => {
    a === 0 && (a = c);
  }), t.setSelection(ve.near(t.doc.resolve(a), n));
}
const gF = (t) => !("type" in t), bF = (t, e, n) => ({ tr: o, dispatch: i, editor: r }) => {
  var a;
  if (i) {
    n = {
      parseOptions: r.options.parseOptions,
      updateSelection: !0,
      applyInputRules: !1,
      applyPasteRules: !1,
      ...n
    };
    let l;
    const s = (b) => {
      r.emit("contentError", {
        editor: r,
        error: b,
        disableCollaboration: () => {
          r.storage.collaboration && (r.storage.collaboration.isDisabled = !0);
        }
      });
    }, d = {
      preserveWhitespace: "full",
      ...n.parseOptions
    };
    if (!n.errorOnInvalidContent && !r.options.enableContentCheck && r.options.emitContentError)
      try {
        qi(e, r.schema, {
          parseOptions: d,
          errorOnInvalidContent: !0
        });
      } catch (b) {
        s(b);
      }
    try {
      l = qi(e, r.schema, {
        parseOptions: d,
        errorOnInvalidContent: (a = n.errorOnInvalidContent) !== null && a !== void 0 ? a : r.options.enableContentCheck
      });
    } catch (b) {
      return s(b), !1;
    }
    let { from: c, to: u } = typeof t == "number" ? { from: t, to: t } : { from: t.from, to: t.to }, f = !0, p = !0;
    if ((gF(l) ? l : [l]).forEach((b) => {
      b.check(), f = f ? b.isText && b.marks.length === 0 : !1, p = p ? b.isBlock : !1;
    }), c === u && p) {
      const { parent: b } = o.doc.resolve(c);
      b.isTextblock && !b.type.spec.code && !b.childCount && (c -= 1, u += 1);
    }
    let g;
    if (f) {
      if (Array.isArray(e))
        g = e.map((b) => b.text || "").join("");
      else if (e instanceof N) {
        let b = "";
        e.forEach((C) => {
          C.text && (b += C.text);
        }), g = b;
      } else typeof e == "object" && e && e.text ? g = e.text : g = e;
      o.insertText(g, c, u);
    } else
      g = l, o.replaceWith(c, u, g);
    n.updateSelection && mF(o, o.steps.length - 1, -1), n.applyInputRules && o.setMeta("applyInputRules", { from: c, text: g }), n.applyPasteRules && o.setMeta("applyPasteRules", { from: c, text: g });
  }
  return !0;
}, vF = () => ({ state: t, dispatch: e }) => bz(t, e), yF = () => ({ state: t, dispatch: e }) => vz(t, e), kF = () => ({ state: t, dispatch: e }) => Xb(t, e), wF = () => ({ state: t, dispatch: e }) => t0(t, e), CF = () => ({ state: t, dispatch: e, tr: n }) => {
  try {
    const o = El(t.doc, t.selection.$from.pos, -1);
    return o == null ? !1 : (n.join(o, 2), e && e(n), !0);
  } catch {
    return !1;
  }
}, xF = () => ({ state: t, dispatch: e, tr: n }) => {
  try {
    const o = El(t.doc, t.selection.$from.pos, 1);
    return o == null ? !1 : (n.join(o, 2), e && e(n), !0);
  } catch {
    return !1;
  }
}, SF = () => ({ state: t, dispatch: e }) => mz(t, e), IF = () => ({ state: t, dispatch: e }) => gz(t, e);
function h0() {
  return typeof navigator < "u" ? /Mac/.test(navigator.platform) : !1;
}
function OF(t) {
  const e = t.split(/-(?!$)/);
  let n = e[e.length - 1];
  n === "Space" && (n = " ");
  let o, i, r, a;
  for (let l = 0; l < e.length - 1; l += 1) {
    const s = e[l];
    if (/^(cmd|meta|m)$/i.test(s))
      a = !0;
    else if (/^a(lt)?$/i.test(s))
      o = !0;
    else if (/^(c|ctrl|control)$/i.test(s))
      i = !0;
    else if (/^s(hift)?$/i.test(s))
      r = !0;
    else if (/^mod$/i.test(s))
      Qc() || h0() ? a = !0 : i = !0;
    else
      throw new Error(`Unrecognized modifier name: ${s}`);
  }
  return o && (n = `Alt-${n}`), i && (n = `Ctrl-${n}`), a && (n = `Meta-${n}`), r && (n = `Shift-${n}`), n;
}
const PF = (t) => ({ editor: e, view: n, tr: o, dispatch: i }) => {
  const r = OF(t).split(/-(?!$)/), a = r.find((d) => !["Alt", "Ctrl", "Meta", "Shift"].includes(d)), l = new KeyboardEvent("keydown", {
    key: a === "Space" ? " " : a,
    altKey: r.includes("Alt"),
    ctrlKey: r.includes("Ctrl"),
    metaKey: r.includes("Meta"),
    shiftKey: r.includes("Shift"),
    bubbles: !0,
    cancelable: !0
  }), s = e.captureTransaction(() => {
    n.someProp("handleKeyDown", (d) => d(n, l));
  });
  return s == null || s.steps.forEach((d) => {
    const c = d.map(o.mapping);
    c && i && o.maybeStep(c);
  }), !0;
};
function Ji(t, e, n = {}) {
  const { from: o, to: i, empty: r } = t.selection, a = e ? et(e, t.schema) : null, l = [];
  t.doc.nodesBetween(o, i, (u, f) => {
    if (u.isText)
      return;
    const p = Math.max(o, f), h = Math.min(i, f + u.nodeSize);
    l.push({
      node: u,
      from: p,
      to: h
    });
  });
  const s = i - o, d = l.filter((u) => a ? a.name === u.node.type.name : !0).filter((u) => pl(u.node.attrs, n, { strict: !1 }));
  return r ? !!d.length : d.reduce((u, f) => u + f.to - f.from, 0) >= s;
}
const $F = (t, e = {}) => ({ state: n, dispatch: o }) => {
  const i = et(t, n.schema);
  return Ji(n, i, e) ? yz(n, o) : !1;
}, TF = () => ({ state: t, dispatch: e }) => i0(t, e), RF = (t) => ({ state: e, dispatch: n }) => {
  const o = et(t, e.schema);
  return Bz(o)(e, n);
}, BF = () => ({ state: t, dispatch: e }) => o0(t, e);
function Kl(t, e) {
  return e.nodes[t] ? "node" : e.marks[t] ? "mark" : null;
}
function ch(t, e) {
  const n = typeof e == "string" ? [e] : e;
  return Object.keys(t).reduce((o, i) => (n.includes(i) || (o[i] = t[i]), o), {});
}
const EF = (t, e) => ({ tr: n, state: o, dispatch: i }) => {
  let r = null, a = null;
  const l = Kl(typeof t == "string" ? t : t.name, o.schema);
  return l ? (l === "node" && (r = et(t, o.schema)), l === "mark" && (a = oo(t, o.schema)), i && n.selection.ranges.forEach((s) => {
    o.doc.nodesBetween(s.$from.pos, s.$to.pos, (d, c) => {
      r && r === d.type && n.setNodeMarkup(c, void 0, ch(d.attrs, e)), a && d.marks.length && d.marks.forEach((u) => {
        a === u.type && n.addMark(c, c + d.nodeSize, a.create(ch(u.attrs, e)));
      });
    });
  }), !0) : !1;
}, MF = () => ({ tr: t, dispatch: e }) => (e && t.scrollIntoView(), !0), AF = () => ({ tr: t, dispatch: e }) => {
  if (e) {
    const n = new Mt(t.doc);
    t.setSelection(n);
  }
  return !0;
}, DF = () => ({ state: t, dispatch: e }) => Qb(t, e), LF = () => ({ state: t, dispatch: e }) => n0(t, e), zF = () => ({ state: t, dispatch: e }) => xz(t, e), FF = () => ({ state: t, dispatch: e }) => Oz(t, e), NF = () => ({ state: t, dispatch: e }) => Iz(t, e);
function tc(t, e, n = {}, o = {}) {
  return qi(t, e, {
    slice: !1,
    parseOptions: n,
    errorOnInvalidContent: o.errorOnInvalidContent
  });
}
const jF = (t, e = !1, n = {}, o = {}) => ({ editor: i, tr: r, dispatch: a, commands: l }) => {
  var s, d;
  const { doc: c } = r;
  if (n.preserveWhitespace !== "full") {
    const u = tc(t, i.schema, n, {
      errorOnInvalidContent: (s = o.errorOnInvalidContent) !== null && s !== void 0 ? s : i.options.enableContentCheck
    });
    return a && r.replaceWith(0, c.content.size, u).setMeta("preventUpdate", !e), !0;
  }
  return a && r.setMeta("preventUpdate", !e), l.insertContentAt({ from: 0, to: c.content.size }, t, {
    parseOptions: n,
    errorOnInvalidContent: (d = o.errorOnInvalidContent) !== null && d !== void 0 ? d : i.options.enableContentCheck
  });
};
function m0(t, e) {
  const n = oo(e, t.schema), { from: o, to: i, empty: r } = t.selection, a = [];
  r ? (t.storedMarks && a.push(...t.storedMarks), a.push(...t.selection.$head.marks())) : t.doc.nodesBetween(o, i, (s) => {
    a.push(...s.marks);
  });
  const l = a.find((s) => s.type.name === n.name);
  return l ? { ...l.attrs } : {};
}
function VF(t) {
  for (let e = 0; e < t.edgeCount; e += 1) {
    const { type: n } = t.edge(e);
    if (n.isTextblock && !n.hasRequiredAttrs())
      return n;
  }
  return null;
}
function _F(t, e) {
  for (let n = t.depth; n > 0; n -= 1) {
    const o = t.node(n);
    if (e(o))
      return {
        pos: n > 0 ? t.before(n) : 0,
        start: t.start(n),
        depth: n,
        node: o
      };
  }
}
function eu(t) {
  return (e) => _F(e.$from, t);
}
function g0(t, e) {
  const n = {
    from: 0,
    to: t.content.size
  };
  return c0(t, n, e);
}
function KF(t, e) {
  const n = et(e, t.schema), { from: o, to: i } = t.selection, r = [];
  t.doc.nodesBetween(o, i, (l) => {
    r.push(l);
  });
  const a = r.reverse().find((l) => l.type.name === n.name);
  return a ? { ...a.attrs } : {};
}
function HF(t, e) {
  const n = Kl(typeof e == "string" ? e : e.name, t.schema);
  return n === "node" ? KF(t, e) : n === "mark" ? m0(t, e) : {};
}
function b0(t, e, n) {
  const o = [];
  return t === e ? n.resolve(t).marks().forEach((i) => {
    const r = n.resolve(t), a = Xc(r, i.type);
    a && o.push({
      mark: i,
      ...a
    });
  }) : n.nodesBetween(t, e, (i, r) => {
    !i || (i == null ? void 0 : i.nodeSize) === void 0 || o.push(...i.marks.map((a) => ({
      from: r,
      to: r + i.nodeSize,
      mark: a
    })));
  }), o;
}
function Ua(t, e, n) {
  return Object.fromEntries(Object.entries(n).filter(([o]) => {
    const i = t.find((r) => r.type === e && r.name === o);
    return i ? i.attribute.keepOnSplit : !1;
  }));
}
function nc(t, e, n = {}) {
  const { empty: o, ranges: i } = t.selection, r = e ? oo(e, t.schema) : null;
  if (o)
    return !!(t.storedMarks || t.selection.$from.marks()).filter((u) => r ? r.name === u.type.name : !0).find((u) => pl(u.attrs, n, { strict: !1 }));
  let a = 0;
  const l = [];
  if (i.forEach(({ $from: u, $to: f }) => {
    const p = u.pos, h = f.pos;
    t.doc.nodesBetween(p, h, (g, b) => {
      if (!g.isText && !g.marks.length)
        return;
      const C = Math.max(p, b), x = Math.min(h, b + g.nodeSize), R = x - C;
      a += R, l.push(...g.marks.map((w) => ({
        mark: w,
        from: C,
        to: x
      })));
    });
  }), a === 0)
    return !1;
  const s = l.filter((u) => r ? r.name === u.mark.type.name : !0).filter((u) => pl(u.mark.attrs, n, { strict: !1 })).reduce((u, f) => u + f.to - f.from, 0), d = l.filter((u) => r ? u.mark.type !== r && u.mark.type.excludes(r) : !0).reduce((u, f) => u + f.to - f.from, 0);
  return (s > 0 ? s + d : s) >= a;
}
function WF(t, e, n = {}) {
  if (!e)
    return Ji(t, null, n) || nc(t, null, n);
  const o = Kl(e, t.schema);
  return o === "node" ? Ji(t, e, n) : o === "mark" ? nc(t, e, n) : !1;
}
function uh(t, e) {
  const { nodeExtensions: n } = jl(e), o = n.find((a) => a.name === t);
  if (!o)
    return !1;
  const i = {
    name: o.name,
    options: o.options,
    storage: o.storage
  }, r = ye(X(o, "group", i));
  return typeof r != "string" ? !1 : r.split(" ").includes("list");
}
function tu(t, { checkChildren: e = !0, ignoreWhitespace: n = !1 } = {}) {
  var o;
  if (n) {
    if (t.type.name === "hardBreak")
      return !0;
    if (t.isText)
      return /^\s*$/m.test((o = t.text) !== null && o !== void 0 ? o : "");
  }
  if (t.isText)
    return !t.text;
  if (t.isAtom || t.isLeaf)
    return !1;
  if (t.content.childCount === 0)
    return !0;
  if (e) {
    let i = !0;
    return t.content.forEach((r) => {
      i !== !1 && (tu(r, { ignoreWhitespace: n, checkChildren: e }) || (i = !1));
    }), i;
  }
  return !1;
}
function v0(t) {
  return t instanceof oe;
}
function y0(t, e, n) {
  const i = t.state.doc.content.size, r = In(e, 0, i), a = In(n, 0, i), l = t.coordsAtPos(r), s = t.coordsAtPos(a, -1), d = Math.min(l.top, s.top), c = Math.max(l.bottom, s.bottom), u = Math.min(l.left, s.left), f = Math.max(l.right, s.right), p = f - u, h = c - d, C = {
    top: d,
    bottom: c,
    left: u,
    right: f,
    width: p,
    height: h,
    x: u,
    y: d
  };
  return {
    ...C,
    toJSON: () => C
  };
}
function UF(t, e, n) {
  var o;
  const { selection: i } = e;
  let r = null;
  if (Zc(i) && (r = i.$cursor), r) {
    const l = (o = t.storedMarks) !== null && o !== void 0 ? o : r.marks();
    return !!n.isInSet(l) || !l.some((s) => s.type.excludes(n));
  }
  const { ranges: a } = i;
  return a.some(({ $from: l, $to: s }) => {
    let d = l.depth === 0 ? t.doc.inlineContent && t.doc.type.allowsMarkType(n) : !1;
    return t.doc.nodesBetween(l.pos, s.pos, (c, u, f) => {
      if (d)
        return !1;
      if (c.isInline) {
        const p = !f || f.type.allowsMarkType(n), h = !!n.isInSet(c.marks) || !c.marks.some((g) => g.type.excludes(n));
        d = p && h;
      }
      return !d;
    }), d;
  });
}
const GF = (t, e = {}) => ({ tr: n, state: o, dispatch: i }) => {
  const { selection: r } = n, { empty: a, ranges: l } = r, s = oo(t, o.schema);
  if (i)
    if (a) {
      const d = m0(o, s);
      n.addStoredMark(s.create({
        ...d,
        ...e
      }));
    } else
      l.forEach((d) => {
        const c = d.$from.pos, u = d.$to.pos;
        o.doc.nodesBetween(c, u, (f, p) => {
          const h = Math.max(p, c), g = Math.min(p + f.nodeSize, u);
          f.marks.find((C) => C.type === s) ? f.marks.forEach((C) => {
            s === C.type && n.addMark(h, g, s.create({
              ...C.attrs,
              ...e
            }));
          }) : n.addMark(h, g, s.create(e));
        });
      });
  return UF(o, n, s);
}, qF = (t, e) => ({ tr: n }) => (n.setMeta(t, e), !0), JF = (t, e = {}) => ({ state: n, dispatch: o, chain: i }) => {
  const r = et(t, n.schema);
  let a;
  return n.selection.$anchor.sameParent(n.selection.$head) && (a = n.selection.$anchor.parent.attrs), r.isTextblock ? i().command(({ commands: l }) => ih(r, { ...a, ...e })(n) ? !0 : l.clearNodes()).command(({ state: l }) => ih(r, { ...a, ...e })(l, o)).run() : (console.warn('[tiptap warn]: Currently "setNode()" only supports text block nodes.'), !1);
}, YF = (t) => ({ tr: e, dispatch: n }) => {
  if (n) {
    const { doc: o } = e, i = In(t, 0, o.content.size), r = oe.create(o, i);
    e.setSelection(r);
  }
  return !0;
}, XF = (t) => ({ tr: e, dispatch: n }) => {
  if (n) {
    const { doc: o } = e, { from: i, to: r } = typeof t == "number" ? { from: t, to: t } : t, a = he.atStart(o).from, l = he.atEnd(o).to, s = In(i, a, l), d = In(r, a, l), c = he.create(o, s, d);
    e.setSelection(c);
  }
  return !0;
}, ZF = (t) => ({ state: e, dispatch: n }) => {
  const o = et(t, e.schema);
  return Az(o)(e, n);
};
function ph(t, e) {
  const n = t.storedMarks || t.selection.$to.parentOffset && t.selection.$from.marks();
  if (n) {
    const o = n.filter((i) => e == null ? void 0 : e.includes(i.type.name));
    t.tr.ensureMarks(o);
  }
}
const QF = ({ keepMarks: t = !0 } = {}) => ({ tr: e, state: n, dispatch: o, editor: i }) => {
  const { selection: r, doc: a } = e, { $from: l, $to: s } = r, d = i.extensionManager.attributes, c = Ua(d, l.node().type.name, l.node().attrs);
  if (r instanceof oe && r.node.isBlock)
    return !l.parentOffset || !Pn(a, l.pos) ? !1 : (o && (t && ph(n, i.extensionManager.splittableMarks), e.split(l.pos).scrollIntoView()), !0);
  if (!l.parent.isBlock)
    return !1;
  const u = s.parentOffset === s.parent.content.size, f = l.depth === 0 ? void 0 : VF(l.node(-1).contentMatchAt(l.indexAfter(-1)));
  let p = u && f ? [
    {
      type: f,
      attrs: c
    }
  ] : void 0, h = Pn(e.doc, e.mapping.map(l.pos), 1, p);
  if (!p && !h && Pn(e.doc, e.mapping.map(l.pos), 1, f ? [{ type: f }] : void 0) && (h = !0, p = f ? [
    {
      type: f,
      attrs: c
    }
  ] : void 0), o) {
    if (h && (r instanceof he && e.deleteSelection(), e.split(e.mapping.map(l.pos), 1, p), f && !u && !l.parentOffset && l.parent.type !== f)) {
      const g = e.mapping.map(l.before()), b = e.doc.resolve(g);
      l.node(-1).canReplaceWith(b.index(), b.index() + 1, f) && e.setNodeMarkup(e.mapping.map(l.before()), f);
    }
    t && ph(n, i.extensionManager.splittableMarks), e.scrollIntoView();
  }
  return h;
}, eN = (t, e = {}) => ({ tr: n, state: o, dispatch: i, editor: r }) => {
  var a;
  const l = et(t, o.schema), { $from: s, $to: d } = o.selection, c = o.selection.node;
  if (c && c.isBlock || s.depth < 2 || !s.sameParent(d))
    return !1;
  const u = s.node(-1);
  if (u.type !== l)
    return !1;
  const f = r.extensionManager.attributes;
  if (s.parent.content.size === 0 && s.node(-1).childCount === s.indexAfter(-1)) {
    if (s.depth === 2 || s.node(-3).type !== l || s.index(-2) !== s.node(-2).childCount - 1)
      return !1;
    if (i) {
      let C = N.empty;
      const x = s.index(-1) ? 1 : s.index(-2) ? 2 : 3;
      for (let B = s.depth - x; B >= s.depth - 3; B -= 1)
        C = N.from(s.node(B).copy(C));
      const R = s.indexAfter(-1) < s.node(-2).childCount ? 1 : s.indexAfter(-2) < s.node(-3).childCount ? 2 : 3, w = {
        ...Ua(f, s.node().type.name, s.node().attrs),
        ...e
      }, T = ((a = l.contentMatch.defaultType) === null || a === void 0 ? void 0 : a.createAndFill(w)) || void 0;
      C = C.append(N.from(l.createAndFill(null, T) || void 0));
      const S = s.before(s.depth - (x - 1));
      n.replace(S, s.after(-R), new J(C, 4 - x, 0));
      let I = -1;
      n.doc.nodesBetween(S, n.doc.content.size, (B, H) => {
        if (I > -1)
          return !1;
        B.isTextblock && B.content.size === 0 && (I = H + 1);
      }), I > -1 && n.setSelection(he.near(n.doc.resolve(I))), n.scrollIntoView();
    }
    return !0;
  }
  const p = d.pos === s.end() ? u.contentMatchAt(0).defaultType : null, h = {
    ...Ua(f, u.type.name, u.attrs),
    ...e
  }, g = {
    ...Ua(f, s.node().type.name, s.node().attrs),
    ...e
  };
  n.delete(s.pos, d.pos);
  const b = p ? [
    { type: l, attrs: h },
    { type: p, attrs: g }
  ] : [{ type: l, attrs: h }];
  if (!Pn(n.doc, s.pos, 2))
    return !1;
  if (i) {
    const { selection: C, storedMarks: x } = o, { splittableMarks: R } = r.extensionManager, w = x || C.$to.parentOffset && C.$from.marks();
    if (n.split(s.pos, 2, b).scrollIntoView(), !w || !i)
      return !0;
    const T = w.filter((S) => R.includes(S.type.name));
    n.ensureMarks(T);
  }
  return !0;
}, ws = (t, e) => {
  const n = eu((a) => a.type === e)(t.selection);
  if (!n)
    return !0;
  const o = t.doc.resolve(Math.max(0, n.pos - 1)).before(n.depth);
  if (o === void 0)
    return !0;
  const i = t.doc.nodeAt(o);
  return n.node.type === (i == null ? void 0 : i.type) && to(t.doc, n.pos) && t.join(n.pos), !0;
}, Cs = (t, e) => {
  const n = eu((a) => a.type === e)(t.selection);
  if (!n)
    return !0;
  const o = t.doc.resolve(n.start).after(n.depth);
  if (o === void 0)
    return !0;
  const i = t.doc.nodeAt(o);
  return n.node.type === (i == null ? void 0 : i.type) && to(t.doc, o) && t.join(o), !0;
}, tN = (t, e, n, o = {}) => ({ editor: i, tr: r, state: a, dispatch: l, chain: s, commands: d, can: c }) => {
  const { extensions: u, splittableMarks: f } = i.extensionManager, p = et(t, a.schema), h = et(e, a.schema), { selection: g, storedMarks: b } = a, { $from: C, $to: x } = g, R = C.blockRange(x), w = b || g.$to.parentOffset && g.$from.marks();
  if (!R)
    return !1;
  const T = eu((S) => uh(S.type.name, u))(g);
  if (R.depth >= 1 && T && R.depth - T.depth <= 1) {
    if (T.node.type === p)
      return d.liftListItem(h);
    if (uh(T.node.type.name, u) && p.validContent(T.node.content) && l)
      return s().command(() => (r.setNodeMarkup(T.pos, p), !0)).command(() => ws(r, p)).command(() => Cs(r, p)).run();
  }
  return !n || !w || !l ? s().command(() => c().wrapInList(p, o) ? !0 : d.clearNodes()).wrapInList(p, o).command(() => ws(r, p)).command(() => Cs(r, p)).run() : s().command(() => {
    const S = c().wrapInList(p, o), I = w.filter((B) => f.includes(B.type.name));
    return r.ensureMarks(I), S ? !0 : d.clearNodes();
  }).wrapInList(p, o).command(() => ws(r, p)).command(() => Cs(r, p)).run();
}, nN = (t, e = {}, n = {}) => ({ state: o, commands: i }) => {
  const { extendEmptyMarkRange: r = !1 } = n, a = oo(t, o.schema);
  return nc(o, a, e) ? i.unsetMark(a, { extendEmptyMarkRange: r }) : i.setMark(a, e);
}, oN = (t, e, n = {}) => ({ state: o, commands: i }) => {
  const r = et(t, o.schema), a = et(e, o.schema), l = Ji(o, r, n);
  let s;
  return o.selection.$anchor.sameParent(o.selection.$head) && (s = o.selection.$anchor.parent.attrs), l ? i.setNode(a, s) : i.setNode(r, { ...s, ...n });
}, rN = (t, e = {}) => ({ state: n, commands: o }) => {
  const i = et(t, n.schema);
  return Ji(n, i, e) ? o.lift(i) : o.wrapIn(i, e);
}, iN = () => ({ state: t, dispatch: e }) => {
  const n = t.plugins;
  for (let o = 0; o < n.length; o += 1) {
    const i = n[o];
    let r;
    if (i.spec.isInputRules && (r = i.getState(t))) {
      if (e) {
        const a = t.tr, l = r.transform;
        for (let s = l.steps.length - 1; s >= 0; s -= 1)
          a.step(l.steps[s].invert(l.docs[s]));
        if (r.text) {
          const s = a.doc.resolve(r.from).marks();
          a.replaceWith(r.from, r.to, t.schema.text(r.text, s));
        } else
          a.delete(r.from, r.to);
      }
      return !0;
    }
  }
  return !1;
}, aN = () => ({ tr: t, dispatch: e }) => {
  const { selection: n } = t, { empty: o, ranges: i } = n;
  return o || e && i.forEach((r) => {
    t.removeMark(r.$from.pos, r.$to.pos);
  }), !0;
}, lN = (t, e = {}) => ({ tr: n, state: o, dispatch: i }) => {
  var r;
  const { extendEmptyMarkRange: a = !1 } = e, { selection: l } = n, s = oo(t, o.schema), { $from: d, empty: c, ranges: u } = l;
  if (!i)
    return !0;
  if (c && a) {
    let { from: f, to: p } = l;
    const h = (r = d.marks().find((b) => b.type === s)) === null || r === void 0 ? void 0 : r.attrs, g = Xc(d, s, h);
    g && (f = g.from, p = g.to), n.removeMark(f, p, s);
  } else
    u.forEach((f) => {
      n.removeMark(f.$from.pos, f.$to.pos, s);
    });
  return n.removeStoredMark(s), !0;
}, sN = (t, e = {}) => ({ tr: n, state: o, dispatch: i }) => {
  let r = null, a = null;
  const l = Kl(typeof t == "string" ? t : t.name, o.schema);
  return l ? (l === "node" && (r = et(t, o.schema)), l === "mark" && (a = oo(t, o.schema)), i && n.selection.ranges.forEach((s) => {
    const d = s.$from.pos, c = s.$to.pos;
    let u, f, p, h;
    n.selection.empty ? o.doc.nodesBetween(d, c, (g, b) => {
      r && r === g.type && (p = Math.max(b, d), h = Math.min(b + g.nodeSize, c), u = b, f = g);
    }) : o.doc.nodesBetween(d, c, (g, b) => {
      b < d && r && r === g.type && (p = Math.max(b, d), h = Math.min(b + g.nodeSize, c), u = b, f = g), b >= d && b <= c && (r && r === g.type && n.setNodeMarkup(b, void 0, {
        ...g.attrs,
        ...e
      }), a && g.marks.length && g.marks.forEach((C) => {
        if (a === C.type) {
          const x = Math.max(b, d), R = Math.min(b + g.nodeSize, c);
          n.addMark(x, R, a.create({
            ...C.attrs,
            ...e
          }));
        }
      }));
    }), f && (u !== void 0 && n.setNodeMarkup(u, void 0, {
      ...f.attrs,
      ...e
    }), a && f.marks.length && f.marks.forEach((g) => {
      a === g.type && n.addMark(p, h, a.create({
        ...g.attrs,
        ...e
      }));
    }));
  }), !0) : !1;
}, dN = (t, e = {}) => ({ state: n, dispatch: o }) => {
  const i = et(t, n.schema);
  return Pz(i, e)(n, o);
}, cN = (t, e = {}) => ({ state: n, dispatch: o }) => {
  const i = et(t, n.schema);
  return $z(i, e)(n, o);
};
var uN = /* @__PURE__ */ Object.freeze({
  __proto__: null,
  blur: Xz,
  clearContent: Zz,
  clearNodes: Qz,
  command: eF,
  createParagraphNear: tF,
  cut: nF,
  deleteCurrentNode: oF,
  deleteNode: rF,
  deleteRange: iF,
  deleteSelection: aF,
  enter: lF,
  exitCode: sF,
  extendMarkRange: dF,
  first: cF,
  focus: pF,
  forEach: fF,
  insertContent: hF,
  insertContentAt: bF,
  joinBackward: kF,
  joinDown: yF,
  joinForward: wF,
  joinItemBackward: CF,
  joinItemForward: xF,
  joinTextblockBackward: SF,
  joinTextblockForward: IF,
  joinUp: vF,
  keyboardShortcut: PF,
  lift: $F,
  liftEmptyBlock: TF,
  liftListItem: RF,
  newlineInCode: BF,
  resetAttributes: EF,
  scrollIntoView: MF,
  selectAll: AF,
  selectNodeBackward: DF,
  selectNodeForward: LF,
  selectParentNode: zF,
  selectTextblockEnd: FF,
  selectTextblockStart: NF,
  setContent: jF,
  setMark: GF,
  setMeta: qF,
  setNode: JF,
  setNodeSelection: YF,
  setTextSelection: XF,
  sinkListItem: ZF,
  splitBlock: QF,
  splitListItem: eN,
  toggleList: tN,
  toggleMark: nN,
  toggleNode: oN,
  toggleWrap: rN,
  undoInputRule: iN,
  unsetAllMarks: aN,
  unsetMark: lN,
  updateAttributes: sN,
  wrapIn: dN,
  wrapInList: cN
});
const pN = Je.create({
  name: "commands",
  addCommands() {
    return {
      ...uN
    };
  }
}), fN = Je.create({
  name: "drop",
  addProseMirrorPlugins() {
    return [
      new dt({
        key: new Lt("tiptapDrop"),
        props: {
          handleDrop: (t, e, n, o) => {
            this.editor.emit("drop", {
              editor: this.editor,
              event: e,
              slice: n,
              moved: o
            });
          }
        }
      })
    ];
  }
}), hN = Je.create({
  name: "editable",
  addProseMirrorPlugins() {
    return [
      new dt({
        key: new Lt("editable"),
        props: {
          editable: () => this.editor.options.editable
        }
      })
    ];
  }
}), mN = new Lt("focusEvents"), gN = Je.create({
  name: "focusEvents",
  addProseMirrorPlugins() {
    const { editor: t } = this;
    return [
      new dt({
        key: mN,
        props: {
          handleDOMEvents: {
            focus: (e, n) => {
              t.isFocused = !0;
              const o = t.state.tr.setMeta("focus", { event: n }).setMeta("addToHistory", !1);
              return e.dispatch(o), !1;
            },
            blur: (e, n) => {
              t.isFocused = !1;
              const o = t.state.tr.setMeta("blur", { event: n }).setMeta("addToHistory", !1);
              return e.dispatch(o), !1;
            }
          }
        }
      })
    ];
  }
}), bN = Je.create({
  name: "keymap",
  addKeyboardShortcuts() {
    const t = () => this.editor.commands.first(({ commands: a }) => [
      () => a.undoInputRule(),
      // maybe convert first text block node to default node
      () => a.command(({ tr: l }) => {
        const { selection: s, doc: d } = l, { empty: c, $anchor: u } = s, { pos: f, parent: p } = u, h = u.parent.isTextblock && f > 0 ? l.doc.resolve(f - 1) : u, g = h.parent.type.spec.isolating, b = u.pos - u.parentOffset, C = g && h.parent.childCount === 1 ? b === u.pos : ve.atStart(d).from === f;
        return !c || !p.type.isTextblock || p.textContent.length || !C || C && u.parent.type.name === "paragraph" ? !1 : a.clearNodes();
      }),
      () => a.deleteSelection(),
      () => a.joinBackward(),
      () => a.selectNodeBackward()
    ]), e = () => this.editor.commands.first(({ commands: a }) => [
      () => a.deleteSelection(),
      () => a.deleteCurrentNode(),
      () => a.joinForward(),
      () => a.selectNodeForward()
    ]), o = {
      Enter: () => this.editor.commands.first(({ commands: a }) => [
        () => a.newlineInCode(),
        () => a.createParagraphNear(),
        () => a.liftEmptyBlock(),
        () => a.splitBlock()
      ]),
      "Mod-Enter": () => this.editor.commands.exitCode(),
      Backspace: t,
      "Mod-Backspace": t,
      "Shift-Backspace": t,
      Delete: e,
      "Mod-Delete": e,
      "Mod-a": () => this.editor.commands.selectAll()
    }, i = {
      ...o
    }, r = {
      ...o,
      "Ctrl-h": t,
      "Alt-Backspace": t,
      "Ctrl-d": e,
      "Ctrl-Alt-Backspace": e,
      "Alt-Delete": e,
      "Alt-d": e,
      "Ctrl-a": () => this.editor.commands.selectTextblockStart(),
      "Ctrl-e": () => this.editor.commands.selectTextblockEnd()
    };
    return Qc() || h0() ? r : i;
  },
  addProseMirrorPlugins() {
    return [
      // With this plugin we check if the whole document was selected and deleted.
      // In this case we will additionally call `clearNodes()` to convert e.g. a heading
      // to a paragraph if necessary.
      // This is an alternative to ProseMirror's `AllSelection`, which doesn’t work well
      // with many other commands.
      new dt({
        key: new Lt("clearDocument"),
        appendTransaction: (t, e, n) => {
          if (t.some((g) => g.getMeta("composition")))
            return;
          const o = t.some((g) => g.docChanged) && !e.doc.eq(n.doc), i = t.some((g) => g.getMeta("preventClearDocument"));
          if (!o || i)
            return;
          const { empty: r, from: a, to: l } = e.selection, s = ve.atStart(e.doc).from, d = ve.atEnd(e.doc).to;
          if (r || !(a === s && l === d) || !tu(n.doc))
            return;
          const f = n.tr, p = Fl({
            state: n,
            transaction: f
          }), { commands: h } = new Nl({
            editor: this.editor,
            state: p
          });
          if (h.clearNodes(), !!f.steps.length)
            return f;
        }
      })
    ];
  }
}), vN = Je.create({
  name: "paste",
  addProseMirrorPlugins() {
    return [
      new dt({
        key: new Lt("tiptapPaste"),
        props: {
          handlePaste: (t, e, n) => {
            this.editor.emit("paste", {
              editor: this.editor,
              event: e,
              slice: n
            });
          }
        }
      })
    ];
  }
}), yN = Je.create({
  name: "tabindex",
  addProseMirrorPlugins() {
    return [
      new dt({
        key: new Lt("tabindex"),
        props: {
          attributes: () => this.editor.isEditable ? { tabindex: "0" } : {}
        }
      })
    ];
  }
});
class mo {
  get name() {
    return this.node.type.name;
  }
  constructor(e, n, o = !1, i = null) {
    this.currentNode = null, this.actualDepth = null, this.isBlock = o, this.resolvedPos = e, this.editor = n, this.currentNode = i;
  }
  get node() {
    return this.currentNode || this.resolvedPos.node();
  }
  get element() {
    return this.editor.view.domAtPos(this.pos).node;
  }
  get depth() {
    var e;
    return (e = this.actualDepth) !== null && e !== void 0 ? e : this.resolvedPos.depth;
  }
  get pos() {
    return this.resolvedPos.pos;
  }
  get content() {
    return this.node.content;
  }
  set content(e) {
    let n = this.from, o = this.to;
    if (this.isBlock) {
      if (this.content.size === 0) {
        console.error(`You can’t set content on a block node. Tried to set content on ${this.name} at ${this.pos}`);
        return;
      }
      n = this.from + 1, o = this.to - 1;
    }
    this.editor.commands.insertContentAt({ from: n, to: o }, e);
  }
  get attributes() {
    return this.node.attrs;
  }
  get textContent() {
    return this.node.textContent;
  }
  get size() {
    return this.node.nodeSize;
  }
  get from() {
    return this.isBlock ? this.pos : this.resolvedPos.start(this.resolvedPos.depth);
  }
  get range() {
    return {
      from: this.from,
      to: this.to
    };
  }
  get to() {
    return this.isBlock ? this.pos + this.size : this.resolvedPos.end(this.resolvedPos.depth) + (this.node.isText ? 0 : 1);
  }
  get parent() {
    if (this.depth === 0)
      return null;
    const e = this.resolvedPos.start(this.resolvedPos.depth - 1), n = this.resolvedPos.doc.resolve(e);
    return new mo(n, this.editor);
  }
  get before() {
    let e = this.resolvedPos.doc.resolve(this.from - (this.isBlock ? 1 : 2));
    return e.depth !== this.depth && (e = this.resolvedPos.doc.resolve(this.from - 3)), new mo(e, this.editor);
  }
  get after() {
    let e = this.resolvedPos.doc.resolve(this.to + (this.isBlock ? 2 : 1));
    return e.depth !== this.depth && (e = this.resolvedPos.doc.resolve(this.to + 3)), new mo(e, this.editor);
  }
  get children() {
    const e = [];
    return this.node.content.forEach((n, o) => {
      const i = n.isBlock && !n.isTextblock, r = n.isAtom && !n.isText, a = this.pos + o + (r ? 0 : 1);
      if (a < 0 || a > this.resolvedPos.doc.nodeSize - 2)
        return;
      const l = this.resolvedPos.doc.resolve(a);
      if (!i && l.depth <= this.depth)
        return;
      const s = new mo(l, this.editor, i, i ? n : null);
      i && (s.actualDepth = this.depth + 1), e.push(new mo(l, this.editor, i, i ? n : null));
    }), e;
  }
  get firstChild() {
    return this.children[0] || null;
  }
  get lastChild() {
    const e = this.children;
    return e[e.length - 1] || null;
  }
  closest(e, n = {}) {
    let o = null, i = this.parent;
    for (; i && !o; ) {
      if (i.node.type.name === e)
        if (Object.keys(n).length > 0) {
          const r = i.node.attrs, a = Object.keys(n);
          for (let l = 0; l < a.length; l += 1) {
            const s = a[l];
            if (r[s] !== n[s])
              break;
          }
        } else
          o = i;
      i = i.parent;
    }
    return o;
  }
  querySelector(e, n = {}) {
    return this.querySelectorAll(e, n, !0)[0] || null;
  }
  querySelectorAll(e, n = {}, o = !1) {
    let i = [];
    if (!this.children || this.children.length === 0)
      return i;
    const r = Object.keys(n);
    return this.children.forEach((a) => {
      o && i.length > 0 || (a.node.type.name === e && r.every((s) => n[s] === a.node.attrs[s]) && i.push(a), !(o && i.length > 0) && (i = i.concat(a.querySelectorAll(e, n, o))));
    }), i;
  }
  setAttribute(e) {
    const { tr: n } = this.editor.state;
    n.setNodeMarkup(this.from, void 0, {
      ...this.node.attrs,
      ...e
    }), this.editor.view.dispatch(n);
  }
}
const kN = `.ProseMirror {
  position: relative;
}

.ProseMirror {
  word-wrap: break-word;
  white-space: pre-wrap;
  white-space: break-spaces;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0; /* the above doesn't seem to work in Edge */
}

.ProseMirror [contenteditable="false"] {
  white-space: normal;
}

.ProseMirror [contenteditable="false"] [contenteditable="true"] {
  white-space: pre-wrap;
}

.ProseMirror pre {
  white-space: pre-wrap;
}

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
  width: 0 !important;
  height: 0 !important;
}

.ProseMirror-gapcursor {
  display: none;
  pointer-events: none;
  position: absolute;
  margin: 0;
}

.ProseMirror-gapcursor:after {
  content: "";
  display: block;
  position: absolute;
  top: -2px;
  width: 20px;
  border-top: 1px solid black;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
}

@keyframes ProseMirror-cursor-blink {
  to {
    visibility: hidden;
  }
}

.ProseMirror-hideselection *::selection {
  background: transparent;
}

.ProseMirror-hideselection *::-moz-selection {
  background: transparent;
}

.ProseMirror-hideselection * {
  caret-color: transparent;
}

.ProseMirror-focused .ProseMirror-gapcursor {
  display: block;
}

.tippy-box[data-animation=fade][data-state=hidden] {
  opacity: 0
}`;
function wN(t, e, n) {
  const o = document.querySelector("style[data-tiptap-style]");
  if (o !== null)
    return o;
  const i = document.createElement("style");
  return e && i.setAttribute("nonce", e), i.setAttribute("data-tiptap-style", ""), i.innerHTML = t, document.getElementsByTagName("head")[0].appendChild(i), i;
}
let CN = class extends Dz {
  constructor(e = {}) {
    super(), this.isFocused = !1, this.isInitialized = !1, this.extensionStorage = {}, this.options = {
      element: document.createElement("div"),
      content: "",
      injectCSS: !0,
      injectNonce: void 0,
      extensions: [],
      autofocus: !1,
      editable: !0,
      editorProps: {},
      parseOptions: {},
      coreExtensionOptions: {},
      enableInputRules: !0,
      enablePasteRules: !0,
      enableCoreExtensions: !0,
      enableContentCheck: !1,
      emitContentError: !1,
      onBeforeCreate: () => null,
      onCreate: () => null,
      onUpdate: () => null,
      onSelectionUpdate: () => null,
      onTransaction: () => null,
      onFocus: () => null,
      onBlur: () => null,
      onDestroy: () => null,
      onContentError: ({ error: n }) => {
        throw n;
      },
      onPaste: () => null,
      onDrop: () => null
    }, this.isCapturingTransaction = !1, this.capturedTransaction = null, this.setOptions(e), this.createExtensionManager(), this.createCommandManager(), this.createSchema(), this.on("beforeCreate", this.options.onBeforeCreate), this.emit("beforeCreate", { editor: this }), this.on("contentError", this.options.onContentError), this.createView(), this.injectCSS(), this.on("create", this.options.onCreate), this.on("update", this.options.onUpdate), this.on("selectionUpdate", this.options.onSelectionUpdate), this.on("transaction", this.options.onTransaction), this.on("focus", this.options.onFocus), this.on("blur", this.options.onBlur), this.on("destroy", this.options.onDestroy), this.on("drop", ({ event: n, slice: o, moved: i }) => this.options.onDrop(n, o, i)), this.on("paste", ({ event: n, slice: o }) => this.options.onPaste(n, o)), window.setTimeout(() => {
      this.isDestroyed || (this.commands.focus(this.options.autofocus), this.emit("create", { editor: this }), this.isInitialized = !0);
    }, 0);
  }
  /**
   * Returns the editor storage.
   */
  get storage() {
    return this.extensionStorage;
  }
  /**
   * An object of all registered commands.
   */
  get commands() {
    return this.commandManager.commands;
  }
  /**
   * Create a command chain to call multiple commands at once.
   */
  chain() {
    return this.commandManager.chain();
  }
  /**
   * Check if a command or a command chain can be executed. Without executing it.
   */
  can() {
    return this.commandManager.can();
  }
  /**
   * Inject CSS styles.
   */
  injectCSS() {
    this.options.injectCSS && document && (this.css = wN(kN, this.options.injectNonce));
  }
  /**
   * Update editor options.
   *
   * @param options A list of options
   */
  setOptions(e = {}) {
    this.options = {
      ...this.options,
      ...e
    }, !(!this.view || !this.state || this.isDestroyed) && (this.options.editorProps && this.view.setProps(this.options.editorProps), this.view.updateState(this.state));
  }
  /**
   * Update editable state of the editor.
   */
  setEditable(e, n = !0) {
    this.setOptions({ editable: e }), n && this.emit("update", { editor: this, transaction: this.state.tr });
  }
  /**
   * Returns whether the editor is editable.
   */
  get isEditable() {
    return this.options.editable && this.view && this.view.editable;
  }
  /**
   * Returns the editor state.
   */
  get state() {
    return this.view.state;
  }
  /**
   * Register a ProseMirror plugin.
   *
   * @param plugin A ProseMirror plugin
   * @param handlePlugins Control how to merge the plugin into the existing plugins.
   * @returns The new editor state
   */
  registerPlugin(e, n) {
    const o = d0(n) ? n(e, [...this.state.plugins]) : [...this.state.plugins, e], i = this.state.reconfigure({ plugins: o });
    return this.view.updateState(i), i;
  }
  /**
   * Unregister a ProseMirror plugin.
   *
   * @param nameOrPluginKeyToRemove The plugins name
   * @returns The new editor state or undefined if the editor is destroyed
   */
  unregisterPlugin(e) {
    if (this.isDestroyed)
      return;
    const n = this.state.plugins;
    let o = n;
    if ([].concat(e).forEach((r) => {
      const a = typeof r == "string" ? `${r}$` : r.key;
      o = o.filter((l) => !l.key.startsWith(a));
    }), n.length === o.length)
      return;
    const i = this.state.reconfigure({
      plugins: o
    });
    return this.view.updateState(i), i;
  }
  /**
   * Creates an extension manager.
   */
  createExtensionManager() {
    var e, n;
    const i = [...this.options.enableCoreExtensions ? [
      hN,
      Yz.configure({
        blockSeparator: (n = (e = this.options.coreExtensionOptions) === null || e === void 0 ? void 0 : e.clipboardTextSerializer) === null || n === void 0 ? void 0 : n.blockSeparator
      }),
      pN,
      gN,
      bN,
      yN,
      fN,
      vN
    ].filter((r) => typeof this.options.enableCoreExtensions == "object" ? this.options.enableCoreExtensions[r.name] !== !1 : !0) : [], ...this.options.extensions].filter((r) => ["extension", "node", "mark"].includes(r == null ? void 0 : r.type));
    this.extensionManager = new Xo(i, this);
  }
  /**
   * Creates an command manager.
   */
  createCommandManager() {
    this.commandManager = new Nl({
      editor: this
    });
  }
  /**
   * Creates a ProseMirror schema.
   */
  createSchema() {
    this.schema = this.extensionManager.schema;
  }
  /**
   * Creates a ProseMirror view.
   */
  createView() {
    var e;
    let n;
    try {
      n = tc(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: this.options.enableContentCheck });
    } catch (a) {
      if (!(a instanceof Error) || !["[tiptap error]: Invalid JSON content", "[tiptap error]: Invalid HTML content"].includes(a.message))
        throw a;
      this.emit("contentError", {
        editor: this,
        error: a,
        disableCollaboration: () => {
          this.storage.collaboration && (this.storage.collaboration.isDisabled = !0), this.options.extensions = this.options.extensions.filter((l) => l.name !== "collaboration"), this.createExtensionManager();
        }
      }), n = tc(this.options.content, this.schema, this.options.parseOptions, { errorOnInvalidContent: !1 });
    }
    const o = p0(n, this.options.autofocus);
    this.view = new qb(this.options.element, {
      ...this.options.editorProps,
      attributes: {
        // add `role="textbox"` to the editor element
        role: "textbox",
        ...(e = this.options.editorProps) === null || e === void 0 ? void 0 : e.attributes
      },
      dispatchTransaction: this.dispatchTransaction.bind(this),
      state: Yo.create({
        doc: n,
        selection: o || void 0
      })
    });
    const i = this.state.reconfigure({
      plugins: this.extensionManager.plugins
    });
    this.view.updateState(i), this.createNodeViews(), this.prependClass();
    const r = this.view.dom;
    r.editor = this;
  }
  /**
   * Creates all node views.
   */
  createNodeViews() {
    this.view.isDestroyed || this.view.setProps({
      nodeViews: this.extensionManager.nodeViews
    });
  }
  /**
   * Prepend class name to element.
   */
  prependClass() {
    this.view.dom.className = `tiptap ${this.view.dom.className}`;
  }
  captureTransaction(e) {
    this.isCapturingTransaction = !0, e(), this.isCapturingTransaction = !1;
    const n = this.capturedTransaction;
    return this.capturedTransaction = null, n;
  }
  /**
   * The callback over which to send transactions (state updates) produced by the view.
   *
   * @param transaction An editor state transaction
   */
  dispatchTransaction(e) {
    if (this.view.isDestroyed)
      return;
    if (this.isCapturingTransaction) {
      if (!this.capturedTransaction) {
        this.capturedTransaction = e;
        return;
      }
      e.steps.forEach((a) => {
        var l;
        return (l = this.capturedTransaction) === null || l === void 0 ? void 0 : l.step(a);
      });
      return;
    }
    const n = this.state.apply(e), o = !this.state.selection.eq(n.selection);
    this.emit("beforeTransaction", {
      editor: this,
      transaction: e,
      nextState: n
    }), this.view.updateState(n), this.emit("transaction", {
      editor: this,
      transaction: e
    }), o && this.emit("selectionUpdate", {
      editor: this,
      transaction: e
    });
    const i = e.getMeta("focus"), r = e.getMeta("blur");
    i && this.emit("focus", {
      editor: this,
      event: i.event,
      transaction: e
    }), r && this.emit("blur", {
      editor: this,
      event: r.event,
      transaction: e
    }), !(!e.docChanged || e.getMeta("preventUpdate")) && this.emit("update", {
      editor: this,
      transaction: e
    });
  }
  /**
   * Get attributes of the currently selected node or mark.
   */
  getAttributes(e) {
    return HF(this.state, e);
  }
  isActive(e, n) {
    const o = typeof e == "string" ? e : null, i = typeof e == "string" ? n : e;
    return WF(this.state, o, i);
  }
  /**
   * Get the document as JSON.
   */
  getJSON() {
    return this.state.doc.toJSON();
  }
  /**
   * Get the document as HTML.
   */
  getHTML() {
    return qc(this.state.doc.content, this.schema);
  }
  /**
   * Get the document as text.
   */
  getText(e) {
    const { blockSeparator: n = `

`, textSerializers: o = {} } = e || {};
    return g0(this.state.doc, {
      blockSeparator: n,
      textSerializers: {
        ...Yc(this.schema),
        ...o
      }
    });
  }
  /**
   * Check if there is no content.
   */
  get isEmpty() {
    return tu(this.state.doc);
  }
  /**
   * Get the number of characters for the current document.
   *
   * @deprecated
   */
  getCharacterCount() {
    return console.warn('[tiptap warn]: "editor.getCharacterCount()" is deprecated. Please use "editor.storage.characterCount.characters()" instead.'), this.state.doc.content.size - 2;
  }
  /**
   * Destroy the editor.
   */
  destroy() {
    if (this.emit("destroy"), this.view) {
      const e = this.view.dom;
      e && e.editor && delete e.editor, this.view.destroy();
    }
    this.removeAllListeners();
  }
  /**
   * Check if the editor is already destroyed.
   */
  get isDestroyed() {
    var e;
    return !(!((e = this.view) === null || e === void 0) && e.docView);
  }
  $node(e, n) {
    var o;
    return ((o = this.$doc) === null || o === void 0 ? void 0 : o.querySelector(e, n)) || null;
  }
  $nodes(e, n) {
    var o;
    return ((o = this.$doc) === null || o === void 0 ? void 0 : o.querySelectorAll(e, n)) || null;
  }
  $pos(e) {
    const n = this.state.doc.resolve(e);
    return new mo(n, this);
  }
  get $doc() {
    return this.$pos(0);
  }
};
function sr(t) {
  return new Vl({
    find: t.find,
    handler: ({ state: e, range: n, match: o }) => {
      const i = ye(t.getAttributes, void 0, o);
      if (i === !1 || i === null)
        return null;
      const { tr: r } = e, a = o[o.length - 1], l = o[0];
      if (a) {
        const s = l.search(/\S/), d = n.from + l.indexOf(a), c = d + a.length;
        if (b0(n.from, n.to, e.doc).filter((p) => p.mark.type.excluded.find((g) => g === t.type && g !== p.mark.type)).filter((p) => p.to > d).length)
          return null;
        c < n.to && r.delete(c, n.to), d > n.from && r.delete(n.from + s, d);
        const f = n.from + s + a.length;
        r.addMark(n.from + s, f, t.type.create(i || {})), r.removeStoredMark(t.type);
      }
    }
  });
}
function xN(t) {
  return new Vl({
    find: t.find,
    handler: ({ state: e, range: n, match: o }) => {
      const i = ye(t.getAttributes, void 0, o) || {}, { tr: r } = e, a = n.from;
      let l = n.to;
      const s = t.type.create(i);
      if (o[1]) {
        const d = o[0].lastIndexOf(o[1]);
        let c = a + d;
        c > l ? c = l : l = c + o[1].length;
        const u = o[0][o[0].length - 1];
        r.insertText(u, a + o[0].length - 1), r.replaceWith(c, l, s);
      } else if (o[0]) {
        const d = t.type.isInline ? a : a - 1;
        r.insert(d, t.type.create(i)).delete(r.mapping.map(a), r.mapping.map(l));
      }
      r.scrollIntoView();
    }
  });
}
function oc(t) {
  return new Vl({
    find: t.find,
    handler: ({ state: e, range: n, match: o }) => {
      const i = e.doc.resolve(n.from), r = ye(t.getAttributes, void 0, o) || {};
      if (!i.node(-1).canReplaceWith(i.index(-1), i.indexAfter(-1), t.type))
        return null;
      e.tr.delete(n.from, n.to).setBlockType(n.from, n.from, t.type, r);
    }
  });
}
function Yi(t) {
  return new Vl({
    find: t.find,
    handler: ({ state: e, range: n, match: o, chain: i }) => {
      const r = ye(t.getAttributes, void 0, o) || {}, a = e.tr.delete(n.from, n.to), s = a.doc.resolve(n.from).blockRange(), d = s && Ec(s, t.type, r);
      if (!d)
        return null;
      if (a.wrap(s, d), t.keepMarks && t.editor) {
        const { selection: u, storedMarks: f } = e, { splittableMarks: p } = t.editor.extensionManager, h = f || u.$to.parentOffset && u.$from.marks();
        if (h) {
          const g = h.filter((b) => p.includes(b.type.name));
          a.ensureMarks(g);
        }
      }
      if (t.keepAttributes) {
        const u = t.type.name === "bulletList" || t.type.name === "orderedList" ? "listItem" : "taskList";
        i().updateAttributes(u, r).run();
      }
      const c = a.doc.resolve(n.from - 1).nodeBefore;
      c && c.type === t.type && to(a.doc, n.from - 1) && (!t.joinPredicate || t.joinPredicate(o, c)) && a.join(n.from - 1);
    }
  });
}
class $t {
  constructor(e = {}) {
    this.type = "node", this.name = "node", this.parent = null, this.child = null, this.config = {
      name: this.name,
      defaultOptions: {}
    }, this.config = {
      ...this.config,
      ...e
    }, this.name = this.config.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${this.name}".`), this.options = this.config.defaultOptions, this.config.addOptions && (this.options = ye(X(this, "addOptions", {
      name: this.name
    }))), this.storage = ye(X(this, "addStorage", {
      name: this.name,
      options: this.options
    })) || {};
  }
  static create(e = {}) {
    return new $t(e);
  }
  configure(e = {}) {
    const n = this.extend({
      ...this.config,
      addOptions: () => _l(this.options, e)
    });
    return n.name = this.name, n.parent = this.parent, n;
  }
  extend(e = {}) {
    const n = new $t(e);
    return n.parent = this, this.child = n, n.name = e.name ? e.name : n.parent.name, e.defaultOptions && Object.keys(e.defaultOptions).length > 0 && console.warn(`[tiptap warn]: BREAKING CHANGE: "defaultOptions" is deprecated. Please use "addOptions" instead. Found in extension: "${n.name}".`), n.options = ye(X(n, "addOptions", {
      name: n.name
    })), n.storage = ye(X(n, "addStorage", {
      name: n.name,
      options: n.options
    })), n;
  }
}
function dr(t) {
  return new Hz({
    find: t.find,
    handler: ({ state: e, range: n, match: o, pasteEvent: i }) => {
      const r = ye(t.getAttributes, void 0, o, i);
      if (r === !1 || r === null)
        return null;
      const { tr: a } = e, l = o[o.length - 1], s = o[0];
      let d = n.to;
      if (l) {
        const c = s.search(/\S/), u = n.from + s.indexOf(l), f = u + l.length;
        if (b0(n.from, n.to, e.doc).filter((h) => h.mark.type.excluded.find((b) => b === t.type && b !== h.mark.type)).filter((h) => h.to > u).length)
          return null;
        f < n.to && a.delete(f, n.to), u > n.from && a.delete(n.from + c, u), d = n.from + c + l.length, a.addMark(n.from + c, d, t.type.create(r || {})), a.removeStoredMark(t.type);
      }
    }
  });
}
function SN(t, e) {
  const { selection: n } = t, { $from: o } = n;
  if (n instanceof oe) {
    const r = o.index();
    return o.parent.canReplaceWith(r, r + 1, e);
  }
  let i = o.depth;
  for (; i >= 0; ) {
    const r = o.index(i);
    if (o.node(i).contentMatchAt(r).matchType(e))
      return !0;
    i -= 1;
  }
  return !1;
}
var Ot = "top", Gt = "bottom", qt = "right", Pt = "left", nu = "auto", ua = [Ot, Gt, qt, Pt], cr = "start", Xi = "end", IN = "clippingParents", k0 = "viewport", Pr = "popper", ON = "reference", fh = /* @__PURE__ */ ua.reduce(function(t, e) {
  return t.concat([e + "-" + cr, e + "-" + Xi]);
}, []), w0 = /* @__PURE__ */ [].concat(ua, [nu]).reduce(function(t, e) {
  return t.concat([e, e + "-" + cr, e + "-" + Xi]);
}, []), PN = "beforeRead", $N = "read", TN = "afterRead", RN = "beforeMain", BN = "main", EN = "afterMain", MN = "beforeWrite", AN = "write", DN = "afterWrite", LN = [PN, $N, TN, RN, BN, EN, MN, AN, DN];
function bn(t) {
  return t ? (t.nodeName || "").toLowerCase() : null;
}
function At(t) {
  if (t == null)
    return window;
  if (t.toString() !== "[object Window]") {
    var e = t.ownerDocument;
    return e && e.defaultView || window;
  }
  return t;
}
function Ro(t) {
  var e = At(t).Element;
  return t instanceof e || t instanceof Element;
}
function Ut(t) {
  var e = At(t).HTMLElement;
  return t instanceof e || t instanceof HTMLElement;
}
function ou(t) {
  if (typeof ShadowRoot > "u")
    return !1;
  var e = At(t).ShadowRoot;
  return t instanceof e || t instanceof ShadowRoot;
}
function zN(t) {
  var e = t.state;
  Object.keys(e.elements).forEach(function(n) {
    var o = e.styles[n] || {}, i = e.attributes[n] || {}, r = e.elements[n];
    !Ut(r) || !bn(r) || (Object.assign(r.style, o), Object.keys(i).forEach(function(a) {
      var l = i[a];
      l === !1 ? r.removeAttribute(a) : r.setAttribute(a, l === !0 ? "" : l);
    }));
  });
}
function FN(t) {
  var e = t.state, n = {
    popper: {
      position: e.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(e.elements.popper.style, n.popper), e.styles = n, e.elements.arrow && Object.assign(e.elements.arrow.style, n.arrow), function() {
    Object.keys(e.elements).forEach(function(o) {
      var i = e.elements[o], r = e.attributes[o] || {}, a = Object.keys(e.styles.hasOwnProperty(o) ? e.styles[o] : n[o]), l = a.reduce(function(s, d) {
        return s[d] = "", s;
      }, {});
      !Ut(i) || !bn(i) || (Object.assign(i.style, l), Object.keys(r).forEach(function(s) {
        i.removeAttribute(s);
      }));
    });
  };
}
const C0 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: zN,
  effect: FN,
  requires: ["computeStyles"]
};
function fn(t) {
  return t.split("-")[0];
}
var So = Math.max, fl = Math.min, ur = Math.round;
function rc() {
  var t = navigator.userAgentData;
  return t != null && t.brands && Array.isArray(t.brands) ? t.brands.map(function(e) {
    return e.brand + "/" + e.version;
  }).join(" ") : navigator.userAgent;
}
function x0() {
  return !/^((?!chrome|android).)*safari/i.test(rc());
}
function pr(t, e, n) {
  e === void 0 && (e = !1), n === void 0 && (n = !1);
  var o = t.getBoundingClientRect(), i = 1, r = 1;
  e && Ut(t) && (i = t.offsetWidth > 0 && ur(o.width) / t.offsetWidth || 1, r = t.offsetHeight > 0 && ur(o.height) / t.offsetHeight || 1);
  var a = Ro(t) ? At(t) : window, l = a.visualViewport, s = !x0() && n, d = (o.left + (s && l ? l.offsetLeft : 0)) / i, c = (o.top + (s && l ? l.offsetTop : 0)) / r, u = o.width / i, f = o.height / r;
  return {
    width: u,
    height: f,
    top: c,
    right: d + u,
    bottom: c + f,
    left: d,
    x: d,
    y: c
  };
}
function ru(t) {
  var e = pr(t), n = t.offsetWidth, o = t.offsetHeight;
  return Math.abs(e.width - n) <= 1 && (n = e.width), Math.abs(e.height - o) <= 1 && (o = e.height), {
    x: t.offsetLeft,
    y: t.offsetTop,
    width: n,
    height: o
  };
}
function S0(t, e) {
  var n = e.getRootNode && e.getRootNode();
  if (t.contains(e))
    return !0;
  if (n && ou(n)) {
    var o = e;
    do {
      if (o && t.isSameNode(o))
        return !0;
      o = o.parentNode || o.host;
    } while (o);
  }
  return !1;
}
function Rn(t) {
  return At(t).getComputedStyle(t);
}
function NN(t) {
  return ["table", "td", "th"].indexOf(bn(t)) >= 0;
}
function ro(t) {
  return ((Ro(t) ? t.ownerDocument : (
    // $FlowFixMe[prop-missing]
    t.document
  )) || window.document).documentElement;
}
function Hl(t) {
  return bn(t) === "html" ? t : (
    // this is a quicker (but less type safe) way to save quite some bytes from the bundle
    // $FlowFixMe[incompatible-return]
    // $FlowFixMe[prop-missing]
    t.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    t.parentNode || // DOM Element detected
    (ou(t) ? t.host : null) || // ShadowRoot detected
    // $FlowFixMe[incompatible-call]: HTMLElement is a Node
    ro(t)
  );
}
function hh(t) {
  return !Ut(t) || // https://github.com/popperjs/popper-core/issues/837
  Rn(t).position === "fixed" ? null : t.offsetParent;
}
function jN(t) {
  var e = /firefox/i.test(rc()), n = /Trident/i.test(rc());
  if (n && Ut(t)) {
    var o = Rn(t);
    if (o.position === "fixed")
      return null;
  }
  var i = Hl(t);
  for (ou(i) && (i = i.host); Ut(i) && ["html", "body"].indexOf(bn(i)) < 0; ) {
    var r = Rn(i);
    if (r.transform !== "none" || r.perspective !== "none" || r.contain === "paint" || ["transform", "perspective"].indexOf(r.willChange) !== -1 || e && r.willChange === "filter" || e && r.filter && r.filter !== "none")
      return i;
    i = i.parentNode;
  }
  return null;
}
function pa(t) {
  for (var e = At(t), n = hh(t); n && NN(n) && Rn(n).position === "static"; )
    n = hh(n);
  return n && (bn(n) === "html" || bn(n) === "body" && Rn(n).position === "static") ? e : n || jN(t) || e;
}
function iu(t) {
  return ["top", "bottom"].indexOf(t) >= 0 ? "x" : "y";
}
function Vr(t, e, n) {
  return So(t, fl(e, n));
}
function VN(t, e, n) {
  var o = Vr(t, e, n);
  return o > n ? n : o;
}
function I0() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function O0(t) {
  return Object.assign({}, I0(), t);
}
function P0(t, e) {
  return e.reduce(function(n, o) {
    return n[o] = t, n;
  }, {});
}
var _N = function(e, n) {
  return e = typeof e == "function" ? e(Object.assign({}, n.rects, {
    placement: n.placement
  })) : e, O0(typeof e != "number" ? e : P0(e, ua));
};
function KN(t) {
  var e, n = t.state, o = t.name, i = t.options, r = n.elements.arrow, a = n.modifiersData.popperOffsets, l = fn(n.placement), s = iu(l), d = [Pt, qt].indexOf(l) >= 0, c = d ? "height" : "width";
  if (!(!r || !a)) {
    var u = _N(i.padding, n), f = ru(r), p = s === "y" ? Ot : Pt, h = s === "y" ? Gt : qt, g = n.rects.reference[c] + n.rects.reference[s] - a[s] - n.rects.popper[c], b = a[s] - n.rects.reference[s], C = pa(r), x = C ? s === "y" ? C.clientHeight || 0 : C.clientWidth || 0 : 0, R = g / 2 - b / 2, w = u[p], T = x - f[c] - u[h], S = x / 2 - f[c] / 2 + R, I = Vr(w, S, T), B = s;
    n.modifiersData[o] = (e = {}, e[B] = I, e.centerOffset = I - S, e);
  }
}
function HN(t) {
  var e = t.state, n = t.options, o = n.element, i = o === void 0 ? "[data-popper-arrow]" : o;
  i != null && (typeof i == "string" && (i = e.elements.popper.querySelector(i), !i) || S0(e.elements.popper, i) && (e.elements.arrow = i));
}
const WN = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: KN,
  effect: HN,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function fr(t) {
  return t.split("-")[1];
}
var UN = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function GN(t, e) {
  var n = t.x, o = t.y, i = e.devicePixelRatio || 1;
  return {
    x: ur(n * i) / i || 0,
    y: ur(o * i) / i || 0
  };
}
function mh(t) {
  var e, n = t.popper, o = t.popperRect, i = t.placement, r = t.variation, a = t.offsets, l = t.position, s = t.gpuAcceleration, d = t.adaptive, c = t.roundOffsets, u = t.isFixed, f = a.x, p = f === void 0 ? 0 : f, h = a.y, g = h === void 0 ? 0 : h, b = typeof c == "function" ? c({
    x: p,
    y: g
  }) : {
    x: p,
    y: g
  };
  p = b.x, g = b.y;
  var C = a.hasOwnProperty("x"), x = a.hasOwnProperty("y"), R = Pt, w = Ot, T = window;
  if (d) {
    var S = pa(n), I = "clientHeight", B = "clientWidth";
    if (S === At(n) && (S = ro(n), Rn(S).position !== "static" && l === "absolute" && (I = "scrollHeight", B = "scrollWidth")), S = S, i === Ot || (i === Pt || i === qt) && r === Xi) {
      w = Gt;
      var H = u && S === T && T.visualViewport ? T.visualViewport.height : (
        // $FlowFixMe[prop-missing]
        S[I]
      );
      g -= H - o.height, g *= s ? 1 : -1;
    }
    if (i === Pt || (i === Ot || i === Gt) && r === Xi) {
      R = qt;
      var K = u && S === T && T.visualViewport ? T.visualViewport.width : (
        // $FlowFixMe[prop-missing]
        S[B]
      );
      p -= K - o.width, p *= s ? 1 : -1;
    }
  }
  var j = Object.assign({
    position: l
  }, d && UN), F = c === !0 ? GN({
    x: p,
    y: g
  }, At(n)) : {
    x: p,
    y: g
  };
  if (p = F.x, g = F.y, s) {
    var U;
    return Object.assign({}, j, (U = {}, U[w] = x ? "0" : "", U[R] = C ? "0" : "", U.transform = (T.devicePixelRatio || 1) <= 1 ? "translate(" + p + "px, " + g + "px)" : "translate3d(" + p + "px, " + g + "px, 0)", U));
  }
  return Object.assign({}, j, (e = {}, e[w] = x ? g + "px" : "", e[R] = C ? p + "px" : "", e.transform = "", e));
}
function qN(t) {
  var e = t.state, n = t.options, o = n.gpuAcceleration, i = o === void 0 ? !0 : o, r = n.adaptive, a = r === void 0 ? !0 : r, l = n.roundOffsets, s = l === void 0 ? !0 : l, d = {
    placement: fn(e.placement),
    variation: fr(e.placement),
    popper: e.elements.popper,
    popperRect: e.rects.popper,
    gpuAcceleration: i,
    isFixed: e.options.strategy === "fixed"
  };
  e.modifiersData.popperOffsets != null && (e.styles.popper = Object.assign({}, e.styles.popper, mh(Object.assign({}, d, {
    offsets: e.modifiersData.popperOffsets,
    position: e.options.strategy,
    adaptive: a,
    roundOffsets: s
  })))), e.modifiersData.arrow != null && (e.styles.arrow = Object.assign({}, e.styles.arrow, mh(Object.assign({}, d, {
    offsets: e.modifiersData.arrow,
    position: "absolute",
    adaptive: !1,
    roundOffsets: s
  })))), e.attributes.popper = Object.assign({}, e.attributes.popper, {
    "data-popper-placement": e.placement
  });
}
const JN = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: qN,
  data: {}
};
var La = {
  passive: !0
};
function YN(t) {
  var e = t.state, n = t.instance, o = t.options, i = o.scroll, r = i === void 0 ? !0 : i, a = o.resize, l = a === void 0 ? !0 : a, s = At(e.elements.popper), d = [].concat(e.scrollParents.reference, e.scrollParents.popper);
  return r && d.forEach(function(c) {
    c.addEventListener("scroll", n.update, La);
  }), l && s.addEventListener("resize", n.update, La), function() {
    r && d.forEach(function(c) {
      c.removeEventListener("scroll", n.update, La);
    }), l && s.removeEventListener("resize", n.update, La);
  };
}
const XN = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: function() {
  },
  effect: YN,
  data: {}
};
var ZN = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
};
function Ga(t) {
  return t.replace(/left|right|bottom|top/g, function(e) {
    return ZN[e];
  });
}
var QN = {
  start: "end",
  end: "start"
};
function gh(t) {
  return t.replace(/start|end/g, function(e) {
    return QN[e];
  });
}
function au(t) {
  var e = At(t), n = e.pageXOffset, o = e.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: o
  };
}
function lu(t) {
  return pr(ro(t)).left + au(t).scrollLeft;
}
function ej(t, e) {
  var n = At(t), o = ro(t), i = n.visualViewport, r = o.clientWidth, a = o.clientHeight, l = 0, s = 0;
  if (i) {
    r = i.width, a = i.height;
    var d = x0();
    (d || !d && e === "fixed") && (l = i.offsetLeft, s = i.offsetTop);
  }
  return {
    width: r,
    height: a,
    x: l + lu(t),
    y: s
  };
}
function tj(t) {
  var e, n = ro(t), o = au(t), i = (e = t.ownerDocument) == null ? void 0 : e.body, r = So(n.scrollWidth, n.clientWidth, i ? i.scrollWidth : 0, i ? i.clientWidth : 0), a = So(n.scrollHeight, n.clientHeight, i ? i.scrollHeight : 0, i ? i.clientHeight : 0), l = -o.scrollLeft + lu(t), s = -o.scrollTop;
  return Rn(i || n).direction === "rtl" && (l += So(n.clientWidth, i ? i.clientWidth : 0) - r), {
    width: r,
    height: a,
    x: l,
    y: s
  };
}
function su(t) {
  var e = Rn(t), n = e.overflow, o = e.overflowX, i = e.overflowY;
  return /auto|scroll|overlay|hidden/.test(n + i + o);
}
function $0(t) {
  return ["html", "body", "#document"].indexOf(bn(t)) >= 0 ? t.ownerDocument.body : Ut(t) && su(t) ? t : $0(Hl(t));
}
function _r(t, e) {
  var n;
  e === void 0 && (e = []);
  var o = $0(t), i = o === ((n = t.ownerDocument) == null ? void 0 : n.body), r = At(o), a = i ? [r].concat(r.visualViewport || [], su(o) ? o : []) : o, l = e.concat(a);
  return i ? l : (
    // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    l.concat(_r(Hl(a)))
  );
}
function ic(t) {
  return Object.assign({}, t, {
    left: t.x,
    top: t.y,
    right: t.x + t.width,
    bottom: t.y + t.height
  });
}
function nj(t, e) {
  var n = pr(t, !1, e === "fixed");
  return n.top = n.top + t.clientTop, n.left = n.left + t.clientLeft, n.bottom = n.top + t.clientHeight, n.right = n.left + t.clientWidth, n.width = t.clientWidth, n.height = t.clientHeight, n.x = n.left, n.y = n.top, n;
}
function bh(t, e, n) {
  return e === k0 ? ic(ej(t, n)) : Ro(e) ? nj(e, n) : ic(tj(ro(t)));
}
function oj(t) {
  var e = _r(Hl(t)), n = ["absolute", "fixed"].indexOf(Rn(t).position) >= 0, o = n && Ut(t) ? pa(t) : t;
  return Ro(o) ? e.filter(function(i) {
    return Ro(i) && S0(i, o) && bn(i) !== "body";
  }) : [];
}
function rj(t, e, n, o) {
  var i = e === "clippingParents" ? oj(t) : [].concat(e), r = [].concat(i, [n]), a = r[0], l = r.reduce(function(s, d) {
    var c = bh(t, d, o);
    return s.top = So(c.top, s.top), s.right = fl(c.right, s.right), s.bottom = fl(c.bottom, s.bottom), s.left = So(c.left, s.left), s;
  }, bh(t, a, o));
  return l.width = l.right - l.left, l.height = l.bottom - l.top, l.x = l.left, l.y = l.top, l;
}
function T0(t) {
  var e = t.reference, n = t.element, o = t.placement, i = o ? fn(o) : null, r = o ? fr(o) : null, a = e.x + e.width / 2 - n.width / 2, l = e.y + e.height / 2 - n.height / 2, s;
  switch (i) {
    case Ot:
      s = {
        x: a,
        y: e.y - n.height
      };
      break;
    case Gt:
      s = {
        x: a,
        y: e.y + e.height
      };
      break;
    case qt:
      s = {
        x: e.x + e.width,
        y: l
      };
      break;
    case Pt:
      s = {
        x: e.x - n.width,
        y: l
      };
      break;
    default:
      s = {
        x: e.x,
        y: e.y
      };
  }
  var d = i ? iu(i) : null;
  if (d != null) {
    var c = d === "y" ? "height" : "width";
    switch (r) {
      case cr:
        s[d] = s[d] - (e[c] / 2 - n[c] / 2);
        break;
      case Xi:
        s[d] = s[d] + (e[c] / 2 - n[c] / 2);
        break;
    }
  }
  return s;
}
function Zi(t, e) {
  e === void 0 && (e = {});
  var n = e, o = n.placement, i = o === void 0 ? t.placement : o, r = n.strategy, a = r === void 0 ? t.strategy : r, l = n.boundary, s = l === void 0 ? IN : l, d = n.rootBoundary, c = d === void 0 ? k0 : d, u = n.elementContext, f = u === void 0 ? Pr : u, p = n.altBoundary, h = p === void 0 ? !1 : p, g = n.padding, b = g === void 0 ? 0 : g, C = O0(typeof b != "number" ? b : P0(b, ua)), x = f === Pr ? ON : Pr, R = t.rects.popper, w = t.elements[h ? x : f], T = rj(Ro(w) ? w : w.contextElement || ro(t.elements.popper), s, c, a), S = pr(t.elements.reference), I = T0({
    reference: S,
    element: R,
    placement: i
  }), B = ic(Object.assign({}, R, I)), H = f === Pr ? B : S, K = {
    top: T.top - H.top + C.top,
    bottom: H.bottom - T.bottom + C.bottom,
    left: T.left - H.left + C.left,
    right: H.right - T.right + C.right
  }, j = t.modifiersData.offset;
  if (f === Pr && j) {
    var F = j[i];
    Object.keys(K).forEach(function(U) {
      var le = [qt, Gt].indexOf(U) >= 0 ? 1 : -1, ie = [Ot, Gt].indexOf(U) >= 0 ? "y" : "x";
      K[U] += F[ie] * le;
    });
  }
  return K;
}
function ij(t, e) {
  e === void 0 && (e = {});
  var n = e, o = n.placement, i = n.boundary, r = n.rootBoundary, a = n.padding, l = n.flipVariations, s = n.allowedAutoPlacements, d = s === void 0 ? w0 : s, c = fr(o), u = c ? l ? fh : fh.filter(function(h) {
    return fr(h) === c;
  }) : ua, f = u.filter(function(h) {
    return d.indexOf(h) >= 0;
  });
  f.length === 0 && (f = u);
  var p = f.reduce(function(h, g) {
    return h[g] = Zi(t, {
      placement: g,
      boundary: i,
      rootBoundary: r,
      padding: a
    })[fn(g)], h;
  }, {});
  return Object.keys(p).sort(function(h, g) {
    return p[h] - p[g];
  });
}
function aj(t) {
  if (fn(t) === nu)
    return [];
  var e = Ga(t);
  return [gh(t), e, gh(e)];
}
function lj(t) {
  var e = t.state, n = t.options, o = t.name;
  if (!e.modifiersData[o]._skip) {
    for (var i = n.mainAxis, r = i === void 0 ? !0 : i, a = n.altAxis, l = a === void 0 ? !0 : a, s = n.fallbackPlacements, d = n.padding, c = n.boundary, u = n.rootBoundary, f = n.altBoundary, p = n.flipVariations, h = p === void 0 ? !0 : p, g = n.allowedAutoPlacements, b = e.options.placement, C = fn(b), x = C === b, R = s || (x || !h ? [Ga(b)] : aj(b)), w = [b].concat(R).reduce(function(Ke, nt) {
      return Ke.concat(fn(nt) === nu ? ij(e, {
        placement: nt,
        boundary: c,
        rootBoundary: u,
        padding: d,
        flipVariations: h,
        allowedAutoPlacements: g
      }) : nt);
    }, []), T = e.rects.reference, S = e.rects.popper, I = /* @__PURE__ */ new Map(), B = !0, H = w[0], K = 0; K < w.length; K++) {
      var j = w[K], F = fn(j), U = fr(j) === cr, le = [Ot, Gt].indexOf(F) >= 0, ie = le ? "width" : "height", ue = Zi(e, {
        placement: j,
        boundary: c,
        rootBoundary: u,
        altBoundary: f,
        padding: d
      }), de = le ? U ? qt : Pt : U ? Gt : Ot;
      T[ie] > S[ie] && (de = Ga(de));
      var Ce = Ga(de), Re = [];
      if (r && Re.push(ue[F] <= 0), l && Re.push(ue[de] <= 0, ue[Ce] <= 0), Re.every(function(Ke) {
        return Ke;
      })) {
        H = j, B = !1;
        break;
      }
      I.set(j, Re);
    }
    if (B)
      for (var Ee = h ? 3 : 1, _e = function(nt) {
        var Ge = w.find(function(D) {
          var G = I.get(D);
          if (G)
            return G.slice(0, nt).every(function(W) {
              return W;
            });
        });
        if (Ge)
          return H = Ge, "break";
      }, Ne = Ee; Ne > 0; Ne--) {
        var ct = _e(Ne);
        if (ct === "break") break;
      }
    e.placement !== H && (e.modifiersData[o]._skip = !0, e.placement = H, e.reset = !0);
  }
}
const sj = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: lj,
  requiresIfExists: ["offset"],
  data: {
    _skip: !1
  }
};
function vh(t, e, n) {
  return n === void 0 && (n = {
    x: 0,
    y: 0
  }), {
    top: t.top - e.height - n.y,
    right: t.right - e.width + n.x,
    bottom: t.bottom - e.height + n.y,
    left: t.left - e.width - n.x
  };
}
function yh(t) {
  return [Ot, qt, Gt, Pt].some(function(e) {
    return t[e] >= 0;
  });
}
function dj(t) {
  var e = t.state, n = t.name, o = e.rects.reference, i = e.rects.popper, r = e.modifiersData.preventOverflow, a = Zi(e, {
    elementContext: "reference"
  }), l = Zi(e, {
    altBoundary: !0
  }), s = vh(a, o), d = vh(l, i, r), c = yh(s), u = yh(d);
  e.modifiersData[n] = {
    referenceClippingOffsets: s,
    popperEscapeOffsets: d,
    isReferenceHidden: c,
    hasPopperEscaped: u
  }, e.attributes.popper = Object.assign({}, e.attributes.popper, {
    "data-popper-reference-hidden": c,
    "data-popper-escaped": u
  });
}
const cj = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: dj
};
function uj(t, e, n) {
  var o = fn(t), i = [Pt, Ot].indexOf(o) >= 0 ? -1 : 1, r = typeof n == "function" ? n(Object.assign({}, e, {
    placement: t
  })) : n, a = r[0], l = r[1];
  return a = a || 0, l = (l || 0) * i, [Pt, qt].indexOf(o) >= 0 ? {
    x: l,
    y: a
  } : {
    x: a,
    y: l
  };
}
function pj(t) {
  var e = t.state, n = t.options, o = t.name, i = n.offset, r = i === void 0 ? [0, 0] : i, a = w0.reduce(function(c, u) {
    return c[u] = uj(u, e.rects, r), c;
  }, {}), l = a[e.placement], s = l.x, d = l.y;
  e.modifiersData.popperOffsets != null && (e.modifiersData.popperOffsets.x += s, e.modifiersData.popperOffsets.y += d), e.modifiersData[o] = a;
}
const fj = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: pj
};
function hj(t) {
  var e = t.state, n = t.name;
  e.modifiersData[n] = T0({
    reference: e.rects.reference,
    element: e.rects.popper,
    placement: e.placement
  });
}
const mj = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: hj,
  data: {}
};
function gj(t) {
  return t === "x" ? "y" : "x";
}
function bj(t) {
  var e = t.state, n = t.options, o = t.name, i = n.mainAxis, r = i === void 0 ? !0 : i, a = n.altAxis, l = a === void 0 ? !1 : a, s = n.boundary, d = n.rootBoundary, c = n.altBoundary, u = n.padding, f = n.tether, p = f === void 0 ? !0 : f, h = n.tetherOffset, g = h === void 0 ? 0 : h, b = Zi(e, {
    boundary: s,
    rootBoundary: d,
    padding: u,
    altBoundary: c
  }), C = fn(e.placement), x = fr(e.placement), R = !x, w = iu(C), T = gj(w), S = e.modifiersData.popperOffsets, I = e.rects.reference, B = e.rects.popper, H = typeof g == "function" ? g(Object.assign({}, e.rects, {
    placement: e.placement
  })) : g, K = typeof H == "number" ? {
    mainAxis: H,
    altAxis: H
  } : Object.assign({
    mainAxis: 0,
    altAxis: 0
  }, H), j = e.modifiersData.offset ? e.modifiersData.offset[e.placement] : null, F = {
    x: 0,
    y: 0
  };
  if (S) {
    if (r) {
      var U, le = w === "y" ? Ot : Pt, ie = w === "y" ? Gt : qt, ue = w === "y" ? "height" : "width", de = S[w], Ce = de + b[le], Re = de - b[ie], Ee = p ? -B[ue] / 2 : 0, _e = x === cr ? I[ue] : B[ue], Ne = x === cr ? -B[ue] : -I[ue], ct = e.elements.arrow, Ke = p && ct ? ru(ct) : {
        width: 0,
        height: 0
      }, nt = e.modifiersData["arrow#persistent"] ? e.modifiersData["arrow#persistent"].padding : I0(), Ge = nt[le], D = nt[ie], G = Vr(0, I[ue], Ke[ue]), W = R ? I[ue] / 2 - Ee - G - Ge - K.mainAxis : _e - G - Ge - K.mainAxis, Z = R ? -I[ue] / 2 + Ee + G + D + K.mainAxis : Ne + G + D + K.mainAxis, we = e.elements.arrow && pa(e.elements.arrow), Me = we ? w === "y" ? we.clientTop || 0 : we.clientLeft || 0 : 0, me = (U = j == null ? void 0 : j[w]) != null ? U : 0, pe = de + W - me - Me, De = de + Z - me, Tt = Vr(p ? fl(Ce, pe) : Ce, de, p ? So(Re, De) : Re);
      S[w] = Tt, F[w] = Tt - de;
    }
    if (l) {
      var je, Lo = w === "x" ? Ot : Pt, zo = w === "x" ? Gt : qt, Jt = S[T], tn = T === "y" ? "height" : "width", io = Jt + b[Lo], vn = Jt - b[zo], ao = [Ot, Pt].indexOf(C) !== -1, fa = (je = j == null ? void 0 : j[T]) != null ? je : 0, ha = ao ? io : Jt - I[tn] - B[tn] - fa + K.altAxis, ma = ao ? Jt + I[tn] + B[tn] - fa - K.altAxis : vn, ga = p && ao ? VN(ha, Jt, ma) : Vr(p ? ha : io, Jt, p ? ma : vn);
      S[T] = ga, F[T] = ga - Jt;
    }
    e.modifiersData[o] = F;
  }
}
const vj = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: bj,
  requiresIfExists: ["offset"]
};
function yj(t) {
  return {
    scrollLeft: t.scrollLeft,
    scrollTop: t.scrollTop
  };
}
function kj(t) {
  return t === At(t) || !Ut(t) ? au(t) : yj(t);
}
function wj(t) {
  var e = t.getBoundingClientRect(), n = ur(e.width) / t.offsetWidth || 1, o = ur(e.height) / t.offsetHeight || 1;
  return n !== 1 || o !== 1;
}
function Cj(t, e, n) {
  n === void 0 && (n = !1);
  var o = Ut(e), i = Ut(e) && wj(e), r = ro(e), a = pr(t, i, n), l = {
    scrollLeft: 0,
    scrollTop: 0
  }, s = {
    x: 0,
    y: 0
  };
  return (o || !o && !n) && ((bn(e) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  su(r)) && (l = kj(e)), Ut(e) ? (s = pr(e, !0), s.x += e.clientLeft, s.y += e.clientTop) : r && (s.x = lu(r))), {
    x: a.left + l.scrollLeft - s.x,
    y: a.top + l.scrollTop - s.y,
    width: a.width,
    height: a.height
  };
}
function xj(t) {
  var e = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), o = [];
  t.forEach(function(r) {
    e.set(r.name, r);
  });
  function i(r) {
    n.add(r.name);
    var a = [].concat(r.requires || [], r.requiresIfExists || []);
    a.forEach(function(l) {
      if (!n.has(l)) {
        var s = e.get(l);
        s && i(s);
      }
    }), o.push(r);
  }
  return t.forEach(function(r) {
    n.has(r.name) || i(r);
  }), o;
}
function Sj(t) {
  var e = xj(t);
  return LN.reduce(function(n, o) {
    return n.concat(e.filter(function(i) {
      return i.phase === o;
    }));
  }, []);
}
function Ij(t) {
  var e;
  return function() {
    return e || (e = new Promise(function(n) {
      Promise.resolve().then(function() {
        e = void 0, n(t());
      });
    })), e;
  };
}
function Oj(t) {
  var e = t.reduce(function(n, o) {
    var i = n[o.name];
    return n[o.name] = i ? Object.assign({}, i, o, {
      options: Object.assign({}, i.options, o.options),
      data: Object.assign({}, i.data, o.data)
    }) : o, n;
  }, {});
  return Object.keys(e).map(function(n) {
    return e[n];
  });
}
var kh = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function wh() {
  for (var t = arguments.length, e = new Array(t), n = 0; n < t; n++)
    e[n] = arguments[n];
  return !e.some(function(o) {
    return !(o && typeof o.getBoundingClientRect == "function");
  });
}
function Pj(t) {
  t === void 0 && (t = {});
  var e = t, n = e.defaultModifiers, o = n === void 0 ? [] : n, i = e.defaultOptions, r = i === void 0 ? kh : i;
  return function(l, s, d) {
    d === void 0 && (d = r);
    var c = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign({}, kh, r),
      modifiersData: {},
      elements: {
        reference: l,
        popper: s
      },
      attributes: {},
      styles: {}
    }, u = [], f = !1, p = {
      state: c,
      setOptions: function(C) {
        var x = typeof C == "function" ? C(c.options) : C;
        g(), c.options = Object.assign({}, r, c.options, x), c.scrollParents = {
          reference: Ro(l) ? _r(l) : l.contextElement ? _r(l.contextElement) : [],
          popper: _r(s)
        };
        var R = Sj(Oj([].concat(o, c.options.modifiers)));
        return c.orderedModifiers = R.filter(function(w) {
          return w.enabled;
        }), h(), p.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate: function() {
        if (!f) {
          var C = c.elements, x = C.reference, R = C.popper;
          if (wh(x, R)) {
            c.rects = {
              reference: Cj(x, pa(R), c.options.strategy === "fixed"),
              popper: ru(R)
            }, c.reset = !1, c.placement = c.options.placement, c.orderedModifiers.forEach(function(K) {
              return c.modifiersData[K.name] = Object.assign({}, K.data);
            });
            for (var w = 0; w < c.orderedModifiers.length; w++) {
              if (c.reset === !0) {
                c.reset = !1, w = -1;
                continue;
              }
              var T = c.orderedModifiers[w], S = T.fn, I = T.options, B = I === void 0 ? {} : I, H = T.name;
              typeof S == "function" && (c = S({
                state: c,
                options: B,
                name: H,
                instance: p
              }) || c);
            }
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: Ij(function() {
        return new Promise(function(b) {
          p.forceUpdate(), b(c);
        });
      }),
      destroy: function() {
        g(), f = !0;
      }
    };
    if (!wh(l, s))
      return p;
    p.setOptions(d).then(function(b) {
      !f && d.onFirstUpdate && d.onFirstUpdate(b);
    });
    function h() {
      c.orderedModifiers.forEach(function(b) {
        var C = b.name, x = b.options, R = x === void 0 ? {} : x, w = b.effect;
        if (typeof w == "function") {
          var T = w({
            state: c,
            name: C,
            instance: p,
            options: R
          }), S = function() {
          };
          u.push(T || S);
        }
      });
    }
    function g() {
      u.forEach(function(b) {
        return b();
      }), u = [];
    }
    return p;
  };
}
var $j = [XN, mj, JN, C0, fj, sj, vj, WN, cj], Tj = /* @__PURE__ */ Pj({
  defaultModifiers: $j
}), Rj = "tippy-box", R0 = "tippy-content", Bj = "tippy-backdrop", B0 = "tippy-arrow", E0 = "tippy-svg-arrow", po = {
  passive: !0,
  capture: !0
}, M0 = function() {
  return document.body;
};
function xs(t, e, n) {
  if (Array.isArray(t)) {
    var o = t[e];
    return o ?? (Array.isArray(n) ? n[e] : n);
  }
  return t;
}
function du(t, e) {
  var n = {}.toString.call(t);
  return n.indexOf("[object") === 0 && n.indexOf(e + "]") > -1;
}
function A0(t, e) {
  return typeof t == "function" ? t.apply(void 0, e) : t;
}
function Ch(t, e) {
  if (e === 0)
    return t;
  var n;
  return function(o) {
    clearTimeout(n), n = setTimeout(function() {
      t(o);
    }, e);
  };
}
function Ej(t) {
  return t.split(/\s+/).filter(Boolean);
}
function Uo(t) {
  return [].concat(t);
}
function xh(t, e) {
  t.indexOf(e) === -1 && t.push(e);
}
function Mj(t) {
  return t.filter(function(e, n) {
    return t.indexOf(e) === n;
  });
}
function Aj(t) {
  return t.split("-")[0];
}
function hl(t) {
  return [].slice.call(t);
}
function Sh(t) {
  return Object.keys(t).reduce(function(e, n) {
    return t[n] !== void 0 && (e[n] = t[n]), e;
  }, {});
}
function Kr() {
  return document.createElement("div");
}
function Wl(t) {
  return ["Element", "Fragment"].some(function(e) {
    return du(t, e);
  });
}
function Dj(t) {
  return du(t, "NodeList");
}
function Lj(t) {
  return du(t, "MouseEvent");
}
function zj(t) {
  return !!(t && t._tippy && t._tippy.reference === t);
}
function Fj(t) {
  return Wl(t) ? [t] : Dj(t) ? hl(t) : Array.isArray(t) ? t : hl(document.querySelectorAll(t));
}
function Ss(t, e) {
  t.forEach(function(n) {
    n && (n.style.transitionDuration = e + "ms");
  });
}
function Ih(t, e) {
  t.forEach(function(n) {
    n && n.setAttribute("data-state", e);
  });
}
function Nj(t) {
  var e, n = Uo(t), o = n[0];
  return o != null && (e = o.ownerDocument) != null && e.body ? o.ownerDocument : document;
}
function jj(t, e) {
  var n = e.clientX, o = e.clientY;
  return t.every(function(i) {
    var r = i.popperRect, a = i.popperState, l = i.props, s = l.interactiveBorder, d = Aj(a.placement), c = a.modifiersData.offset;
    if (!c)
      return !0;
    var u = d === "bottom" ? c.top.y : 0, f = d === "top" ? c.bottom.y : 0, p = d === "right" ? c.left.x : 0, h = d === "left" ? c.right.x : 0, g = r.top - o + u > s, b = o - r.bottom - f > s, C = r.left - n + p > s, x = n - r.right - h > s;
    return g || b || C || x;
  });
}
function Is(t, e, n) {
  var o = e + "EventListener";
  ["transitionend", "webkitTransitionEnd"].forEach(function(i) {
    t[o](i, n);
  });
}
function Oh(t, e) {
  for (var n = e; n; ) {
    var o;
    if (t.contains(n))
      return !0;
    n = n.getRootNode == null || (o = n.getRootNode()) == null ? void 0 : o.host;
  }
  return !1;
}
var rn = {
  isTouch: !1
}, Ph = 0;
function Vj() {
  rn.isTouch || (rn.isTouch = !0, window.performance && document.addEventListener("mousemove", D0));
}
function D0() {
  var t = performance.now();
  t - Ph < 20 && (rn.isTouch = !1, document.removeEventListener("mousemove", D0)), Ph = t;
}
function _j() {
  var t = document.activeElement;
  if (zj(t)) {
    var e = t._tippy;
    t.blur && !e.state.isVisible && t.blur();
  }
}
function Kj() {
  document.addEventListener("touchstart", Vj, po), window.addEventListener("blur", _j);
}
var Hj = typeof window < "u" && typeof document < "u", Wj = Hj ? (
  // @ts-ignore
  !!window.msCrypto
) : !1, Uj = {
  animateFill: !1,
  followCursor: !1,
  inlinePositioning: !1,
  sticky: !1
}, Gj = {
  allowHTML: !1,
  animation: "fade",
  arrow: !0,
  content: "",
  inertia: !1,
  maxWidth: 350,
  role: "tooltip",
  theme: "",
  zIndex: 9999
}, Qt = Object.assign({
  appendTo: M0,
  aria: {
    content: "auto",
    expanded: "auto"
  },
  delay: 0,
  duration: [300, 250],
  getReferenceClientRect: null,
  hideOnClick: !0,
  ignoreAttributes: !1,
  interactive: !1,
  interactiveBorder: 2,
  interactiveDebounce: 0,
  moveTransition: "",
  offset: [0, 10],
  onAfterUpdate: function() {
  },
  onBeforeUpdate: function() {
  },
  onCreate: function() {
  },
  onDestroy: function() {
  },
  onHidden: function() {
  },
  onHide: function() {
  },
  onMount: function() {
  },
  onShow: function() {
  },
  onShown: function() {
  },
  onTrigger: function() {
  },
  onUntrigger: function() {
  },
  onClickOutside: function() {
  },
  placement: "top",
  plugins: [],
  popperOptions: {},
  render: null,
  showOnCreate: !1,
  touch: !0,
  trigger: "mouseenter focus",
  triggerTarget: null
}, Uj, Gj), qj = Object.keys(Qt), Jj = function(e) {
  var n = Object.keys(e);
  n.forEach(function(o) {
    Qt[o] = e[o];
  });
};
function L0(t) {
  var e = t.plugins || [], n = e.reduce(function(o, i) {
    var r = i.name, a = i.defaultValue;
    if (r) {
      var l;
      o[r] = t[r] !== void 0 ? t[r] : (l = Qt[r]) != null ? l : a;
    }
    return o;
  }, {});
  return Object.assign({}, t, n);
}
function Yj(t, e) {
  var n = e ? Object.keys(L0(Object.assign({}, Qt, {
    plugins: e
  }))) : qj, o = n.reduce(function(i, r) {
    var a = (t.getAttribute("data-tippy-" + r) || "").trim();
    if (!a)
      return i;
    if (r === "content")
      i[r] = a;
    else
      try {
        i[r] = JSON.parse(a);
      } catch {
        i[r] = a;
      }
    return i;
  }, {});
  return o;
}
function $h(t, e) {
  var n = Object.assign({}, e, {
    content: A0(e.content, [t])
  }, e.ignoreAttributes ? {} : Yj(t, e.plugins));
  return n.aria = Object.assign({}, Qt.aria, n.aria), n.aria = {
    expanded: n.aria.expanded === "auto" ? e.interactive : n.aria.expanded,
    content: n.aria.content === "auto" ? e.interactive ? null : "describedby" : n.aria.content
  }, n;
}
var Xj = function() {
  return "innerHTML";
};
function ac(t, e) {
  t[Xj()] = e;
}
function Th(t) {
  var e = Kr();
  return t === !0 ? e.className = B0 : (e.className = E0, Wl(t) ? e.appendChild(t) : ac(e, t)), e;
}
function Rh(t, e) {
  Wl(e.content) ? (ac(t, ""), t.appendChild(e.content)) : typeof e.content != "function" && (e.allowHTML ? ac(t, e.content) : t.textContent = e.content);
}
function lc(t) {
  var e = t.firstElementChild, n = hl(e.children);
  return {
    box: e,
    content: n.find(function(o) {
      return o.classList.contains(R0);
    }),
    arrow: n.find(function(o) {
      return o.classList.contains(B0) || o.classList.contains(E0);
    }),
    backdrop: n.find(function(o) {
      return o.classList.contains(Bj);
    })
  };
}
function z0(t) {
  var e = Kr(), n = Kr();
  n.className = Rj, n.setAttribute("data-state", "hidden"), n.setAttribute("tabindex", "-1");
  var o = Kr();
  o.className = R0, o.setAttribute("data-state", "hidden"), Rh(o, t.props), e.appendChild(n), n.appendChild(o), i(t.props, t.props);
  function i(r, a) {
    var l = lc(e), s = l.box, d = l.content, c = l.arrow;
    a.theme ? s.setAttribute("data-theme", a.theme) : s.removeAttribute("data-theme"), typeof a.animation == "string" ? s.setAttribute("data-animation", a.animation) : s.removeAttribute("data-animation"), a.inertia ? s.setAttribute("data-inertia", "") : s.removeAttribute("data-inertia"), s.style.maxWidth = typeof a.maxWidth == "number" ? a.maxWidth + "px" : a.maxWidth, a.role ? s.setAttribute("role", a.role) : s.removeAttribute("role"), (r.content !== a.content || r.allowHTML !== a.allowHTML) && Rh(d, t.props), a.arrow ? c ? r.arrow !== a.arrow && (s.removeChild(c), s.appendChild(Th(a.arrow))) : s.appendChild(Th(a.arrow)) : c && s.removeChild(c);
  }
  return {
    popper: e,
    onUpdate: i
  };
}
z0.$$tippy = !0;
var Zj = 1, za = [], Os = [];
function Qj(t, e) {
  var n = $h(t, Object.assign({}, Qt, L0(Sh(e)))), o, i, r, a = !1, l = !1, s = !1, d = !1, c, u, f, p = [], h = Ch(pe, n.interactiveDebounce), g, b = Zj++, C = null, x = Mj(n.plugins), R = {
    // Is the instance currently enabled?
    isEnabled: !0,
    // Is the tippy currently showing and not transitioning out?
    isVisible: !1,
    // Has the instance been destroyed?
    isDestroyed: !1,
    // Is the tippy currently mounted to the DOM?
    isMounted: !1,
    // Has the tippy finished transitioning in?
    isShown: !1
  }, w = {
    // properties
    id: b,
    reference: t,
    popper: Kr(),
    popperInstance: C,
    props: n,
    state: R,
    plugins: x,
    // methods
    clearDelayTimeouts: ha,
    setProps: ma,
    setContent: ga,
    show: q0,
    hide: J0,
    hideWithInteractivity: Y0,
    enable: ao,
    disable: fa,
    unmount: X0,
    destroy: Z0
  };
  if (!n.render)
    return w;
  var T = n.render(w), S = T.popper, I = T.onUpdate;
  S.setAttribute("data-tippy-root", ""), S.id = "tippy-" + w.id, w.popper = S, t._tippy = w, S._tippy = w;
  var B = x.map(function(A) {
    return A.fn(w);
  }), H = t.hasAttribute("aria-expanded");
  return we(), Ee(), de(), Ce("onCreate", [w]), n.showOnCreate && io(), S.addEventListener("mouseenter", function() {
    w.props.interactive && w.state.isVisible && w.clearDelayTimeouts();
  }), S.addEventListener("mouseleave", function() {
    w.props.interactive && w.props.trigger.indexOf("mouseenter") >= 0 && le().addEventListener("mousemove", h);
  }), w;
  function K() {
    var A = w.props.touch;
    return Array.isArray(A) ? A : [A, 0];
  }
  function j() {
    return K()[0] === "hold";
  }
  function F() {
    var A;
    return !!((A = w.props.render) != null && A.$$tippy);
  }
  function U() {
    return g || t;
  }
  function le() {
    var A = U().parentNode;
    return A ? Nj(A) : document;
  }
  function ie() {
    return lc(S);
  }
  function ue(A) {
    return w.state.isMounted && !w.state.isVisible || rn.isTouch || c && c.type === "focus" ? 0 : xs(w.props.delay, A ? 0 : 1, Qt.delay);
  }
  function de(A) {
    A === void 0 && (A = !1), S.style.pointerEvents = w.props.interactive && !A ? "" : "none", S.style.zIndex = "" + w.props.zIndex;
  }
  function Ce(A, Q, ce) {
    if (ce === void 0 && (ce = !0), B.forEach(function(xe) {
      xe[A] && xe[A].apply(xe, Q);
    }), ce) {
      var Pe;
      (Pe = w.props)[A].apply(Pe, Q);
    }
  }
  function Re() {
    var A = w.props.aria;
    if (A.content) {
      var Q = "aria-" + A.content, ce = S.id, Pe = Uo(w.props.triggerTarget || t);
      Pe.forEach(function(xe) {
        var bt = xe.getAttribute(Q);
        if (w.state.isVisible)
          xe.setAttribute(Q, bt ? bt + " " + ce : ce);
        else {
          var zt = bt && bt.replace(ce, "").trim();
          zt ? xe.setAttribute(Q, zt) : xe.removeAttribute(Q);
        }
      });
    }
  }
  function Ee() {
    if (!(H || !w.props.aria.expanded)) {
      var A = Uo(w.props.triggerTarget || t);
      A.forEach(function(Q) {
        w.props.interactive ? Q.setAttribute("aria-expanded", w.state.isVisible && Q === U() ? "true" : "false") : Q.removeAttribute("aria-expanded");
      });
    }
  }
  function _e() {
    le().removeEventListener("mousemove", h), za = za.filter(function(A) {
      return A !== h;
    });
  }
  function Ne(A) {
    if (!(rn.isTouch && (s || A.type === "mousedown"))) {
      var Q = A.composedPath && A.composedPath()[0] || A.target;
      if (!(w.props.interactive && Oh(S, Q))) {
        if (Uo(w.props.triggerTarget || t).some(function(ce) {
          return Oh(ce, Q);
        })) {
          if (rn.isTouch || w.state.isVisible && w.props.trigger.indexOf("click") >= 0)
            return;
        } else
          Ce("onClickOutside", [w, A]);
        w.props.hideOnClick === !0 && (w.clearDelayTimeouts(), w.hide(), l = !0, setTimeout(function() {
          l = !1;
        }), w.state.isMounted || Ge());
      }
    }
  }
  function ct() {
    s = !0;
  }
  function Ke() {
    s = !1;
  }
  function nt() {
    var A = le();
    A.addEventListener("mousedown", Ne, !0), A.addEventListener("touchend", Ne, po), A.addEventListener("touchstart", Ke, po), A.addEventListener("touchmove", ct, po);
  }
  function Ge() {
    var A = le();
    A.removeEventListener("mousedown", Ne, !0), A.removeEventListener("touchend", Ne, po), A.removeEventListener("touchstart", Ke, po), A.removeEventListener("touchmove", ct, po);
  }
  function D(A, Q) {
    W(A, function() {
      !w.state.isVisible && S.parentNode && S.parentNode.contains(S) && Q();
    });
  }
  function G(A, Q) {
    W(A, Q);
  }
  function W(A, Q) {
    var ce = ie().box;
    function Pe(xe) {
      xe.target === ce && (Is(ce, "remove", Pe), Q());
    }
    if (A === 0)
      return Q();
    Is(ce, "remove", u), Is(ce, "add", Pe), u = Pe;
  }
  function Z(A, Q, ce) {
    ce === void 0 && (ce = !1);
    var Pe = Uo(w.props.triggerTarget || t);
    Pe.forEach(function(xe) {
      xe.addEventListener(A, Q, ce), p.push({
        node: xe,
        eventType: A,
        handler: Q,
        options: ce
      });
    });
  }
  function we() {
    j() && (Z("touchstart", me, {
      passive: !0
    }), Z("touchend", De, {
      passive: !0
    })), Ej(w.props.trigger).forEach(function(A) {
      if (A !== "manual")
        switch (Z(A, me), A) {
          case "mouseenter":
            Z("mouseleave", De);
            break;
          case "focus":
            Z(Wj ? "focusout" : "blur", Tt);
            break;
          case "focusin":
            Z("focusout", Tt);
            break;
        }
    });
  }
  function Me() {
    p.forEach(function(A) {
      var Q = A.node, ce = A.eventType, Pe = A.handler, xe = A.options;
      Q.removeEventListener(ce, Pe, xe);
    }), p = [];
  }
  function me(A) {
    var Q, ce = !1;
    if (!(!w.state.isEnabled || je(A) || l)) {
      var Pe = ((Q = c) == null ? void 0 : Q.type) === "focus";
      c = A, g = A.currentTarget, Ee(), !w.state.isVisible && Lj(A) && za.forEach(function(xe) {
        return xe(A);
      }), A.type === "click" && (w.props.trigger.indexOf("mouseenter") < 0 || a) && w.props.hideOnClick !== !1 && w.state.isVisible ? ce = !0 : io(A), A.type === "click" && (a = !ce), ce && !Pe && vn(A);
    }
  }
  function pe(A) {
    var Q = A.target, ce = U().contains(Q) || S.contains(Q);
    if (!(A.type === "mousemove" && ce)) {
      var Pe = tn().concat(S).map(function(xe) {
        var bt, zt = xe._tippy, Fo = (bt = zt.popperInstance) == null ? void 0 : bt.state;
        return Fo ? {
          popperRect: xe.getBoundingClientRect(),
          popperState: Fo,
          props: n
        } : null;
      }).filter(Boolean);
      jj(Pe, A) && (_e(), vn(A));
    }
  }
  function De(A) {
    var Q = je(A) || w.props.trigger.indexOf("click") >= 0 && a;
    if (!Q) {
      if (w.props.interactive) {
        w.hideWithInteractivity(A);
        return;
      }
      vn(A);
    }
  }
  function Tt(A) {
    w.props.trigger.indexOf("focusin") < 0 && A.target !== U() || w.props.interactive && A.relatedTarget && S.contains(A.relatedTarget) || vn(A);
  }
  function je(A) {
    return rn.isTouch ? j() !== A.type.indexOf("touch") >= 0 : !1;
  }
  function Lo() {
    zo();
    var A = w.props, Q = A.popperOptions, ce = A.placement, Pe = A.offset, xe = A.getReferenceClientRect, bt = A.moveTransition, zt = F() ? lc(S).arrow : null, Fo = xe ? {
      getBoundingClientRect: xe,
      contextElement: xe.contextElement || U()
    } : t, pu = {
      name: "$$tippy",
      enabled: !0,
      phase: "beforeWrite",
      requires: ["computeStyles"],
      fn: function(ba) {
        var No = ba.state;
        if (F()) {
          var Q0 = ie(), Gl = Q0.box;
          ["placement", "reference-hidden", "escaped"].forEach(function(va) {
            va === "placement" ? Gl.setAttribute("data-placement", No.placement) : No.attributes.popper["data-popper-" + va] ? Gl.setAttribute("data-" + va, "") : Gl.removeAttribute("data-" + va);
          }), No.attributes.popper = {};
        }
      }
    }, lo = [{
      name: "offset",
      options: {
        offset: Pe
      }
    }, {
      name: "preventOverflow",
      options: {
        padding: {
          top: 2,
          bottom: 2,
          left: 5,
          right: 5
        }
      }
    }, {
      name: "flip",
      options: {
        padding: 5
      }
    }, {
      name: "computeStyles",
      options: {
        adaptive: !bt
      }
    }, pu];
    F() && zt && lo.push({
      name: "arrow",
      options: {
        element: zt,
        padding: 3
      }
    }), lo.push.apply(lo, (Q == null ? void 0 : Q.modifiers) || []), w.popperInstance = Tj(Fo, S, Object.assign({}, Q, {
      placement: ce,
      onFirstUpdate: f,
      modifiers: lo
    }));
  }
  function zo() {
    w.popperInstance && (w.popperInstance.destroy(), w.popperInstance = null);
  }
  function Jt() {
    var A = w.props.appendTo, Q, ce = U();
    w.props.interactive && A === M0 || A === "parent" ? Q = ce.parentNode : Q = A0(A, [ce]), Q.contains(S) || Q.appendChild(S), w.state.isMounted = !0, Lo();
  }
  function tn() {
    return hl(S.querySelectorAll("[data-tippy-root]"));
  }
  function io(A) {
    w.clearDelayTimeouts(), A && Ce("onTrigger", [w, A]), nt();
    var Q = ue(!0), ce = K(), Pe = ce[0], xe = ce[1];
    rn.isTouch && Pe === "hold" && xe && (Q = xe), Q ? o = setTimeout(function() {
      w.show();
    }, Q) : w.show();
  }
  function vn(A) {
    if (w.clearDelayTimeouts(), Ce("onUntrigger", [w, A]), !w.state.isVisible) {
      Ge();
      return;
    }
    if (!(w.props.trigger.indexOf("mouseenter") >= 0 && w.props.trigger.indexOf("click") >= 0 && ["mouseleave", "mousemove"].indexOf(A.type) >= 0 && a)) {
      var Q = ue(!1);
      Q ? i = setTimeout(function() {
        w.state.isVisible && w.hide();
      }, Q) : r = requestAnimationFrame(function() {
        w.hide();
      });
    }
  }
  function ao() {
    w.state.isEnabled = !0;
  }
  function fa() {
    w.hide(), w.state.isEnabled = !1;
  }
  function ha() {
    clearTimeout(o), clearTimeout(i), cancelAnimationFrame(r);
  }
  function ma(A) {
    if (!w.state.isDestroyed) {
      Ce("onBeforeUpdate", [w, A]), Me();
      var Q = w.props, ce = $h(t, Object.assign({}, Q, Sh(A), {
        ignoreAttributes: !0
      }));
      w.props = ce, we(), Q.interactiveDebounce !== ce.interactiveDebounce && (_e(), h = Ch(pe, ce.interactiveDebounce)), Q.triggerTarget && !ce.triggerTarget ? Uo(Q.triggerTarget).forEach(function(Pe) {
        Pe.removeAttribute("aria-expanded");
      }) : ce.triggerTarget && t.removeAttribute("aria-expanded"), Ee(), de(), I && I(Q, ce), w.popperInstance && (Lo(), tn().forEach(function(Pe) {
        requestAnimationFrame(Pe._tippy.popperInstance.forceUpdate);
      })), Ce("onAfterUpdate", [w, A]);
    }
  }
  function ga(A) {
    w.setProps({
      content: A
    });
  }
  function q0() {
    var A = w.state.isVisible, Q = w.state.isDestroyed, ce = !w.state.isEnabled, Pe = rn.isTouch && !w.props.touch, xe = xs(w.props.duration, 0, Qt.duration);
    if (!(A || Q || ce || Pe) && !U().hasAttribute("disabled") && (Ce("onShow", [w], !1), w.props.onShow(w) !== !1)) {
      if (w.state.isVisible = !0, F() && (S.style.visibility = "visible"), de(), nt(), w.state.isMounted || (S.style.transition = "none"), F()) {
        var bt = ie(), zt = bt.box, Fo = bt.content;
        Ss([zt, Fo], 0);
      }
      f = function() {
        var lo;
        if (!(!w.state.isVisible || d)) {
          if (d = !0, S.offsetHeight, S.style.transition = w.props.moveTransition, F() && w.props.animation) {
            var Ul = ie(), ba = Ul.box, No = Ul.content;
            Ss([ba, No], xe), Ih([ba, No], "visible");
          }
          Re(), Ee(), xh(Os, w), (lo = w.popperInstance) == null || lo.forceUpdate(), Ce("onMount", [w]), w.props.animation && F() && G(xe, function() {
            w.state.isShown = !0, Ce("onShown", [w]);
          });
        }
      }, Jt();
    }
  }
  function J0() {
    var A = !w.state.isVisible, Q = w.state.isDestroyed, ce = !w.state.isEnabled, Pe = xs(w.props.duration, 1, Qt.duration);
    if (!(A || Q || ce) && (Ce("onHide", [w], !1), w.props.onHide(w) !== !1)) {
      if (w.state.isVisible = !1, w.state.isShown = !1, d = !1, a = !1, F() && (S.style.visibility = "hidden"), _e(), Ge(), de(!0), F()) {
        var xe = ie(), bt = xe.box, zt = xe.content;
        w.props.animation && (Ss([bt, zt], Pe), Ih([bt, zt], "hidden"));
      }
      Re(), Ee(), w.props.animation ? F() && D(Pe, w.unmount) : w.unmount();
    }
  }
  function Y0(A) {
    le().addEventListener("mousemove", h), xh(za, h), h(A);
  }
  function X0() {
    w.state.isVisible && w.hide(), w.state.isMounted && (zo(), tn().forEach(function(A) {
      A._tippy.unmount();
    }), S.parentNode && S.parentNode.removeChild(S), Os = Os.filter(function(A) {
      return A !== w;
    }), w.state.isMounted = !1, Ce("onHidden", [w]));
  }
  function Z0() {
    w.state.isDestroyed || (w.clearDelayTimeouts(), w.unmount(), Me(), delete t._tippy, w.state.isDestroyed = !0, Ce("onDestroy", [w]));
  }
}
function kr(t, e) {
  e === void 0 && (e = {});
  var n = Qt.plugins.concat(e.plugins || []);
  Kj();
  var o = Object.assign({}, e, {
    plugins: n
  }), i = Fj(t), r = i.reduce(function(a, l) {
    var s = l && Qj(l, o);
    return s && a.push(s), a;
  }, []);
  return Wl(t) ? r[0] : r;
}
kr.defaultProps = Qt;
kr.setDefaultProps = Jj;
kr.currentInput = rn;
Object.assign({}, C0, {
  effect: function(e) {
    var n = e.state, o = {
      popper: {
        position: n.options.strategy,
        left: "0",
        top: "0",
        margin: "0"
      },
      arrow: {
        position: "absolute"
      },
      reference: {}
    };
    Object.assign(n.elements.popper.style, o.popper), n.styles = o, n.elements.arrow && Object.assign(n.elements.arrow.style, o.arrow);
  }
});
kr.setDefaultProps({
  render: z0
});
class eV {
  constructor({ editor: e, element: n, view: o, tippyOptions: i = {}, updateDelay: r = 250, shouldShow: a }) {
    this.preventHide = !1, this.shouldShow = ({ view: l, state: s, from: d, to: c }) => {
      const { doc: u, selection: f } = s, { empty: p } = f, h = !u.textBetween(d, c).length && Zc(s.selection), g = this.element.contains(document.activeElement);
      return !(!(l.hasFocus() || g) || p || h || !this.editor.isEditable);
    }, this.mousedownHandler = () => {
      this.preventHide = !0;
    }, this.dragstartHandler = () => {
      this.hide();
    }, this.focusHandler = () => {
      setTimeout(() => this.update(this.editor.view));
    }, this.blurHandler = ({ event: l }) => {
      var s;
      if (this.preventHide) {
        this.preventHide = !1;
        return;
      }
      l != null && l.relatedTarget && (!((s = this.element.parentNode) === null || s === void 0) && s.contains(l.relatedTarget)) || (l == null ? void 0 : l.relatedTarget) !== this.editor.view.dom && this.hide();
    }, this.tippyBlurHandler = (l) => {
      this.blurHandler({ event: l });
    }, this.handleDebouncedUpdate = (l, s) => {
      const d = !(s != null && s.selection.eq(l.state.selection)), c = !(s != null && s.doc.eq(l.state.doc));
      !d && !c || (this.updateDebounceTimer && clearTimeout(this.updateDebounceTimer), this.updateDebounceTimer = window.setTimeout(() => {
        this.updateHandler(l, d, c, s);
      }, this.updateDelay));
    }, this.updateHandler = (l, s, d, c) => {
      var u, f, p;
      const { state: h, composing: g } = l, { selection: b } = h;
      if (g || !s && !d)
        return;
      this.createTooltip();
      const { ranges: x } = b, R = Math.min(...x.map((S) => S.$from.pos)), w = Math.max(...x.map((S) => S.$to.pos));
      if (!((u = this.shouldShow) === null || u === void 0 ? void 0 : u.call(this, {
        editor: this.editor,
        element: this.element,
        view: l,
        state: h,
        oldState: c,
        from: R,
        to: w
      }))) {
        this.hide();
        return;
      }
      (f = this.tippy) === null || f === void 0 || f.setProps({
        getReferenceClientRect: ((p = this.tippyOptions) === null || p === void 0 ? void 0 : p.getReferenceClientRect) || (() => {
          if (v0(h.selection)) {
            let S = l.nodeDOM(R);
            if (S) {
              const I = S.dataset.nodeViewWrapper ? S : S.querySelector("[data-node-view-wrapper]");
              if (I && (S = I.firstChild), S)
                return S.getBoundingClientRect();
            }
          }
          return y0(l, R, w);
        })
      }), this.show();
    }, this.editor = e, this.element = n, this.view = o, this.updateDelay = r, a && (this.shouldShow = a), this.element.addEventListener("mousedown", this.mousedownHandler, { capture: !0 }), this.view.dom.addEventListener("dragstart", this.dragstartHandler), this.editor.on("focus", this.focusHandler), this.editor.on("blur", this.blurHandler), this.tippyOptions = i, this.element.remove(), this.element.style.visibility = "visible";
  }
  createTooltip() {
    const { element: e } = this.editor.options, n = !!e.parentElement;
    this.element.tabIndex = 0, !(this.tippy || !n) && (this.tippy = kr(e, {
      duration: 0,
      getReferenceClientRect: null,
      content: this.element,
      interactive: !0,
      trigger: "manual",
      placement: "top",
      hideOnClick: "toggle",
      ...this.tippyOptions
    }), this.tippy.popper.firstChild && this.tippy.popper.firstChild.addEventListener("blur", this.tippyBlurHandler));
  }
  update(e, n) {
    const { state: o } = e, i = o.selection.from !== o.selection.to;
    if (this.updateDelay > 0 && i) {
      this.handleDebouncedUpdate(e, n);
      return;
    }
    const r = !(n != null && n.selection.eq(e.state.selection)), a = !(n != null && n.doc.eq(e.state.doc));
    this.updateHandler(e, r, a, n);
  }
  show() {
    var e;
    (e = this.tippy) === null || e === void 0 || e.show();
  }
  hide() {
    var e;
    (e = this.tippy) === null || e === void 0 || e.hide();
  }
  destroy() {
    var e, n;
    !((e = this.tippy) === null || e === void 0) && e.popper.firstChild && this.tippy.popper.firstChild.removeEventListener("blur", this.tippyBlurHandler), (n = this.tippy) === null || n === void 0 || n.destroy(), this.element.removeEventListener("mousedown", this.mousedownHandler, { capture: !0 }), this.view.dom.removeEventListener("dragstart", this.dragstartHandler), this.editor.off("focus", this.focusHandler), this.editor.off("blur", this.blurHandler);
  }
}
const F0 = (t) => new dt({
  key: typeof t.pluginKey == "string" ? new Lt(t.pluginKey) : t.pluginKey,
  view: (e) => new eV({ view: e, ...t })
});
Je.create({
  name: "bubbleMenu",
  addOptions() {
    return {
      element: null,
      tippyOptions: {},
      pluginKey: "bubbleMenu",
      updateDelay: void 0,
      shouldShow: null
    };
  },
  addProseMirrorPlugins() {
    return this.options.element ? [
      F0({
        pluginKey: this.options.pluginKey,
        editor: this.editor,
        element: this.options.element,
        tippyOptions: this.options.tippyOptions,
        updateDelay: this.options.updateDelay,
        shouldShow: this.options.shouldShow
      })
    ] : [];
  }
});
class tV {
  getTextContent(e) {
    return g0(e, { textSerializers: Yc(this.editor.schema) });
  }
  constructor({ editor: e, element: n, view: o, tippyOptions: i = {}, shouldShow: r }) {
    this.preventHide = !1, this.shouldShow = ({ view: a, state: l }) => {
      const { selection: s } = l, { $anchor: d, empty: c } = s, u = d.depth === 1, f = d.parent.isTextblock && !d.parent.type.spec.code && !d.parent.textContent && d.parent.childCount === 0 && !this.getTextContent(d.parent);
      return !(!a.hasFocus() || !c || !u || !f || !this.editor.isEditable);
    }, this.mousedownHandler = () => {
      this.preventHide = !0;
    }, this.focusHandler = () => {
      setTimeout(() => this.update(this.editor.view));
    }, this.blurHandler = ({ event: a }) => {
      var l;
      if (this.preventHide) {
        this.preventHide = !1;
        return;
      }
      a != null && a.relatedTarget && (!((l = this.element.parentNode) === null || l === void 0) && l.contains(a.relatedTarget)) || (a == null ? void 0 : a.relatedTarget) !== this.editor.view.dom && this.hide();
    }, this.tippyBlurHandler = (a) => {
      this.blurHandler({ event: a });
    }, this.editor = e, this.element = n, this.view = o, r && (this.shouldShow = r), this.element.addEventListener("mousedown", this.mousedownHandler, { capture: !0 }), this.editor.on("focus", this.focusHandler), this.editor.on("blur", this.blurHandler), this.tippyOptions = i, this.element.remove(), this.element.style.visibility = "visible";
  }
  createTooltip() {
    const { element: e } = this.editor.options, n = !!e.parentElement;
    this.element.tabIndex = 0, !(this.tippy || !n) && (this.tippy = kr(e, {
      duration: 0,
      getReferenceClientRect: null,
      content: this.element,
      interactive: !0,
      trigger: "manual",
      placement: "right",
      hideOnClick: "toggle",
      ...this.tippyOptions
    }), this.tippy.popper.firstChild && this.tippy.popper.firstChild.addEventListener("blur", this.tippyBlurHandler));
  }
  update(e, n) {
    var o, i, r;
    const { state: a } = e, { doc: l, selection: s } = a, { from: d, to: c } = s;
    if (n && n.doc.eq(l) && n.selection.eq(s))
      return;
    if (this.createTooltip(), !((o = this.shouldShow) === null || o === void 0 ? void 0 : o.call(this, {
      editor: this.editor,
      view: e,
      state: a,
      oldState: n
    }))) {
      this.hide();
      return;
    }
    (i = this.tippy) === null || i === void 0 || i.setProps({
      getReferenceClientRect: ((r = this.tippyOptions) === null || r === void 0 ? void 0 : r.getReferenceClientRect) || (() => y0(e, d, c))
    }), this.show();
  }
  show() {
    var e;
    (e = this.tippy) === null || e === void 0 || e.show();
  }
  hide() {
    var e;
    (e = this.tippy) === null || e === void 0 || e.hide();
  }
  destroy() {
    var e, n;
    !((e = this.tippy) === null || e === void 0) && e.popper.firstChild && this.tippy.popper.firstChild.removeEventListener("blur", this.tippyBlurHandler), (n = this.tippy) === null || n === void 0 || n.destroy(), this.element.removeEventListener("mousedown", this.mousedownHandler, { capture: !0 }), this.editor.off("focus", this.focusHandler), this.editor.off("blur", this.blurHandler);
  }
}
const N0 = (t) => new dt({
  key: typeof t.pluginKey == "string" ? new Lt(t.pluginKey) : t.pluginKey,
  view: (e) => new tV({ view: e, ...t })
});
Je.create({
  name: "floatingMenu",
  addOptions() {
    return {
      element: null,
      tippyOptions: {},
      pluginKey: "floatingMenu",
      shouldShow: null
    };
  },
  addProseMirrorPlugins() {
    return this.options.element ? [
      N0({
        pluginKey: this.options.pluginKey,
        editor: this.editor,
        element: this.options.element,
        tippyOptions: this.options.tippyOptions,
        shouldShow: this.options.shouldShow
      })
    ] : [];
  }
});
Be({
  name: "BubbleMenu",
  props: {
    pluginKey: {
      type: [String, Object],
      default: "bubbleMenu"
    },
    editor: {
      type: Object,
      required: !0
    },
    updateDelay: {
      type: Number,
      default: void 0
    },
    tippyOptions: {
      type: Object,
      default: () => ({})
    },
    shouldShow: {
      type: Function,
      default: null
    }
  },
  setup(t, { slots: e }) {
    const n = z(null);
    return Dt(() => {
      const { updateDelay: o, editor: i, pluginKey: r, shouldShow: a, tippyOptions: l } = t;
      i.registerPlugin(F0({
        updateDelay: o,
        editor: i,
        element: n.value,
        pluginKey: r,
        shouldShow: a,
        tippyOptions: l
      }));
    }), bl(() => {
      const { pluginKey: o, editor: i } = t;
      i.unregisterPlugin(o);
    }), () => {
      var o;
      return Bo("div", { ref: n }, (o = e.default) === null || o === void 0 ? void 0 : o.call(e));
    };
  }
});
function Bh(t) {
  return sv((e, n) => ({
    get() {
      return e(), t;
    },
    set(o) {
      t = o, requestAnimationFrame(() => {
        requestAnimationFrame(() => {
          n();
        });
      });
    }
  }));
}
class nV extends CN {
  constructor(e = {}) {
    return super(e), this.contentComponent = null, this.appContext = null, this.reactiveState = Bh(this.view.state), this.reactiveExtensionStorage = Bh(this.extensionStorage), this.on("beforeTransaction", ({ nextState: n }) => {
      this.reactiveState.value = n, this.reactiveExtensionStorage.value = this.extensionStorage;
    }), lv(this);
  }
  get state() {
    return this.reactiveState ? this.reactiveState.value : this.view.state;
  }
  get storage() {
    return this.reactiveExtensionStorage ? this.reactiveExtensionStorage.value : super.storage;
  }
  /**
   * Register a ProseMirror plugin.
   */
  registerPlugin(e, n) {
    const o = super.registerPlugin(e, n);
    return this.reactiveState && (this.reactiveState.value = o), o;
  }
  /**
   * Unregister a ProseMirror plugin.
   */
  unregisterPlugin(e) {
    const n = super.unregisterPlugin(e);
    return this.reactiveState && n && (this.reactiveState.value = n), n;
  }
}
const Eh = Be({
  name: "EditorContent",
  props: {
    editor: {
      default: null,
      type: Object
    }
  },
  setup(t) {
    const e = z(), n = Ts();
    return av(() => {
      const o = t.editor;
      o && o.options.element && e.value && sc(() => {
        if (!e.value || !o.options.element.firstChild)
          return;
        const i = He(e.value);
        e.value.append(...o.options.element.childNodes), o.contentComponent = n.ctx._, n && (o.appContext = {
          ...n.appContext,
          // Vue internally uses prototype chain to forward/shadow injects across the entire component chain
          // so don't use object spread operator or 'Object.assign' and just set `provides` as is on editor's appContext
          // @ts-expect-error forward instance's 'provides' into appContext
          provides: n.provides
        }), o.setOptions({
          element: i
        }), o.createNodeViews();
      });
    }), bl(() => {
      const o = t.editor;
      o && (o.contentComponent = null, o.appContext = null);
    }), { rootEl: e };
  },
  render() {
    return Bo("div", {
      ref: (t) => {
        this.rootEl = t;
      }
    });
  }
});
Be({
  name: "FloatingMenu",
  props: {
    pluginKey: {
      // TODO: TypeScript breaks :(
      // type: [String, Object as PropType<Exclude<FloatingMenuPluginProps['pluginKey'], string>>],
      type: null,
      default: "floatingMenu"
    },
    editor: {
      type: Object,
      required: !0
    },
    tippyOptions: {
      type: Object,
      default: () => ({})
    },
    shouldShow: {
      type: Function,
      default: null
    }
  },
  setup(t, { slots: e }) {
    const n = z(null);
    return Dt(() => {
      const { pluginKey: o, editor: i, tippyOptions: r, shouldShow: a } = t;
      i.registerPlugin(N0({
        pluginKey: o,
        editor: i,
        element: n.value,
        tippyOptions: r,
        shouldShow: a
      }));
    }), bl(() => {
      const { pluginKey: o, editor: i } = t;
      i.unregisterPlugin(o);
    }), () => {
      var o;
      return Bo("div", { ref: n }, (o = e.default) === null || o === void 0 ? void 0 : o.call(e));
    };
  }
});
Be({
  name: "NodeViewContent",
  props: {
    as: {
      type: String,
      default: "div"
    }
  },
  render() {
    return Bo(this.as, {
      style: {
        whiteSpace: "pre-wrap"
      },
      "data-node-view-content": ""
    });
  }
});
Be({
  name: "NodeViewWrapper",
  props: {
    as: {
      type: String,
      default: "div"
    }
  },
  inject: ["onDragStart", "decorationClasses"],
  render() {
    var t, e;
    return Bo(this.as, {
      // @ts-ignore
      class: this.decorationClasses,
      style: {
        whiteSpace: "normal"
      },
      "data-node-view-wrapper": "",
      // @ts-ignore (https://github.com/vuejs/vue-next/issues/3031)
      onDragstart: this.onDragStart
    }, (e = (t = this.$slots).default) === null || e === void 0 ? void 0 : e.call(t));
  }
});
const Mh = (t = {}) => {
  const e = hr();
  return Dt(() => {
    e.value = new nV(t);
  }), bl(() => {
    var n, o, i;
    const r = (n = e.value) === null || n === void 0 ? void 0 : n.options.element, a = r == null ? void 0 : r.cloneNode(!0);
    (o = r == null ? void 0 : r.parentNode) === null || o === void 0 || o.replaceChild(a, r), (i = e.value) === null || i === void 0 || i.destroy();
  }), e;
}, oV = /^\s*>\s$/, rV = $t.create({
  name: "blockquote",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  content: "block+",
  group: "block",
  defining: !0,
  parseHTML() {
    return [
      { tag: "blockquote" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["blockquote", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setBlockquote: () => ({ commands: t }) => t.wrapIn(this.name),
      toggleBlockquote: () => ({ commands: t }) => t.toggleWrap(this.name),
      unsetBlockquote: () => ({ commands: t }) => t.lift(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-b": () => this.editor.commands.toggleBlockquote()
    };
  },
  addInputRules() {
    return [
      Yi({
        find: oV,
        type: this.type
      })
    ];
  }
}), iV = /(?:^|\s)(\*\*(?!\s+\*\*)((?:[^*]+))\*\*(?!\s+\*\*))$/, aV = /(?:^|\s)(\*\*(?!\s+\*\*)((?:[^*]+))\*\*(?!\s+\*\*))/g, lV = /(?:^|\s)(__(?!\s+__)((?:[^_]+))__(?!\s+__))$/, sV = /(?:^|\s)(__(?!\s+__)((?:[^_]+))__(?!\s+__))/g, dV = gn.create({
  name: "bold",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "strong"
      },
      {
        tag: "b",
        getAttrs: (t) => t.style.fontWeight !== "normal" && null
      },
      {
        style: "font-weight=400",
        clearMark: (t) => t.type.name === this.name
      },
      {
        style: "font-weight",
        getAttrs: (t) => /^(bold(er)?|[5-9]\d{2,})$/.test(t) && null
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["strong", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setBold: () => ({ commands: t }) => t.setMark(this.name),
      toggleBold: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetBold: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-b": () => this.editor.commands.toggleBold(),
      "Mod-B": () => this.editor.commands.toggleBold()
    };
  },
  addInputRules() {
    return [
      sr({
        find: iV,
        type: this.type
      }),
      sr({
        find: lV,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      dr({
        find: aV,
        type: this.type
      }),
      dr({
        find: sV,
        type: this.type
      })
    ];
  }
}), cV = "listItem", Ah = "textStyle", Dh = /^\s*([-+*])\s$/, uV = $t.create({
  name: "bulletList",
  addOptions() {
    return {
      itemTypeName: "listItem",
      HTMLAttributes: {},
      keepMarks: !1,
      keepAttributes: !1
    };
  },
  group: "block list",
  content() {
    return `${this.options.itemTypeName}+`;
  },
  parseHTML() {
    return [
      { tag: "ul" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["ul", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      toggleBulletList: () => ({ commands: t, chain: e }) => this.options.keepAttributes ? e().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(cV, this.editor.getAttributes(Ah)).run() : t.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-8": () => this.editor.commands.toggleBulletList()
    };
  },
  addInputRules() {
    let t = Yi({
      find: Dh,
      type: this.type
    });
    return (this.options.keepMarks || this.options.keepAttributes) && (t = Yi({
      find: Dh,
      type: this.type,
      keepMarks: this.options.keepMarks,
      keepAttributes: this.options.keepAttributes,
      getAttributes: () => this.editor.getAttributes(Ah),
      editor: this.editor
    })), [
      t
    ];
  }
}), pV = /(^|[^`])`([^`]+)`(?!`)/, fV = /(^|[^`])`([^`]+)`(?!`)/g, hV = gn.create({
  name: "code",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  excludes: "_",
  code: !0,
  exitable: !0,
  parseHTML() {
    return [
      { tag: "code" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["code", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setCode: () => ({ commands: t }) => t.setMark(this.name),
      toggleCode: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetCode: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-e": () => this.editor.commands.toggleCode()
    };
  },
  addInputRules() {
    return [
      sr({
        find: pV,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      dr({
        find: fV,
        type: this.type
      })
    ];
  }
}), mV = /^```([a-z]+)?[\s\n]$/, gV = /^~~~([a-z]+)?[\s\n]$/, bV = $t.create({
  name: "codeBlock",
  addOptions() {
    return {
      languageClassPrefix: "language-",
      exitOnTripleEnter: !0,
      exitOnArrowDown: !0,
      defaultLanguage: null,
      HTMLAttributes: {}
    };
  },
  content: "text*",
  marks: "",
  group: "block",
  code: !0,
  defining: !0,
  addAttributes() {
    return {
      language: {
        default: this.options.defaultLanguage,
        parseHTML: (t) => {
          var e;
          const { languageClassPrefix: n } = this.options, r = [...((e = t.firstElementChild) === null || e === void 0 ? void 0 : e.classList) || []].filter((a) => a.startsWith(n)).map((a) => a.replace(n, ""))[0];
          return r || null;
        },
        rendered: !1
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "pre",
        preserveWhitespace: "full"
      }
    ];
  },
  renderHTML({ node: t, HTMLAttributes: e }) {
    return [
      "pre",
      st(this.options.HTMLAttributes, e),
      [
        "code",
        {
          class: t.attrs.language ? this.options.languageClassPrefix + t.attrs.language : null
        },
        0
      ]
    ];
  },
  addCommands() {
    return {
      setCodeBlock: (t) => ({ commands: e }) => e.setNode(this.name, t),
      toggleCodeBlock: (t) => ({ commands: e }) => e.toggleNode(this.name, "paragraph", t)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-c": () => this.editor.commands.toggleCodeBlock(),
      // remove code block when at start of document or code block is empty
      Backspace: () => {
        const { empty: t, $anchor: e } = this.editor.state.selection, n = e.pos === 1;
        return !t || e.parent.type.name !== this.name ? !1 : n || !e.parent.textContent.length ? this.editor.commands.clearNodes() : !1;
      },
      // exit node on triple enter
      Enter: ({ editor: t }) => {
        if (!this.options.exitOnTripleEnter)
          return !1;
        const { state: e } = t, { selection: n } = e, { $from: o, empty: i } = n;
        if (!i || o.parent.type !== this.type)
          return !1;
        const r = o.parentOffset === o.parent.nodeSize - 2, a = o.parent.textContent.endsWith(`

`);
        return !r || !a ? !1 : t.chain().command(({ tr: l }) => (l.delete(o.pos - 2, o.pos), !0)).exitCode().run();
      },
      // exit node on arrow down
      ArrowDown: ({ editor: t }) => {
        if (!this.options.exitOnArrowDown)
          return !1;
        const { state: e } = t, { selection: n, doc: o } = e, { $from: i, empty: r } = n;
        if (!r || i.parent.type !== this.type || !(i.parentOffset === i.parent.nodeSize - 2))
          return !1;
        const l = i.after();
        return l === void 0 ? !1 : o.nodeAt(l) ? t.commands.command(({ tr: d }) => (d.setSelection(ve.near(o.resolve(l))), !0)) : t.commands.exitCode();
      }
    };
  },
  addInputRules() {
    return [
      oc({
        find: mV,
        type: this.type,
        getAttributes: (t) => ({
          language: t[1]
        })
      }),
      oc({
        find: gV,
        type: this.type,
        getAttributes: (t) => ({
          language: t[1]
        })
      })
    ];
  },
  addProseMirrorPlugins() {
    return [
      // this plugin creates a code block for pasted content from VS Code
      // we can also detect the copied code language
      new dt({
        key: new Lt("codeBlockVSCodeHandler"),
        props: {
          handlePaste: (t, e) => {
            if (!e.clipboardData || this.editor.isActive(this.type.name))
              return !1;
            const n = e.clipboardData.getData("text/plain"), o = e.clipboardData.getData("vscode-editor-data"), i = o ? JSON.parse(o) : void 0, r = i == null ? void 0 : i.mode;
            if (!n || !r)
              return !1;
            const { tr: a, schema: l } = t.state, s = l.text(n.replace(/\r\n?/g, `
`));
            return a.replaceSelectionWith(this.type.create({ language: r }, s)), a.selection.$from.parent.type !== this.type && a.setSelection(he.near(a.doc.resolve(Math.max(0, a.selection.from - 2)))), a.setMeta("paste", !0), t.dispatch(a), !0;
          }
        }
      })
    ];
  }
}), vV = $t.create({
  name: "doc",
  topNode: !0,
  content: "block+"
});
function yV(t = {}) {
  return new dt({
    view(e) {
      return new kV(e, t);
    }
  });
}
class kV {
  constructor(e, n) {
    var o;
    this.editorView = e, this.cursorPos = null, this.element = null, this.timeout = -1, this.width = (o = n.width) !== null && o !== void 0 ? o : 1, this.color = n.color === !1 ? void 0 : n.color || "black", this.class = n.class, this.handlers = ["dragover", "dragend", "drop", "dragleave"].map((i) => {
      let r = (a) => {
        this[i](a);
      };
      return e.dom.addEventListener(i, r), { name: i, handler: r };
    });
  }
  destroy() {
    this.handlers.forEach(({ name: e, handler: n }) => this.editorView.dom.removeEventListener(e, n));
  }
  update(e, n) {
    this.cursorPos != null && n.doc != e.state.doc && (this.cursorPos > e.state.doc.content.size ? this.setCursor(null) : this.updateOverlay());
  }
  setCursor(e) {
    e != this.cursorPos && (this.cursorPos = e, e == null ? (this.element.parentNode.removeChild(this.element), this.element = null) : this.updateOverlay());
  }
  updateOverlay() {
    let e = this.editorView.state.doc.resolve(this.cursorPos), n = !e.parent.inlineContent, o, i = this.editorView.dom, r = i.getBoundingClientRect(), a = r.width / i.offsetWidth, l = r.height / i.offsetHeight;
    if (n) {
      let u = e.nodeBefore, f = e.nodeAfter;
      if (u || f) {
        let p = this.editorView.nodeDOM(this.cursorPos - (u ? u.nodeSize : 0));
        if (p) {
          let h = p.getBoundingClientRect(), g = u ? h.bottom : h.top;
          u && f && (g = (g + this.editorView.nodeDOM(this.cursorPos).getBoundingClientRect().top) / 2);
          let b = this.width / 2 * l;
          o = { left: h.left, right: h.right, top: g - b, bottom: g + b };
        }
      }
    }
    if (!o) {
      let u = this.editorView.coordsAtPos(this.cursorPos), f = this.width / 2 * a;
      o = { left: u.left - f, right: u.left + f, top: u.top, bottom: u.bottom };
    }
    let s = this.editorView.dom.offsetParent;
    this.element || (this.element = s.appendChild(document.createElement("div")), this.class && (this.element.className = this.class), this.element.style.cssText = "position: absolute; z-index: 50; pointer-events: none;", this.color && (this.element.style.backgroundColor = this.color)), this.element.classList.toggle("prosemirror-dropcursor-block", n), this.element.classList.toggle("prosemirror-dropcursor-inline", !n);
    let d, c;
    if (!s || s == document.body && getComputedStyle(s).position == "static")
      d = -pageXOffset, c = -pageYOffset;
    else {
      let u = s.getBoundingClientRect(), f = u.width / s.offsetWidth, p = u.height / s.offsetHeight;
      d = u.left - s.scrollLeft * f, c = u.top - s.scrollTop * p;
    }
    this.element.style.left = (o.left - d) / a + "px", this.element.style.top = (o.top - c) / l + "px", this.element.style.width = (o.right - o.left) / a + "px", this.element.style.height = (o.bottom - o.top) / l + "px";
  }
  scheduleRemoval(e) {
    clearTimeout(this.timeout), this.timeout = setTimeout(() => this.setCursor(null), e);
  }
  dragover(e) {
    if (!this.editorView.editable)
      return;
    let n = this.editorView.posAtCoords({ left: e.clientX, top: e.clientY }), o = n && n.inside >= 0 && this.editorView.state.doc.nodeAt(n.inside), i = o && o.type.spec.disableDropCursor, r = typeof i == "function" ? i(this.editorView, n, e) : i;
    if (n && !r) {
      let a = n.pos;
      if (this.editorView.dragging && this.editorView.dragging.slice) {
        let l = sb(this.editorView.state.doc, a, this.editorView.dragging.slice);
        l != null && (a = l);
      }
      this.setCursor(a), this.scheduleRemoval(5e3);
    }
  }
  dragend() {
    this.scheduleRemoval(20);
  }
  drop() {
    this.scheduleRemoval(20);
  }
  dragleave(e) {
    this.editorView.dom.contains(e.relatedTarget) || this.setCursor(null);
  }
}
const wV = Je.create({
  name: "dropCursor",
  addOptions() {
    return {
      color: "currentColor",
      width: 1,
      class: void 0
    };
  },
  addProseMirrorPlugins() {
    return [
      yV(this.options)
    ];
  }
});
class Ve extends ve {
  /**
  Create a gap cursor.
  */
  constructor(e) {
    super(e, e);
  }
  map(e, n) {
    let o = e.resolve(n.map(this.head));
    return Ve.valid(o) ? new Ve(o) : ve.near(o);
  }
  content() {
    return J.empty;
  }
  eq(e) {
    return e instanceof Ve && e.head == this.head;
  }
  toJSON() {
    return { type: "gapcursor", pos: this.head };
  }
  /**
  @internal
  */
  static fromJSON(e, n) {
    if (typeof n.pos != "number")
      throw new RangeError("Invalid input for GapCursor.fromJSON");
    return new Ve(e.resolve(n.pos));
  }
  /**
  @internal
  */
  getBookmark() {
    return new cu(this.anchor);
  }
  /**
  @internal
  */
  static valid(e) {
    let n = e.parent;
    if (n.isTextblock || !CV(e) || !xV(e))
      return !1;
    let o = n.type.spec.allowGapCursor;
    if (o != null)
      return o;
    let i = n.contentMatchAt(e.index()).defaultType;
    return i && i.isTextblock;
  }
  /**
  @internal
  */
  static findGapCursorFrom(e, n, o = !1) {
    e: for (; ; ) {
      if (!o && Ve.valid(e))
        return e;
      let i = e.pos, r = null;
      for (let a = e.depth; ; a--) {
        let l = e.node(a);
        if (n > 0 ? e.indexAfter(a) < l.childCount : e.index(a) > 0) {
          r = l.child(n > 0 ? e.indexAfter(a) : e.index(a) - 1);
          break;
        } else if (a == 0)
          return null;
        i += n;
        let s = e.doc.resolve(i);
        if (Ve.valid(s))
          return s;
      }
      for (; ; ) {
        let a = n > 0 ? r.firstChild : r.lastChild;
        if (!a) {
          if (r.isAtom && !r.isText && !oe.isSelectable(r)) {
            e = e.doc.resolve(i + r.nodeSize * n), o = !1;
            continue e;
          }
          break;
        }
        r = a, i += n;
        let l = e.doc.resolve(i);
        if (Ve.valid(l))
          return l;
      }
      return null;
    }
  }
}
Ve.prototype.visible = !1;
Ve.findFrom = Ve.findGapCursorFrom;
ve.jsonID("gapcursor", Ve);
class cu {
  constructor(e) {
    this.pos = e;
  }
  map(e) {
    return new cu(e.map(this.pos));
  }
  resolve(e) {
    let n = e.resolve(this.pos);
    return Ve.valid(n) ? new Ve(n) : ve.near(n);
  }
}
function CV(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.index(e), o = t.node(e);
    if (n == 0) {
      if (o.type.spec.isolating)
        return !0;
      continue;
    }
    for (let i = o.child(n - 1); ; i = i.lastChild) {
      if (i.childCount == 0 && !i.inlineContent || i.isAtom || i.type.spec.isolating)
        return !0;
      if (i.inlineContent)
        return !1;
    }
  }
  return !0;
}
function xV(t) {
  for (let e = t.depth; e >= 0; e--) {
    let n = t.indexAfter(e), o = t.node(e);
    if (n == o.childCount) {
      if (o.type.spec.isolating)
        return !0;
      continue;
    }
    for (let i = o.child(n); ; i = i.firstChild) {
      if (i.childCount == 0 && !i.inlineContent || i.isAtom || i.type.spec.isolating)
        return !0;
      if (i.inlineContent)
        return !1;
    }
  }
  return !0;
}
function SV() {
  return new dt({
    props: {
      decorations: $V,
      createSelectionBetween(t, e, n) {
        return e.pos == n.pos && Ve.valid(n) ? new Ve(n) : null;
      },
      handleClick: OV,
      handleKeyDown: IV,
      handleDOMEvents: { beforeinput: PV }
    }
  });
}
const IV = Jb({
  ArrowLeft: Fa("horiz", -1),
  ArrowRight: Fa("horiz", 1),
  ArrowUp: Fa("vert", -1),
  ArrowDown: Fa("vert", 1)
});
function Fa(t, e) {
  const n = t == "vert" ? e > 0 ? "down" : "up" : e > 0 ? "right" : "left";
  return function(o, i, r) {
    let a = o.selection, l = e > 0 ? a.$to : a.$from, s = a.empty;
    if (a instanceof he) {
      if (!r.endOfTextblock(n) || l.depth == 0)
        return !1;
      s = !1, l = o.doc.resolve(e > 0 ? l.after() : l.before());
    }
    let d = Ve.findGapCursorFrom(l, e, s);
    return d ? (i && i(o.tr.setSelection(new Ve(d))), !0) : !1;
  };
}
function OV(t, e, n) {
  if (!t || !t.editable)
    return !1;
  let o = t.state.doc.resolve(e);
  if (!Ve.valid(o))
    return !1;
  let i = t.posAtCoords({ left: n.clientX, top: n.clientY });
  return i && i.inside > -1 && oe.isSelectable(t.state.doc.nodeAt(i.inside)) ? !1 : (t.dispatch(t.state.tr.setSelection(new Ve(o))), !0);
}
function PV(t, e) {
  if (e.inputType != "insertCompositionText" || !(t.state.selection instanceof Ve))
    return !1;
  let { $from: n } = t.state.selection, o = n.parent.contentMatchAt(n.index()).findWrapping(t.state.schema.nodes.text);
  if (!o)
    return !1;
  let i = N.empty;
  for (let a = o.length - 1; a >= 0; a--)
    i = N.from(o[a].createAndFill(null, i));
  let r = t.state.tr.replace(n.pos, n.pos, new J(i, 0, 0));
  return r.setSelection(he.near(r.doc.resolve(n.pos + 1))), t.dispatch(r), !1;
}
function $V(t) {
  if (!(t.selection instanceof Ve))
    return null;
  let e = document.createElement("div");
  return e.className = "ProseMirror-gapcursor", qe.create(t.doc, [_t.widget(t.selection.head, e, { key: "gapcursor" })]);
}
const TV = Je.create({
  name: "gapCursor",
  addProseMirrorPlugins() {
    return [
      SV()
    ];
  },
  extendNodeSchema(t) {
    var e;
    const n = {
      name: t.name,
      options: t.options,
      storage: t.storage
    };
    return {
      allowGapCursor: (e = ye(X(t, "allowGapCursor", n))) !== null && e !== void 0 ? e : null
    };
  }
}), RV = $t.create({
  name: "hardBreak",
  addOptions() {
    return {
      keepMarks: !0,
      HTMLAttributes: {}
    };
  },
  inline: !0,
  group: "inline",
  selectable: !1,
  linebreakReplacement: !0,
  parseHTML() {
    return [
      { tag: "br" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["br", st(this.options.HTMLAttributes, t)];
  },
  renderText() {
    return `
`;
  },
  addCommands() {
    return {
      setHardBreak: () => ({ commands: t, chain: e, state: n, editor: o }) => t.first([
        () => t.exitCode(),
        () => t.command(() => {
          const { selection: i, storedMarks: r } = n;
          if (i.$from.parent.type.spec.isolating)
            return !1;
          const { keepMarks: a } = this.options, { splittableMarks: l } = o.extensionManager, s = r || i.$to.parentOffset && i.$from.marks();
          return e().insertContent({ type: this.name }).command(({ tr: d, dispatch: c }) => {
            if (c && s && a) {
              const u = s.filter((f) => l.includes(f.type.name));
              d.ensureMarks(u);
            }
            return !0;
          }).run();
        })
      ])
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Enter": () => this.editor.commands.setHardBreak(),
      "Shift-Enter": () => this.editor.commands.setHardBreak()
    };
  }
}), BV = $t.create({
  name: "heading",
  addOptions() {
    return {
      levels: [1, 2, 3, 4, 5, 6],
      HTMLAttributes: {}
    };
  },
  content: "inline*",
  group: "block",
  defining: !0,
  addAttributes() {
    return {
      level: {
        default: 1,
        rendered: !1
      }
    };
  },
  parseHTML() {
    return this.options.levels.map((t) => ({
      tag: `h${t}`,
      attrs: { level: t }
    }));
  },
  renderHTML({ node: t, HTMLAttributes: e }) {
    return [`h${this.options.levels.includes(t.attrs.level) ? t.attrs.level : this.options.levels[0]}`, st(this.options.HTMLAttributes, e), 0];
  },
  addCommands() {
    return {
      setHeading: (t) => ({ commands: e }) => this.options.levels.includes(t.level) ? e.setNode(this.name, t) : !1,
      toggleHeading: (t) => ({ commands: e }) => this.options.levels.includes(t.level) ? e.toggleNode(this.name, "paragraph", t) : !1
    };
  },
  addKeyboardShortcuts() {
    return this.options.levels.reduce((t, e) => ({
      ...t,
      [`Mod-Alt-${e}`]: () => this.editor.commands.toggleHeading({ level: e })
    }), {});
  },
  addInputRules() {
    return this.options.levels.map((t) => oc({
      find: new RegExp(`^(#{${Math.min(...this.options.levels)},${t}})\\s$`),
      type: this.type,
      getAttributes: {
        level: t
      }
    }));
  }
});
var ml = 200, Qe = function() {
};
Qe.prototype.append = function(e) {
  return e.length ? (e = Qe.from(e), !this.length && e || e.length < ml && this.leafAppend(e) || this.length < ml && e.leafPrepend(this) || this.appendInner(e)) : this;
};
Qe.prototype.prepend = function(e) {
  return e.length ? Qe.from(e).append(this) : this;
};
Qe.prototype.appendInner = function(e) {
  return new EV(this, e);
};
Qe.prototype.slice = function(e, n) {
  return e === void 0 && (e = 0), n === void 0 && (n = this.length), e >= n ? Qe.empty : this.sliceInner(Math.max(0, e), Math.min(this.length, n));
};
Qe.prototype.get = function(e) {
  if (!(e < 0 || e >= this.length))
    return this.getInner(e);
};
Qe.prototype.forEach = function(e, n, o) {
  n === void 0 && (n = 0), o === void 0 && (o = this.length), n <= o ? this.forEachInner(e, n, o, 0) : this.forEachInvertedInner(e, n, o, 0);
};
Qe.prototype.map = function(e, n, o) {
  n === void 0 && (n = 0), o === void 0 && (o = this.length);
  var i = [];
  return this.forEach(function(r, a) {
    return i.push(e(r, a));
  }, n, o), i;
};
Qe.from = function(e) {
  return e instanceof Qe ? e : e && e.length ? new j0(e) : Qe.empty;
};
var j0 = /* @__PURE__ */ (function(t) {
  function e(o) {
    t.call(this), this.values = o;
  }
  t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e;
  var n = { length: { configurable: !0 }, depth: { configurable: !0 } };
  return e.prototype.flatten = function() {
    return this.values;
  }, e.prototype.sliceInner = function(i, r) {
    return i == 0 && r == this.length ? this : new e(this.values.slice(i, r));
  }, e.prototype.getInner = function(i) {
    return this.values[i];
  }, e.prototype.forEachInner = function(i, r, a, l) {
    for (var s = r; s < a; s++)
      if (i(this.values[s], l + s) === !1)
        return !1;
  }, e.prototype.forEachInvertedInner = function(i, r, a, l) {
    for (var s = r - 1; s >= a; s--)
      if (i(this.values[s], l + s) === !1)
        return !1;
  }, e.prototype.leafAppend = function(i) {
    if (this.length + i.length <= ml)
      return new e(this.values.concat(i.flatten()));
  }, e.prototype.leafPrepend = function(i) {
    if (this.length + i.length <= ml)
      return new e(i.flatten().concat(this.values));
  }, n.length.get = function() {
    return this.values.length;
  }, n.depth.get = function() {
    return 0;
  }, Object.defineProperties(e.prototype, n), e;
})(Qe);
Qe.empty = new j0([]);
var EV = /* @__PURE__ */ (function(t) {
  function e(n, o) {
    t.call(this), this.left = n, this.right = o, this.length = n.length + o.length, this.depth = Math.max(n.depth, o.depth) + 1;
  }
  return t && (e.__proto__ = t), e.prototype = Object.create(t && t.prototype), e.prototype.constructor = e, e.prototype.flatten = function() {
    return this.left.flatten().concat(this.right.flatten());
  }, e.prototype.getInner = function(o) {
    return o < this.left.length ? this.left.get(o) : this.right.get(o - this.left.length);
  }, e.prototype.forEachInner = function(o, i, r, a) {
    var l = this.left.length;
    if (i < l && this.left.forEachInner(o, i, Math.min(r, l), a) === !1 || r > l && this.right.forEachInner(o, Math.max(i - l, 0), Math.min(this.length, r) - l, a + l) === !1)
      return !1;
  }, e.prototype.forEachInvertedInner = function(o, i, r, a) {
    var l = this.left.length;
    if (i > l && this.right.forEachInvertedInner(o, i - l, Math.max(r, l) - l, a + l) === !1 || r < l && this.left.forEachInvertedInner(o, Math.min(i, l), r, a) === !1)
      return !1;
  }, e.prototype.sliceInner = function(o, i) {
    if (o == 0 && i == this.length)
      return this;
    var r = this.left.length;
    return i <= r ? this.left.slice(o, i) : o >= r ? this.right.slice(o - r, i - r) : this.left.slice(o, r).append(this.right.slice(0, i - r));
  }, e.prototype.leafAppend = function(o) {
    var i = this.right.leafAppend(o);
    if (i)
      return new e(this.left, i);
  }, e.prototype.leafPrepend = function(o) {
    var i = this.left.leafPrepend(o);
    if (i)
      return new e(i, this.right);
  }, e.prototype.appendInner = function(o) {
    return this.left.depth >= Math.max(this.right.depth, o.depth) + 1 ? new e(this.left, new e(this.right, o)) : new e(this, o);
  }, e;
})(Qe);
const MV = 500;
class Zt {
  constructor(e, n) {
    this.items = e, this.eventCount = n;
  }
  // Pop the latest event off the branch's history and apply it
  // to a document transform.
  popEvent(e, n) {
    if (this.eventCount == 0)
      return null;
    let o = this.items.length;
    for (; ; o--)
      if (this.items.get(o - 1).selection) {
        --o;
        break;
      }
    let i, r;
    n && (i = this.remapping(o, this.items.length), r = i.maps.length);
    let a = e.tr, l, s, d = [], c = [];
    return this.items.forEach((u, f) => {
      if (!u.step) {
        i || (i = this.remapping(o, f + 1), r = i.maps.length), r--, c.push(u);
        return;
      }
      if (i) {
        c.push(new on(u.map));
        let p = u.step.map(i.slice(r)), h;
        p && a.maybeStep(p).doc && (h = a.mapping.maps[a.mapping.maps.length - 1], d.push(new on(h, void 0, void 0, d.length + c.length))), r--, h && i.appendMap(h, r);
      } else
        a.maybeStep(u.step);
      if (u.selection)
        return l = i ? u.selection.map(i.slice(r)) : u.selection, s = new Zt(this.items.slice(0, o).append(c.reverse().concat(d)), this.eventCount - 1), !1;
    }, this.items.length, 0), { remaining: s, transform: a, selection: l };
  }
  // Create a new branch with the given transform added.
  addTransform(e, n, o, i) {
    let r = [], a = this.eventCount, l = this.items, s = !i && l.length ? l.get(l.length - 1) : null;
    for (let c = 0; c < e.steps.length; c++) {
      let u = e.steps[c].invert(e.docs[c]), f = new on(e.mapping.maps[c], u, n), p;
      (p = s && s.merge(f)) && (f = p, c ? r.pop() : l = l.slice(0, l.length - 1)), r.push(f), n && (a++, n = void 0), i || (s = f);
    }
    let d = a - o.depth;
    return d > DV && (l = AV(l, d), a -= d), new Zt(l.append(r), a);
  }
  remapping(e, n) {
    let o = new Ki();
    return this.items.forEach((i, r) => {
      let a = i.mirrorOffset != null && r - i.mirrorOffset >= e ? o.maps.length - i.mirrorOffset : void 0;
      o.appendMap(i.map, a);
    }, e, n), o;
  }
  addMaps(e) {
    return this.eventCount == 0 ? this : new Zt(this.items.append(e.map((n) => new on(n))), this.eventCount);
  }
  // When the collab module receives remote changes, the history has
  // to know about those, so that it can adjust the steps that were
  // rebased on top of the remote changes, and include the position
  // maps for the remote changes in its array of items.
  rebased(e, n) {
    if (!this.eventCount)
      return this;
    let o = [], i = Math.max(0, this.items.length - n), r = e.mapping, a = e.steps.length, l = this.eventCount;
    this.items.forEach((f) => {
      f.selection && l--;
    }, i);
    let s = n;
    this.items.forEach((f) => {
      let p = r.getMirror(--s);
      if (p == null)
        return;
      a = Math.min(a, p);
      let h = r.maps[p];
      if (f.step) {
        let g = e.steps[p].invert(e.docs[p]), b = f.selection && f.selection.map(r.slice(s + 1, p));
        b && l++, o.push(new on(h, g, b));
      } else
        o.push(new on(h));
    }, i);
    let d = [];
    for (let f = n; f < a; f++)
      d.push(new on(r.maps[f]));
    let c = this.items.slice(0, i).append(d).append(o), u = new Zt(c, l);
    return u.emptyItemCount() > MV && (u = u.compress(this.items.length - o.length)), u;
  }
  emptyItemCount() {
    let e = 0;
    return this.items.forEach((n) => {
      n.step || e++;
    }), e;
  }
  // Compressing a branch means rewriting it to push the air (map-only
  // items) out. During collaboration, these naturally accumulate
  // because each remote change adds one. The `upto` argument is used
  // to ensure that only the items below a given level are compressed,
  // because `rebased` relies on a clean, untouched set of items in
  // order to associate old items with rebased steps.
  compress(e = this.items.length) {
    let n = this.remapping(0, e), o = n.maps.length, i = [], r = 0;
    return this.items.forEach((a, l) => {
      if (l >= e)
        i.push(a), a.selection && r++;
      else if (a.step) {
        let s = a.step.map(n.slice(o)), d = s && s.getMap();
        if (o--, d && n.appendMap(d, o), s) {
          let c = a.selection && a.selection.map(n.slice(o));
          c && r++;
          let u = new on(d.invert(), s, c), f, p = i.length - 1;
          (f = i.length && i[p].merge(u)) ? i[p] = f : i.push(u);
        }
      } else a.map && o--;
    }, this.items.length, 0), new Zt(Qe.from(i.reverse()), r);
  }
}
Zt.empty = new Zt(Qe.empty, 0);
function AV(t, e) {
  let n;
  return t.forEach((o, i) => {
    if (o.selection && e-- == 0)
      return n = i, !1;
  }), t.slice(n);
}
class on {
  constructor(e, n, o, i) {
    this.map = e, this.step = n, this.selection = o, this.mirrorOffset = i;
  }
  merge(e) {
    if (this.step && e.step && !e.selection) {
      let n = e.step.merge(this.step);
      if (n)
        return new on(n.getMap().invert(), n, this.selection);
    }
  }
}
class Fn {
  constructor(e, n, o, i, r) {
    this.done = e, this.undone = n, this.prevRanges = o, this.prevTime = i, this.prevComposition = r;
  }
}
const DV = 20;
function LV(t, e, n, o) {
  let i = n.getMeta(Io), r;
  if (i)
    return i.historyState;
  n.getMeta(NV) && (t = new Fn(t.done, t.undone, null, 0, -1));
  let a = n.getMeta("appendedTransaction");
  if (n.steps.length == 0)
    return t;
  if (a && a.getMeta(Io))
    return a.getMeta(Io).redo ? new Fn(t.done.addTransform(n, void 0, o, qa(e)), t.undone, Lh(n.mapping.maps), t.prevTime, t.prevComposition) : new Fn(t.done, t.undone.addTransform(n, void 0, o, qa(e)), null, t.prevTime, t.prevComposition);
  if (n.getMeta("addToHistory") !== !1 && !(a && a.getMeta("addToHistory") === !1)) {
    let l = n.getMeta("composition"), s = t.prevTime == 0 || !a && t.prevComposition != l && (t.prevTime < (n.time || 0) - o.newGroupDelay || !zV(n, t.prevRanges)), d = a ? Ps(t.prevRanges, n.mapping) : Lh(n.mapping.maps);
    return new Fn(t.done.addTransform(n, s ? e.selection.getBookmark() : void 0, o, qa(e)), Zt.empty, d, n.time, l ?? t.prevComposition);
  } else return (r = n.getMeta("rebased")) ? new Fn(t.done.rebased(n, r), t.undone.rebased(n, r), Ps(t.prevRanges, n.mapping), t.prevTime, t.prevComposition) : new Fn(t.done.addMaps(n.mapping.maps), t.undone.addMaps(n.mapping.maps), Ps(t.prevRanges, n.mapping), t.prevTime, t.prevComposition);
}
function zV(t, e) {
  if (!e)
    return !1;
  if (!t.docChanged)
    return !0;
  let n = !1;
  return t.mapping.maps[0].forEach((o, i) => {
    for (let r = 0; r < e.length; r += 2)
      o <= e[r + 1] && i >= e[r] && (n = !0);
  }), n;
}
function Lh(t) {
  let e = [];
  for (let n = t.length - 1; n >= 0 && e.length == 0; n--)
    t[n].forEach((o, i, r, a) => e.push(r, a));
  return e;
}
function Ps(t, e) {
  if (!t)
    return null;
  let n = [];
  for (let o = 0; o < t.length; o += 2) {
    let i = e.map(t[o], 1), r = e.map(t[o + 1], -1);
    i <= r && n.push(i, r);
  }
  return n;
}
function FV(t, e, n) {
  let o = qa(e), i = Io.get(e).spec.config, r = (n ? t.undone : t.done).popEvent(e, o);
  if (!r)
    return null;
  let a = r.selection.resolve(r.transform.doc), l = (n ? t.done : t.undone).addTransform(r.transform, e.selection.getBookmark(), i, o), s = new Fn(n ? l : r.remaining, n ? r.remaining : l, null, 0, -1);
  return r.transform.setSelection(a).setMeta(Io, { redo: n, historyState: s });
}
let $s = !1, zh = null;
function qa(t) {
  let e = t.plugins;
  if (zh != e) {
    $s = !1, zh = e;
    for (let n = 0; n < e.length; n++)
      if (e[n].spec.historyPreserveItems) {
        $s = !0;
        break;
      }
  }
  return $s;
}
const Io = new Lt("history"), NV = new Lt("closeHistory");
function jV(t = {}) {
  return t = {
    depth: t.depth || 100,
    newGroupDelay: t.newGroupDelay || 500
  }, new dt({
    key: Io,
    state: {
      init() {
        return new Fn(Zt.empty, Zt.empty, null, 0, -1);
      },
      apply(e, n, o) {
        return LV(n, o, e, t);
      }
    },
    config: t,
    props: {
      handleDOMEvents: {
        beforeinput(e, n) {
          let o = n.inputType, i = o == "historyUndo" ? _0 : o == "historyRedo" ? K0 : null;
          return i ? (n.preventDefault(), i(e.state, e.dispatch)) : !1;
        }
      }
    }
  });
}
function V0(t, e) {
  return (n, o) => {
    let i = Io.getState(n);
    if (!i || (t ? i.undone : i.done).eventCount == 0)
      return !1;
    if (o) {
      let r = FV(i, n, t);
      r && o(e ? r.scrollIntoView() : r);
    }
    return !0;
  };
}
const _0 = V0(!1, !0), K0 = V0(!0, !0), VV = Je.create({
  name: "history",
  addOptions() {
    return {
      depth: 100,
      newGroupDelay: 500
    };
  },
  addCommands() {
    return {
      undo: () => ({ state: t, dispatch: e }) => _0(t, e),
      redo: () => ({ state: t, dispatch: e }) => K0(t, e)
    };
  },
  addProseMirrorPlugins() {
    return [
      jV(this.options)
    ];
  },
  addKeyboardShortcuts() {
    return {
      "Mod-z": () => this.editor.commands.undo(),
      "Shift-Mod-z": () => this.editor.commands.redo(),
      "Mod-y": () => this.editor.commands.redo(),
      // Russian keyboard layouts
      "Mod-я": () => this.editor.commands.undo(),
      "Shift-Mod-я": () => this.editor.commands.redo()
    };
  }
}), _V = $t.create({
  name: "horizontalRule",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  group: "block",
  parseHTML() {
    return [{ tag: "hr" }];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["hr", st(this.options.HTMLAttributes, t)];
  },
  addCommands() {
    return {
      setHorizontalRule: () => ({ chain: t, state: e }) => {
        if (!SN(e, e.schema.nodes[this.name]))
          return !1;
        const { selection: n } = e, { $from: o, $to: i } = n, r = t();
        return o.parentOffset === 0 ? r.insertContentAt({
          from: Math.max(o.pos - 1, 0),
          to: i.pos
        }, {
          type: this.name
        }) : v0(n) ? r.insertContentAt(i.pos, {
          type: this.name
        }) : r.insertContent({ type: this.name }), r.command(({ tr: a, dispatch: l }) => {
          var s;
          if (l) {
            const { $to: d } = a.selection, c = d.end();
            if (d.nodeAfter)
              d.nodeAfter.isTextblock ? a.setSelection(he.create(a.doc, d.pos + 1)) : d.nodeAfter.isBlock ? a.setSelection(oe.create(a.doc, d.pos)) : a.setSelection(he.create(a.doc, d.pos));
            else {
              const u = (s = d.parent.type.contentMatch.defaultType) === null || s === void 0 ? void 0 : s.create();
              u && (a.insert(c, u), a.setSelection(he.create(a.doc, c + 1)));
            }
            a.scrollIntoView();
          }
          return !0;
        }).run();
      }
    };
  },
  addInputRules() {
    return [
      xN({
        find: /^(?:---|—-|___\s|\*\*\*\s)$/,
        type: this.type
      })
    ];
  }
}), KV = /(?:^|\s)(\*(?!\s+\*)((?:[^*]+))\*(?!\s+\*))$/, HV = /(?:^|\s)(\*(?!\s+\*)((?:[^*]+))\*(?!\s+\*))/g, WV = /(?:^|\s)(_(?!\s+_)((?:[^_]+))_(?!\s+_))$/, UV = /(?:^|\s)(_(?!\s+_)((?:[^_]+))_(?!\s+_))/g, GV = gn.create({
  name: "italic",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "em"
      },
      {
        tag: "i",
        getAttrs: (t) => t.style.fontStyle !== "normal" && null
      },
      {
        style: "font-style=normal",
        clearMark: (t) => t.type.name === this.name
      },
      {
        style: "font-style=italic"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["em", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setItalic: () => ({ commands: t }) => t.setMark(this.name),
      toggleItalic: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetItalic: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-i": () => this.editor.commands.toggleItalic(),
      "Mod-I": () => this.editor.commands.toggleItalic()
    };
  },
  addInputRules() {
    return [
      sr({
        find: KV,
        type: this.type
      }),
      sr({
        find: WV,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      dr({
        find: HV,
        type: this.type
      }),
      dr({
        find: UV,
        type: this.type
      })
    ];
  }
}), qV = $t.create({
  name: "listItem",
  addOptions() {
    return {
      HTMLAttributes: {},
      bulletListTypeName: "bulletList",
      orderedListTypeName: "orderedList"
    };
  },
  content: "paragraph block*",
  defining: !0,
  parseHTML() {
    return [
      {
        tag: "li"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["li", st(this.options.HTMLAttributes, t), 0];
  },
  addKeyboardShortcuts() {
    return {
      Enter: () => this.editor.commands.splitListItem(this.name),
      Tab: () => this.editor.commands.sinkListItem(this.name),
      "Shift-Tab": () => this.editor.commands.liftListItem(this.name)
    };
  }
}), JV = "listItem", Fh = "textStyle", Nh = /^(\d+)\.\s$/, YV = $t.create({
  name: "orderedList",
  addOptions() {
    return {
      itemTypeName: "listItem",
      HTMLAttributes: {},
      keepMarks: !1,
      keepAttributes: !1
    };
  },
  group: "block list",
  content() {
    return `${this.options.itemTypeName}+`;
  },
  addAttributes() {
    return {
      start: {
        default: 1,
        parseHTML: (t) => t.hasAttribute("start") ? parseInt(t.getAttribute("start") || "", 10) : 1
      },
      type: {
        default: null,
        parseHTML: (t) => t.getAttribute("type")
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "ol"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    const { start: e, ...n } = t;
    return e === 1 ? ["ol", st(this.options.HTMLAttributes, n), 0] : ["ol", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      toggleOrderedList: () => ({ commands: t, chain: e }) => this.options.keepAttributes ? e().toggleList(this.name, this.options.itemTypeName, this.options.keepMarks).updateAttributes(JV, this.editor.getAttributes(Fh)).run() : t.toggleList(this.name, this.options.itemTypeName, this.options.keepMarks)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-7": () => this.editor.commands.toggleOrderedList()
    };
  },
  addInputRules() {
    let t = Yi({
      find: Nh,
      type: this.type,
      getAttributes: (e) => ({ start: +e[1] }),
      joinPredicate: (e, n) => n.childCount + n.attrs.start === +e[1]
    });
    return (this.options.keepMarks || this.options.keepAttributes) && (t = Yi({
      find: Nh,
      type: this.type,
      keepMarks: this.options.keepMarks,
      keepAttributes: this.options.keepAttributes,
      getAttributes: (e) => ({ start: +e[1], ...this.editor.getAttributes(Fh) }),
      joinPredicate: (e, n) => n.childCount + n.attrs.start === +e[1],
      editor: this.editor
    })), [
      t
    ];
  }
}), XV = $t.create({
  name: "paragraph",
  priority: 1e3,
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  group: "block",
  content: "inline*",
  parseHTML() {
    return [
      { tag: "p" }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["p", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setParagraph: () => ({ commands: t }) => t.setNode(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Alt-0": () => this.editor.commands.setParagraph()
    };
  }
}), ZV = /(?:^|\s)(~~(?!\s+~~)((?:[^~]+))~~(?!\s+~~))$/, QV = /(?:^|\s)(~~(?!\s+~~)((?:[^~]+))~~(?!\s+~~))/g, e_ = gn.create({
  name: "strike",
  addOptions() {
    return {
      HTMLAttributes: {}
    };
  },
  parseHTML() {
    return [
      {
        tag: "s"
      },
      {
        tag: "del"
      },
      {
        tag: "strike"
      },
      {
        style: "text-decoration",
        consuming: !1,
        getAttrs: (t) => t.includes("line-through") ? {} : !1
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    return ["s", st(this.options.HTMLAttributes, t), 0];
  },
  addCommands() {
    return {
      setStrike: () => ({ commands: t }) => t.setMark(this.name),
      toggleStrike: () => ({ commands: t }) => t.toggleMark(this.name),
      unsetStrike: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  },
  addKeyboardShortcuts() {
    return {
      "Mod-Shift-s": () => this.editor.commands.toggleStrike()
    };
  },
  addInputRules() {
    return [
      sr({
        find: ZV,
        type: this.type
      })
    ];
  },
  addPasteRules() {
    return [
      dr({
        find: QV,
        type: this.type
      })
    ];
  }
}), t_ = $t.create({
  name: "text",
  group: "inline"
}), jh = Je.create({
  name: "starterKit",
  addExtensions() {
    const t = [];
    return this.options.bold !== !1 && t.push(dV.configure(this.options.bold)), this.options.blockquote !== !1 && t.push(rV.configure(this.options.blockquote)), this.options.bulletList !== !1 && t.push(uV.configure(this.options.bulletList)), this.options.code !== !1 && t.push(hV.configure(this.options.code)), this.options.codeBlock !== !1 && t.push(bV.configure(this.options.codeBlock)), this.options.document !== !1 && t.push(vV.configure(this.options.document)), this.options.dropcursor !== !1 && t.push(wV.configure(this.options.dropcursor)), this.options.gapcursor !== !1 && t.push(TV.configure(this.options.gapcursor)), this.options.hardBreak !== !1 && t.push(RV.configure(this.options.hardBreak)), this.options.heading !== !1 && t.push(BV.configure(this.options.heading)), this.options.history !== !1 && t.push(VV.configure(this.options.history)), this.options.horizontalRule !== !1 && t.push(_V.configure(this.options.horizontalRule)), this.options.italic !== !1 && t.push(GV.configure(this.options.italic)), this.options.listItem !== !1 && t.push(qV.configure(this.options.listItem)), this.options.orderedList !== !1 && t.push(YV.configure(this.options.orderedList)), this.options.paragraph !== !1 && t.push(XV.configure(this.options.paragraph)), this.options.strike !== !1 && t.push(e_.configure(this.options.strike)), this.options.text !== !1 && t.push(t_.configure(this.options.text)), t;
  }
}), Vh = gn.create({
  name: "deletion",
  addAttributes() {
    return {
      user: {
        default: null
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "del",
        getAttrs: (t) => typeof t == "string" ? {} : {
          user: t.getAttribute("data-user")
        }
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    const e = t.user || "unknown";
    return ["del", st(
      {
        title: `新增者：${e}`
        // hover 顯示用戶名稱
      },
      t
    ), 0];
  },
  addCommands() {
    return {
      setDeletion: (t) => ({ commands: e }) => e.setMark(this.name, t)
    };
  }
}), n_ = Je.create({
  name: "deletionOnKey",
  addKeyboardShortcuts() {
    return {
      Backspace: ({ editor: t }) => {
        const { state: e, commands: n } = t, { from: o, to: i } = e.selection, r = this.options.user;
        return o === i ? !1 : (n.setMark("deletion", { user: r }), !0);
      },
      Delete: ({ editor: t }) => {
        const { state: e, commands: n } = t, { from: o, to: i } = e.selection, r = this.options.user;
        return o === i ? !1 : (n.setMark("deletion", { user: r }), !0);
      }
    };
  }
}), _h = gn.create({
  name: "insertion",
  addAttributes() {
    return {
      user: {
        default: null
      }
    };
  },
  parseHTML() {
    return [
      {
        tag: "span[data-insertion]"
      }
    ];
  },
  renderHTML({ HTMLAttributes: t }) {
    const e = t.user || "unknown";
    return [
      "span",
      st(
        {
          "data-insertion": "true",
          style: "color: green; background-color: #e6ffe6;",
          title: `新增者：${e}`
          // hover 顯示用戶名稱
        },
        t
      ),
      0
    ];
  },
  addCommands() {
    return {
      setInsertion: (t) => ({ commands: e }) => e.setMark(this.name, t),
      unsetInsertion: () => ({ commands: t }) => t.unsetMark(this.name)
    };
  }
}), o_ = Je.create({
  name: "insertionOnInput",
  addProseMirrorPlugins() {
    return [
      new dt({
        key: new Lt("insertionOnInput"),
        props: {
          handleTextInput: (t, e, n, o) => {
            const { state: i, dispatch: r } = t, { tr: a, schema: l } = i, s = this.options.user, d = l.marks.deletion, c = l.marks.insertion;
            if (a.insertText(o, e, n), d && a.removeMark(e, e + o.length, d), c) {
              const u = c.create({ user: s });
              a.addMark(e, e + o.length, u);
            }
            return r(a), !0;
          }
        }
      })
    ];
  }
}), r_ = { class: "p-4 space-y-4" }, i_ = { class: "space-x-2" }, a_ = {
  key: 0,
  class: "prose border p-4 rounded shadow bg-gray-50 relative"
}, l_ = ["innerHTML"], Na = "欣怡", s_ = /* @__PURE__ */ Be({
  __name: "TiptapEditor",
  setup(t) {
    const e = Mh({
      content: "<p>Hello 選文字後按 Backspace 就會標記刪除</p>",
      extensions: [
        jh,
        Vh.configure({ user: Na }),
        n_.configure({ user: Na }),
        _h.configure({ user: Na }),
        o_.configure({ user: Na })
      ]
    }), n = Mh({
      editable: !1,
      extensions: [
        jh,
        Vh,
        _h
      ]
    }), o = z(""), i = () => {
      var d;
      const s = (d = e.value) == null ? void 0 : d.getJSON();
      s && (localStorage.setItem("draft", JSON.stringify(s)), alert("草稿已儲存！"));
    }, r = () => {
      var d;
      const s = localStorage.getItem("draft");
      if (s) {
        const c = JSON.parse(s);
        (d = e.value) == null || d.commands.setContent(c);
      }
    }, a = () => {
      var d;
      const s = localStorage.getItem("draft");
      if (s) {
        const c = JSON.parse(s);
        (d = n.value) == null || d.commands.setContent(c);
      }
    }, l = () => {
      var c;
      const s = ((c = e.value) == null ? void 0 : c.getHTML()) || "", d = new DOMParser().parseFromString(s, "text/html");
      d.querySelectorAll("del").forEach((u) => u.remove()), d.querySelectorAll("span[data-insertion]").forEach((u) => {
        const f = u, p = document.createTextNode(f.textContent || "");
        u.replaceWith(p);
      }), o.value = d.body.innerHTML;
    };
    return (s, d) => {
      const c = $("Button");
      return m(), y("div", r_, [
        v("div", null, [
          d[0] || (d[0] = v("h2", { class: "text-lg font-semibold mb-2" }, "內容編輯區", -1)),
          P(He(Eh), {
            editor: He(e),
            class: "border border-gray-300 p-4 rounded shadow-sm min-h-[150px]"
          }, null, 8, ["editor"])
        ]),
        v("div", i_, [
          P(c, {
            label: "儲存草稿",
            onClick: i
          }),
          P(c, {
            label: "載入草稿到原來的textarea",
            onClick: r
          }),
          P(c, {
            label: "載入草稿到下方預覽",
            onClick: a
          }),
          P(c, {
            label: "審核變更",
            onClick: l,
            severity: "warning"
          })
        ]),
        v("div", null, [
          d[1] || (d[1] = v("h3", { class: "font-bold" }, "草稿預覽（唯讀）", -1)),
          P(He(Eh), {
            editor: He(n),
            class: "border p-2 rounded shadow bg-gray-50"
          }, null, 8, ["editor"])
        ]),
        o.value ? (m(), y("div", a_, [
          d[2] || (d[2] = v("h4", null, "審核後結果：", -1)),
          v("div", { innerHTML: o.value }, null, 8, l_)
        ])) : M("", !0)
      ]);
    };
  }
}), d_ = /* @__PURE__ */ Bn(s_, [["__scopeId", "data-v-fcc13030"]]), c_ = /* @__PURE__ */ Be({
  __name: "Textcheck",
  setup(t) {
    return (e, n) => (m(), O(d_));
  }
}), En = {
  getProductsData() {
    return [
      {
        id: "005",
        check: "1",
        status: "A",
        feeno: "0201234",
        name: "林偉哲",
        sex: "男",
        birthday: "1971-08-30(52y11m17d)",
        tag: [
          {
            id: "tag1",
            tagname: "跌",
            button: "0",
            color: "danger"
          }
        ],
        din: "0",
        page: [
          {
            pagename: "報",
            button: "0"
          },
          {
            pagename: "危",
            button: "0"
          }
        ]
      },
      {
        id: "009",
        check: "0",
        status: "",
        feeno: "",
        name: "陳大興",
        sex: "男",
        birthday: "",
        tag: [],
        din: "1",
        page: []
      },
      {
        id: "001",
        check: "1",
        status: "C",
        feeno: "0201235",
        name: "林小美",
        sex: "女",
        birthday: "2013-03-20(11y4m17d)",
        tag: [
          {
            id: "tag1",
            tagname: "跌",
            button: "0",
            color: "danger"
          },
          {
            id: "tag2",
            tagname: "管理",
            button: "0",
            color: "info"
          }
        ],
        din: "1",
        page: []
      }
    ];
  },
  getProductsWithOrdersData() {
    return [
      {
        id: "1000",
        code: "f230fh0g3",
        name: "Bamboo Watch",
        description: "Product Description1111111111111111111111111111111111111111111111111111",
        image: "bamboo-watch.jpg",
        price: 65,
        category: "Accessories",
        quantity: 24,
        inventoryStatus: "INSTOCK",
        rating: 5,
        orders: [
          {
            id: "1000-0",
            productCode: "f230fh0g3",
            date: "2020-09-13",
            amount: 65,
            quantity: 1,
            customer: "David James",
            status: "PENDING"
          },
          {
            id: "1000-1",
            productCode: "f230fh0g3",
            date: "2020-05-14",
            amount: 130,
            quantity: 2,
            customer: "Leon Rodrigues",
            status: "DELIVERED"
          },
          {
            id: "1000-2",
            productCode: "f230fh0g3",
            date: "2019-01-04",
            amount: 65,
            quantity: 1,
            customer: "Juan Alejandro",
            status: "RETURNED"
          },
          {
            id: "1000-3",
            productCode: "f230fh0g3",
            date: "2020-09-13",
            amount: 195,
            quantity: 3,
            customer: "Claire Morrow",
            status: "CANCELLED"
          }
        ]
      },
      {
        id: "1001",
        code: "nvklal433",
        name: "Black Watch",
        description: "Product Description",
        image: "black-watch.jpg",
        price: 72,
        category: "Accessories",
        quantity: 61,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: [
          {
            id: "1001-0",
            productCode: "nvklal433",
            date: "2020-05-14",
            amount: 72,
            quantity: 1,
            customer: "Maisha Jefferson",
            status: "DELIVERED"
          },
          {
            id: "1001-1",
            productCode: "nvklal433",
            date: "2020-02-28",
            amount: 144,
            quantity: 2,
            customer: "Octavia Murillo",
            status: "PENDING"
          }
        ]
      },
      {
        id: "1002",
        code: "zz21cz3c1",
        name: "Blue Band",
        description: "Product Description",
        image: "blue-band.jpg",
        price: 79,
        category: "Fitness",
        quantity: 2,
        inventoryStatus: "LOWSTOCK",
        rating: 3,
        orders: [
          {
            id: "1002-0",
            productCode: "zz21cz3c1",
            date: "2020-07-05",
            amount: 79,
            quantity: 1,
            customer: "Stacey Leja",
            status: "DELIVERED"
          },
          {
            id: "1002-1",
            productCode: "zz21cz3c1",
            date: "2020-02-06",
            amount: 79,
            quantity: 1,
            customer: "Ashley Wickens",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1003",
        code: "244wgerg2",
        name: "Blue T-Shirt",
        description: "Product Description",
        image: "blue-t-shirt.jpg",
        price: 29,
        category: "Clothing",
        quantity: 25,
        inventoryStatus: "INSTOCK",
        rating: 5,
        orders: []
      },
      {
        id: "1004",
        code: "h456wer53",
        name: "Bracelet",
        description: "Product Description11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
        image: "bracelet.jpg",
        price: 15,
        category: "Accessories",
        quantity: 73,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: [
          {
            id: "1004-0",
            productCode: "h456wer53",
            date: "2020-09-05",
            amount: 60,
            quantity: 4,
            customer: "Mayumi Misaki",
            status: "PENDING"
          },
          {
            id: "1004-1",
            productCode: "h456wer53",
            date: "2019-04-16",
            amount: 2,
            quantity: 30,
            customer: "Francesco Salvatore",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1005",
        code: "av2231fwg",
        name: "Brown Purse",
        description: "Product Description",
        image: "brown-purse.jpg",
        price: 120,
        category: "Accessories",
        quantity: 0,
        inventoryStatus: "OUTOFSTOCK",
        rating: 4,
        orders: [
          {
            id: "1005-0",
            productCode: "av2231fwg",
            date: "2020-01-25",
            amount: 120,
            quantity: 1,
            customer: "Isabel Sinclair",
            status: "RETURNED"
          },
          {
            id: "1005-1",
            productCode: "av2231fwg",
            date: "2019-03-12",
            amount: 240,
            quantity: 2,
            customer: "Lionel Clifford",
            status: "DELIVERED"
          },
          {
            id: "1005-2",
            productCode: "av2231fwg",
            date: "2019-05-05",
            amount: 120,
            quantity: 1,
            customer: "Cody Chavez",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1006",
        code: "bib36pfvm",
        name: "Chakra Bracelet",
        description: "Product Description",
        image: "chakra-bracelet.jpg",
        price: 32,
        category: "Accessories",
        quantity: 5,
        inventoryStatus: "LOWSTOCK",
        rating: 3,
        orders: [
          {
            id: "1006-0",
            productCode: "bib36pfvm",
            date: "2020-02-24",
            amount: 32,
            quantity: 1,
            customer: "Arvin Darci",
            status: "DELIVERED"
          },
          {
            id: "1006-1",
            productCode: "bib36pfvm",
            date: "2020-01-14",
            amount: 64,
            quantity: 2,
            customer: "Izzy Jones",
            status: "PENDING"
          }
        ]
      },
      {
        id: "1007",
        code: "mbvjkgip5",
        name: "Galaxy Earrings",
        description: "Product Description1111111111111111111111111111111111111111111111111111",
        image: "galaxy-earrings.jpg",
        price: 34,
        category: "Accessories",
        quantity: 23,
        inventoryStatus: "INSTOCK",
        rating: 5,
        orders: [
          {
            id: "1007-0",
            productCode: "mbvjkgip5",
            date: "2020-06-19",
            amount: 34,
            quantity: 1,
            customer: "Jennifer Smith",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1008",
        code: "vbb124btr",
        name: "Game Controller",
        description: "Product Description",
        image: "game-controller.jpg",
        price: 99,
        category: "Electronics",
        quantity: 2,
        inventoryStatus: "LOWSTOCK",
        rating: 4,
        orders: [
          {
            id: "1008-0",
            productCode: "vbb124btr",
            date: "2020-01-05",
            amount: 99,
            quantity: 1,
            customer: "Jeanfrancois David",
            status: "DELIVERED"
          },
          {
            id: "1008-1",
            productCode: "vbb124btr",
            date: "2020-01-19",
            amount: 198,
            quantity: 2,
            customer: "Ivar Greenwood",
            status: "RETURNED"
          }
        ]
      },
      {
        id: "1009",
        code: "cm230f032",
        name: "Gaming Set",
        description: "Product Description",
        image: "gaming-set.jpg",
        price: 299,
        category: "Electronics",
        quantity: 63,
        inventoryStatus: "INSTOCK",
        rating: 3,
        orders: [
          {
            id: "1009-0",
            productCode: "cm230f032",
            date: "2020-06-24",
            amount: 299,
            quantity: 1,
            customer: "Kadeem Mujtaba",
            status: "PENDING"
          },
          {
            id: "1009-1",
            productCode: "cm230f032",
            date: "2020-05-11",
            amount: 299,
            quantity: 1,
            customer: "Ashley Wickens",
            status: "DELIVERED"
          },
          {
            id: "1009-2",
            productCode: "cm230f032",
            date: "2019-02-07",
            amount: 299,
            quantity: 1,
            customer: "Julie Johnson",
            status: "DELIVERED"
          },
          {
            id: "1009-3",
            productCode: "cm230f032",
            date: "2020-04-26",
            amount: 299,
            quantity: 1,
            customer: "Tony Costa",
            status: "CANCELLED"
          }
        ]
      },
      {
        id: "1010",
        code: "plb34234v",
        name: "Gold Phone Case",
        description: "Product Description1111111111111111111111111111111111111111111111111111",
        image: "gold-phone-case.jpg",
        price: 24,
        category: "Accessories",
        quantity: 0,
        inventoryStatus: "OUTOFSTOCK",
        rating: 4,
        orders: [
          {
            id: "1010-0",
            productCode: "plb34234v",
            date: "2020-02-04",
            amount: 24,
            quantity: 1,
            customer: "James Butt",
            status: "DELIVERED"
          },
          {
            id: "1010-1",
            productCode: "plb34234v",
            date: "2020-05-05",
            amount: 48,
            quantity: 2,
            customer: "Josephine Darakjy",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1011",
        code: "4920nnc2d",
        name: "Green Earbuds",
        description: "Product Description",
        image: "green-earbuds.jpg",
        price: 89,
        category: "Electronics",
        quantity: 23,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: [
          {
            id: "1011-0",
            productCode: "4920nnc2d",
            date: "2020-06-01",
            amount: 89,
            quantity: 1,
            customer: "Art Venere",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1012",
        code: "250vm23cc",
        name: "Green T-Shirt",
        description: "Product Description",
        image: "green-t-shirt.jpg",
        price: 49,
        category: "Clothing",
        quantity: 74,
        inventoryStatus: "INSTOCK",
        rating: 5,
        orders: [
          {
            id: "1012-0",
            productCode: "250vm23cc",
            date: "2020-02-05",
            amount: 49,
            quantity: 1,
            customer: "Lenna Paprocki",
            status: "DELIVERED"
          },
          {
            id: "1012-1",
            productCode: "250vm23cc",
            date: "2020-02-15",
            amount: 49,
            quantity: 1,
            customer: "Donette Foller",
            status: "PENDING"
          }
        ]
      },
      {
        id: "1013",
        code: "fldsmn31b",
        name: "Grey T-Shirt",
        description: "Product Description",
        image: "grey-t-shirt.jpg",
        price: 48,
        category: "Clothing",
        quantity: 0,
        inventoryStatus: "OUTOFSTOCK",
        rating: 3,
        orders: [
          {
            id: "1013-0",
            productCode: "fldsmn31b",
            date: "2020-04-01",
            amount: 48,
            quantity: 1,
            customer: "Simona Morasca",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1014",
        code: "waas1x2as",
        name: "Headphones",
        description: "Product Description",
        image: "headphones.jpg",
        price: 175,
        category: "Electronics",
        quantity: 8,
        inventoryStatus: "LOWSTOCK",
        rating: 5,
        orders: [
          {
            id: "1014-0",
            productCode: "waas1x2as",
            date: "2020-05-15",
            amount: 175,
            quantity: 1,
            customer: "Lenna Paprocki",
            status: "DELIVERED"
          },
          {
            id: "1014-1",
            productCode: "waas1x2as",
            date: "2020-01-02",
            amount: 175,
            quantity: 1,
            customer: "Donette Foller",
            status: "CANCELLED"
          }
        ]
      },
      {
        id: "1015",
        code: "vb34btbg5",
        name: "Light Green T-Shirt",
        description: "Product Description",
        image: "light-green-t-shirt.jpg",
        price: 49,
        category: "Clothing",
        quantity: 34,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: [
          {
            id: "1015-0",
            productCode: "vb34btbg5",
            date: "2020-07-02",
            amount: 98,
            quantity: 2,
            customer: "Mitsue Tollner",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1016",
        code: "k8l6j58jl",
        name: "Lime Band",
        description: "Product Description",
        image: "lime-band.jpg",
        price: 79,
        category: "Fitness",
        quantity: 12,
        inventoryStatus: "INSTOCK",
        rating: 3,
        orders: []
      },
      {
        id: "1017",
        code: "v435nn85n",
        name: "Mini Speakers",
        description: "Product Description",
        image: "mini-speakers.jpg",
        price: 85,
        category: "Clothing",
        quantity: 42,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: [
          {
            id: "1017-0",
            productCode: "v435nn85n",
            date: "2020-07-12",
            amount: 85,
            quantity: 1,
            customer: "Minna Amigon",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1018",
        code: "09zx9c0zc",
        name: "Painted Phone Case",
        description: "Product Description",
        image: "painted-phone-case.jpg",
        price: 56,
        category: "Accessories",
        quantity: 41,
        inventoryStatus: "INSTOCK",
        rating: 5,
        orders: [
          {
            id: "1018-0",
            productCode: "09zx9c0zc",
            date: "2020-07-01",
            amount: 56,
            quantity: 1,
            customer: "Abel Maclead",
            status: "DELIVERED"
          },
          {
            id: "1018-1",
            productCode: "09zx9c0zc",
            date: "2020-05-02",
            amount: 56,
            quantity: 1,
            customer: "Minna Amigon",
            status: "RETURNED"
          }
        ]
      },
      {
        id: "1019",
        code: "mnb5mb2m5",
        name: "Pink Band",
        description: "Product Description",
        image: "pink-band.jpg",
        price: 79,
        category: "Fitness",
        quantity: 63,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: []
      },
      {
        id: "1020",
        code: "r23fwf2w3",
        name: "Pink Purse",
        description: "Product Description",
        image: "pink-purse.jpg",
        price: 110,
        category: "Accessories",
        quantity: 0,
        inventoryStatus: "OUTOFSTOCK",
        rating: 4,
        orders: [
          {
            id: "1020-0",
            productCode: "r23fwf2w3",
            date: "2020-05-29",
            amount: 110,
            quantity: 1,
            customer: "Kiley Caldarera",
            status: "DELIVERED"
          },
          {
            id: "1020-1",
            productCode: "r23fwf2w3",
            date: "2020-02-11",
            amount: 220,
            quantity: 2,
            customer: "Graciela Ruta",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1021",
        code: "pxpzczo23",
        name: "Purple Band",
        description: "Product Description",
        image: "purple-band.jpg",
        price: 79,
        category: "Fitness",
        quantity: 6,
        inventoryStatus: "LOWSTOCK",
        rating: 3,
        orders: [
          {
            id: "1021-0",
            productCode: "pxpzczo23",
            date: "2020-02-02",
            amount: 79,
            quantity: 1,
            customer: "Cammy Albares",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1022",
        code: "2c42cb5cb",
        name: "Purple Gemstone Necklace",
        description: "Product Description",
        image: "purple-gemstone-necklace.jpg",
        price: 45,
        category: "Accessories",
        quantity: 62,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: [
          {
            id: "1022-0",
            productCode: "2c42cb5cb",
            date: "2020-06-29",
            amount: 45,
            quantity: 1,
            customer: "Mattie Poquette",
            status: "DELIVERED"
          },
          {
            id: "1022-1",
            productCode: "2c42cb5cb",
            date: "2020-02-11",
            amount: 135,
            quantity: 3,
            customer: "Meaghan Garufi",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1023",
        code: "5k43kkk23",
        name: "Purple T-Shirt",
        description: "Product Description",
        image: "purple-t-shirt.jpg",
        price: 49,
        category: "Clothing",
        quantity: 2,
        inventoryStatus: "LOWSTOCK",
        rating: 5,
        orders: [
          {
            id: "1023-0",
            productCode: "5k43kkk23",
            date: "2020-04-15",
            amount: 49,
            quantity: 1,
            customer: "Gladys Rim",
            status: "RETURNED"
          }
        ]
      },
      {
        id: "1024",
        code: "lm2tny2k4",
        name: "Shoes",
        description: "Product Description",
        image: "shoes.jpg",
        price: 64,
        category: "Clothing",
        quantity: 0,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: []
      },
      {
        id: "1025",
        code: "nbm5mv45n",
        name: "Sneakers",
        description: "Product Description",
        image: "sneakers.jpg",
        price: 78,
        category: "Clothing",
        quantity: 52,
        inventoryStatus: "INSTOCK",
        rating: 4,
        orders: [
          {
            id: "1025-0",
            productCode: "nbm5mv45n",
            date: "2020-02-19",
            amount: 78,
            quantity: 1,
            customer: "Yuki Whobrey",
            status: "DELIVERED"
          },
          {
            id: "1025-1",
            productCode: "nbm5mv45n",
            date: "2020-05-21",
            amount: 78,
            quantity: 1,
            customer: "Fletcher Flosi",
            status: "PENDING"
          }
        ]
      },
      {
        id: "1026",
        code: "zx23zc42c",
        name: "Teal T-Shirt",
        description: "Product Description",
        image: "teal-t-shirt.jpg",
        price: 49,
        category: "Clothing",
        quantity: 3,
        inventoryStatus: "LOWSTOCK",
        rating: 3,
        orders: [
          {
            id: "1026-0",
            productCode: "zx23zc42c",
            date: "2020-04-24",
            amount: 98,
            quantity: 2,
            customer: "Bette Nicka",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1027",
        code: "acvx872gc",
        name: "Yellow Earbuds",
        description: "Product Description",
        image: "yellow-earbuds.jpg",
        price: 89,
        category: "Electronics",
        quantity: 35,
        inventoryStatus: "INSTOCK",
        rating: 3,
        orders: [
          {
            id: "1027-0",
            productCode: "acvx872gc",
            date: "2020-01-29",
            amount: 89,
            quantity: 1,
            customer: "Veronika Inouye",
            status: "DELIVERED"
          },
          {
            id: "1027-1",
            productCode: "acvx872gc",
            date: "2020-06-11",
            amount: 89,
            quantity: 1,
            customer: "Willard Kolmetz",
            status: "DELIVERED"
          }
        ]
      },
      {
        id: "1028",
        code: "tx125ck42",
        name: "Yoga Mat",
        description: "Product Description",
        image: "yoga-mat.jpg",
        price: 20,
        category: "Fitness",
        quantity: 15,
        inventoryStatus: "INSTOCK",
        rating: 5,
        orders: []
      },
      {
        id: "1029",
        code: "gwuby345v",
        name: "Yoga Set",
        description: "Product Description",
        image: "yoga-set.jpg",
        price: 20,
        category: "Fitness",
        quantity: 25,
        inventoryStatus: "INSTOCK",
        rating: 8,
        orders: [
          {
            id: "1029-0",
            productCode: "gwuby345v",
            date: "2020-02-14",
            amount: 4,
            quantity: 80,
            customer: "Maryann Royster",
            status: "DELIVERED"
          }
        ]
      }
    ];
  },
  getProductsMini() {
    return Promise.resolve(this.getProductsData().slice(0, 5));
  },
  getProductsSmall() {
    return Promise.resolve(this.getProductsData().slice(0, 10));
  },
  getProducts() {
    return Promise.resolve(this.getProductsData());
  },
  getProductsWithOrdersSmall() {
    return Promise.resolve(this.getProductsWithOrdersData().slice(0, 10));
  },
  getProductsWithOrders() {
    return Promise.resolve(this.getProductsWithOrdersData());
  }
}, u_ = { class: "card" }, p_ = { class: "flex justify-end" }, f_ = { key: 0 }, h_ = { key: 0 }, m_ = { key: 1 }, g_ = { key: 1 }, b_ = { key: 0 }, v_ = { key: 1 }, y_ = { key: 2 }, k_ = {
  key: 2,
  class: "flex flex-wrap gap-1"
}, w_ = { key: 3 }, C_ = { key: 0 }, x_ = { key: 1 }, S_ = {
  key: 4,
  class: "card flex flex-wrap gap-2"
}, I_ = { key: 5 }, O_ = { class: "whitespace-normal w-80 break-word" }, P_ = {
  key: 0,
  class: "block text-gray-500 cursor-not-allowed",
  title: "此欄位不可編輯"
}, $_ = {
  key: 1,
  class: "block text-gray-500 cursor-not-allowed",
  title: "此欄位不可編輯"
}, T_ = { key: 0 }, R_ = { key: 0 }, B_ = { key: 1 }, E_ = { key: 1 }, M_ = { key: 0 }, A_ = { key: 1 }, D_ = { key: 2 }, L_ = {
  key: 2,
  class: "flex flex-wrap gap-1"
}, z_ = { key: 3 }, F_ = { key: 0 }, N_ = { key: 1 }, j_ = {
  key: 4,
  class: "card flex flex-wrap gap-2"
}, V_ = { key: 5 }, __ = { class: "block w-80 truncate" }, K_ = /* @__PURE__ */ Be({
  __name: "Datatable",
  setup(t) {
    function e(f) {
      return f.status === "C" ? "cursor-not-allowed" : "";
    }
    const n = z(), o = z(null), i = z([]), r = z([
      { field: "id", header: "診號" },
      { field: "check", header: "報到" },
      { field: "status", header: "狀態" },
      { field: "feeno", header: "病歷號" },
      { field: "name", header: "姓名" },
      { field: "sex", header: "性別" },
      { field: "birthday", header: "生日" },
      { field: "tag", header: "註記" },
      { field: "din", header: "身分" },
      { field: "page", header: "報告" }
    ]), a = z({
      global: { value: null, matchMode: V.CONTAINS },
      id: { value: null, matchMode: V.STARTS_WITH },
      check: { value: null, matchMode: V.STARTS_WITH },
      status: { value: null, matchMode: V.EQUALS },
      feeno: { value: null, matchMode: V.CONTAINS },
      name: { value: null, matchMode: V.CONTAINS },
      sex: { value: null, matchMode: V.EQUALS },
      birthday: { value: null, matchMode: V.CONTAINS },
      tag: { value: null, matchMode: V.CONTAINS },
      din: { value: null, matchMode: V.EQUALS },
      page: { value: null, matchMode: V.CONTAINS }
    });
    let l = null;
    function s({ props: f, context: p }) {
      const h = f.field ?? "", g = p == null ? void 0 : p.index;
      if (typeof g != "number") return {};
      g === 0 && l === null ? l = 0 : l != null && g === 0 && l++;
      const b = l !== null ? n.value[l] : void 0;
      return b ? d(b, h) ? {} : {
        class: "cursor-not-allowed text-gray-500",
        title: "此欄位不可編輯"
      } : {};
    }
    function d(f, p) {
      if (!f) return !0;
      const { status: h, sex: g } = f;
      return console.log("欄位:", p, "狀態:", h, "性別:", g), !(p === "sex" && g === "男");
    }
    Dt(() => {
      En.getProductsMini().then((f) => n.value = f);
    });
    const c = (f) => {
      const { data: p, newValue: h, field: g } = f;
      h != null && String(h).trim().length > 0 ? p[g] = h : console.warn("Invalid value. Cell edit canceled.");
    }, u = (f) => {
      let { newData: p, index: h } = f;
      n.value[h] = p;
    };
    return (f, p) => {
      const h = $("Tab"), g = $("TabList"), b = $("InputIcon"), C = $("InputText"), x = $("IconField"), R = $("Tag"), w = $("Column"), T = $("DataTable"), S = $("TabPanel"), I = $("Button"), B = $("TabPanels"), H = $("Tabs");
      return m(), y("div", u_, [
        p[16] || (p[16] = v("div", { class: "hidden" }, " text-red-100 text-red-800 bg-red-100 text-blue-100 text-blue-800 bg-blue-100 ", -1)),
        P(H, { value: "0" }, {
          default: E(() => [
            P(g, null, {
              default: E(() => [
                P(h, { value: "0" }, {
                  default: E(() => [...p[3] || (p[3] = [
                    ee("乳房外科特別門診(早)", -1)
                  ])]),
                  _: 1
                }),
                P(h, { value: "1" }, {
                  default: E(() => [...p[4] || (p[4] = [
                    ee("一般外科(午)", -1)
                  ])]),
                  _: 1
                }),
                P(h, { value: "2" }, {
                  default: E(() => [...p[5] || (p[5] = [
                    ee("一般外科(晚)", -1)
                  ])]),
                  _: 1
                })
              ]),
              _: 1
            }),
            P(B, null, {
              default: E(() => [
                P(S, { value: "0" }, {
                  default: E(() => [
                    P(T, {
                      selection: o.value,
                      "onUpdate:selection": p[1] || (p[1] = (K) => o.value = K),
                      filters: a.value,
                      dataKey: "id",
                      value: n.value,
                      editMode: "cell",
                      onCellEditComplete: c,
                      size: "small",
                      resizableColumns: "",
                      columnResizeMode: "fit",
                      showGridlines: "",
                      paginator: "",
                      rows: 10,
                      rowClass: e,
                      filterDisplay: "row"
                    }, {
                      header: E(() => [
                        v("div", p_, [
                          P(x, null, {
                            default: E(() => [
                              P(b, null, {
                                default: E(() => [...p[6] || (p[6] = [
                                  v("i", { class: "pi pi-search" }, null, -1)
                                ])]),
                                _: 1
                              }),
                              P(C, {
                                modelValue: a.value.global.value,
                                "onUpdate:modelValue": p[0] || (p[0] = (K) => a.value.global.value = K),
                                placeholder: "Keyword Search"
                              }, null, 8, ["modelValue"])
                            ]),
                            _: 1
                          })
                        ])
                      ]),
                      default: E(() => [
                        (m(!0), y(_, null, fe(r.value, (K) => (m(), O(w, {
                          key: K.field,
                          field: K.field,
                          header: K.header,
                          class: "max-w-200 whitespace-normal break-word",
                          size: "small",
                          pt: {
                            bodyCell: s
                          }
                        }, {
                          body: E(({ data: j, field: F }) => [
                            F === "check" ? (m(), y("div", f_, [
                              j[F] === "1" ? (m(), y("span", h_, [...p[7] || (p[7] = [
                                v("i", { class: "pi pi-check" }, null, -1)
                              ])])) : (m(), y("span", m_, [...p[8] || (p[8] = [
                                v("i", { class: "pi pi-times" }, null, -1)
                              ])]))
                            ])) : F === "status" ? (m(), y("div", g_, [
                              j[F] === "A" ? (m(), y("span", b_, [...p[9] || (p[9] = [
                                v("i", { class: "pi pi-times text-red-500" }, null, -1),
                                ee("暫存", -1)
                              ])])) : j[F] === "C" ? (m(), y("span", v_, [...p[10] || (p[10] = [
                                v("i", { class: "pi pi-check text-green-500" }, null, -1),
                                ee("已完成", -1)
                              ])])) : (m(), y("span", y_, "待看診"))
                            ])) : F === "tag" ? (m(), y("div", k_, [
                              (m(!0), y(_, null, fe(j[F], (U, le) => (m(), O(R, {
                                key: U.id || le,
                                outlined: "",
                                class: Y([
                                  U.color === "danger" ? "p-tag-danger" : U.color === "warning" ? "p-tag-warning" : U.color === "info" ? "p-tag-info" : U.color === "success" ? "p-tag-success" : "",
                                  "font-medium transition p-1 m-1",
                                  U.button === "0" ? "underline" : ""
                                ]),
                                value: U.tagname
                              }, null, 8, ["class", "value"]))), 128))
                            ])) : F === "din" ? (m(), y("div", w_, [
                              j[F] === "1" ? (m(), y("span", C_, "健保")) : (m(), y("span", x_, "自費"))
                            ])) : F === "page" ? (m(), y("div", S_, [
                              (m(!0), y(_, null, fe(j[F], (U, le) => (m(), O(R, {
                                key: U.id || le,
                                severity: "secondary",
                                value: U.pagename
                              }, null, 8, ["value"]))), 128))
                            ])) : (m(), y("div", I_, [
                              v("span", O_, re(typeof F == "string" && F in j ? j[F] : ""), 1)
                            ]))
                          ]),
                          editor: E(({ data: j, field: F }) => [
                            j.status === "C" ? (m(), y("span", P_, re(F === "status" ? "已完成" : j[F]), 1)) : F === "sex" && j[F] === "男" ? (m(), y("span", $_, re(j[F]), 1)) : (m(), O(C, {
                              key: 2,
                              modelValue: j[F],
                              "onUpdate:modelValue": (U) => j[F] = U,
                              size: "small",
                              fluid: ""
                            }, null, 8, ["modelValue", "onUpdate:modelValue"]))
                          ]),
                          filter: E(({ filterModel: j, filterCallback: F }) => [
                            P(C, {
                              modelValue: j.value,
                              "onUpdate:modelValue": (U) => j.value = U,
                              type: "text",
                              onInput: (U) => F()
                            }, null, 8, ["modelValue", "onUpdate:modelValue", "onInput"])
                          ]),
                          _: 1
                        }, 8, ["field", "header", "pt"]))), 128))
                      ]),
                      _: 1
                    }, 8, ["selection", "filters", "value"])
                  ]),
                  _: 1
                }),
                P(S, { value: "1" }, {
                  default: E(() => [
                    P(T, {
                      editingRows: i.value,
                      "onUpdate:editingRows": p[2] || (p[2] = (K) => i.value = K),
                      value: n.value,
                      editMode: "row",
                      dataKey: "id",
                      onRowEditSave: u,
                      size: "small",
                      resizableColumns: "",
                      columnResizeMode: "fit",
                      showGridlines: "",
                      paginator: "",
                      roweditoriniticon: "",
                      rows: 10,
                      pt: {
                        // table: { style: 'min-width: 50rem' },
                        // column: {
                        //     bodycell: ({ state }) => ({
                        //         style:  state['d_editing']&&'padding-top: 0.75rem; padding-bottom: 0.75rem'
                        //     })
                        // }
                      }
                    }, {
                      default: E(() => [
                        (m(!0), y(_, null, fe(r.value, (K) => (m(), O(w, {
                          key: K.field,
                          field: K.field,
                          header: K.header,
                          class: "max-w-200 truncate",
                          size: "small"
                        }, {
                          body: E(({ data: j, field: F }) => [
                            F === "check" ? (m(), y("div", T_, [
                              j[F] === "1" ? (m(), y("span", R_, [...p[11] || (p[11] = [
                                v("i", { class: "pi pi-check" }, null, -1)
                              ])])) : (m(), y("span", B_, [...p[12] || (p[12] = [
                                v("i", { class: "pi pi-times" }, null, -1)
                              ])]))
                            ])) : F === "status" ? (m(), y("div", E_, [
                              j[F] === "A" ? (m(), y("span", M_, [...p[13] || (p[13] = [
                                v("i", { class: "pi pi-times text-red-500" }, null, -1),
                                ee("暫存", -1)
                              ])])) : j[F] === "C" ? (m(), y("span", A_, [...p[14] || (p[14] = [
                                v("i", { class: "pi pi-check text-green-500" }, null, -1),
                                ee("已完成", -1)
                              ])])) : (m(), y("span", D_, "待看診"))
                            ])) : F === "tag" ? (m(), y("div", L_, [
                              (m(!0), y(_, null, fe(j[F], (U, le) => (m(), O(R, {
                                key: U.id || le,
                                class: Y([
                                  U.color === "danger" ? "p-tag-danger" : U.color === "warning" ? "p-tag-warning" : U.color === "info" ? "p-tag-info" : U.color === "success" ? "p-tag-success" : "",
                                  "font-medium transition p-1 m-1",
                                  U.button === "0" ? "underline" : ""
                                ]),
                                value: U.tagname
                              }, null, 8, ["class", "value"]))), 128))
                            ])) : F === "din" ? (m(), y("div", z_, [
                              j[F] === "1" ? (m(), y("span", F_, "健保")) : (m(), y("span", N_, "自費"))
                            ])) : F === "page" ? (m(), y("div", j_, [
                              (m(!0), y(_, null, fe(j[F], (U, le) => (m(), O(R, {
                                key: U.id || le,
                                severity: "secondary",
                                value: U.pagename
                              }, null, 8, ["value"]))), 128))
                            ])) : (m(), y("div", V_, [
                              v("span", __, re(typeof F == "string" && F in j ? j[F] : ""), 1)
                            ]))
                          ]),
                          editor: E(({ data: j, field: F }) => [
                            P(C, {
                              modelValue: j[F],
                              "onUpdate:modelValue": (U) => j[F] = U,
                              autofocus: "",
                              fluid: "",
                              size: "small"
                            }, null, 8, ["modelValue", "onUpdate:modelValue"])
                          ]),
                          _: 1
                        }, 8, ["field", "header"]))), 128)),
                        P(w, {
                          header: "操作",
                          size: "small"
                        }, {
                          body: E(({ editorInitCallback: K }) => [
                            P(I, {
                              size: "small",
                              label: "編輯",
                              icon: "pi pi-pencil",
                              severity: "secondary",
                              class: "p-link",
                              text: "",
                              onClick: K
                            }, null, 8, ["onClick"]),
                            P(I, {
                              size: "small",
                              label: "刪除",
                              icon: "pi pi-trash",
                              severity: "secondary",
                              text: ""
                            })
                          ]),
                          editor: E(({ editorSaveCallback: K, editorCancelCallback: j, index: F }) => [
                            P(I, {
                              label: "儲存",
                              icon: "pi pi-save",
                              text: "",
                              onClick: K
                            }, null, 8, ["onClick"]),
                            P(I, {
                              label: "取消",
                              icon: "pi pi-times",
                              severity: "danger",
                              text: "",
                              onClick: j
                            }, null, 8, ["onClick"])
                          ]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }, 8, ["editingRows", "value"])
                  ]),
                  _: 1
                }),
                P(S, { value: "2" }, {
                  default: E(() => [...p[15] || (p[15] = [
                    v("p", { class: "m-0" }, " At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus. ", -1)
                  ])]),
                  _: 1
                })
              ]),
              _: 1
            })
          ]),
          _: 1
        })
      ]);
    };
  }
}), H_ = { class: "card" }, W_ = { class: "flex flex-wrap items-center justify-between gap-2" }, U_ = { key: 1 }, G_ = {
  __name: "DatatableSaveCell",
  setup(t) {
    const e = Rl(), n = z(), o = z([]), i = z({}), r = z([
      { field: "code", header: "Code" },
      { field: "name", header: "Name" },
      { field: "quantity", header: "Quantity" },
      { field: "price", header: "Price" },
      { field: "category", header: "Category" },
      { field: "description", header: "Description" },
      { field: "rating", header: "Rating" }
    ]);
    Dt(() => {
      En.getProductsWithOrders().then((p) => {
        n.value = p, o.value = JSON.parse(JSON.stringify(p));
      });
    });
    const a = (p, h, g) => {
      var b;
      return ((b = i.value[p]) == null ? void 0 : b[h]) !== void 0 && String(g) !== String(i.value[p][h]) ? "bg-yellow-400" : "";
    }, l = z(null), s = (p) => {
      const { data: h, field: g } = p;
      l.value = h[g];
    }, d = (p) => {
      let { data: h, newValue: g, field: b } = p;
      const C = h.id, x = l.value;
      if (g === x) {
        console.log("資料沒有變動，不做任何事");
        return;
      }
      switch (b) {
        case "quantity":
        case "price":
          u(g) ? h[b] = g : p.preventDefault();
          break;
        default:
          g.trim().length > 0 ? h[b] = g : p.preventDefault();
          break;
      }
      h[b] = g, i.value[C] || (i.value[C] = {}), b in i.value[C] || (i.value[C][b] = x);
    }, c = () => {
      localStorage.setItem("savedProducts", JSON.stringify(n.value)), e.add({ severity: "success", summary: "成功", detail: "資料已儲存", life: 3e3 });
    }, u = (p) => {
      let h = String(p);
      if (h = h.trim(), !h)
        return !1;
      h = h.replace(/^0+/, "") || "0";
      var g = Math.floor(Number(h));
      return g !== 1 / 0 && String(g) === h && g >= 0;
    }, f = (p) => new Intl.NumberFormat("en-US", { style: "currency", currency: "USD" }).format(p);
    return (p, h) => {
      const g = $("Button"), b = $("InputText"), C = $("InputNumber"), x = $("Column"), R = $("DataTable"), w = $("Toast");
      return m(), y(_, null, [
        v("div", H_, [
          P(R, {
            value: n.value,
            editMode: "cell",
            onCellEditComplete: d,
            onCellEditInit: s,
            paginator: "",
            rows: 5,
            rowsPerPageOptions: [5, 10, 20, 50],
            size: "small",
            stripedRows: "",
            showGridlines: "",
            selectionMode: "single",
            pt: {
              table: { style: "min-width: 50rem" },
              column: {
                bodycell: ({ state: T }) => ({
                  // class: [{ '!p-0': state['d_editing'] }]
                  class: "!p-0"
                })
              }
            }
          }, {
            header: E(() => [
              v("div", W_, [
                h[1] || (h[1] = v("span", { class: "text-xl font-bold" }, "測試", -1)),
                P(g, {
                  label: "存檔",
                  rounded: "",
                  raised: "",
                  onClick: h[0] || (h[0] = (T) => c())
                })
              ])
            ]),
            default: E(() => [
              (m(!0), y(_, null, fe(r.value, (T) => (m(), O(x, {
                key: T.field,
                field: T.field,
                header: T.header
              }, {
                header: E(() => [
                  T.field === "price" ? (m(), O(g, {
                    key: 0,
                    label: "操作",
                    size: "small",
                    rounded: "",
                    onClick: (S) => p.onHeaderButtonClick(T.field)
                  }, null, 8, ["onClick"])) : (m(), y("span", U_, re(T.header), 1))
                ]),
                body: E(({ data: S, field: I }) => [
                  v("div", {
                    class: Y([
                      a(S.id, I),
                      I === "description" ? "w-[200px] whitespace-normal break-words" : ""
                    ])
                  }, re(I === "price" ? f(S[I]) : S[I]), 3)
                ]),
                editor: E(({ data: S, field: I }) => [
                  I !== "price" ? (m(), O(b, {
                    key: 0,
                    modelValue: S[I],
                    "onUpdate:modelValue": (B) => S[I] = B,
                    autofocus: "",
                    fluid: "",
                    size: "small"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])) : (m(), O(C, {
                    key: 1,
                    modelValue: S[I],
                    "onUpdate:modelValue": (B) => S[I] = B,
                    mode: "currency",
                    currency: "USD",
                    locale: "en-US",
                    autofocus: "",
                    fluid: "",
                    size: "small"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]))
                ]),
                _: 2
              }, 1032, ["field", "header"]))), 128))
            ]),
            _: 1
          }, 8, ["value"])
        ]),
        P(w)
      ], 64);
    };
  }
}, q_ = /* @__PURE__ */ Be({
  __name: "Tabs2",
  props: {
    items: {},
    activeId: {},
    variant: {},
    scrollable: { type: Boolean },
    closable: { type: Boolean }
  },
  emits: ["change", "close"],
  setup(t, { emit: e }) {
    const n = t, o = e, i = vt(
      () => Array.isArray(n.items) ? n.items.findIndex((s) => s.id === n.activeId) : -1
    ), r = vt(() => {
      switch (n.variant) {
        case "his":
          return "bg-blue-100 text-blue-700";
        case "fn":
          return "bg-green-100 text-green-700";
        case "card-1":
          return "bg-purple-100 text-purple-700";
        case "card-2":
          return "bg-yellow-100 text-yellow-700";
        default:
          return "";
      }
    });
    function a(s) {
      console.log("使用者切換到：", s), o("change", String(s));
    }
    const l = (s) => {
      o("close", s);
    };
    return (s, d) => {
      const c = $("Button");
      return m(), O(He(Il), {
        value: n.activeId,
        scrollable: s.scrollable,
        "onUpdate:value": a
      }, {
        default: E(() => [
          P(He(Ol), { pt: { tablist: { class: "gap-1 !border-white !border-0" } } }, {
            default: E(() => [
              (m(!0), y(_, null, fe(n.items, (u) => (m(), O(He(Pl), {
                key: u.id,
                value: u.id,
                class: "!rounded-tl-md !rounded-tr-md !border !border-b-0 !border-gray-400 !px-4",
                pt: {
                  headerAction: {
                    class: [
                      r.value,
                      s.activeId === u.id ? "font-bold bg-blue-500 " : "",
                      "flex items-center justify-between"
                    ]
                  }
                }
              }, {
                default: E(() => [
                  ee(re(u.name) + " ", 1),
                  s.closable ? (m(), O(c, {
                    key: 0,
                    icon: "pi pi-times",
                    severity: "danger",
                    text: "",
                    size: "small",
                    class: "absolute top-0 right-0",
                    onClick: (f) => l(u.id)
                  }, null, 8, ["onClick"])) : M("", !0)
                ]),
                _: 2
              }, 1032, ["value", "pt"]))), 128))
            ]),
            _: 1
          }),
          P(He($l), { class: "!p-0" }, {
            default: E(() => [
              (m(!0), y(_, null, fe(n.items, (u, f) => (m(), O(He(Tl), {
                key: u.id,
                header: u.name,
                disabled: u.disabled,
                value: u.id
              }, {
                default: E(() => [
                  i.value === f && u.panel ? (m(), O(q(u.panel), { key: 0 })) : L(s.$slots, u.id, { key: 1 }, void 0, !0)
                ]),
                _: 2
              }, 1032, ["header", "disabled", "value"]))), 128))
            ]),
            _: 3
          })
        ]),
        _: 3
      }, 8, ["value", "scrollable"]);
    };
  }
}), H0 = /* @__PURE__ */ Bn(q_, [["__scopeId", "data-v-f8bc971d"]]), J_ = { key: 0 }, Y_ = { key: 0 }, X_ = { key: 1 }, Z_ = { key: 1 }, Q_ = { key: 0 }, eK = { key: 1 }, tK = { key: 2 }, nK = {
  key: 2,
  class: "flex flex-wrap gap-1"
}, oK = { key: 3 }, rK = { key: 0 }, iK = { key: 1 }, aK = {
  key: 4,
  class: "card flex flex-wrap gap-2"
}, lK = { key: 5 }, sK = { class: "whitespace-normal w-80 break-word" }, dK = { key: 0 }, cK = { key: 0 }, uK = { key: 1 }, pK = { key: 1 }, fK = { key: 0 }, hK = { key: 1 }, mK = { key: 2 }, gK = {
  key: 2,
  class: "flex flex-wrap gap-1"
}, bK = { key: 3 }, vK = { key: 0 }, yK = { key: 1 }, kK = {
  key: 4,
  class: "card flex flex-wrap gap-2"
}, wK = { key: 5 }, CK = { class: "block w-30 truncate" }, uu = /* @__PURE__ */ Be({
  __name: "DatatableSample",
  props: {
    items: {},
    columns: {}
  },
  emits: ["save-row", "delete-row"],
  setup(t, { emit: e }) {
    const n = z(), o = z(null), i = z([]), r = z([
      { field: "id", header: "診號" },
      { field: "check", header: "報到" },
      { field: "status", header: "狀態" },
      { field: "feeno", header: "病歷號" },
      { field: "name", header: "姓名" },
      { field: "sex", header: "性別" },
      { field: "birthday", header: "生日" },
      { field: "tag", header: "註記" },
      { field: "din", header: "身分" },
      { field: "page", header: "報告" }
    ]), a = z({
      global: { value: null, matchMode: V.CONTAINS }
    });
    return (() => {
      a.value = {
        global: { value: null, matchMode: V.CONTAINS },
        id: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        check: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        status: { value: null, matchMode: V.IN },
        feeno: { operator: se.AND, constraints: [{ value: null, matchMode: V.DATE_IS }] },
        name: { operator: se.AND, constraints: [{ value: null, matchMode: V.EQUALS }] },
        sex: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        birthday: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        tag: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        din: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        page: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] }
      };
    })(), Dt(() => {
      En.getProductsMini().then((s) => n.value = s);
    }), (s, d) => {
      const c = $("Tab"), u = $("TabList"), f = $("Tag"), p = $("Column"), h = $("DataTable"), g = $("TabPanel"), b = $("InputText"), C = $("Button"), x = $("TabPanels"), R = $("Tabs"), w = $("ard");
      return m(), O(w, { class: "card" }, {
        default: E(() => [
          P(R, { value: "0" }, {
            default: E(() => [
              P(u, null, {
                default: E(() => [
                  P(c, { value: "0" }, {
                    default: E(() => [...d[2] || (d[2] = [
                      ee("乳房外科特別門診(早)", -1)
                    ])]),
                    _: 1
                  }),
                  P(c, { value: "1" }, {
                    default: E(() => [...d[3] || (d[3] = [
                      ee("一般外科(午)", -1)
                    ])]),
                    _: 1
                  }),
                  P(c, { value: "2" }, {
                    default: E(() => [...d[4] || (d[4] = [
                      ee("一般外科(晚)", -1)
                    ])]),
                    _: 1
                  })
                ]),
                _: 1
              }),
              P(x, null, {
                default: E(() => [
                  P(g, { value: "0" }, {
                    default: E(() => [
                      P(h, {
                        selection: o.value,
                        "onUpdate:selection": d[0] || (d[0] = (T) => o.value = T),
                        dataKey: "id",
                        value: n.value,
                        size: "small",
                        resizableColumns: "",
                        columnResizeMode: "fit",
                        showGridlines: "",
                        paginator: "",
                        rows: 10
                      }, {
                        default: E(() => [
                          (m(!0), y(_, null, fe(r.value, (T) => (m(), O(p, {
                            key: T.field,
                            field: T.field,
                            header: T.header,
                            class: "max-w-200 whitespace-normal break-word",
                            size: "small"
                          }, {
                            body: E(({ data: S, field: I }) => [
                              I === "check" ? (m(), y("div", J_, [
                                S[I] === "1" ? (m(), y("span", Y_, [...d[5] || (d[5] = [
                                  v("i", { class: "pi pi-check" }, null, -1)
                                ])])) : (m(), y("span", X_, [...d[6] || (d[6] = [
                                  v("i", { class: "pi pi-times" }, null, -1)
                                ])]))
                              ])) : I === "status" ? (m(), y("div", Z_, [
                                S[I] === "A" ? (m(), y("span", Q_, [...d[7] || (d[7] = [
                                  v("i", { class: "pi pi-times text-red-500" }, null, -1),
                                  ee("暫存", -1)
                                ])])) : S[I] === "C" ? (m(), y("span", eK, [...d[8] || (d[8] = [
                                  v("i", { class: "pi pi-check text-green-500" }, null, -1),
                                  ee("已完成", -1)
                                ])])) : (m(), y("span", tK, "待看診"))
                              ])) : I === "tag" ? (m(), y("div", nK, [
                                (m(!0), y(_, null, fe(S[I], (B, H) => (m(), O(f, {
                                  key: B.id || H,
                                  outlined: "",
                                  class: Y([
                                    B.color === "danger" ? "p-tag-danger" : B.color === "warning" ? "p-tag-warning" : B.color === "info" ? "p-tag-info" : B.color === "success" ? "p-tag-success" : "",
                                    "font-medium transition p-1 m-1",
                                    B.button === "0" ? "underline" : ""
                                  ]),
                                  value: B.tagname
                                }, null, 8, ["class", "value"]))), 128))
                              ])) : I === "din" ? (m(), y("div", oK, [
                                S[I] === "1" ? (m(), y("span", rK, "健保")) : (m(), y("span", iK, "自費"))
                              ])) : I === "page" ? (m(), y("div", aK, [
                                (m(!0), y(_, null, fe(S[I], (B, H) => (m(), O(f, {
                                  key: B.id || H,
                                  severity: "secondary",
                                  value: B.pagename
                                }, null, 8, ["value"]))), 128))
                              ])) : (m(), y("div", lK, [
                                v("span", sK, re(typeof I == "string" && I in S ? S[I] : ""), 1)
                              ]))
                            ]),
                            _: 1
                          }, 8, ["field", "header"]))), 128))
                        ]),
                        _: 1
                      }, 8, ["selection", "value"])
                    ]),
                    _: 1
                  }),
                  P(g, { value: "1" }, {
                    default: E(() => [
                      P(h, {
                        editingRows: i.value,
                        "onUpdate:editingRows": d[1] || (d[1] = (T) => i.value = T),
                        value: n.value,
                        editMode: "row",
                        dataKey: "id",
                        size: "small",
                        resizableColumns: "",
                        columnResizeMode: "fit",
                        selectionMode: "single",
                        showGridlines: "",
                        stripedRows: "",
                        paginator: "",
                        roweditoriniticon: "",
                        rows: 10,
                        pt: {
                          // table: { style: 'min-width: 50rem' },
                          // column: {
                          //     bodycell: ({ state }) => ({
                          //         style:  state['d_editing']&&'padding-top: 0.75rem; padding-bottom: 0.75rem'
                          //     })
                          // }
                        }
                      }, {
                        default: E(() => [
                          (m(!0), y(_, null, fe(r.value, (T) => (m(), O(p, {
                            key: T.field,
                            field: T.field,
                            header: T.header,
                            class: "max-w-200 truncate",
                            size: "small"
                          }, {
                            body: E(({ data: S, field: I }) => [
                              I === "check" ? (m(), y("div", dK, [
                                S[I] === "1" ? (m(), y("span", cK, [...d[9] || (d[9] = [
                                  v("i", { class: "pi pi-check" }, null, -1)
                                ])])) : (m(), y("span", uK, [...d[10] || (d[10] = [
                                  v("i", { class: "pi pi-times" }, null, -1)
                                ])]))
                              ])) : I === "status" ? (m(), y("div", pK, [
                                S[I] === "A" ? (m(), y("span", fK, [...d[11] || (d[11] = [
                                  v("i", { class: "pi pi-times text-red-500" }, null, -1),
                                  ee("暫存", -1)
                                ])])) : S[I] === "C" ? (m(), y("span", hK, [...d[12] || (d[12] = [
                                  v("i", { class: "pi pi-check text-green-500" }, null, -1),
                                  ee("已完成", -1)
                                ])])) : (m(), y("span", mK, "待看診"))
                              ])) : I === "tag" ? (m(), y("div", gK, [
                                (m(!0), y(_, null, fe(S[I], (B, H) => (m(), O(f, {
                                  key: B.id || H,
                                  class: Y([
                                    B.color === "danger" ? "p-tag-danger" : B.color === "warning" ? "p-tag-warning" : B.color === "info" ? "p-tag-info" : B.color === "success" ? "p-tag-success" : "",
                                    "font-medium transition p-1 m-1",
                                    B.button === "0" ? "underline" : ""
                                  ]),
                                  value: B.tagname
                                }, null, 8, ["class", "value"]))), 128))
                              ])) : I === "din" ? (m(), y("div", bK, [
                                S[I] === "1" ? (m(), y("span", vK, "健保")) : (m(), y("span", yK, "自費"))
                              ])) : I === "page" ? (m(), y("div", kK, [
                                (m(!0), y(_, null, fe(S[I], (B, H) => (m(), O(f, {
                                  key: B.id || H,
                                  severity: "secondary",
                                  value: B.pagename
                                }, null, 8, ["value"]))), 128))
                              ])) : (m(), y("div", wK, [
                                v("span", CK, re(typeof I == "string" && I in S ? S[I] : ""), 1)
                              ]))
                            ]),
                            editor: E(({ data: S, field: I }) => [
                              P(b, {
                                modelValue: S[I],
                                "onUpdate:modelValue": (B) => S[I] = B,
                                autofocus: "",
                                fluid: "",
                                size: "small"
                              }, null, 8, ["modelValue", "onUpdate:modelValue"])
                            ]),
                            _: 1
                          }, 8, ["field", "header"]))), 128)),
                          P(p, { header: "操作" }, {
                            body: E(({ editorInitCallback: T, data: S }) => [
                              P(C, {
                                size: "small",
                                label: "編輯",
                                icon: "pi pi-pencil",
                                text: "",
                                onClick: T
                              }, null, 8, ["onClick"]),
                              P(C, {
                                size: "small",
                                label: "刪除",
                                icon: "pi pi-trash",
                                text: "",
                                onClick: (I) => s.$emit("delete-row", S)
                              }, null, 8, ["onClick"])
                            ]),
                            editor: E(({ editorSaveCallback: T, editorCancelCallback: S, data: I }) => [
                              P(C, {
                                label: "儲存",
                                icon: "pi pi-save",
                                text: "",
                                onClick: T
                              }, null, 8, ["onClick"]),
                              P(C, {
                                label: "取消",
                                icon: "pi pi-times",
                                severity: "danger",
                                text: "",
                                onClick: S
                              }, null, 8, ["onClick"])
                            ]),
                            _: 1
                          })
                        ]),
                        _: 1
                      }, 8, ["editingRows", "value"])
                    ]),
                    _: 1
                  }),
                  P(g, { value: "2" }, {
                    default: E(() => [...d[13] || (d[13] = [
                      v("p", { class: "m-0" }, " At vero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus. ", -1)
                    ])]),
                    _: 1
                  })
                ]),
                _: 1
              })
            ]),
            _: 1
          })
        ]),
        _: 1
      });
    };
  }
}), xK = { class: "flex-grow" }, SK = { class: "flex flex-wrap justify-between" }, IK = { class: "flex flex-wrap gap-x-4 gap-y-2 divide-x-1 divide-solid divide-gray-300 mb-2" }, OK = { class: "pr-2" }, PK = { class: "flex items-center gap-3 pr-2" }, $K = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, TK = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, RK = { class: "flex items-center gap-3 pr-2" }, BK = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, EK = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, MK = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, AK = { class: "flex items-center gap-2" }, DK = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, LK = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, zK = /* @__PURE__ */ Be({
  __name: "TabPane5",
  setup(t) {
    const e = z("實體IC"), n = z(["實體IC", "虛擬IC"]), o = z(), i = z([
      { name: "New York", code: "NY" },
      { name: "Rome", code: "RM" }
    ]), r = z([]), a = (f, p) => {
      console.log("要儲存的資料", f), p();
    }, l = (f) => {
      console.log("要刪除的資料", f);
    }, s = z(), d = z([
      { field: "id", header: "診號" },
      { field: "check", header: "報到" },
      { field: "status", header: "狀態" },
      { field: "feeno", header: "病歷號" },
      { field: "name", header: "姓名" },
      { field: "sex", header: "性別" },
      { field: "birthday", header: "生日" },
      { field: "tag", header: "註記" },
      { field: "din", header: "身分" },
      { field: "page", header: "報告" }
    ]), c = z({
      global: { value: null, matchMode: V.CONTAINS }
    });
    return (() => {
      c.value = {
        global: { value: null, matchMode: V.CONTAINS },
        id: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        check: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        status: { value: null, matchMode: V.IN },
        feeno: { operator: se.AND, constraints: [{ value: null, matchMode: V.DATE_IS }] },
        name: { operator: se.AND, constraints: [{ value: null, matchMode: V.EQUALS }] },
        sex: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        birthday: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        tag: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        din: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        page: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] }
      };
    })(), (f, p) => {
      const h = $("Button"), g = $("SelectButton"), b = $("Checkbox"), C = $("Select");
      return m(), y("div", xK, [
        v("div", SK, [
          p[9] || (p[9] = v("div", { class: "flex gap-2 mb-3" }, [
            v("div", { class: "bg-primary h-[20px] w-2" }),
            v("p", { class: "text-primary text-lg" }, "病患等候清單")
          ], -1)),
          P(h, {
            label: "未確認清單(5)",
            severity: "secondary",
            size: "small"
          })
        ]),
        v("div", IK, [
          v("div", OK, [
            P(g, {
              modelValue: e.value,
              "onUpdate:modelValue": p[0] || (p[0] = (x) => e.value = x),
              options: n.value,
              size: "small"
            }, null, 8, ["modelValue", "options"])
          ]),
          v("div", PK, [
            v("label", $K, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[1] || (p[1] = (x) => r.value = x),
                inputId: "ingredient1",
                name: "pizza",
                value: "自費",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[10] || (p[10] = ee(" 自費 ", -1))
            ]),
            v("label", TK, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[2] || (p[2] = (x) => r.value = x),
                inputId: "ingredient2",
                name: "pizza",
                value: "健保欠卡",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[11] || (p[11] = ee(" 健保欠卡 ", -1))
            ]),
            P(C, {
              modelValue: o.value,
              "onUpdate:modelValue": p[3] || (p[3] = (x) => o.value = x),
              editable: "",
              options: i.value,
              showClear: "",
              optionLabel: "name",
              placeholder: "異常碼",
              size: "small"
            }, null, 8, ["modelValue", "options"]),
            p[12] || (p[12] = v("label", { class: "flex items-center" }, [
              ee(" 看診號： "),
              v("p", null, "--")
            ], -1))
          ]),
          v("div", RK, [
            v("label", BK, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[4] || (p[4] = (x) => r.value = x),
                inputId: "ingredient3",
                name: "pizza",
                value: "Cheese",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[13] || (p[13] = ee(" 已完成(4) ", -1))
            ]),
            v("label", EK, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[5] || (p[5] = (x) => r.value = x),
                inputId: "ingredient4",
                name: "pizza",
                value: "Mushroom",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[14] || (p[14] = ee(" 暫存(2) ", -1))
            ]),
            v("label", MK, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[6] || (p[6] = (x) => r.value = x),
                inputId: "ingredient5",
                name: "pizza",
                value: "Cheese1",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[15] || (p[15] = ee(" 待看診(3) ", -1))
            ])
          ]),
          v("div", AK, [
            v("label", DK, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[7] || (p[7] = (x) => r.value = x),
                inputId: "ingredient6",
                name: "pizza",
                value: "Cheese2",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[16] || (p[16] = ee(" 已報到 ", -1))
            ]),
            v("label", LK, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[8] || (p[8] = (x) => r.value = x),
                inputId: "ingredient7",
                name: "pizza",
                value: "Mushroom1",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[17] || (p[17] = ee(" 未報到 ", -1))
            ])
          ])
        ]),
        P(h, {
          label: "查詢",
          size: "small"
        }),
        P(uu, {
          items: s.value,
          columns: d.value,
          onSaveRow: a,
          onDeleteRow: l
        }, null, 8, ["items", "columns"])
      ]);
    };
  }
}), FK = /* @__PURE__ */ Bn(zK, [["__scopeId", "data-v-d4f6e896"]]), NK = { class: "flex-grow border-1 border-gray-200 p-2 bg-white shadow-lg" }, jK = { class: "flex items-start" }, VK = { class: "flex-wrap" }, _K = { class: "flex items-center gap-2" }, KK = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, HK = { class: "flex items-start mt-2" }, WK = { class: "flex border-1 border-gray-200" }, UK = { class: "flex-wrap p-2" }, GK = { class: "flex items-start gap-3 pr-2" }, qK = { class: "flex border-1 border-gray-200" }, JK = { class: "flex-wrap" }, YK = { class: "flex items-center gap-2" }, XK = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, ZK = /* @__PURE__ */ Be({
  __name: "TabPane6",
  setup(t) {
    z("實體IC"), z(["實體IC", "虛擬IC"]), z(), z([
      { name: "New York", code: "NY" },
      { name: "Rome", code: "RM" }
    ]), z([]), z(), z([
      { field: "id", header: "診號" },
      { field: "check", header: "報到" },
      { field: "status", header: "狀態" },
      { field: "feeno", header: "病歷號" },
      { field: "name", header: "姓名" },
      { field: "sex", header: "性別" },
      { field: "birthday", header: "生日" },
      { field: "tag", header: "註記" },
      { field: "din", header: "身分" },
      { field: "page", header: "報告" }
    ]);
    const e = z({
      global: { value: null, matchMode: V.CONTAINS }
    });
    return (() => {
      e.value = {
        global: { value: null, matchMode: V.CONTAINS },
        id: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        check: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        status: { value: null, matchMode: V.IN },
        feeno: { operator: se.AND, constraints: [{ value: null, matchMode: V.DATE_IS }] },
        name: { operator: se.AND, constraints: [{ value: null, matchMode: V.EQUALS }] },
        sex: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        birthday: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        tag: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        din: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        page: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] }
      };
    })(), (o, i) => {
      const r = $("Tag"), a = $("Button"), l = $("Tab"), s = $("TabList"), d = $("TabPanel"), c = $("TabPanels"), u = $("Tabs");
      return m(), y(_, null, [
        v("div", NK, [
          v("div", jK, [
            P(r, {
              icon: "pi pi-info",
              class: "mr-1 p-5",
              size: "small",
              severity: "secondary",
              rounded: ""
            }),
            v("div", VK, [
              i[2] || (i[2] = dv('<div class="flex items-center gap-3 pr-2" data-v-54ea67ba><dl class="flex flex-wrap gap-x-4" data-v-54ea67ba><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>身高</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>170.0cm</dd></div><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>體重</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>170.0cm</dd></div><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>BMI</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>18.5</dd></div><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>BSA</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>1.95</dd></div><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>血壓</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>132/70 mmHg</dd></div><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>體溫</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>36.2℃</dd></div><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>血糖</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>00 mg/dL</dd></div><div class="flex flex-nowrap" data-v-54ea67ba><dt data-v-54ea67ba>脈搏</dt><dd class="font-bold text-purple-700 ml-1" data-v-54ea67ba>000次/分</dd></div></dl></div>', 1)),
              v("div", _K, [
                v("label", KK, [
                  i[1] || (i[1] = ee(" 疼痛指數 : ", -1)),
                  P(a, {
                    size: "small",
                    class: "!gap-[0.2rem] flex items-center"
                  }, {
                    default: E(() => [...i[0] || (i[0] = [
                      v("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        width: "16",
                        height: "16",
                        fill: "currentColor",
                        class: "bi bi-emoji-smile",
                        viewBox: "0 0 16 16"
                      }, [
                        v("path", { d: "M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" }),
                        v("path", { d: "M4.285 9.567a.5.5 0 0 1 .683.183A3.5 3.5 0 0 0 8 11.5a3.5 3.5 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.5 4.5 0 0 1 8 12.5a4.5 4.5 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5m4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5" })
                      ], -1),
                      v("span", { class: "align-middle" }, "0", -1)
                    ])]),
                    _: 1
                  })
                ]),
                P(a, {
                  label: "編輯",
                  size: "small",
                  icon: "pi pi-pencil",
                  severity: "secondary"
                })
              ])
            ])
          ])
        ]),
        v("div", HK, [
          v("div", WK, [
            v("div", UK, [
              v("div", GK, [
                P(u, { value: "0" }, {
                  default: E(() => [
                    P(s, null, {
                      default: E(() => [
                        P(a, {
                          label: "CPOE",
                          size: "small"
                        }),
                        P(l, { value: "0" }, {
                          default: E(() => [...i[3] || (i[3] = [
                            ee("就醫資訊", -1)
                          ])]),
                          _: 1
                        }),
                        P(l, { value: "1" }, {
                          default: E(() => [...i[4] || (i[4] = [
                            ee("過敏藥(4)", -1)
                          ])]),
                          _: 1
                        }),
                        P(l, { value: "2" }, {
                          default: E(() => [...i[5] || (i[5] = [
                            ee("個人重大傷病", -1)
                          ])]),
                          _: 1
                        })
                      ]),
                      _: 1
                    }),
                    P(c, null, {
                      default: E(() => [
                        P(d, { value: "0" }, {
                          default: E(() => [...i[6] || (i[6] = [
                            v("div", { class: "horizontal-label flex gap-2 items-center flex-wrap" }, [
                              v("div", { class: "label-wrapper show-colon text-right" }, [
                                v("label", { for: "name1" }, "診號"),
                                v("span", null, ":")
                              ]),
                              v("div", { class: "flex flex-wrap divide-x divide-gray-300 gap-x-1" }, [
                                v("span", { class: "pr-1" }, "001")
                              ])
                            ], -1),
                            v("div", { class: "horizontal-label flex gap-2 items-center flex-wrap" }, [
                              v("div", { class: "label-wrapper show-colon text-right" }, [
                                v("label", { for: "name1" }, "卡序"),
                                v("span", null, ":")
                              ]),
                              v("div", { class: "flex flex-wrap divide-x divide-gray-300 gap-x-1" }, [
                                v("span", { class: "pr-1" }, "IC07")
                              ])
                            ], -1),
                            v("div", { class: "horizontal-label flex gap-2 items-center flex-wrap" }, [
                              v("div", { class: "label-wrapper show-colon text-right" }, [
                                v("label", { for: "name1" }, "優待身分"),
                                v("span", null, ":")
                              ]),
                              v("div", { class: "flex flex-wrap divide-x divide-gray-300 gap-x-1" }, [
                                v("span", { class: "pr-1" }, "70歲以上年長者")
                              ])
                            ], -1),
                            v("div", { class: "grid grid-cols-[auto_1rem_auto] gap-x-2 place-content-center mb-2" }, [
                              v("label", { class: "text-right" }, "診號"),
                              v("span", null, ":"),
                              v("span", null, "001")
                            ], -1),
                            v("div", { class: "grid grid-cols-[auto_1rem_auto] gap-x-2 place-content-center mb-2" }, [
                              v("label", { class: "text-right" }, "卡序"),
                              v("span", null, ":"),
                              v("span", null, "IC07")
                            ], -1),
                            v("div", { class: "grid grid-cols-[auto_1rem_auto] gap-x-2 place-content-center" }, [
                              v("label", { class: "text-right" }, "優待身分"),
                              v("span", null, ":"),
                              v("span", null, "70歲以上年長者")
                            ], -1)
                          ])]),
                          _: 1
                        }),
                        P(d, { value: "1" }, {
                          default: E(() => [...i[7] || (i[7] = [
                            v("p", { class: "m-0" }, null, -1)
                          ])]),
                          _: 1
                        }),
                        P(d, { value: "2" }, {
                          default: E(() => [...i[8] || (i[8] = [
                            v("p", { class: "m-0" }, " At vero eos et accusamus ", -1)
                          ])]),
                          _: 1
                        })
                      ]),
                      _: 1
                    })
                  ]),
                  _: 1
                })
              ])
            ])
          ]),
          v("div", qK, [
            v("div", JK, [
              v("div", YK, [
                v("label", XK, [
                  i[10] || (i[10] = ee(" 疼痛指數 : ", -1)),
                  P(a, {
                    size: "small",
                    class: "!gap-[0.2rem] flex items-center"
                  }, {
                    default: E(() => [...i[9] || (i[9] = [
                      v("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        width: "16",
                        height: "16",
                        fill: "currentColor",
                        class: "bi bi-emoji-smile",
                        viewBox: "0 0 16 16"
                      }, [
                        v("path", { d: "M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" }),
                        v("path", { d: "M4.285 9.567a.5.5 0 0 1 .683.183A3.5 3.5 0 0 0 8 11.5a3.5 3.5 0 0 0 3.032-1.75.5.5 0 1 1 .866.5A4.5 4.5 0 0 1 8 12.5a4.5 4.5 0 0 1-3.898-2.25.5.5 0 0 1 .183-.683M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5m4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5" })
                      ], -1),
                      v("span", { class: "align-middle" }, "0", -1)
                    ])]),
                    _: 1
                  })
                ]),
                P(a, {
                  label: "編輯",
                  size: "small",
                  icon: "pi pi-pencil",
                  severity: "secondary"
                })
              ])
            ])
          ])
        ])
      ], 64);
    };
  }
}), QK = /* @__PURE__ */ Bn(ZK, [["__scopeId", "data-v-54ea67ba"]]), eH = { class: "flex flex-col md:flex-row items-start gap-4" }, tH = { class: "flex-grow min-w-0" }, nH = /* @__PURE__ */ Be({
  __name: "PatientList",
  setup(t) {
    const e = z(), n = z("his"), o = z(!0), i = z(!0), r = hr([
      { id: "REGSFN05", name: "病患候診清單", panel: FK },
      { id: "REGSFN06", name: "門診醫囑", panel: QK, disabled: !0 }
    ]), a = z(r.value[1].id), l = (d) => {
      const c = r.value.filter((u) => u.id !== d);
      r.value = c;
    }, s = (d) => {
      console.log("Parent received change:", d), a.value = d;
    };
    return Dt(() => {
      En.getProductsMini().then((d) => e.value = d);
    }), (d, c) => (m(), y("div", eH, [
      v("div", tH, [
        P(H0, {
          "active-id": a.value,
          variant: n.value,
          items: r.value,
          scrollable: i.value,
          closable: o.value,
          class: "",
          onChange: s,
          onClose: l
        }, null, 8, ["active-id", "variant", "items", "scrollable", "closable"])
      ])
    ]));
  }
}), oH = { class: "flex gap-3" }, rH = { class: "flex-auto" }, iH = { class: "flex-grow" }, aH = /* @__PURE__ */ Be({
  __name: "TabPane3",
  setup(t) {
    return (e, n) => (m(), y("div", oH, [
      n[0] || (n[0] = v("div", { class: "space-y-3" }, [
        v("div", { class: "flex-none mr-2 border-1 border-gray-300 p-2" }, [
          v("div", { class: "flex gap-2 mb-3" }, [
            v("div", { class: "bg-primary h-[20px] w-2" }),
            v("p", { class: "text-primary text-lg" }, "病人資訊")
          ]),
          v("div", { class: "flex-grow" }, [
            v("div", { class: "horizontal-label flex gap-2 items-center flex-wrap" }, [
              v("div", { class: "label-wrapper show-colon text-right" }, [
                v("label", { for: "name1" }, "看診"),
                v("span", null, ":")
              ]),
              v("div", { class: "flex flex-wrap divide-x divide-gray-300 gap-x-1" }, [
                v("span", { class: "pr-1" }, "2024-12-14"),
                v("span", { class: "pr-1" }, "午"),
                v("span", { class: "pr-1" }, "李華陀")
              ])
            ]),
            v("div", { class: "horizontal-label flex gap-2 items-center flex-wrap" }, [
              v("div", { class: "label-wrapper show-colon text-right" }, [
                v("label", { for: "name3" }, "科別"),
                v("span", null, ":")
              ]),
              v("div", { class: "flex flex-wrap divide-x divide-gray-300 gap-x-1" }, [
                v("span", { class: "pr-1" }, "感染科"),
                v("span", { class: "pr-1" }, "類流感門診")
              ])
            ]),
            v("hr", { class: "h-px my-2 bg-gray-200 border-0 dark:bg-gray-700" }),
            v("div", { class: "horizontal-label flex gap-2 items-center flex-wrap" }, [
              v("div", { class: "label-wrapper show-colon text-right" }, [
                v("label", { for: "name4" }, "姓名"),
                v("span", null, ":")
              ]),
              v("div", { class: "flex flex-wrap divide-x divide-gray-300 gap-x-1" }, [
                v("span", { class: "pr-1" }, "林祥白"),
                v("span", { class: "pr-1" }, "男")
              ])
            ]),
            v("div", { class: "horizontal-label flex gap-2 items-center flex-wrap" }, [
              v("div", { class: "label-wrapper show-colon text-right" }, [
                v("label", { for: "name4" }, "生日"),
                v("span", null, ":")
              ]),
              v("div", { class: "flex flex-wrap divide-x divide-gray-300 gap-x-1" }, [
                v("span", { class: "pr-1" }, "1971-08-30(54y10m30d)")
              ])
            ]),
            v("div", { class: "mt-1 flex gap-1 items-center" }, [
              v("div", {
                class: "bg-orange-300 border-surface-500 relative inline-block min-h-10 min-w-10 overflow-hidden rounded-full border px-0.5 py-1.5 text-center select-none font-bold",
                "data-pd-tooltip": "true"
              }, [
                v("span", { class: "text-color" }, "跌")
              ]),
              v("div", {
                role: "button",
                class: "border-sky-700 relative inline-block min-h-5 min-w-5 overflow-hidden border px-0.5 py-1.5 text-center select-none cursor-pointer rounded-md hover:border-2 font-bold"
              }, [
                v("span", { class: "text-sky-700 underline" }, "管理")
              ]),
              v("div", {
                role: "button",
                class: "border-sky-700 relative inline-block min-h-5 min-w-5 overflow-hidden border px-0.5 py-1.5 text-center select-none cursor-pointer rounded-md hover:border-2 font-bold"
              }, [
                v("span", { class: "text-sky-700 underline" }, "過敏")
              ]),
              v("div", {
                role: "button",
                class: "border-sky-700 relative inline-block min-h-5 min-w-5 overflow-hidden border px-0.5 py-1.5 text-center select-none cursor-pointer rounded-md hover:border-2 font-bold"
              }, [
                v("span", { class: "text-sky-700 underline" }, "重大")
              ])
            ])
          ])
        ]),
        v("div", { class: "flex-none mr-2 border-1 border-gray-300 p-2" }, [
          v("div", { class: "flex gap-2 mb-3" }, [
            v("div", { class: "bg-primary h-[20px] w-2" }),
            v("p", { class: "text-primary text-lg" }, "功能選單")
          ]),
          v("div", { class: "flex-grow" })
        ])
      ], -1)),
      v("div", rH, [
        v("div", iH, [
          P(nH)
        ])
      ])
    ]));
  }
}), lH = { class: "flex-grow" }, sH = { class: "flex flex-wrap justify-between" }, dH = { class: "flex flex-wrap gap-x-4 gap-y-2 divide-x-1 divide-solid divide-gray-300 mb-2" }, cH = { class: "pr-2" }, uH = { class: "flex items-center gap-3 pr-2" }, pH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, fH = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, hH = { class: "flex items-center gap-3 pr-2" }, mH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, gH = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, bH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, vH = { class: "flex items-center gap-2" }, yH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, kH = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, wH = /* @__PURE__ */ Be({
  __name: "TabPane4",
  setup(t) {
    const e = z("實體IC"), n = z(["實體IC", "虛擬IC"]), o = z(), i = z([
      { name: "New York", code: "NY" },
      { name: "Rome", code: "RM" }
    ]), r = z([]);
    z([]);
    const a = (f, p) => {
      console.log("要儲存的資料", f), p();
    }, l = (f) => {
      console.log("要刪除的資料", f);
    }, s = z(), d = z([
      { field: "id", header: "診號" },
      { field: "check", header: "報到" },
      { field: "status", header: "狀態" },
      { field: "feeno", header: "病歷號" },
      { field: "name", header: "姓名" },
      { field: "sex", header: "性別" },
      { field: "birthday", header: "生日" },
      { field: "tag", header: "註記" },
      { field: "din", header: "身分" },
      { field: "page", header: "報告" }
    ]), c = z({
      global: { value: null, matchMode: V.CONTAINS }
    });
    return (() => {
      c.value = {
        global: { value: null, matchMode: V.CONTAINS },
        id: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        check: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        status: { value: null, matchMode: V.IN },
        feeno: { operator: se.AND, constraints: [{ value: null, matchMode: V.DATE_IS }] },
        name: { operator: se.AND, constraints: [{ value: null, matchMode: V.EQUALS }] },
        sex: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        birthday: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        tag: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        din: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        page: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] }
      };
    })(), (f, p) => {
      const h = $("Button"), g = $("SelectButton"), b = $("Checkbox"), C = $("Select");
      return m(), y("div", lH, [
        v("div", sH, [
          p[9] || (p[9] = v("div", { class: "flex gap-2 mb-3" }, [
            v("div", { class: "bg-primary h-[20px] w-2" }),
            v("p", { class: "text-primary text-lg" }, "病患等候清單")
          ], -1)),
          P(h, {
            label: "未確認清單(5)",
            severity: "secondary",
            size: "small"
          })
        ]),
        v("div", dH, [
          v("div", cH, [
            P(g, {
              modelValue: e.value,
              "onUpdate:modelValue": p[0] || (p[0] = (x) => e.value = x),
              options: n.value,
              size: "small"
            }, null, 8, ["modelValue", "options"])
          ]),
          v("div", uH, [
            v("label", pH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[1] || (p[1] = (x) => r.value = x),
                inputId: "ingredient1",
                name: "pizza",
                value: "自費",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[10] || (p[10] = ee(" 自費 ", -1))
            ]),
            v("label", fH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[2] || (p[2] = (x) => r.value = x),
                inputId: "ingredient2",
                name: "pizza",
                value: "健保欠卡",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[11] || (p[11] = ee(" 健保欠卡 ", -1))
            ]),
            P(C, {
              modelValue: o.value,
              "onUpdate:modelValue": p[3] || (p[3] = (x) => o.value = x),
              editable: "",
              options: i.value,
              showClear: "",
              optionLabel: "name",
              placeholder: "異常碼",
              size: "small"
            }, null, 8, ["modelValue", "options"]),
            p[12] || (p[12] = v("label", { class: "flex items-center" }, [
              ee(" 看診號： "),
              v("p", null, "--")
            ], -1))
          ]),
          v("div", hH, [
            v("label", mH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[4] || (p[4] = (x) => r.value = x),
                inputId: "ingredient3",
                name: "pizza",
                value: "Cheese",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[13] || (p[13] = ee(" 已完成(4) ", -1))
            ]),
            v("label", gH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[5] || (p[5] = (x) => r.value = x),
                inputId: "ingredient4",
                name: "pizza",
                value: "Mushroom",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[14] || (p[14] = ee(" 暫存(2) ", -1))
            ]),
            v("label", bH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[6] || (p[6] = (x) => r.value = x),
                inputId: "ingredient5",
                name: "pizza",
                value: "Cheese1",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[15] || (p[15] = ee(" 待看診(3) ", -1))
            ])
          ]),
          v("div", vH, [
            v("label", yH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[7] || (p[7] = (x) => r.value = x),
                inputId: "ingredient6",
                name: "pizza",
                value: "Cheese2",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[16] || (p[16] = ee(" 已報到 ", -1))
            ]),
            v("label", kH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[8] || (p[8] = (x) => r.value = x),
                inputId: "ingredient7",
                name: "pizza",
                value: "Mushroom1",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[17] || (p[17] = ee(" 未報到 ", -1))
            ])
          ])
        ]),
        P(h, {
          label: "查詢",
          size: "small"
        }),
        P(uu, {
          items: s.value,
          columns: d.value,
          onSaveRow: a,
          onDeleteRow: l
        }, null, 8, ["items", "columns"])
      ]);
    };
  }
}), CH = /* @__PURE__ */ Bn(wH, [["__scopeId", "data-v-954428b2"]]), xH = { class: "flex-grow min-w-0 h-full" }, SH = /* @__PURE__ */ Be({
  __name: "CPOEDemo",
  setup(t) {
    const e = z(), n = z("his"), o = z(!0), i = z(!0), r = hr([
      { id: "REGSFN01", name: "病患清單", panel: aH, disabled: !0 },
      { id: "REGSFN02", name: "門診醫囑", panel: CH }
    ]), a = z(r.value[0].id), l = (d) => {
      const c = r.value.filter((u) => u.id !== d);
      r.value = c;
    }, s = (d) => {
      console.log("Parent received change:", d), a.value = d;
    };
    return z([
      { field: "id", header: "診號" },
      { field: "status", header: "狀態" },
      { field: "name", header: "姓名" }
    ]), Dt(() => {
      En.getProductsMini().then((d) => e.value = d);
    }), (d, c) => (m(), y("div", xH, [
      P(H0, {
        "active-id": a.value,
        variant: n.value,
        items: r.value,
        scrollable: i.value,
        closable: o.value,
        onChange: s,
        onClose: l
      }, null, 8, ["active-id", "variant", "items", "scrollable", "closable"])
    ]));
  }
}), IH = /* @__PURE__ */ Be({
  __name: "Tabs",
  props: {
    items: {},
    activeId: {},
    variant: {},
    scrollable: { type: Boolean },
    closable: { type: Boolean }
  },
  emits: ["change", "close"],
  setup(t, { emit: e }) {
    const n = t, o = e, i = vt(
      () => Array.isArray(n.items) ? n.items.findIndex((s) => s.id === n.activeId) : -1
    ), r = vt(() => {
      switch (n.variant) {
        case "his":
          return "bg-blue-100 text-blue-700";
        case "fn":
          return "bg-green-100 text-green-700";
        case "card-1":
          return "bg-purple-100 text-purple-700";
        case "card-2":
          return "bg-yellow-100 text-yellow-700";
        default:
          return "";
      }
    });
    function a(s) {
      console.log("使用者切換到：", s), o("change", String(s));
    }
    const l = (s) => {
      o("close", s);
    };
    return (s, d) => {
      const c = $("Button");
      return m(), O(He(Il), {
        value: n.activeId,
        scrollable: s.scrollable,
        "onUpdate:value": a
      }, {
        default: E(() => [
          P(He(Ol), { pt: { tablist: { class: "gap-1 !border-white !border-0 !p-0" } } }, {
            default: E(() => [
              (m(!0), y(_, null, fe(n.items, (u) => (m(), O(He(Pl), {
                key: u.id,
                value: u.id,
                class: "!rounded-tl-md !rounded-tr-md !border !border-b-0 !border-gray-400 !px-4",
                pt: {
                  headerAction: {
                    class: [
                      r.value,
                      s.activeId === u.id ? "font-bold bg-blue-500 " : "",
                      "flex items-center justify-between"
                    ]
                  }
                }
              }, {
                default: E(() => [
                  ee(re(u.name) + " ", 1),
                  s.closable ? (m(), O(c, {
                    key: 0,
                    icon: "pi pi-times",
                    severity: "danger",
                    text: "",
                    size: "small",
                    class: "absolute top-0 right-0",
                    onClick: (f) => l(u.id)
                  }, null, 8, ["onClick"])) : M("", !0)
                ]),
                _: 2
              }, 1032, ["value", "pt"]))), 128))
            ]),
            _: 1
          }),
          P(He($l), { class: "border-1 border-gray-300" }, {
            default: E(() => [
              (m(!0), y(_, null, fe(n.items, (u, f) => (m(), O(He(Tl), {
                key: u.id,
                header: u.name,
                disabled: u.disabled,
                value: u.id
              }, {
                default: E(() => [
                  i.value === f && u.panel ? (m(), O(q(u.panel), { key: 0 })) : L(s.$slots, u.id, { key: 1 }, void 0, !0)
                ]),
                _: 2
              }, 1032, ["header", "disabled", "value"]))), 128))
            ]),
            _: 3
          })
        ]),
        _: 3
      }, 8, ["value", "scrollable"]);
    };
  }
}), W0 = /* @__PURE__ */ Bn(IH, [["__scopeId", "data-v-bb25d29e"]]), OH = { class: "flex-grow" }, PH = { class: "flex flex-wrap justify-between" }, $H = { class: "flex flex-wrap gap-x-4 gap-y-2 divide-x-1 divide-solid divide-gray-300 mb-2" }, TH = { class: "pr-2" }, RH = { class: "flex items-center gap-3 pr-2" }, BH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, EH = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, MH = { class: "flex items-center gap-3 pr-2" }, AH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, DH = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, LH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, zH = { class: "flex items-center gap-2" }, FH = {
  class: "flex items-center gap-1",
  for: "ingredient1"
}, NH = {
  class: "flex items-center gap-1",
  for: "ingredient2"
}, jH = /* @__PURE__ */ Be({
  __name: "TabPane1",
  setup(t) {
    const e = z("實體IC"), n = z(["實體IC", "虛擬IC"]), o = z(), i = z([
      { name: "New York", code: "NY" },
      { name: "Rome", code: "RM" }
    ]), r = z([]);
    z([]);
    const a = (f, p) => {
      console.log("要儲存的資料", f), p();
    }, l = (f) => {
      console.log("要刪除的資料", f);
    }, s = z(), d = z([
      { field: "id", header: "診號" },
      { field: "check", header: "報到" },
      { field: "status", header: "狀態" },
      { field: "feeno", header: "病歷號" },
      { field: "name", header: "姓名" },
      { field: "sex", header: "性別" },
      { field: "birthday", header: "生日" },
      { field: "tag", header: "註記" },
      { field: "din", header: "身分" },
      { field: "page", header: "報告" }
    ]), c = z({
      global: { value: null, matchMode: V.CONTAINS }
    });
    return (() => {
      c.value = {
        global: { value: null, matchMode: V.CONTAINS },
        id: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        check: { operator: se.AND, constraints: [{ value: null, matchMode: V.STARTS_WITH }] },
        status: { value: null, matchMode: V.IN },
        feeno: { operator: se.AND, constraints: [{ value: null, matchMode: V.DATE_IS }] },
        name: { operator: se.AND, constraints: [{ value: null, matchMode: V.EQUALS }] },
        sex: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        birthday: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        tag: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        din: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] },
        page: { operator: se.OR, constraints: [{ value: null, matchMode: V.EQUALS }] }
      };
    })(), (f, p) => {
      const h = $("Button"), g = $("SelectButton"), b = $("Checkbox"), C = $("Select");
      return m(), y("div", OH, [
        v("div", PH, [
          p[9] || (p[9] = v("div", { class: "flex gap-2 mb-3" }, [
            v("div", { class: "bg-primary h-[20px] w-2" }),
            v("p", { class: "text-primary text-lg" }, "病患等候清單")
          ], -1)),
          P(h, {
            label: "未確認清單(5)",
            severity: "secondary",
            size: "small"
          })
        ]),
        v("div", $H, [
          v("div", TH, [
            P(g, {
              modelValue: e.value,
              "onUpdate:modelValue": p[0] || (p[0] = (x) => e.value = x),
              options: n.value,
              size: "small"
            }, null, 8, ["modelValue", "options"])
          ]),
          v("div", RH, [
            v("label", BH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[1] || (p[1] = (x) => r.value = x),
                inputId: "ingredient1",
                name: "pizza",
                value: "自費",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[10] || (p[10] = ee(" 自費 ", -1))
            ]),
            v("label", EH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[2] || (p[2] = (x) => r.value = x),
                inputId: "ingredient2",
                name: "pizza",
                value: "健保欠卡",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[11] || (p[11] = ee(" 健保欠卡 ", -1))
            ]),
            P(C, {
              modelValue: o.value,
              "onUpdate:modelValue": p[3] || (p[3] = (x) => o.value = x),
              editable: "",
              options: i.value,
              showClear: "",
              optionLabel: "name",
              placeholder: "異常碼",
              size: "small"
            }, null, 8, ["modelValue", "options"]),
            p[12] || (p[12] = v("label", { class: "flex items-center" }, [
              ee(" 看診號： "),
              v("p", null, "--")
            ], -1))
          ]),
          v("div", MH, [
            v("label", AH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[4] || (p[4] = (x) => r.value = x),
                inputId: "ingredient3",
                name: "pizza",
                value: "Cheese",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[13] || (p[13] = ee(" 已完成(4) ", -1))
            ]),
            v("label", DH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[5] || (p[5] = (x) => r.value = x),
                inputId: "ingredient4",
                name: "pizza",
                value: "Mushroom",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[14] || (p[14] = ee(" 暫存(2) ", -1))
            ]),
            v("label", LH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[6] || (p[6] = (x) => r.value = x),
                inputId: "ingredient5",
                name: "pizza",
                value: "Cheese1",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[15] || (p[15] = ee(" 待看診(3) ", -1))
            ])
          ]),
          v("div", zH, [
            v("label", FH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[7] || (p[7] = (x) => r.value = x),
                inputId: "ingredient6",
                name: "pizza",
                value: "Cheese2",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[16] || (p[16] = ee(" 已報到 ", -1))
            ]),
            v("label", NH, [
              P(b, {
                modelValue: r.value,
                "onUpdate:modelValue": p[8] || (p[8] = (x) => r.value = x),
                inputId: "ingredient7",
                name: "pizza",
                value: "Mushroom1",
                size: "small"
              }, null, 8, ["modelValue"]),
              p[17] || (p[17] = ee(" 未報到 ", -1))
            ])
          ])
        ]),
        P(h, {
          label: "查詢",
          size: "small"
        }),
        P(uu, {
          items: s.value,
          columns: d.value,
          onSaveRow: a,
          onDeleteRow: l
        }, null, 8, ["items", "columns"])
      ]);
    };
  }
}), U0 = /* @__PURE__ */ Bn(jH, [["__scopeId", "data-v-3f8e95e9"]]), VH = { class: "p-4" }, _H = /* @__PURE__ */ Be({
  __name: "TabPane2",
  props: {
    tabId: {}
  },
  setup(t) {
    return (e, n) => (m(), y("div", VH, [
      n[2] || (n[2] = v("h2", { class: "text-xl font-bold mb-2" }, "Tab 面板內容", -1)),
      v("p", null, [
        n[0] || (n[0] = ee("這是 ", -1)),
        v("strong", null, re(e.tabId), 1),
        n[1] || (n[1] = ee(" 的內容區塊。", -1))
      ])
    ]));
  }
}), G0 = /* @__PURE__ */ Bn(_H, [["__scopeId", "data-v-5daa1651"]]), KH = { class: "flex flex-col md:flex-row items-start gap-4" }, HH = { class: "flex-grow min-w-0" }, WH = { class: "w-full md:w-80 flex-shrink-0 mt-18 md:mt-18" }, UH = { key: 0 }, GH = { class: "block truncate" }, qH = { key: 1 }, JH = { key: 0 }, YH = { key: 1 }, XH = { key: 2 }, ZH = { key: 2 }, QH = { class: "block truncate" }, eW = /* @__PURE__ */ Be({
  __name: "CPOEDemo2",
  setup(t) {
    const e = z(), n = z("his"), o = z(!0), i = z(!0), r = hr([
      { id: "REGSFN01", name: "門診醫囑", panel: U0, disabled: !0 },
      { id: "REGSFN02", name: "病患清單", panel: G0 }
    ]), a = z(r.value[0].id), l = (c) => {
      const u = r.value.filter((f) => f.id !== c);
      r.value = u;
    }, s = (c) => {
      console.log("Parent received change:", c), a.value = c;
    }, d = z([
      { field: "id", header: "診號" },
      { field: "status", header: "狀態" },
      { field: "name", header: "姓名" }
    ]);
    return Dt(() => {
      En.getProductsMini().then((c) => e.value = c);
    }), (c, u) => {
      const f = $("Column"), p = $("DataTable"), h = $("Card");
      return m(), y("div", KH, [
        v("div", HH, [
          P(W0, {
            "active-id": a.value,
            variant: n.value,
            items: r.value,
            scrollable: i.value,
            closable: o.value,
            onChange: s,
            onClose: l
          }, null, 8, ["active-id", "variant", "items", "scrollable", "closable"])
        ]),
        v("div", WH, [
          P(h, { class: "h-full flex flex-col p-2" }, {
            header: E(() => [...u[0] || (u[0] = [
              v("div", { class: "flex gap-4" }, [
                v("div", { class: "flex gap-2 items-center flex-1" }, [
                  v("div", { class: "bg-primary h-[25px] w-2" }),
                  v("p", { class: "text-primary text-lg m-0" }, "當日急件報告")
                ]),
                v("div", { class: "flex flex-col justify-end flex-1" }, [
                  v("p", null, "3分鐘前更新"),
                  v("p", null, "總比數：3")
                ])
              ], -1)
            ])]),
            content: E(() => [
              P(p, {
                value: e.value,
                editMode: "row",
                dataKey: "id",
                size: "small",
                resizableColumns: "",
                columnResizeMode: "fit",
                selectionMode: "single",
                showGridlines: "",
                stripedRows: "",
                paginator: "",
                roweditoriniticon: "",
                rows: 10,
                pt: {
                  // table: { style: 'min-width: 50rem' },
                  // column: {
                  //     bodycell: ({ state }) => ({
                  //         style:  state['d_editing']&&'padding-top: 0.75rem; padding-bottom: 0.75rem'
                  //     })
                  // }
                }
              }, {
                default: E(() => [
                  (m(!0), y(_, null, fe(d.value, (g) => (m(), O(f, {
                    key: g.field,
                    field: g.field,
                    header: g.header,
                    class: "max-w-200 truncate",
                    size: "small"
                  }, {
                    body: E(({ data: b, field: C }) => [
                      C === "id" ? (m(), y("div", UH, [
                        v("span", GH, "早診" + re(typeof C == "string" && C in b ? b[C] : ""), 1)
                      ])) : C === "status" ? (m(), y("div", qH, [
                        b[C] === "A" ? (m(), y("span", JH, [...u[1] || (u[1] = [
                          v("i", { class: "pi pi-times text-red-500" }, null, -1),
                          ee("2/2", -1)
                        ])])) : b[C] === "C" ? (m(), y("span", YH, [...u[2] || (u[2] = [
                          v("i", { class: "pi pi-check text-green-500" }, null, -1),
                          ee("0/1", -1)
                        ])])) : (m(), y("span", XH, "1/5"))
                      ])) : (m(), y("div", ZH, [
                        v("span", QH, re(typeof C == "string" && C in b ? b[C] : ""), 1)
                      ]))
                    ]),
                    _: 1
                  }, 8, ["field", "header"]))), 128))
                ]),
                _: 1
              }, 8, ["value"])
            ]),
            footer: E(() => [...u[3] || (u[3] = [])]),
            _: 1
          })
        ])
      ]);
    };
  }
}), tW = { class: "flex flex-col md:flex-row items-start gap-4" }, nW = { class: "flex-grow min-w-0" }, oW = { class: "w-full md:w-80 flex-shrink-0 mt-18 md:mt-18" }, rW = { key: 0 }, iW = { class: "block truncate" }, aW = { key: 1 }, lW = { key: 0 }, sW = { key: 1 }, dW = { key: 2 }, cW = { key: 2 }, uW = { class: "block truncate" }, pW = /* @__PURE__ */ Be({
  __name: "PatientList",
  setup(t) {
    const e = z(), n = z("his"), o = z(!0), i = z(!0), r = hr([
      { id: "REGSFN01", name: "病患清單", panel: U0, disabled: !0 },
      { id: "REGSFN02", name: "門診醫囑", panel: G0 }
    ]), a = z(r.value[0].id), l = (c) => {
      const u = r.value.filter((f) => f.id !== c);
      r.value = u;
    }, s = (c) => {
      console.log("Parent received change:", c), a.value = c;
    }, d = z([
      { field: "id", header: "診號" },
      { field: "status", header: "狀態" },
      { field: "name", header: "姓名" }
    ]);
    return Dt(() => {
      En.getProductsMini().then((c) => e.value = c);
    }), (c, u) => {
      const f = $("Column"), p = $("DataTable"), h = $("Card");
      return m(), y("div", tW, [
        v("div", nW, [
          P(W0, {
            "active-id": a.value,
            variant: n.value,
            items: r.value,
            scrollable: i.value,
            closable: o.value,
            onChange: s,
            onClose: l
          }, null, 8, ["active-id", "variant", "items", "scrollable", "closable"])
        ]),
        v("div", oW, [
          P(h, { class: "h-full flex flex-col p-2" }, {
            header: E(() => [...u[0] || (u[0] = [
              v("div", { class: "flex gap-4" }, [
                v("div", { class: "flex gap-2 items-center flex-1" }, [
                  v("div", { class: "bg-primary h-[25px] w-2" }),
                  v("p", { class: "text-primary text-lg m-0" }, "當日急件報告")
                ]),
                v("div", { class: "flex flex-col justify-end flex-1" }, [
                  v("p", null, "3分鐘前更新"),
                  v("p", null, "總比數：3")
                ])
              ], -1)
            ])]),
            content: E(() => [
              P(p, {
                value: e.value,
                editMode: "row",
                dataKey: "id",
                size: "small",
                resizableColumns: "",
                columnResizeMode: "fit",
                selectionMode: "single",
                showGridlines: "",
                stripedRows: "",
                paginator: "",
                roweditoriniticon: "",
                rows: 10,
                pt: {
                  // table: { style: 'min-width: 50rem' },
                  // column: {
                  //     bodycell: ({ state }) => ({
                  //         style:  state['d_editing']&&'padding-top: 0.75rem; padding-bottom: 0.75rem'
                  //     })
                  // }
                }
              }, {
                default: E(() => [
                  (m(!0), y(_, null, fe(d.value, (g) => (m(), O(f, {
                    key: g.field,
                    field: g.field,
                    header: g.header,
                    class: "max-w-200 truncate",
                    size: "small"
                  }, {
                    body: E(({ data: b, field: C }) => [
                      C === "id" ? (m(), y("div", rW, [
                        v("span", iW, "早診" + re(typeof C == "string" && C in b ? b[C] : ""), 1)
                      ])) : C === "status" ? (m(), y("div", aW, [
                        b[C] === "A" ? (m(), y("span", lW, [...u[1] || (u[1] = [
                          v("i", { class: "pi pi-times text-red-500" }, null, -1),
                          ee("2/2", -1)
                        ])])) : b[C] === "C" ? (m(), y("span", sW, [...u[2] || (u[2] = [
                          v("i", { class: "pi pi-check text-green-500" }, null, -1),
                          ee("0/1", -1)
                        ])])) : (m(), y("span", dW, "1/5"))
                      ])) : (m(), y("div", cW, [
                        v("span", uW, re(typeof C == "string" && C in b ? b[C] : ""), 1)
                      ]))
                    ]),
                    _: 1
                  }, 8, ["field", "header"]))), 128))
                ]),
                _: 1
              }, 8, ["value"])
            ]),
            _: 1
          })
        ])
      ]);
    };
  }
}), fW = { class: "card" }, hW = { class: "flex flex-wrap items-center justify-between gap-2" }, mW = { key: 0 }, gW = { key: 1 }, bW = {
  __name: "DatatableVirtualScroll",
  setup(t) {
    const e = Rl(), n = z(), o = z([]), i = z({}), r = z([
      { field: "code", header: "Code" },
      { field: "name", header: "Name" },
      { field: "quantity", header: "Quantity" },
      { field: "price", header: "Price" },
      { field: "category", header: "Category" },
      { field: "description", header: "Description" },
      { field: "rating", header: "Rating" }
    ]);
    Dt(() => {
      En.getProductsWithOrders().then((p) => {
        n.value = p, o.value = JSON.parse(JSON.stringify(p));
      });
    });
    const a = (p, h, g) => {
      var b;
      return ((b = i.value[p]) == null ? void 0 : b[h]) !== void 0 && String(g) !== String(i.value[p][h]) ? "bg-yellow-400" : "";
    }, l = z(null), s = (p) => {
      const { data: h, field: g } = p;
      l.value = h[g];
    }, d = (p) => {
      let { data: h, newValue: g, field: b } = p;
      const C = h.id, x = l.value;
      if (g === x) {
        console.log("資料沒有變動，不做任何事");
        return;
      }
      switch (b) {
        case "quantity":
        case "price":
          u(g) ? h[b] = g : p.preventDefault();
          break;
        default:
          g.trim().length > 0 ? h[b] = g : p.preventDefault();
          break;
      }
      h[b] = g, i.value[C] || (i.value[C] = {}), b in i.value[C] || (i.value[C][b] = x);
    }, c = () => {
      localStorage.setItem("savedProducts", JSON.stringify(n.value)), e.add({ severity: "success", summary: "成功", detail: "資料已儲存", life: 3e3 });
    }, u = (p) => {
      let h = String(p);
      if (h = h.trim(), !h)
        return !1;
      h = h.replace(/^0+/, "") || "0";
      var g = Math.floor(Number(h));
      return g !== 1 / 0 && String(g) === h && g >= 0;
    }, f = (p) => new Intl.NumberFormat("en-US", { style: "currency", currency: "USD" }).format(p);
    return (p, h) => {
      const g = $("Button"), b = $("InputText"), C = $("InputNumber"), x = $("Column"), R = $("DataTable"), w = $("Toast");
      return m(), y(_, null, [
        v("div", fW, [
          P(R, {
            value: n.value,
            editMode: "cell",
            onCellEditComplete: d,
            onCellEditInit: s,
            size: "small",
            stripedRows: "",
            showGridlines: "",
            selectionMode: "single",
            scrollable: "",
            scrollHeight: "500px",
            virtualScrollerOptions: { itemSize: 30 },
            pt: {
              table: { style: "min-width: 50rem" },
              column: {
                bodycell: ({ state: T }) => ({
                  // class: [{ '!p-0': state['d_editing'] }]
                  class: "!p-0",
                  style: "white-space: normal; word-break: break-word; max-height: 60px; overflow: hidden;width: 50%;"
                })
              }
            }
          }, {
            header: E(() => [
              v("div", hW, [
                h[1] || (h[1] = v("span", { class: "text-xl font-bold" }, "測試", -1)),
                P(g, {
                  label: "存檔",
                  rounded: "",
                  raised: "",
                  onClick: h[0] || (h[0] = (T) => c())
                })
              ])
            ]),
            default: E(() => [
              (m(!0), y(_, null, fe(r.value, (T) => (m(), O(x, {
                key: T.field,
                field: T.field,
                header: T.header
              }, {
                body: E(({ data: S, field: I }) => [
                  I === "description" ? (m(), y("div", mW, [
                    v("div", {
                      class: Y(a(S.id, I))
                    }, re(S[I]), 3)
                  ])) : (m(), y("div", gW, [
                    v("div", {
                      class: Y(a(S.id, I))
                    }, re(I === "price" ? f(S[I]) : S[I]), 3)
                  ]))
                ]),
                editor: E(({ data: S, field: I }) => [
                  I !== "price" ? (m(), O(b, {
                    key: 0,
                    modelValue: S[I],
                    "onUpdate:modelValue": (B) => S[I] = B,
                    autofocus: "",
                    fluid: "",
                    size: "small"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"])) : (m(), O(C, {
                    key: 1,
                    modelValue: S[I],
                    "onUpdate:modelValue": (B) => S[I] = B,
                    mode: "currency",
                    currency: "USD",
                    locale: "en-US",
                    autofocus: "",
                    fluid: "",
                    size: "small"
                  }, null, 8, ["modelValue", "onUpdate:modelValue"]))
                ]),
                _: 1
              }, 8, ["field", "header"]))), 128))
            ]),
            _: 1
          }, 8, ["value"])
        ]),
        P(w)
      ], 64);
    };
  }
}, vW = {
  __name: "DatatableReorder",
  setup(t) {
    const e = z([]), n = Rl();
    Dt(() => {
      En.getProductsWithOrders().then((s) => {
        e.value = s.map((d, c) => ({
          ...d,
          order: c
          // order 從0開始
        }));
      });
    });
    const o = () => {
      const s = /* @__PURE__ */ new Set();
      for (const d of e.value) {
        if (s.has(d.order)) return !0;
        s.add(d.order);
      }
      return !1;
    }, i = () => {
      const s = e.value.length;
      e.value.forEach((c) => {
        let u = Number(c.order);
        isNaN(u) || u < 0 ? c._tmpOrder = -1 / 0 : u >= s ? c._tmpOrder = 1 / 0 : c._tmpOrder = u;
      });
      const d = [...e.value].sort((c, u) => c._tmpOrder - u._tmpOrder);
      d.forEach((c, u) => {
        c.order = u, delete c._tmpOrder;
      }), e.value = d, o() ? n.add({ severity: "warn", summary: "有重複順序，已自動調整", life: 3e3 }) : n.add({ severity: "success", summary: "順序已更新", life: 2e3 });
    }, r = (s) => {
      e.value = s.value, e.value.forEach((d, c) => {
        d.order = c;
      }), n.add({ severity: "success", summary: "Rows Reordered", life: 3e3 });
    }, a = z([
      { field: "code", header: "Code" },
      { field: "name", header: "Name" },
      { field: "category", header: "Category" },
      { field: "quantity", header: "Quantity" }
    ]), l = () => {
      n.add({ severity: "success", summary: "Column Reordered", life: 3e3 });
    };
    return (s, d) => {
      const c = $("Column"), u = $("InputNumber"), f = $("DataTable"), p = $("Toast");
      return m(), y("div", null, [
        P(f, {
          value: e.value,
          reorderableColumns: !0,
          onColumnReorder: l,
          onRowReorder: r,
          tableStyle: "min-width: 50rem",
          sortField: "order",
          dataKey: "code",
          sortOrder: 1,
          onSort: s.onSort
        }, {
          default: E(() => [
            P(c, {
              rowReorder: "",
              headerStyle: "width: 3rem",
              reorderableColumn: !1
            }),
            P(c, {
              header: "#",
              headerStyle: "width: 3rem"
            }, {
              body: E((h) => [
                v("span", null, re(h.data.order), 1)
              ]),
              _: 1
            }),
            P(c, {
              header: "#",
              headerStyle: "width: 3rem"
            }, {
              body: E((h) => [
                P(u, {
                  modelValue: h.data.order,
                  "onUpdate:modelValue": (g) => h.data.order = g,
                  onBlur: i,
                  showButtons: "",
                  class: "w-full text-center"
                }, null, 8, ["modelValue", "onUpdate:modelValue"])
              ]),
              _: 1
            }),
            (m(!0), y(_, null, fe(a.value, (h) => (m(), O(c, {
              field: h.field,
              header: h.header,
              key: h.field
            }, null, 8, ["field", "header"]))), 128))
          ]),
          _: 1
        }, 8, ["value", "onSort"]),
        P(p)
      ]);
    };
  }
}, yW = [
  {
    path: "/his-primevue-app",
    name: "Home",
    component: RA
  },
  {
    path: "/his-primevue-app/Textcheck",
    name: "Textcheck",
    component: c_
  },
  {
    path: "/his-primevue-app/CPOEDemo",
    name: "CPOEDemo",
    component: SH
  },
  {
    path: "/his-primevue-app/Datatable",
    name: "Datatable",
    component: K_
  },
  {
    path: "/his-primevue-app/PatientList",
    name: "PatientList",
    component: pW
  },
  {
    path: "/his-primevue-app/CPOEDemo2",
    name: "CPOEDemo2",
    component: eW
  },
  {
    path: "/his-primevue-app/DatatableSaveCell",
    name: "DatatableSaveCell",
    component: G_
  },
  {
    path: "/his-primevue-app/DatatableVirtualScroll",
    name: "DatatableVirtualScroll",
    component: bW
  },
  {
    path: "/his-primevue-app/DatatableReorder",
    name: "DatatableReorder",
    component: vW
  }
], kW = Ew({
  history: lw(),
  routes: yW
}), wW = {
  createMyApp(t) {
    const e = cv(Hw), n = J8(q8, xE);
    return e.use(eC, {
      theme: { preset: n, options: { darkModeSelector: !1 } }
    }), e.use(fA), e.use(mA), e.component("Button", Ao), e.component("Dialog", Cc), e.component("Menubar", Lm), e.component("InputText", oa), e.component("Avatar", zm), e.component("Badge", Sl), e.component("Drawer", Fm), e.component("Toast", jm), e.component("ConfirmDialog", Vm), e.component("Tree", vc), e.component("Select", la), e.component("InputGroup", _m), e.component("InputGroupAddon", Km), e.component("DataTable", xg), e.component("Column", mE), e.component("ColumnGroup", vE), e.component("Row", yE), e.component("InputIcon", wl), e.component("IconField", kl), e.component("TabList", Ol), e.component("Tabs", Il), e.component("Tab", Pl), e.component("TabPanels", $l), e.component("TabPanel", Tl), e.component("Tag", Ig), e.component("Chip", Og), e.component("FloatLabel", Pg), e.component("Card", $g), e.component("SelectButton", Bg), e.component("Checkbox", aa), e.component("Inplace", Eg), e.component("InputNumber", Oc), e.component("Textarea", Mg), e.use(kW), e.mount(t);
  }
};
window.MyVueApp = wW;
